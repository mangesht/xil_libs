///////////////////////////////////////////////////////////////////////////////
//  Copyright (c) 1995/2018 Xilinx, Inc.
//  All Right Reserved.
///////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /     Vendor      : Xilinx
// \   \   \/      Version     : 2019.1
//  \   \          Description : Xilinx Unified Simulation Library Component
//  /   /                        288K-bit High-Density Base Memory Building Block
// /___/   /\      Filename    : URAM288E5_BASE.sv
// \   \  /  \
//  \___\/\___\
//
///////////////////////////////////////////////////////////////////////////////
//  Revision:
//  08/10/2016 - Initial from URAM288
//  End Revision:
///////////////////////////////////////////////////////////////////////////////

`timescale 1 ps / 1 ps

`celldefine

module URAM288E5_BASE #(
`ifdef XIL_TIMING
  parameter LOC = "UNPLACED",
`endif
  parameter integer AUTO_SLEEP_LATENCY = 8,
  parameter integer AVG_CONS_INACTIVE_CYCLES = 10,
  parameter BWE_MODE_A = "PARITY_INTERLEAVED",
  parameter BWE_MODE_B = "PARITY_INTERLEAVED",
  parameter EN_AUTO_SLEEP_MODE = "FALSE",
  parameter EN_ECC_RD_A = "FALSE",
  parameter EN_ECC_RD_B = "FALSE",
  parameter EN_ECC_WR_A = "FALSE",
  parameter EN_ECC_WR_B = "FALSE",
  parameter [287:0] INIT_000 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_001 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_002 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_003 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_004 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_005 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_006 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_007 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_008 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_009 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_00A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_00B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_00C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_00D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_00E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_00F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_010 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_011 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_012 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_013 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_014 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_015 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_016 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_017 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_018 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_019 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_01A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_01B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_01C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_01D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_01E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_01F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_020 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_021 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_022 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_023 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_024 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_025 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_026 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_027 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_028 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_029 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_02A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_02B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_02C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_02D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_02E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_02F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_030 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_031 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_032 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_033 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_034 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_035 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_036 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_037 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_038 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_039 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_03A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_03B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_03C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_03D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_03E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_03F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_040 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_041 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_042 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_043 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_044 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_045 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_046 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_047 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_048 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_049 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_04A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_04B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_04C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_04D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_04E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_04F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_050 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_051 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_052 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_053 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_054 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_055 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_056 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_057 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_058 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_059 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_05A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_05B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_05C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_05D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_05E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_05F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_060 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_061 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_062 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_063 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_064 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_065 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_066 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_067 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_068 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_069 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_06A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_06B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_06C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_06D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_06E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_06F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_070 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_071 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_072 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_073 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_074 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_075 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_076 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_077 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_078 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_079 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_07A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_07B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_07C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_07D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_07E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_07F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_080 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_081 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_082 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_083 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_084 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_085 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_086 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_087 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_088 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_089 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_08A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_08B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_08C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_08D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_08E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_08F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_090 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_091 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_092 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_093 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_094 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_095 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_096 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_097 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_098 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_099 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_09A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_09B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_09C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_09D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_09E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_09F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0A9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0AA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0AB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0AC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0AD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0AE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0AF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0B9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0BA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0BB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0BC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0BD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0BE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0BF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0C9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0CA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0CB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0CC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0CD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0CE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0CF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0D9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0DA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0DB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0DC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0DD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0DE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0DF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0E9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0EA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0EB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0EC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0ED = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0EE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0EF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0F9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0FA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0FB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0FC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0FD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0FE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_0FF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_100 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_101 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_102 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_103 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_104 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_105 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_106 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_107 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_108 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_109 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_10A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_10B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_10C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_10D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_10E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_10F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_110 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_111 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_112 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_113 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_114 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_115 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_116 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_117 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_118 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_119 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_11A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_11B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_11C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_11D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_11E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_11F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_120 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_121 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_122 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_123 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_124 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_125 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_126 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_127 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_128 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_129 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_12A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_12B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_12C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_12D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_12E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_12F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_130 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_131 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_132 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_133 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_134 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_135 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_136 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_137 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_138 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_139 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_13A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_13B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_13C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_13D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_13E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_13F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_140 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_141 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_142 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_143 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_144 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_145 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_146 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_147 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_148 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_149 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_14A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_14B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_14C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_14D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_14E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_14F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_150 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_151 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_152 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_153 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_154 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_155 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_156 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_157 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_158 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_159 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_15A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_15B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_15C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_15D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_15E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_15F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_160 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_161 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_162 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_163 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_164 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_165 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_166 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_167 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_168 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_169 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_16A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_16B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_16C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_16D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_16E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_16F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_170 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_171 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_172 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_173 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_174 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_175 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_176 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_177 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_178 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_179 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_17A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_17B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_17C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_17D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_17E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_17F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_180 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_181 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_182 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_183 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_184 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_185 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_186 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_187 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_188 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_189 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_18A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_18B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_18C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_18D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_18E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_18F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_190 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_191 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_192 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_193 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_194 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_195 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_196 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_197 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_198 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_199 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_19A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_19B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_19C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_19D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_19E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_19F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1A9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1AA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1AB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1AC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1AD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1AE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1AF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1B9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1BA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1BB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1BC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1BD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1BE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1BF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1C9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1CA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1CB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1CC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1CD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1CE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1CF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1D9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1DA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1DB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1DC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1DD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1DE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1DF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1E9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1EA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1EB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1EC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1ED = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1EE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1EF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1F9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1FA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1FB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1FC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1FD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1FE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_1FF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_200 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_201 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_202 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_203 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_204 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_205 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_206 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_207 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_208 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_209 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_20A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_20B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_20C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_20D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_20E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_20F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_210 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_211 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_212 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_213 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_214 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_215 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_216 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_217 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_218 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_219 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_21A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_21B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_21C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_21D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_21E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_21F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_220 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_221 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_222 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_223 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_224 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_225 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_226 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_227 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_228 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_229 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_22A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_22B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_22C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_22D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_22E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_22F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_230 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_231 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_232 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_233 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_234 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_235 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_236 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_237 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_238 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_239 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_23A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_23B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_23C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_23D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_23E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_23F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_240 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_241 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_242 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_243 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_244 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_245 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_246 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_247 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_248 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_249 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_24A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_24B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_24C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_24D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_24E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_24F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_250 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_251 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_252 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_253 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_254 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_255 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_256 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_257 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_258 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_259 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_25A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_25B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_25C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_25D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_25E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_25F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_260 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_261 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_262 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_263 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_264 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_265 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_266 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_267 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_268 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_269 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_26A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_26B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_26C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_26D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_26E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_26F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_270 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_271 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_272 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_273 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_274 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_275 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_276 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_277 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_278 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_279 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_27A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_27B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_27C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_27D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_27E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_27F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_280 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_281 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_282 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_283 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_284 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_285 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_286 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_287 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_288 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_289 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_28A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_28B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_28C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_28D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_28E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_28F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_290 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_291 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_292 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_293 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_294 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_295 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_296 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_297 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_298 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_299 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_29A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_29B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_29C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_29D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_29E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_29F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2A9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2AA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2AB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2AC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2AD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2AE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2AF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2B9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2BA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2BB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2BC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2BD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2BE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2BF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2C9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2CA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2CB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2CC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2CD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2CE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2CF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2D9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2DA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2DB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2DC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2DD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2DE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2DF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2E9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2EA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2EB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2EC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2ED = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2EE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2EF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2F9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2FA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2FB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2FC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2FD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2FE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_2FF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_300 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_301 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_302 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_303 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_304 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_305 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_306 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_307 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_308 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_309 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_30A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_30B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_30C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_30D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_30E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_30F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_310 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_311 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_312 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_313 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_314 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_315 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_316 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_317 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_318 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_319 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_31A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_31B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_31C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_31D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_31E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_31F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_320 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_321 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_322 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_323 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_324 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_325 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_326 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_327 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_328 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_329 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_32A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_32B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_32C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_32D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_32E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_32F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_330 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_331 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_332 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_333 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_334 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_335 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_336 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_337 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_338 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_339 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_33A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_33B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_33C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_33D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_33E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_33F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_340 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_341 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_342 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_343 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_344 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_345 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_346 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_347 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_348 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_349 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_34A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_34B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_34C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_34D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_34E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_34F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_350 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_351 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_352 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_353 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_354 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_355 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_356 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_357 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_358 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_359 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_35A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_35B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_35C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_35D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_35E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_35F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_360 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_361 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_362 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_363 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_364 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_365 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_366 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_367 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_368 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_369 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_36A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_36B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_36C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_36D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_36E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_36F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_370 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_371 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_372 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_373 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_374 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_375 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_376 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_377 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_378 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_379 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_37A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_37B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_37C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_37D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_37E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_37F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_380 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_381 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_382 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_383 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_384 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_385 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_386 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_387 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_388 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_389 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_38A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_38B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_38C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_38D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_38E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_38F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_390 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_391 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_392 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_393 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_394 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_395 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_396 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_397 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_398 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_399 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_39A = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_39B = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_39C = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_39D = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_39E = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_39F = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3A9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3AA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3AB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3AC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3AD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3AE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3AF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3B9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3BA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3BB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3BC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3BD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3BE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3BF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3C9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3CA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3CB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3CC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3CD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3CE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3CF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3D9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3DA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3DB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3DC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3DD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3DE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3DF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3E9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3EA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3EB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3EC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3ED = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3EE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3EF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F0 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F1 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F2 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F3 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F4 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F5 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F6 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F7 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F8 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3F9 = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3FA = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3FB = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3FC = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3FD = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3FE = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter [287:0] INIT_3FF = 288'h000000000000000000000000000000000000000000000000000000000000000000000000,
  parameter INIT_FILE = "NONE",
  parameter IREG_PRE_A = "FALSE",
  parameter IREG_PRE_B = "FALSE",
  parameter [0:0] IS_CLK_INVERTED = 1'b0,
  parameter [0:0] IS_EN_A_INVERTED = 1'b0,
  parameter [0:0] IS_EN_B_INVERTED = 1'b0,
  parameter [0:0] IS_RDB_WR_A_INVERTED = 1'b0,
  parameter [0:0] IS_RDB_WR_B_INVERTED = 1'b0,
  parameter [0:0] IS_RST_A_INVERTED = 1'b0,
  parameter [0:0] IS_RST_B_INVERTED = 1'b0,
  parameter OREG_A = "FALSE",
  parameter OREG_B = "FALSE",
  parameter OREG_ECC_A = "FALSE",
  parameter OREG_ECC_B = "FALSE",
  parameter PR_SAVE_DATA = "FALSE",
  parameter integer READ_WIDTH_A = 72,
  parameter integer READ_WIDTH_B = 72,
  parameter RST_MODE_A = "SYNC",
  parameter RST_MODE_B = "SYNC",
  parameter USE_EXT_CE_A = "FALSE",
  parameter USE_EXT_CE_B = "FALSE",
  parameter integer WRITE_WIDTH_A = 72,
  parameter integer WRITE_WIDTH_B = 72
)(
  output DBITERR_A,
  output DBITERR_B,
  output [71:0] DOUT_A,
  output [71:0] DOUT_B,
  output SBITERR_A,
  output SBITERR_B,

  input [25:0] ADDR_A,
  input [25:0] ADDR_B,
  input [8:0] BWE_A,
  input [8:0] BWE_B,
  input CLK,
  input [71:0] DIN_A,
  input [71:0] DIN_B,
  input EN_A,
  input EN_B,
  input INJECT_DBITERR_A,
  input INJECT_DBITERR_B,
  input INJECT_SBITERR_A,
  input INJECT_SBITERR_B,
  input OREG_CE_A,
  input OREG_CE_B,
  input OREG_ECC_CE_A,
  input OREG_ECC_CE_B,
  input RDB_WR_A,
  input RDB_WR_B,
  input RST_A,
  input RST_B,
  input SLEEP
);
  
// define constants
  localparam MODULE_NAME = "URAM288E5_BASE";

// Parameter encodings and registers
  localparam BWE_MODE_A_PARITY_INDEPENDENT = 1;
  localparam BWE_MODE_A_PARITY_INTERLEAVED = 0;
  localparam BWE_MODE_B_PARITY_INDEPENDENT = 1;
  localparam BWE_MODE_B_PARITY_INTERLEAVED = 0;
  localparam EN_AUTO_SLEEP_MODE_FALSE = 0;
  localparam EN_AUTO_SLEEP_MODE_TRUE = 1;
  localparam EN_ECC_RD_A_FALSE = 0;
  localparam EN_ECC_RD_A_TRUE = 1;
  localparam EN_ECC_RD_B_FALSE = 0;
  localparam EN_ECC_RD_B_TRUE = 1;
  localparam EN_ECC_WR_A_FALSE = 0;
  localparam EN_ECC_WR_A_TRUE = 1;
  localparam EN_ECC_WR_B_FALSE = 0;
  localparam EN_ECC_WR_B_TRUE = 1;
  localparam IREG_PRE_A_FALSE = 0;
  localparam IREG_PRE_A_TRUE = 1;
  localparam IREG_PRE_B_FALSE = 0;
  localparam IREG_PRE_B_TRUE = 1;
  localparam OREG_A_FALSE = 0;
  localparam OREG_A_TRUE = 1;
  localparam OREG_B_FALSE = 0;
  localparam OREG_B_TRUE = 1;
  localparam OREG_ECC_A_FALSE = 0;
  localparam OREG_ECC_A_TRUE = 1;
  localparam OREG_ECC_B_FALSE = 0;
  localparam OREG_ECC_B_TRUE = 1;
  localparam PR_SAVE_DATA_FALSE = 0;
  localparam PR_SAVE_DATA_TRUE = 1;
  localparam RST_MODE_A_ASYNC = 1;
  localparam RST_MODE_A_SYNC = 0;
  localparam RST_MODE_B_ASYNC = 1;
  localparam RST_MODE_B_SYNC = 0;
  localparam USE_EXT_CE_A_FALSE = 0;
  localparam USE_EXT_CE_A_TRUE = 1;
  localparam USE_EXT_CE_B_FALSE = 0;
  localparam USE_EXT_CE_B_TRUE = 1;

  reg trig_attr;
// include dynamic registers - XILINX test only
`ifdef XIL_DR
  `include "URAM288E5_BASE_dr.v"
`else
  reg [31:0] AUTO_SLEEP_LATENCY_REG = AUTO_SLEEP_LATENCY;
  reg [31:0] AVG_CONS_INACTIVE_CYCLES_REG = AVG_CONS_INACTIVE_CYCLES;
  reg [144:1] BWE_MODE_A_REG = BWE_MODE_A;
  reg [144:1] BWE_MODE_B_REG = BWE_MODE_B;
  reg [40:1] EN_AUTO_SLEEP_MODE_REG = EN_AUTO_SLEEP_MODE;
  reg [40:1] EN_ECC_RD_A_REG = EN_ECC_RD_A;
  reg [40:1] EN_ECC_RD_B_REG = EN_ECC_RD_B;
  reg [40:1] EN_ECC_WR_A_REG = EN_ECC_WR_A;
  reg [40:1] EN_ECC_WR_B_REG = EN_ECC_WR_B;
  reg [287:0] INIT_000_REG = INIT_000;
  reg [287:0] INIT_001_REG = INIT_001;
  reg [287:0] INIT_002_REG = INIT_002;
  reg [287:0] INIT_003_REG = INIT_003;
  reg [287:0] INIT_004_REG = INIT_004;
  reg [287:0] INIT_005_REG = INIT_005;
  reg [287:0] INIT_006_REG = INIT_006;
  reg [287:0] INIT_007_REG = INIT_007;
  reg [287:0] INIT_008_REG = INIT_008;
  reg [287:0] INIT_009_REG = INIT_009;
  reg [287:0] INIT_00A_REG = INIT_00A;
  reg [287:0] INIT_00B_REG = INIT_00B;
  reg [287:0] INIT_00C_REG = INIT_00C;
  reg [287:0] INIT_00D_REG = INIT_00D;
  reg [287:0] INIT_00E_REG = INIT_00E;
  reg [287:0] INIT_00F_REG = INIT_00F;
  reg [287:0] INIT_010_REG = INIT_010;
  reg [287:0] INIT_011_REG = INIT_011;
  reg [287:0] INIT_012_REG = INIT_012;
  reg [287:0] INIT_013_REG = INIT_013;
  reg [287:0] INIT_014_REG = INIT_014;
  reg [287:0] INIT_015_REG = INIT_015;
  reg [287:0] INIT_016_REG = INIT_016;
  reg [287:0] INIT_017_REG = INIT_017;
  reg [287:0] INIT_018_REG = INIT_018;
  reg [287:0] INIT_019_REG = INIT_019;
  reg [287:0] INIT_01A_REG = INIT_01A;
  reg [287:0] INIT_01B_REG = INIT_01B;
  reg [287:0] INIT_01C_REG = INIT_01C;
  reg [287:0] INIT_01D_REG = INIT_01D;
  reg [287:0] INIT_01E_REG = INIT_01E;
  reg [287:0] INIT_01F_REG = INIT_01F;
  reg [287:0] INIT_020_REG = INIT_020;
  reg [287:0] INIT_021_REG = INIT_021;
  reg [287:0] INIT_022_REG = INIT_022;
  reg [287:0] INIT_023_REG = INIT_023;
  reg [287:0] INIT_024_REG = INIT_024;
  reg [287:0] INIT_025_REG = INIT_025;
  reg [287:0] INIT_026_REG = INIT_026;
  reg [287:0] INIT_027_REG = INIT_027;
  reg [287:0] INIT_028_REG = INIT_028;
  reg [287:0] INIT_029_REG = INIT_029;
  reg [287:0] INIT_02A_REG = INIT_02A;
  reg [287:0] INIT_02B_REG = INIT_02B;
  reg [287:0] INIT_02C_REG = INIT_02C;
  reg [287:0] INIT_02D_REG = INIT_02D;
  reg [287:0] INIT_02E_REG = INIT_02E;
  reg [287:0] INIT_02F_REG = INIT_02F;
  reg [287:0] INIT_030_REG = INIT_030;
  reg [287:0] INIT_031_REG = INIT_031;
  reg [287:0] INIT_032_REG = INIT_032;
  reg [287:0] INIT_033_REG = INIT_033;
  reg [287:0] INIT_034_REG = INIT_034;
  reg [287:0] INIT_035_REG = INIT_035;
  reg [287:0] INIT_036_REG = INIT_036;
  reg [287:0] INIT_037_REG = INIT_037;
  reg [287:0] INIT_038_REG = INIT_038;
  reg [287:0] INIT_039_REG = INIT_039;
  reg [287:0] INIT_03A_REG = INIT_03A;
  reg [287:0] INIT_03B_REG = INIT_03B;
  reg [287:0] INIT_03C_REG = INIT_03C;
  reg [287:0] INIT_03D_REG = INIT_03D;
  reg [287:0] INIT_03E_REG = INIT_03E;
  reg [287:0] INIT_03F_REG = INIT_03F;
  reg [287:0] INIT_040_REG = INIT_040;
  reg [287:0] INIT_041_REG = INIT_041;
  reg [287:0] INIT_042_REG = INIT_042;
  reg [287:0] INIT_043_REG = INIT_043;
  reg [287:0] INIT_044_REG = INIT_044;
  reg [287:0] INIT_045_REG = INIT_045;
  reg [287:0] INIT_046_REG = INIT_046;
  reg [287:0] INIT_047_REG = INIT_047;
  reg [287:0] INIT_048_REG = INIT_048;
  reg [287:0] INIT_049_REG = INIT_049;
  reg [287:0] INIT_04A_REG = INIT_04A;
  reg [287:0] INIT_04B_REG = INIT_04B;
  reg [287:0] INIT_04C_REG = INIT_04C;
  reg [287:0] INIT_04D_REG = INIT_04D;
  reg [287:0] INIT_04E_REG = INIT_04E;
  reg [287:0] INIT_04F_REG = INIT_04F;
  reg [287:0] INIT_050_REG = INIT_050;
  reg [287:0] INIT_051_REG = INIT_051;
  reg [287:0] INIT_052_REG = INIT_052;
  reg [287:0] INIT_053_REG = INIT_053;
  reg [287:0] INIT_054_REG = INIT_054;
  reg [287:0] INIT_055_REG = INIT_055;
  reg [287:0] INIT_056_REG = INIT_056;
  reg [287:0] INIT_057_REG = INIT_057;
  reg [287:0] INIT_058_REG = INIT_058;
  reg [287:0] INIT_059_REG = INIT_059;
  reg [287:0] INIT_05A_REG = INIT_05A;
  reg [287:0] INIT_05B_REG = INIT_05B;
  reg [287:0] INIT_05C_REG = INIT_05C;
  reg [287:0] INIT_05D_REG = INIT_05D;
  reg [287:0] INIT_05E_REG = INIT_05E;
  reg [287:0] INIT_05F_REG = INIT_05F;
  reg [287:0] INIT_060_REG = INIT_060;
  reg [287:0] INIT_061_REG = INIT_061;
  reg [287:0] INIT_062_REG = INIT_062;
  reg [287:0] INIT_063_REG = INIT_063;
  reg [287:0] INIT_064_REG = INIT_064;
  reg [287:0] INIT_065_REG = INIT_065;
  reg [287:0] INIT_066_REG = INIT_066;
  reg [287:0] INIT_067_REG = INIT_067;
  reg [287:0] INIT_068_REG = INIT_068;
  reg [287:0] INIT_069_REG = INIT_069;
  reg [287:0] INIT_06A_REG = INIT_06A;
  reg [287:0] INIT_06B_REG = INIT_06B;
  reg [287:0] INIT_06C_REG = INIT_06C;
  reg [287:0] INIT_06D_REG = INIT_06D;
  reg [287:0] INIT_06E_REG = INIT_06E;
  reg [287:0] INIT_06F_REG = INIT_06F;
  reg [287:0] INIT_070_REG = INIT_070;
  reg [287:0] INIT_071_REG = INIT_071;
  reg [287:0] INIT_072_REG = INIT_072;
  reg [287:0] INIT_073_REG = INIT_073;
  reg [287:0] INIT_074_REG = INIT_074;
  reg [287:0] INIT_075_REG = INIT_075;
  reg [287:0] INIT_076_REG = INIT_076;
  reg [287:0] INIT_077_REG = INIT_077;
  reg [287:0] INIT_078_REG = INIT_078;
  reg [287:0] INIT_079_REG = INIT_079;
  reg [287:0] INIT_07A_REG = INIT_07A;
  reg [287:0] INIT_07B_REG = INIT_07B;
  reg [287:0] INIT_07C_REG = INIT_07C;
  reg [287:0] INIT_07D_REG = INIT_07D;
  reg [287:0] INIT_07E_REG = INIT_07E;
  reg [287:0] INIT_07F_REG = INIT_07F;
  reg [287:0] INIT_080_REG = INIT_080;
  reg [287:0] INIT_081_REG = INIT_081;
  reg [287:0] INIT_082_REG = INIT_082;
  reg [287:0] INIT_083_REG = INIT_083;
  reg [287:0] INIT_084_REG = INIT_084;
  reg [287:0] INIT_085_REG = INIT_085;
  reg [287:0] INIT_086_REG = INIT_086;
  reg [287:0] INIT_087_REG = INIT_087;
  reg [287:0] INIT_088_REG = INIT_088;
  reg [287:0] INIT_089_REG = INIT_089;
  reg [287:0] INIT_08A_REG = INIT_08A;
  reg [287:0] INIT_08B_REG = INIT_08B;
  reg [287:0] INIT_08C_REG = INIT_08C;
  reg [287:0] INIT_08D_REG = INIT_08D;
  reg [287:0] INIT_08E_REG = INIT_08E;
  reg [287:0] INIT_08F_REG = INIT_08F;
  reg [287:0] INIT_090_REG = INIT_090;
  reg [287:0] INIT_091_REG = INIT_091;
  reg [287:0] INIT_092_REG = INIT_092;
  reg [287:0] INIT_093_REG = INIT_093;
  reg [287:0] INIT_094_REG = INIT_094;
  reg [287:0] INIT_095_REG = INIT_095;
  reg [287:0] INIT_096_REG = INIT_096;
  reg [287:0] INIT_097_REG = INIT_097;
  reg [287:0] INIT_098_REG = INIT_098;
  reg [287:0] INIT_099_REG = INIT_099;
  reg [287:0] INIT_09A_REG = INIT_09A;
  reg [287:0] INIT_09B_REG = INIT_09B;
  reg [287:0] INIT_09C_REG = INIT_09C;
  reg [287:0] INIT_09D_REG = INIT_09D;
  reg [287:0] INIT_09E_REG = INIT_09E;
  reg [287:0] INIT_09F_REG = INIT_09F;
  reg [287:0] INIT_0A0_REG = INIT_0A0;
  reg [287:0] INIT_0A1_REG = INIT_0A1;
  reg [287:0] INIT_0A2_REG = INIT_0A2;
  reg [287:0] INIT_0A3_REG = INIT_0A3;
  reg [287:0] INIT_0A4_REG = INIT_0A4;
  reg [287:0] INIT_0A5_REG = INIT_0A5;
  reg [287:0] INIT_0A6_REG = INIT_0A6;
  reg [287:0] INIT_0A7_REG = INIT_0A7;
  reg [287:0] INIT_0A8_REG = INIT_0A8;
  reg [287:0] INIT_0A9_REG = INIT_0A9;
  reg [287:0] INIT_0AA_REG = INIT_0AA;
  reg [287:0] INIT_0AB_REG = INIT_0AB;
  reg [287:0] INIT_0AC_REG = INIT_0AC;
  reg [287:0] INIT_0AD_REG = INIT_0AD;
  reg [287:0] INIT_0AE_REG = INIT_0AE;
  reg [287:0] INIT_0AF_REG = INIT_0AF;
  reg [287:0] INIT_0B0_REG = INIT_0B0;
  reg [287:0] INIT_0B1_REG = INIT_0B1;
  reg [287:0] INIT_0B2_REG = INIT_0B2;
  reg [287:0] INIT_0B3_REG = INIT_0B3;
  reg [287:0] INIT_0B4_REG = INIT_0B4;
  reg [287:0] INIT_0B5_REG = INIT_0B5;
  reg [287:0] INIT_0B6_REG = INIT_0B6;
  reg [287:0] INIT_0B7_REG = INIT_0B7;
  reg [287:0] INIT_0B8_REG = INIT_0B8;
  reg [287:0] INIT_0B9_REG = INIT_0B9;
  reg [287:0] INIT_0BA_REG = INIT_0BA;
  reg [287:0] INIT_0BB_REG = INIT_0BB;
  reg [287:0] INIT_0BC_REG = INIT_0BC;
  reg [287:0] INIT_0BD_REG = INIT_0BD;
  reg [287:0] INIT_0BE_REG = INIT_0BE;
  reg [287:0] INIT_0BF_REG = INIT_0BF;
  reg [287:0] INIT_0C0_REG = INIT_0C0;
  reg [287:0] INIT_0C1_REG = INIT_0C1;
  reg [287:0] INIT_0C2_REG = INIT_0C2;
  reg [287:0] INIT_0C3_REG = INIT_0C3;
  reg [287:0] INIT_0C4_REG = INIT_0C4;
  reg [287:0] INIT_0C5_REG = INIT_0C5;
  reg [287:0] INIT_0C6_REG = INIT_0C6;
  reg [287:0] INIT_0C7_REG = INIT_0C7;
  reg [287:0] INIT_0C8_REG = INIT_0C8;
  reg [287:0] INIT_0C9_REG = INIT_0C9;
  reg [287:0] INIT_0CA_REG = INIT_0CA;
  reg [287:0] INIT_0CB_REG = INIT_0CB;
  reg [287:0] INIT_0CC_REG = INIT_0CC;
  reg [287:0] INIT_0CD_REG = INIT_0CD;
  reg [287:0] INIT_0CE_REG = INIT_0CE;
  reg [287:0] INIT_0CF_REG = INIT_0CF;
  reg [287:0] INIT_0D0_REG = INIT_0D0;
  reg [287:0] INIT_0D1_REG = INIT_0D1;
  reg [287:0] INIT_0D2_REG = INIT_0D2;
  reg [287:0] INIT_0D3_REG = INIT_0D3;
  reg [287:0] INIT_0D4_REG = INIT_0D4;
  reg [287:0] INIT_0D5_REG = INIT_0D5;
  reg [287:0] INIT_0D6_REG = INIT_0D6;
  reg [287:0] INIT_0D7_REG = INIT_0D7;
  reg [287:0] INIT_0D8_REG = INIT_0D8;
  reg [287:0] INIT_0D9_REG = INIT_0D9;
  reg [287:0] INIT_0DA_REG = INIT_0DA;
  reg [287:0] INIT_0DB_REG = INIT_0DB;
  reg [287:0] INIT_0DC_REG = INIT_0DC;
  reg [287:0] INIT_0DD_REG = INIT_0DD;
  reg [287:0] INIT_0DE_REG = INIT_0DE;
  reg [287:0] INIT_0DF_REG = INIT_0DF;
  reg [287:0] INIT_0E0_REG = INIT_0E0;
  reg [287:0] INIT_0E1_REG = INIT_0E1;
  reg [287:0] INIT_0E2_REG = INIT_0E2;
  reg [287:0] INIT_0E3_REG = INIT_0E3;
  reg [287:0] INIT_0E4_REG = INIT_0E4;
  reg [287:0] INIT_0E5_REG = INIT_0E5;
  reg [287:0] INIT_0E6_REG = INIT_0E6;
  reg [287:0] INIT_0E7_REG = INIT_0E7;
  reg [287:0] INIT_0E8_REG = INIT_0E8;
  reg [287:0] INIT_0E9_REG = INIT_0E9;
  reg [287:0] INIT_0EA_REG = INIT_0EA;
  reg [287:0] INIT_0EB_REG = INIT_0EB;
  reg [287:0] INIT_0EC_REG = INIT_0EC;
  reg [287:0] INIT_0ED_REG = INIT_0ED;
  reg [287:0] INIT_0EE_REG = INIT_0EE;
  reg [287:0] INIT_0EF_REG = INIT_0EF;
  reg [287:0] INIT_0F0_REG = INIT_0F0;
  reg [287:0] INIT_0F1_REG = INIT_0F1;
  reg [287:0] INIT_0F2_REG = INIT_0F2;
  reg [287:0] INIT_0F3_REG = INIT_0F3;
  reg [287:0] INIT_0F4_REG = INIT_0F4;
  reg [287:0] INIT_0F5_REG = INIT_0F5;
  reg [287:0] INIT_0F6_REG = INIT_0F6;
  reg [287:0] INIT_0F7_REG = INIT_0F7;
  reg [287:0] INIT_0F8_REG = INIT_0F8;
  reg [287:0] INIT_0F9_REG = INIT_0F9;
  reg [287:0] INIT_0FA_REG = INIT_0FA;
  reg [287:0] INIT_0FB_REG = INIT_0FB;
  reg [287:0] INIT_0FC_REG = INIT_0FC;
  reg [287:0] INIT_0FD_REG = INIT_0FD;
  reg [287:0] INIT_0FE_REG = INIT_0FE;
  reg [287:0] INIT_0FF_REG = INIT_0FF;
  reg [287:0] INIT_100_REG = INIT_100;
  reg [287:0] INIT_101_REG = INIT_101;
  reg [287:0] INIT_102_REG = INIT_102;
  reg [287:0] INIT_103_REG = INIT_103;
  reg [287:0] INIT_104_REG = INIT_104;
  reg [287:0] INIT_105_REG = INIT_105;
  reg [287:0] INIT_106_REG = INIT_106;
  reg [287:0] INIT_107_REG = INIT_107;
  reg [287:0] INIT_108_REG = INIT_108;
  reg [287:0] INIT_109_REG = INIT_109;
  reg [287:0] INIT_10A_REG = INIT_10A;
  reg [287:0] INIT_10B_REG = INIT_10B;
  reg [287:0] INIT_10C_REG = INIT_10C;
  reg [287:0] INIT_10D_REG = INIT_10D;
  reg [287:0] INIT_10E_REG = INIT_10E;
  reg [287:0] INIT_10F_REG = INIT_10F;
  reg [287:0] INIT_110_REG = INIT_110;
  reg [287:0] INIT_111_REG = INIT_111;
  reg [287:0] INIT_112_REG = INIT_112;
  reg [287:0] INIT_113_REG = INIT_113;
  reg [287:0] INIT_114_REG = INIT_114;
  reg [287:0] INIT_115_REG = INIT_115;
  reg [287:0] INIT_116_REG = INIT_116;
  reg [287:0] INIT_117_REG = INIT_117;
  reg [287:0] INIT_118_REG = INIT_118;
  reg [287:0] INIT_119_REG = INIT_119;
  reg [287:0] INIT_11A_REG = INIT_11A;
  reg [287:0] INIT_11B_REG = INIT_11B;
  reg [287:0] INIT_11C_REG = INIT_11C;
  reg [287:0] INIT_11D_REG = INIT_11D;
  reg [287:0] INIT_11E_REG = INIT_11E;
  reg [287:0] INIT_11F_REG = INIT_11F;
  reg [287:0] INIT_120_REG = INIT_120;
  reg [287:0] INIT_121_REG = INIT_121;
  reg [287:0] INIT_122_REG = INIT_122;
  reg [287:0] INIT_123_REG = INIT_123;
  reg [287:0] INIT_124_REG = INIT_124;
  reg [287:0] INIT_125_REG = INIT_125;
  reg [287:0] INIT_126_REG = INIT_126;
  reg [287:0] INIT_127_REG = INIT_127;
  reg [287:0] INIT_128_REG = INIT_128;
  reg [287:0] INIT_129_REG = INIT_129;
  reg [287:0] INIT_12A_REG = INIT_12A;
  reg [287:0] INIT_12B_REG = INIT_12B;
  reg [287:0] INIT_12C_REG = INIT_12C;
  reg [287:0] INIT_12D_REG = INIT_12D;
  reg [287:0] INIT_12E_REG = INIT_12E;
  reg [287:0] INIT_12F_REG = INIT_12F;
  reg [287:0] INIT_130_REG = INIT_130;
  reg [287:0] INIT_131_REG = INIT_131;
  reg [287:0] INIT_132_REG = INIT_132;
  reg [287:0] INIT_133_REG = INIT_133;
  reg [287:0] INIT_134_REG = INIT_134;
  reg [287:0] INIT_135_REG = INIT_135;
  reg [287:0] INIT_136_REG = INIT_136;
  reg [287:0] INIT_137_REG = INIT_137;
  reg [287:0] INIT_138_REG = INIT_138;
  reg [287:0] INIT_139_REG = INIT_139;
  reg [287:0] INIT_13A_REG = INIT_13A;
  reg [287:0] INIT_13B_REG = INIT_13B;
  reg [287:0] INIT_13C_REG = INIT_13C;
  reg [287:0] INIT_13D_REG = INIT_13D;
  reg [287:0] INIT_13E_REG = INIT_13E;
  reg [287:0] INIT_13F_REG = INIT_13F;
  reg [287:0] INIT_140_REG = INIT_140;
  reg [287:0] INIT_141_REG = INIT_141;
  reg [287:0] INIT_142_REG = INIT_142;
  reg [287:0] INIT_143_REG = INIT_143;
  reg [287:0] INIT_144_REG = INIT_144;
  reg [287:0] INIT_145_REG = INIT_145;
  reg [287:0] INIT_146_REG = INIT_146;
  reg [287:0] INIT_147_REG = INIT_147;
  reg [287:0] INIT_148_REG = INIT_148;
  reg [287:0] INIT_149_REG = INIT_149;
  reg [287:0] INIT_14A_REG = INIT_14A;
  reg [287:0] INIT_14B_REG = INIT_14B;
  reg [287:0] INIT_14C_REG = INIT_14C;
  reg [287:0] INIT_14D_REG = INIT_14D;
  reg [287:0] INIT_14E_REG = INIT_14E;
  reg [287:0] INIT_14F_REG = INIT_14F;
  reg [287:0] INIT_150_REG = INIT_150;
  reg [287:0] INIT_151_REG = INIT_151;
  reg [287:0] INIT_152_REG = INIT_152;
  reg [287:0] INIT_153_REG = INIT_153;
  reg [287:0] INIT_154_REG = INIT_154;
  reg [287:0] INIT_155_REG = INIT_155;
  reg [287:0] INIT_156_REG = INIT_156;
  reg [287:0] INIT_157_REG = INIT_157;
  reg [287:0] INIT_158_REG = INIT_158;
  reg [287:0] INIT_159_REG = INIT_159;
  reg [287:0] INIT_15A_REG = INIT_15A;
  reg [287:0] INIT_15B_REG = INIT_15B;
  reg [287:0] INIT_15C_REG = INIT_15C;
  reg [287:0] INIT_15D_REG = INIT_15D;
  reg [287:0] INIT_15E_REG = INIT_15E;
  reg [287:0] INIT_15F_REG = INIT_15F;
  reg [287:0] INIT_160_REG = INIT_160;
  reg [287:0] INIT_161_REG = INIT_161;
  reg [287:0] INIT_162_REG = INIT_162;
  reg [287:0] INIT_163_REG = INIT_163;
  reg [287:0] INIT_164_REG = INIT_164;
  reg [287:0] INIT_165_REG = INIT_165;
  reg [287:0] INIT_166_REG = INIT_166;
  reg [287:0] INIT_167_REG = INIT_167;
  reg [287:0] INIT_168_REG = INIT_168;
  reg [287:0] INIT_169_REG = INIT_169;
  reg [287:0] INIT_16A_REG = INIT_16A;
  reg [287:0] INIT_16B_REG = INIT_16B;
  reg [287:0] INIT_16C_REG = INIT_16C;
  reg [287:0] INIT_16D_REG = INIT_16D;
  reg [287:0] INIT_16E_REG = INIT_16E;
  reg [287:0] INIT_16F_REG = INIT_16F;
  reg [287:0] INIT_170_REG = INIT_170;
  reg [287:0] INIT_171_REG = INIT_171;
  reg [287:0] INIT_172_REG = INIT_172;
  reg [287:0] INIT_173_REG = INIT_173;
  reg [287:0] INIT_174_REG = INIT_174;
  reg [287:0] INIT_175_REG = INIT_175;
  reg [287:0] INIT_176_REG = INIT_176;
  reg [287:0] INIT_177_REG = INIT_177;
  reg [287:0] INIT_178_REG = INIT_178;
  reg [287:0] INIT_179_REG = INIT_179;
  reg [287:0] INIT_17A_REG = INIT_17A;
  reg [287:0] INIT_17B_REG = INIT_17B;
  reg [287:0] INIT_17C_REG = INIT_17C;
  reg [287:0] INIT_17D_REG = INIT_17D;
  reg [287:0] INIT_17E_REG = INIT_17E;
  reg [287:0] INIT_17F_REG = INIT_17F;
  reg [287:0] INIT_180_REG = INIT_180;
  reg [287:0] INIT_181_REG = INIT_181;
  reg [287:0] INIT_182_REG = INIT_182;
  reg [287:0] INIT_183_REG = INIT_183;
  reg [287:0] INIT_184_REG = INIT_184;
  reg [287:0] INIT_185_REG = INIT_185;
  reg [287:0] INIT_186_REG = INIT_186;
  reg [287:0] INIT_187_REG = INIT_187;
  reg [287:0] INIT_188_REG = INIT_188;
  reg [287:0] INIT_189_REG = INIT_189;
  reg [287:0] INIT_18A_REG = INIT_18A;
  reg [287:0] INIT_18B_REG = INIT_18B;
  reg [287:0] INIT_18C_REG = INIT_18C;
  reg [287:0] INIT_18D_REG = INIT_18D;
  reg [287:0] INIT_18E_REG = INIT_18E;
  reg [287:0] INIT_18F_REG = INIT_18F;
  reg [287:0] INIT_190_REG = INIT_190;
  reg [287:0] INIT_191_REG = INIT_191;
  reg [287:0] INIT_192_REG = INIT_192;
  reg [287:0] INIT_193_REG = INIT_193;
  reg [287:0] INIT_194_REG = INIT_194;
  reg [287:0] INIT_195_REG = INIT_195;
  reg [287:0] INIT_196_REG = INIT_196;
  reg [287:0] INIT_197_REG = INIT_197;
  reg [287:0] INIT_198_REG = INIT_198;
  reg [287:0] INIT_199_REG = INIT_199;
  reg [287:0] INIT_19A_REG = INIT_19A;
  reg [287:0] INIT_19B_REG = INIT_19B;
  reg [287:0] INIT_19C_REG = INIT_19C;
  reg [287:0] INIT_19D_REG = INIT_19D;
  reg [287:0] INIT_19E_REG = INIT_19E;
  reg [287:0] INIT_19F_REG = INIT_19F;
  reg [287:0] INIT_1A0_REG = INIT_1A0;
  reg [287:0] INIT_1A1_REG = INIT_1A1;
  reg [287:0] INIT_1A2_REG = INIT_1A2;
  reg [287:0] INIT_1A3_REG = INIT_1A3;
  reg [287:0] INIT_1A4_REG = INIT_1A4;
  reg [287:0] INIT_1A5_REG = INIT_1A5;
  reg [287:0] INIT_1A6_REG = INIT_1A6;
  reg [287:0] INIT_1A7_REG = INIT_1A7;
  reg [287:0] INIT_1A8_REG = INIT_1A8;
  reg [287:0] INIT_1A9_REG = INIT_1A9;
  reg [287:0] INIT_1AA_REG = INIT_1AA;
  reg [287:0] INIT_1AB_REG = INIT_1AB;
  reg [287:0] INIT_1AC_REG = INIT_1AC;
  reg [287:0] INIT_1AD_REG = INIT_1AD;
  reg [287:0] INIT_1AE_REG = INIT_1AE;
  reg [287:0] INIT_1AF_REG = INIT_1AF;
  reg [287:0] INIT_1B0_REG = INIT_1B0;
  reg [287:0] INIT_1B1_REG = INIT_1B1;
  reg [287:0] INIT_1B2_REG = INIT_1B2;
  reg [287:0] INIT_1B3_REG = INIT_1B3;
  reg [287:0] INIT_1B4_REG = INIT_1B4;
  reg [287:0] INIT_1B5_REG = INIT_1B5;
  reg [287:0] INIT_1B6_REG = INIT_1B6;
  reg [287:0] INIT_1B7_REG = INIT_1B7;
  reg [287:0] INIT_1B8_REG = INIT_1B8;
  reg [287:0] INIT_1B9_REG = INIT_1B9;
  reg [287:0] INIT_1BA_REG = INIT_1BA;
  reg [287:0] INIT_1BB_REG = INIT_1BB;
  reg [287:0] INIT_1BC_REG = INIT_1BC;
  reg [287:0] INIT_1BD_REG = INIT_1BD;
  reg [287:0] INIT_1BE_REG = INIT_1BE;
  reg [287:0] INIT_1BF_REG = INIT_1BF;
  reg [287:0] INIT_1C0_REG = INIT_1C0;
  reg [287:0] INIT_1C1_REG = INIT_1C1;
  reg [287:0] INIT_1C2_REG = INIT_1C2;
  reg [287:0] INIT_1C3_REG = INIT_1C3;
  reg [287:0] INIT_1C4_REG = INIT_1C4;
  reg [287:0] INIT_1C5_REG = INIT_1C5;
  reg [287:0] INIT_1C6_REG = INIT_1C6;
  reg [287:0] INIT_1C7_REG = INIT_1C7;
  reg [287:0] INIT_1C8_REG = INIT_1C8;
  reg [287:0] INIT_1C9_REG = INIT_1C9;
  reg [287:0] INIT_1CA_REG = INIT_1CA;
  reg [287:0] INIT_1CB_REG = INIT_1CB;
  reg [287:0] INIT_1CC_REG = INIT_1CC;
  reg [287:0] INIT_1CD_REG = INIT_1CD;
  reg [287:0] INIT_1CE_REG = INIT_1CE;
  reg [287:0] INIT_1CF_REG = INIT_1CF;
  reg [287:0] INIT_1D0_REG = INIT_1D0;
  reg [287:0] INIT_1D1_REG = INIT_1D1;
  reg [287:0] INIT_1D2_REG = INIT_1D2;
  reg [287:0] INIT_1D3_REG = INIT_1D3;
  reg [287:0] INIT_1D4_REG = INIT_1D4;
  reg [287:0] INIT_1D5_REG = INIT_1D5;
  reg [287:0] INIT_1D6_REG = INIT_1D6;
  reg [287:0] INIT_1D7_REG = INIT_1D7;
  reg [287:0] INIT_1D8_REG = INIT_1D8;
  reg [287:0] INIT_1D9_REG = INIT_1D9;
  reg [287:0] INIT_1DA_REG = INIT_1DA;
  reg [287:0] INIT_1DB_REG = INIT_1DB;
  reg [287:0] INIT_1DC_REG = INIT_1DC;
  reg [287:0] INIT_1DD_REG = INIT_1DD;
  reg [287:0] INIT_1DE_REG = INIT_1DE;
  reg [287:0] INIT_1DF_REG = INIT_1DF;
  reg [287:0] INIT_1E0_REG = INIT_1E0;
  reg [287:0] INIT_1E1_REG = INIT_1E1;
  reg [287:0] INIT_1E2_REG = INIT_1E2;
  reg [287:0] INIT_1E3_REG = INIT_1E3;
  reg [287:0] INIT_1E4_REG = INIT_1E4;
  reg [287:0] INIT_1E5_REG = INIT_1E5;
  reg [287:0] INIT_1E6_REG = INIT_1E6;
  reg [287:0] INIT_1E7_REG = INIT_1E7;
  reg [287:0] INIT_1E8_REG = INIT_1E8;
  reg [287:0] INIT_1E9_REG = INIT_1E9;
  reg [287:0] INIT_1EA_REG = INIT_1EA;
  reg [287:0] INIT_1EB_REG = INIT_1EB;
  reg [287:0] INIT_1EC_REG = INIT_1EC;
  reg [287:0] INIT_1ED_REG = INIT_1ED;
  reg [287:0] INIT_1EE_REG = INIT_1EE;
  reg [287:0] INIT_1EF_REG = INIT_1EF;
  reg [287:0] INIT_1F0_REG = INIT_1F0;
  reg [287:0] INIT_1F1_REG = INIT_1F1;
  reg [287:0] INIT_1F2_REG = INIT_1F2;
  reg [287:0] INIT_1F3_REG = INIT_1F3;
  reg [287:0] INIT_1F4_REG = INIT_1F4;
  reg [287:0] INIT_1F5_REG = INIT_1F5;
  reg [287:0] INIT_1F6_REG = INIT_1F6;
  reg [287:0] INIT_1F7_REG = INIT_1F7;
  reg [287:0] INIT_1F8_REG = INIT_1F8;
  reg [287:0] INIT_1F9_REG = INIT_1F9;
  reg [287:0] INIT_1FA_REG = INIT_1FA;
  reg [287:0] INIT_1FB_REG = INIT_1FB;
  reg [287:0] INIT_1FC_REG = INIT_1FC;
  reg [287:0] INIT_1FD_REG = INIT_1FD;
  reg [287:0] INIT_1FE_REG = INIT_1FE;
  reg [287:0] INIT_1FF_REG = INIT_1FF;
  reg [287:0] INIT_200_REG = INIT_200;
  reg [287:0] INIT_201_REG = INIT_201;
  reg [287:0] INIT_202_REG = INIT_202;
  reg [287:0] INIT_203_REG = INIT_203;
  reg [287:0] INIT_204_REG = INIT_204;
  reg [287:0] INIT_205_REG = INIT_205;
  reg [287:0] INIT_206_REG = INIT_206;
  reg [287:0] INIT_207_REG = INIT_207;
  reg [287:0] INIT_208_REG = INIT_208;
  reg [287:0] INIT_209_REG = INIT_209;
  reg [287:0] INIT_20A_REG = INIT_20A;
  reg [287:0] INIT_20B_REG = INIT_20B;
  reg [287:0] INIT_20C_REG = INIT_20C;
  reg [287:0] INIT_20D_REG = INIT_20D;
  reg [287:0] INIT_20E_REG = INIT_20E;
  reg [287:0] INIT_20F_REG = INIT_20F;
  reg [287:0] INIT_210_REG = INIT_210;
  reg [287:0] INIT_211_REG = INIT_211;
  reg [287:0] INIT_212_REG = INIT_212;
  reg [287:0] INIT_213_REG = INIT_213;
  reg [287:0] INIT_214_REG = INIT_214;
  reg [287:0] INIT_215_REG = INIT_215;
  reg [287:0] INIT_216_REG = INIT_216;
  reg [287:0] INIT_217_REG = INIT_217;
  reg [287:0] INIT_218_REG = INIT_218;
  reg [287:0] INIT_219_REG = INIT_219;
  reg [287:0] INIT_21A_REG = INIT_21A;
  reg [287:0] INIT_21B_REG = INIT_21B;
  reg [287:0] INIT_21C_REG = INIT_21C;
  reg [287:0] INIT_21D_REG = INIT_21D;
  reg [287:0] INIT_21E_REG = INIT_21E;
  reg [287:0] INIT_21F_REG = INIT_21F;
  reg [287:0] INIT_220_REG = INIT_220;
  reg [287:0] INIT_221_REG = INIT_221;
  reg [287:0] INIT_222_REG = INIT_222;
  reg [287:0] INIT_223_REG = INIT_223;
  reg [287:0] INIT_224_REG = INIT_224;
  reg [287:0] INIT_225_REG = INIT_225;
  reg [287:0] INIT_226_REG = INIT_226;
  reg [287:0] INIT_227_REG = INIT_227;
  reg [287:0] INIT_228_REG = INIT_228;
  reg [287:0] INIT_229_REG = INIT_229;
  reg [287:0] INIT_22A_REG = INIT_22A;
  reg [287:0] INIT_22B_REG = INIT_22B;
  reg [287:0] INIT_22C_REG = INIT_22C;
  reg [287:0] INIT_22D_REG = INIT_22D;
  reg [287:0] INIT_22E_REG = INIT_22E;
  reg [287:0] INIT_22F_REG = INIT_22F;
  reg [287:0] INIT_230_REG = INIT_230;
  reg [287:0] INIT_231_REG = INIT_231;
  reg [287:0] INIT_232_REG = INIT_232;
  reg [287:0] INIT_233_REG = INIT_233;
  reg [287:0] INIT_234_REG = INIT_234;
  reg [287:0] INIT_235_REG = INIT_235;
  reg [287:0] INIT_236_REG = INIT_236;
  reg [287:0] INIT_237_REG = INIT_237;
  reg [287:0] INIT_238_REG = INIT_238;
  reg [287:0] INIT_239_REG = INIT_239;
  reg [287:0] INIT_23A_REG = INIT_23A;
  reg [287:0] INIT_23B_REG = INIT_23B;
  reg [287:0] INIT_23C_REG = INIT_23C;
  reg [287:0] INIT_23D_REG = INIT_23D;
  reg [287:0] INIT_23E_REG = INIT_23E;
  reg [287:0] INIT_23F_REG = INIT_23F;
  reg [287:0] INIT_240_REG = INIT_240;
  reg [287:0] INIT_241_REG = INIT_241;
  reg [287:0] INIT_242_REG = INIT_242;
  reg [287:0] INIT_243_REG = INIT_243;
  reg [287:0] INIT_244_REG = INIT_244;
  reg [287:0] INIT_245_REG = INIT_245;
  reg [287:0] INIT_246_REG = INIT_246;
  reg [287:0] INIT_247_REG = INIT_247;
  reg [287:0] INIT_248_REG = INIT_248;
  reg [287:0] INIT_249_REG = INIT_249;
  reg [287:0] INIT_24A_REG = INIT_24A;
  reg [287:0] INIT_24B_REG = INIT_24B;
  reg [287:0] INIT_24C_REG = INIT_24C;
  reg [287:0] INIT_24D_REG = INIT_24D;
  reg [287:0] INIT_24E_REG = INIT_24E;
  reg [287:0] INIT_24F_REG = INIT_24F;
  reg [287:0] INIT_250_REG = INIT_250;
  reg [287:0] INIT_251_REG = INIT_251;
  reg [287:0] INIT_252_REG = INIT_252;
  reg [287:0] INIT_253_REG = INIT_253;
  reg [287:0] INIT_254_REG = INIT_254;
  reg [287:0] INIT_255_REG = INIT_255;
  reg [287:0] INIT_256_REG = INIT_256;
  reg [287:0] INIT_257_REG = INIT_257;
  reg [287:0] INIT_258_REG = INIT_258;
  reg [287:0] INIT_259_REG = INIT_259;
  reg [287:0] INIT_25A_REG = INIT_25A;
  reg [287:0] INIT_25B_REG = INIT_25B;
  reg [287:0] INIT_25C_REG = INIT_25C;
  reg [287:0] INIT_25D_REG = INIT_25D;
  reg [287:0] INIT_25E_REG = INIT_25E;
  reg [287:0] INIT_25F_REG = INIT_25F;
  reg [287:0] INIT_260_REG = INIT_260;
  reg [287:0] INIT_261_REG = INIT_261;
  reg [287:0] INIT_262_REG = INIT_262;
  reg [287:0] INIT_263_REG = INIT_263;
  reg [287:0] INIT_264_REG = INIT_264;
  reg [287:0] INIT_265_REG = INIT_265;
  reg [287:0] INIT_266_REG = INIT_266;
  reg [287:0] INIT_267_REG = INIT_267;
  reg [287:0] INIT_268_REG = INIT_268;
  reg [287:0] INIT_269_REG = INIT_269;
  reg [287:0] INIT_26A_REG = INIT_26A;
  reg [287:0] INIT_26B_REG = INIT_26B;
  reg [287:0] INIT_26C_REG = INIT_26C;
  reg [287:0] INIT_26D_REG = INIT_26D;
  reg [287:0] INIT_26E_REG = INIT_26E;
  reg [287:0] INIT_26F_REG = INIT_26F;
  reg [287:0] INIT_270_REG = INIT_270;
  reg [287:0] INIT_271_REG = INIT_271;
  reg [287:0] INIT_272_REG = INIT_272;
  reg [287:0] INIT_273_REG = INIT_273;
  reg [287:0] INIT_274_REG = INIT_274;
  reg [287:0] INIT_275_REG = INIT_275;
  reg [287:0] INIT_276_REG = INIT_276;
  reg [287:0] INIT_277_REG = INIT_277;
  reg [287:0] INIT_278_REG = INIT_278;
  reg [287:0] INIT_279_REG = INIT_279;
  reg [287:0] INIT_27A_REG = INIT_27A;
  reg [287:0] INIT_27B_REG = INIT_27B;
  reg [287:0] INIT_27C_REG = INIT_27C;
  reg [287:0] INIT_27D_REG = INIT_27D;
  reg [287:0] INIT_27E_REG = INIT_27E;
  reg [287:0] INIT_27F_REG = INIT_27F;
  reg [287:0] INIT_280_REG = INIT_280;
  reg [287:0] INIT_281_REG = INIT_281;
  reg [287:0] INIT_282_REG = INIT_282;
  reg [287:0] INIT_283_REG = INIT_283;
  reg [287:0] INIT_284_REG = INIT_284;
  reg [287:0] INIT_285_REG = INIT_285;
  reg [287:0] INIT_286_REG = INIT_286;
  reg [287:0] INIT_287_REG = INIT_287;
  reg [287:0] INIT_288_REG = INIT_288;
  reg [287:0] INIT_289_REG = INIT_289;
  reg [287:0] INIT_28A_REG = INIT_28A;
  reg [287:0] INIT_28B_REG = INIT_28B;
  reg [287:0] INIT_28C_REG = INIT_28C;
  reg [287:0] INIT_28D_REG = INIT_28D;
  reg [287:0] INIT_28E_REG = INIT_28E;
  reg [287:0] INIT_28F_REG = INIT_28F;
  reg [287:0] INIT_290_REG = INIT_290;
  reg [287:0] INIT_291_REG = INIT_291;
  reg [287:0] INIT_292_REG = INIT_292;
  reg [287:0] INIT_293_REG = INIT_293;
  reg [287:0] INIT_294_REG = INIT_294;
  reg [287:0] INIT_295_REG = INIT_295;
  reg [287:0] INIT_296_REG = INIT_296;
  reg [287:0] INIT_297_REG = INIT_297;
  reg [287:0] INIT_298_REG = INIT_298;
  reg [287:0] INIT_299_REG = INIT_299;
  reg [287:0] INIT_29A_REG = INIT_29A;
  reg [287:0] INIT_29B_REG = INIT_29B;
  reg [287:0] INIT_29C_REG = INIT_29C;
  reg [287:0] INIT_29D_REG = INIT_29D;
  reg [287:0] INIT_29E_REG = INIT_29E;
  reg [287:0] INIT_29F_REG = INIT_29F;
  reg [287:0] INIT_2A0_REG = INIT_2A0;
  reg [287:0] INIT_2A1_REG = INIT_2A1;
  reg [287:0] INIT_2A2_REG = INIT_2A2;
  reg [287:0] INIT_2A3_REG = INIT_2A3;
  reg [287:0] INIT_2A4_REG = INIT_2A4;
  reg [287:0] INIT_2A5_REG = INIT_2A5;
  reg [287:0] INIT_2A6_REG = INIT_2A6;
  reg [287:0] INIT_2A7_REG = INIT_2A7;
  reg [287:0] INIT_2A8_REG = INIT_2A8;
  reg [287:0] INIT_2A9_REG = INIT_2A9;
  reg [287:0] INIT_2AA_REG = INIT_2AA;
  reg [287:0] INIT_2AB_REG = INIT_2AB;
  reg [287:0] INIT_2AC_REG = INIT_2AC;
  reg [287:0] INIT_2AD_REG = INIT_2AD;
  reg [287:0] INIT_2AE_REG = INIT_2AE;
  reg [287:0] INIT_2AF_REG = INIT_2AF;
  reg [287:0] INIT_2B0_REG = INIT_2B0;
  reg [287:0] INIT_2B1_REG = INIT_2B1;
  reg [287:0] INIT_2B2_REG = INIT_2B2;
  reg [287:0] INIT_2B3_REG = INIT_2B3;
  reg [287:0] INIT_2B4_REG = INIT_2B4;
  reg [287:0] INIT_2B5_REG = INIT_2B5;
  reg [287:0] INIT_2B6_REG = INIT_2B6;
  reg [287:0] INIT_2B7_REG = INIT_2B7;
  reg [287:0] INIT_2B8_REG = INIT_2B8;
  reg [287:0] INIT_2B9_REG = INIT_2B9;
  reg [287:0] INIT_2BA_REG = INIT_2BA;
  reg [287:0] INIT_2BB_REG = INIT_2BB;
  reg [287:0] INIT_2BC_REG = INIT_2BC;
  reg [287:0] INIT_2BD_REG = INIT_2BD;
  reg [287:0] INIT_2BE_REG = INIT_2BE;
  reg [287:0] INIT_2BF_REG = INIT_2BF;
  reg [287:0] INIT_2C0_REG = INIT_2C0;
  reg [287:0] INIT_2C1_REG = INIT_2C1;
  reg [287:0] INIT_2C2_REG = INIT_2C2;
  reg [287:0] INIT_2C3_REG = INIT_2C3;
  reg [287:0] INIT_2C4_REG = INIT_2C4;
  reg [287:0] INIT_2C5_REG = INIT_2C5;
  reg [287:0] INIT_2C6_REG = INIT_2C6;
  reg [287:0] INIT_2C7_REG = INIT_2C7;
  reg [287:0] INIT_2C8_REG = INIT_2C8;
  reg [287:0] INIT_2C9_REG = INIT_2C9;
  reg [287:0] INIT_2CA_REG = INIT_2CA;
  reg [287:0] INIT_2CB_REG = INIT_2CB;
  reg [287:0] INIT_2CC_REG = INIT_2CC;
  reg [287:0] INIT_2CD_REG = INIT_2CD;
  reg [287:0] INIT_2CE_REG = INIT_2CE;
  reg [287:0] INIT_2CF_REG = INIT_2CF;
  reg [287:0] INIT_2D0_REG = INIT_2D0;
  reg [287:0] INIT_2D1_REG = INIT_2D1;
  reg [287:0] INIT_2D2_REG = INIT_2D2;
  reg [287:0] INIT_2D3_REG = INIT_2D3;
  reg [287:0] INIT_2D4_REG = INIT_2D4;
  reg [287:0] INIT_2D5_REG = INIT_2D5;
  reg [287:0] INIT_2D6_REG = INIT_2D6;
  reg [287:0] INIT_2D7_REG = INIT_2D7;
  reg [287:0] INIT_2D8_REG = INIT_2D8;
  reg [287:0] INIT_2D9_REG = INIT_2D9;
  reg [287:0] INIT_2DA_REG = INIT_2DA;
  reg [287:0] INIT_2DB_REG = INIT_2DB;
  reg [287:0] INIT_2DC_REG = INIT_2DC;
  reg [287:0] INIT_2DD_REG = INIT_2DD;
  reg [287:0] INIT_2DE_REG = INIT_2DE;
  reg [287:0] INIT_2DF_REG = INIT_2DF;
  reg [287:0] INIT_2E0_REG = INIT_2E0;
  reg [287:0] INIT_2E1_REG = INIT_2E1;
  reg [287:0] INIT_2E2_REG = INIT_2E2;
  reg [287:0] INIT_2E3_REG = INIT_2E3;
  reg [287:0] INIT_2E4_REG = INIT_2E4;
  reg [287:0] INIT_2E5_REG = INIT_2E5;
  reg [287:0] INIT_2E6_REG = INIT_2E6;
  reg [287:0] INIT_2E7_REG = INIT_2E7;
  reg [287:0] INIT_2E8_REG = INIT_2E8;
  reg [287:0] INIT_2E9_REG = INIT_2E9;
  reg [287:0] INIT_2EA_REG = INIT_2EA;
  reg [287:0] INIT_2EB_REG = INIT_2EB;
  reg [287:0] INIT_2EC_REG = INIT_2EC;
  reg [287:0] INIT_2ED_REG = INIT_2ED;
  reg [287:0] INIT_2EE_REG = INIT_2EE;
  reg [287:0] INIT_2EF_REG = INIT_2EF;
  reg [287:0] INIT_2F0_REG = INIT_2F0;
  reg [287:0] INIT_2F1_REG = INIT_2F1;
  reg [287:0] INIT_2F2_REG = INIT_2F2;
  reg [287:0] INIT_2F3_REG = INIT_2F3;
  reg [287:0] INIT_2F4_REG = INIT_2F4;
  reg [287:0] INIT_2F5_REG = INIT_2F5;
  reg [287:0] INIT_2F6_REG = INIT_2F6;
  reg [287:0] INIT_2F7_REG = INIT_2F7;
  reg [287:0] INIT_2F8_REG = INIT_2F8;
  reg [287:0] INIT_2F9_REG = INIT_2F9;
  reg [287:0] INIT_2FA_REG = INIT_2FA;
  reg [287:0] INIT_2FB_REG = INIT_2FB;
  reg [287:0] INIT_2FC_REG = INIT_2FC;
  reg [287:0] INIT_2FD_REG = INIT_2FD;
  reg [287:0] INIT_2FE_REG = INIT_2FE;
  reg [287:0] INIT_2FF_REG = INIT_2FF;
  reg [287:0] INIT_300_REG = INIT_300;
  reg [287:0] INIT_301_REG = INIT_301;
  reg [287:0] INIT_302_REG = INIT_302;
  reg [287:0] INIT_303_REG = INIT_303;
  reg [287:0] INIT_304_REG = INIT_304;
  reg [287:0] INIT_305_REG = INIT_305;
  reg [287:0] INIT_306_REG = INIT_306;
  reg [287:0] INIT_307_REG = INIT_307;
  reg [287:0] INIT_308_REG = INIT_308;
  reg [287:0] INIT_309_REG = INIT_309;
  reg [287:0] INIT_30A_REG = INIT_30A;
  reg [287:0] INIT_30B_REG = INIT_30B;
  reg [287:0] INIT_30C_REG = INIT_30C;
  reg [287:0] INIT_30D_REG = INIT_30D;
  reg [287:0] INIT_30E_REG = INIT_30E;
  reg [287:0] INIT_30F_REG = INIT_30F;
  reg [287:0] INIT_310_REG = INIT_310;
  reg [287:0] INIT_311_REG = INIT_311;
  reg [287:0] INIT_312_REG = INIT_312;
  reg [287:0] INIT_313_REG = INIT_313;
  reg [287:0] INIT_314_REG = INIT_314;
  reg [287:0] INIT_315_REG = INIT_315;
  reg [287:0] INIT_316_REG = INIT_316;
  reg [287:0] INIT_317_REG = INIT_317;
  reg [287:0] INIT_318_REG = INIT_318;
  reg [287:0] INIT_319_REG = INIT_319;
  reg [287:0] INIT_31A_REG = INIT_31A;
  reg [287:0] INIT_31B_REG = INIT_31B;
  reg [287:0] INIT_31C_REG = INIT_31C;
  reg [287:0] INIT_31D_REG = INIT_31D;
  reg [287:0] INIT_31E_REG = INIT_31E;
  reg [287:0] INIT_31F_REG = INIT_31F;
  reg [287:0] INIT_320_REG = INIT_320;
  reg [287:0] INIT_321_REG = INIT_321;
  reg [287:0] INIT_322_REG = INIT_322;
  reg [287:0] INIT_323_REG = INIT_323;
  reg [287:0] INIT_324_REG = INIT_324;
  reg [287:0] INIT_325_REG = INIT_325;
  reg [287:0] INIT_326_REG = INIT_326;
  reg [287:0] INIT_327_REG = INIT_327;
  reg [287:0] INIT_328_REG = INIT_328;
  reg [287:0] INIT_329_REG = INIT_329;
  reg [287:0] INIT_32A_REG = INIT_32A;
  reg [287:0] INIT_32B_REG = INIT_32B;
  reg [287:0] INIT_32C_REG = INIT_32C;
  reg [287:0] INIT_32D_REG = INIT_32D;
  reg [287:0] INIT_32E_REG = INIT_32E;
  reg [287:0] INIT_32F_REG = INIT_32F;
  reg [287:0] INIT_330_REG = INIT_330;
  reg [287:0] INIT_331_REG = INIT_331;
  reg [287:0] INIT_332_REG = INIT_332;
  reg [287:0] INIT_333_REG = INIT_333;
  reg [287:0] INIT_334_REG = INIT_334;
  reg [287:0] INIT_335_REG = INIT_335;
  reg [287:0] INIT_336_REG = INIT_336;
  reg [287:0] INIT_337_REG = INIT_337;
  reg [287:0] INIT_338_REG = INIT_338;
  reg [287:0] INIT_339_REG = INIT_339;
  reg [287:0] INIT_33A_REG = INIT_33A;
  reg [287:0] INIT_33B_REG = INIT_33B;
  reg [287:0] INIT_33C_REG = INIT_33C;
  reg [287:0] INIT_33D_REG = INIT_33D;
  reg [287:0] INIT_33E_REG = INIT_33E;
  reg [287:0] INIT_33F_REG = INIT_33F;
  reg [287:0] INIT_340_REG = INIT_340;
  reg [287:0] INIT_341_REG = INIT_341;
  reg [287:0] INIT_342_REG = INIT_342;
  reg [287:0] INIT_343_REG = INIT_343;
  reg [287:0] INIT_344_REG = INIT_344;
  reg [287:0] INIT_345_REG = INIT_345;
  reg [287:0] INIT_346_REG = INIT_346;
  reg [287:0] INIT_347_REG = INIT_347;
  reg [287:0] INIT_348_REG = INIT_348;
  reg [287:0] INIT_349_REG = INIT_349;
  reg [287:0] INIT_34A_REG = INIT_34A;
  reg [287:0] INIT_34B_REG = INIT_34B;
  reg [287:0] INIT_34C_REG = INIT_34C;
  reg [287:0] INIT_34D_REG = INIT_34D;
  reg [287:0] INIT_34E_REG = INIT_34E;
  reg [287:0] INIT_34F_REG = INIT_34F;
  reg [287:0] INIT_350_REG = INIT_350;
  reg [287:0] INIT_351_REG = INIT_351;
  reg [287:0] INIT_352_REG = INIT_352;
  reg [287:0] INIT_353_REG = INIT_353;
  reg [287:0] INIT_354_REG = INIT_354;
  reg [287:0] INIT_355_REG = INIT_355;
  reg [287:0] INIT_356_REG = INIT_356;
  reg [287:0] INIT_357_REG = INIT_357;
  reg [287:0] INIT_358_REG = INIT_358;
  reg [287:0] INIT_359_REG = INIT_359;
  reg [287:0] INIT_35A_REG = INIT_35A;
  reg [287:0] INIT_35B_REG = INIT_35B;
  reg [287:0] INIT_35C_REG = INIT_35C;
  reg [287:0] INIT_35D_REG = INIT_35D;
  reg [287:0] INIT_35E_REG = INIT_35E;
  reg [287:0] INIT_35F_REG = INIT_35F;
  reg [287:0] INIT_360_REG = INIT_360;
  reg [287:0] INIT_361_REG = INIT_361;
  reg [287:0] INIT_362_REG = INIT_362;
  reg [287:0] INIT_363_REG = INIT_363;
  reg [287:0] INIT_364_REG = INIT_364;
  reg [287:0] INIT_365_REG = INIT_365;
  reg [287:0] INIT_366_REG = INIT_366;
  reg [287:0] INIT_367_REG = INIT_367;
  reg [287:0] INIT_368_REG = INIT_368;
  reg [287:0] INIT_369_REG = INIT_369;
  reg [287:0] INIT_36A_REG = INIT_36A;
  reg [287:0] INIT_36B_REG = INIT_36B;
  reg [287:0] INIT_36C_REG = INIT_36C;
  reg [287:0] INIT_36D_REG = INIT_36D;
  reg [287:0] INIT_36E_REG = INIT_36E;
  reg [287:0] INIT_36F_REG = INIT_36F;
  reg [287:0] INIT_370_REG = INIT_370;
  reg [287:0] INIT_371_REG = INIT_371;
  reg [287:0] INIT_372_REG = INIT_372;
  reg [287:0] INIT_373_REG = INIT_373;
  reg [287:0] INIT_374_REG = INIT_374;
  reg [287:0] INIT_375_REG = INIT_375;
  reg [287:0] INIT_376_REG = INIT_376;
  reg [287:0] INIT_377_REG = INIT_377;
  reg [287:0] INIT_378_REG = INIT_378;
  reg [287:0] INIT_379_REG = INIT_379;
  reg [287:0] INIT_37A_REG = INIT_37A;
  reg [287:0] INIT_37B_REG = INIT_37B;
  reg [287:0] INIT_37C_REG = INIT_37C;
  reg [287:0] INIT_37D_REG = INIT_37D;
  reg [287:0] INIT_37E_REG = INIT_37E;
  reg [287:0] INIT_37F_REG = INIT_37F;
  reg [287:0] INIT_380_REG = INIT_380;
  reg [287:0] INIT_381_REG = INIT_381;
  reg [287:0] INIT_382_REG = INIT_382;
  reg [287:0] INIT_383_REG = INIT_383;
  reg [287:0] INIT_384_REG = INIT_384;
  reg [287:0] INIT_385_REG = INIT_385;
  reg [287:0] INIT_386_REG = INIT_386;
  reg [287:0] INIT_387_REG = INIT_387;
  reg [287:0] INIT_388_REG = INIT_388;
  reg [287:0] INIT_389_REG = INIT_389;
  reg [287:0] INIT_38A_REG = INIT_38A;
  reg [287:0] INIT_38B_REG = INIT_38B;
  reg [287:0] INIT_38C_REG = INIT_38C;
  reg [287:0] INIT_38D_REG = INIT_38D;
  reg [287:0] INIT_38E_REG = INIT_38E;
  reg [287:0] INIT_38F_REG = INIT_38F;
  reg [287:0] INIT_390_REG = INIT_390;
  reg [287:0] INIT_391_REG = INIT_391;
  reg [287:0] INIT_392_REG = INIT_392;
  reg [287:0] INIT_393_REG = INIT_393;
  reg [287:0] INIT_394_REG = INIT_394;
  reg [287:0] INIT_395_REG = INIT_395;
  reg [287:0] INIT_396_REG = INIT_396;
  reg [287:0] INIT_397_REG = INIT_397;
  reg [287:0] INIT_398_REG = INIT_398;
  reg [287:0] INIT_399_REG = INIT_399;
  reg [287:0] INIT_39A_REG = INIT_39A;
  reg [287:0] INIT_39B_REG = INIT_39B;
  reg [287:0] INIT_39C_REG = INIT_39C;
  reg [287:0] INIT_39D_REG = INIT_39D;
  reg [287:0] INIT_39E_REG = INIT_39E;
  reg [287:0] INIT_39F_REG = INIT_39F;
  reg [287:0] INIT_3A0_REG = INIT_3A0;
  reg [287:0] INIT_3A1_REG = INIT_3A1;
  reg [287:0] INIT_3A2_REG = INIT_3A2;
  reg [287:0] INIT_3A3_REG = INIT_3A3;
  reg [287:0] INIT_3A4_REG = INIT_3A4;
  reg [287:0] INIT_3A5_REG = INIT_3A5;
  reg [287:0] INIT_3A6_REG = INIT_3A6;
  reg [287:0] INIT_3A7_REG = INIT_3A7;
  reg [287:0] INIT_3A8_REG = INIT_3A8;
  reg [287:0] INIT_3A9_REG = INIT_3A9;
  reg [287:0] INIT_3AA_REG = INIT_3AA;
  reg [287:0] INIT_3AB_REG = INIT_3AB;
  reg [287:0] INIT_3AC_REG = INIT_3AC;
  reg [287:0] INIT_3AD_REG = INIT_3AD;
  reg [287:0] INIT_3AE_REG = INIT_3AE;
  reg [287:0] INIT_3AF_REG = INIT_3AF;
  reg [287:0] INIT_3B0_REG = INIT_3B0;
  reg [287:0] INIT_3B1_REG = INIT_3B1;
  reg [287:0] INIT_3B2_REG = INIT_3B2;
  reg [287:0] INIT_3B3_REG = INIT_3B3;
  reg [287:0] INIT_3B4_REG = INIT_3B4;
  reg [287:0] INIT_3B5_REG = INIT_3B5;
  reg [287:0] INIT_3B6_REG = INIT_3B6;
  reg [287:0] INIT_3B7_REG = INIT_3B7;
  reg [287:0] INIT_3B8_REG = INIT_3B8;
  reg [287:0] INIT_3B9_REG = INIT_3B9;
  reg [287:0] INIT_3BA_REG = INIT_3BA;
  reg [287:0] INIT_3BB_REG = INIT_3BB;
  reg [287:0] INIT_3BC_REG = INIT_3BC;
  reg [287:0] INIT_3BD_REG = INIT_3BD;
  reg [287:0] INIT_3BE_REG = INIT_3BE;
  reg [287:0] INIT_3BF_REG = INIT_3BF;
  reg [287:0] INIT_3C0_REG = INIT_3C0;
  reg [287:0] INIT_3C1_REG = INIT_3C1;
  reg [287:0] INIT_3C2_REG = INIT_3C2;
  reg [287:0] INIT_3C3_REG = INIT_3C3;
  reg [287:0] INIT_3C4_REG = INIT_3C4;
  reg [287:0] INIT_3C5_REG = INIT_3C5;
  reg [287:0] INIT_3C6_REG = INIT_3C6;
  reg [287:0] INIT_3C7_REG = INIT_3C7;
  reg [287:0] INIT_3C8_REG = INIT_3C8;
  reg [287:0] INIT_3C9_REG = INIT_3C9;
  reg [287:0] INIT_3CA_REG = INIT_3CA;
  reg [287:0] INIT_3CB_REG = INIT_3CB;
  reg [287:0] INIT_3CC_REG = INIT_3CC;
  reg [287:0] INIT_3CD_REG = INIT_3CD;
  reg [287:0] INIT_3CE_REG = INIT_3CE;
  reg [287:0] INIT_3CF_REG = INIT_3CF;
  reg [287:0] INIT_3D0_REG = INIT_3D0;
  reg [287:0] INIT_3D1_REG = INIT_3D1;
  reg [287:0] INIT_3D2_REG = INIT_3D2;
  reg [287:0] INIT_3D3_REG = INIT_3D3;
  reg [287:0] INIT_3D4_REG = INIT_3D4;
  reg [287:0] INIT_3D5_REG = INIT_3D5;
  reg [287:0] INIT_3D6_REG = INIT_3D6;
  reg [287:0] INIT_3D7_REG = INIT_3D7;
  reg [287:0] INIT_3D8_REG = INIT_3D8;
  reg [287:0] INIT_3D9_REG = INIT_3D9;
  reg [287:0] INIT_3DA_REG = INIT_3DA;
  reg [287:0] INIT_3DB_REG = INIT_3DB;
  reg [287:0] INIT_3DC_REG = INIT_3DC;
  reg [287:0] INIT_3DD_REG = INIT_3DD;
  reg [287:0] INIT_3DE_REG = INIT_3DE;
  reg [287:0] INIT_3DF_REG = INIT_3DF;
  reg [287:0] INIT_3E0_REG = INIT_3E0;
  reg [287:0] INIT_3E1_REG = INIT_3E1;
  reg [287:0] INIT_3E2_REG = INIT_3E2;
  reg [287:0] INIT_3E3_REG = INIT_3E3;
  reg [287:0] INIT_3E4_REG = INIT_3E4;
  reg [287:0] INIT_3E5_REG = INIT_3E5;
  reg [287:0] INIT_3E6_REG = INIT_3E6;
  reg [287:0] INIT_3E7_REG = INIT_3E7;
  reg [287:0] INIT_3E8_REG = INIT_3E8;
  reg [287:0] INIT_3E9_REG = INIT_3E9;
  reg [287:0] INIT_3EA_REG = INIT_3EA;
  reg [287:0] INIT_3EB_REG = INIT_3EB;
  reg [287:0] INIT_3EC_REG = INIT_3EC;
  reg [287:0] INIT_3ED_REG = INIT_3ED;
  reg [287:0] INIT_3EE_REG = INIT_3EE;
  reg [287:0] INIT_3EF_REG = INIT_3EF;
  reg [287:0] INIT_3F0_REG = INIT_3F0;
  reg [287:0] INIT_3F1_REG = INIT_3F1;
  reg [287:0] INIT_3F2_REG = INIT_3F2;
  reg [287:0] INIT_3F3_REG = INIT_3F3;
  reg [287:0] INIT_3F4_REG = INIT_3F4;
  reg [287:0] INIT_3F5_REG = INIT_3F5;
  reg [287:0] INIT_3F6_REG = INIT_3F6;
  reg [287:0] INIT_3F7_REG = INIT_3F7;
  reg [287:0] INIT_3F8_REG = INIT_3F8;
  reg [287:0] INIT_3F9_REG = INIT_3F9;
  reg [287:0] INIT_3FA_REG = INIT_3FA;
  reg [287:0] INIT_3FB_REG = INIT_3FB;
  reg [287:0] INIT_3FC_REG = INIT_3FC;
  reg [287:0] INIT_3FD_REG = INIT_3FD;
  reg [287:0] INIT_3FE_REG = INIT_3FE;
  reg [287:0] INIT_3FF_REG = INIT_3FF;
  reg [40:1] IREG_PRE_A_REG = IREG_PRE_A;
  reg [40:1] IREG_PRE_B_REG = IREG_PRE_B;
  reg [0:0] IS_CLK_INVERTED_REG = IS_CLK_INVERTED;
  reg [0:0] IS_EN_A_INVERTED_REG = IS_EN_A_INVERTED;
  reg [0:0] IS_EN_B_INVERTED_REG = IS_EN_B_INVERTED;
  reg [0:0] IS_RDB_WR_A_INVERTED_REG = IS_RDB_WR_A_INVERTED;
  reg [0:0] IS_RDB_WR_B_INVERTED_REG = IS_RDB_WR_B_INVERTED;
  reg [0:0] IS_RST_A_INVERTED_REG = IS_RST_A_INVERTED;
  reg [0:0] IS_RST_B_INVERTED_REG = IS_RST_B_INVERTED;
  reg [40:1] OREG_A_REG = OREG_A;
  reg [40:1] OREG_B_REG = OREG_B;
  reg [40:1] OREG_ECC_A_REG = OREG_ECC_A;
  reg [40:1] OREG_ECC_B_REG = OREG_ECC_B;
  reg [40:1] PR_SAVE_DATA_REG = PR_SAVE_DATA;
  reg [31:0] READ_WIDTH_A_REG = READ_WIDTH_A;
  reg [31:0] READ_WIDTH_B_REG = READ_WIDTH_B;
  reg [40:1] RST_MODE_A_REG = RST_MODE_A;
  reg [40:1] RST_MODE_B_REG = RST_MODE_B;
  reg [40:1] USE_EXT_CE_A_REG = USE_EXT_CE_A;
  reg [40:1] USE_EXT_CE_B_REG = USE_EXT_CE_B;
  reg [31:0] WRITE_WIDTH_A_REG = WRITE_WIDTH_A;
  reg [31:0] WRITE_WIDTH_B_REG = WRITE_WIDTH_B;
`endif

`ifdef XIL_XECLIB
  wire [3:0] AUTO_SLEEP_LATENCY_BIN;
  wire [16:0] AVG_CONS_INACTIVE_CYCLES_BIN;
  wire BWE_MODE_A_BIN;
  wire BWE_MODE_B_BIN;
  wire EN_AUTO_SLEEP_MODE_BIN;
  wire EN_ECC_RD_A_BIN;
  wire EN_ECC_RD_B_BIN;
  wire EN_ECC_WR_A_BIN;
  wire EN_ECC_WR_B_BIN;
  wire IREG_PRE_A_BIN;
  wire IREG_PRE_B_BIN;
  wire OREG_A_BIN;
  wire OREG_B_BIN;
  wire OREG_ECC_A_BIN;
  wire OREG_ECC_B_BIN;
  wire PR_SAVE_DATA_BIN;
  wire [6:0] READ_WIDTH_A_BIN;
  wire [6:0] READ_WIDTH_B_BIN;
  wire RST_MODE_A_BIN;
  wire RST_MODE_B_BIN;
  wire USE_EXT_CE_A_BIN;
  wire USE_EXT_CE_B_BIN;
  wire [6:0] WRITE_WIDTH_A_BIN;
  wire [6:0] WRITE_WIDTH_B_BIN;
`else
  reg [3:0] AUTO_SLEEP_LATENCY_BIN;
  reg [16:0] AVG_CONS_INACTIVE_CYCLES_BIN;
  reg BWE_MODE_A_BIN;
  reg BWE_MODE_B_BIN;
  reg EN_AUTO_SLEEP_MODE_BIN;
  reg EN_ECC_RD_A_BIN;
  reg EN_ECC_RD_B_BIN;
  reg EN_ECC_WR_A_BIN;
  reg EN_ECC_WR_B_BIN;
  reg IREG_PRE_A_BIN;
  reg IREG_PRE_B_BIN;
  reg OREG_A_BIN;
  reg OREG_B_BIN;
  reg OREG_ECC_A_BIN;
  reg OREG_ECC_B_BIN;
  reg PR_SAVE_DATA_BIN;
  reg [6:0] READ_WIDTH_A_BIN;
  reg [6:0] READ_WIDTH_B_BIN;
  reg RST_MODE_A_BIN;
  reg RST_MODE_B_BIN;
  reg USE_EXT_CE_A_BIN;
  reg USE_EXT_CE_B_BIN;
  reg [6:0] WRITE_WIDTH_A_BIN;
  reg [6:0] WRITE_WIDTH_B_BIN;
`endif

`ifdef XIL_XECLIB
  reg glblGSR = 1'b0;
`else
  tri0 glblGSR = glbl.GSR;
`endif

  wire CLK_in;
  wire EN_A_in;
  wire EN_B_in;
  wire INJECT_DBITERR_A_in;
  wire INJECT_DBITERR_B_in;
  wire INJECT_SBITERR_A_in;
  wire INJECT_SBITERR_B_in;
  wire OREG_CE_A_in;
  wire OREG_CE_B_in;
  wire OREG_ECC_CE_A_in;
  wire OREG_ECC_CE_B_in;
  wire RDB_WR_A_in;
  wire RDB_WR_B_in;
  wire RST_A_in;
  wire RST_B_in;
  wire SLEEP_in;
  wire [25:0] ADDR_A_in;
  wire [25:0] ADDR_B_in;
  wire [71:0] DIN_A_in;
  wire [71:0] DIN_B_in;
  wire [8:0] BWE_A_in;
  wire [8:0] BWE_B_in;

`ifdef XIL_TIMING
  wire CLK_delay;
  wire EN_A_delay;
  wire EN_B_delay;
  wire INJECT_DBITERR_A_delay;
  wire INJECT_DBITERR_B_delay;
  wire INJECT_SBITERR_A_delay;
  wire INJECT_SBITERR_B_delay;
  wire OREG_CE_A_delay;
  wire OREG_CE_B_delay;
  wire OREG_ECC_CE_A_delay;
  wire OREG_ECC_CE_B_delay;
  wire RDB_WR_A_delay;
  wire RDB_WR_B_delay;
  wire RST_A_delay;
  wire RST_B_delay;
  wire SLEEP_delay;
  wire [25:0] ADDR_A_delay;
  wire [25:0] ADDR_B_delay;
  wire [71:0] DIN_A_delay;
  wire [71:0] DIN_B_delay;
  wire [8:0] BWE_A_delay;
  wire [8:0] BWE_B_delay;
`endif

`ifdef XIL_TIMING
  assign ADDR_A_in = ADDR_A_delay;
  assign ADDR_B_in = ADDR_B_delay;
  assign BWE_A_in[0] = (BWE_A[0] === 1'bz) || BWE_A_delay[0]; // rv 1
  assign BWE_A_in[1] = (BWE_A[1] === 1'bz) || BWE_A_delay[1]; // rv 1
  assign BWE_A_in[2] = (BWE_A[2] === 1'bz) || BWE_A_delay[2]; // rv 1
  assign BWE_A_in[3] = (BWE_A[3] === 1'bz) || BWE_A_delay[3]; // rv 1
  assign BWE_A_in[4] = (BWE_A[4] === 1'bz) || BWE_A_delay[4]; // rv 1
  assign BWE_A_in[5] = (BWE_A[5] === 1'bz) || BWE_A_delay[5]; // rv 1
  assign BWE_A_in[6] = (BWE_A[6] === 1'bz) || BWE_A_delay[6]; // rv 1
  assign BWE_A_in[7] = (BWE_A[7] === 1'bz) || BWE_A_delay[7]; // rv 1
  assign BWE_A_in[8] = (BWE_A[8] === 1'bz) || BWE_A_delay[8]; // rv 1
  assign BWE_B_in[0] = (BWE_B[0] === 1'bz) || BWE_B_delay[0]; // rv 1
  assign BWE_B_in[1] = (BWE_B[1] === 1'bz) || BWE_B_delay[1]; // rv 1
  assign BWE_B_in[2] = (BWE_B[2] === 1'bz) || BWE_B_delay[2]; // rv 1
  assign BWE_B_in[3] = (BWE_B[3] === 1'bz) || BWE_B_delay[3]; // rv 1
  assign BWE_B_in[4] = (BWE_B[4] === 1'bz) || BWE_B_delay[4]; // rv 1
  assign BWE_B_in[5] = (BWE_B[5] === 1'bz) || BWE_B_delay[5]; // rv 1
  assign BWE_B_in[6] = (BWE_B[6] === 1'bz) || BWE_B_delay[6]; // rv 1
  assign BWE_B_in[7] = (BWE_B[7] === 1'bz) || BWE_B_delay[7]; // rv 1
  assign BWE_B_in[8] = (BWE_B[8] === 1'bz) || BWE_B_delay[8]; // rv 1
  assign CLK_in = (CLK !== 1'bz) && (CLK_delay ^ IS_CLK_INVERTED_REG); // rv 0
  assign DIN_A_in = DIN_A_delay;
  assign DIN_B_in = DIN_B_delay;
  assign EN_A_in = (EN_A !== 1'bz) && (EN_A_delay ^ IS_EN_A_INVERTED_REG); // rv 0
  assign EN_B_in = (EN_B !== 1'bz) && (EN_B_delay ^ IS_EN_B_INVERTED_REG); // rv 0
  assign INJECT_DBITERR_A_in = (INJECT_DBITERR_A !== 1'bz) && INJECT_DBITERR_A_delay; // rv 0
  assign INJECT_DBITERR_B_in = (INJECT_DBITERR_B !== 1'bz) && INJECT_DBITERR_B_delay; // rv 0
  assign INJECT_SBITERR_A_in = (INJECT_SBITERR_A !== 1'bz) && INJECT_SBITERR_A_delay; // rv 0
  assign INJECT_SBITERR_B_in = (INJECT_SBITERR_B !== 1'bz) && INJECT_SBITERR_B_delay; // rv 0
  assign OREG_CE_A_in = (OREG_CE_A === 1'bz) || OREG_CE_A_delay; // rv 1
  assign OREG_CE_B_in = (OREG_CE_B === 1'bz) || OREG_CE_B_delay; // rv 1
  assign OREG_ECC_CE_A_in = (OREG_ECC_CE_A === 1'bz) || OREG_ECC_CE_A_delay; // rv 1
  assign OREG_ECC_CE_B_in = (OREG_ECC_CE_B === 1'bz) || OREG_ECC_CE_B_delay; // rv 1
  assign RDB_WR_A_in = (RDB_WR_A !== 1'bz) && (RDB_WR_A_delay ^ IS_RDB_WR_A_INVERTED_REG); // rv 0
  assign RDB_WR_B_in = (RDB_WR_B !== 1'bz) && (RDB_WR_B_delay ^ IS_RDB_WR_B_INVERTED_REG); // rv 0
  assign RST_A_in = (RST_A !== 1'bz) && (RST_A_delay ^ IS_RST_A_INVERTED_REG); // rv 0
  assign RST_B_in = (RST_B !== 1'bz) && (RST_B_delay ^ IS_RST_B_INVERTED_REG); // rv 0
  assign SLEEP_in = (SLEEP !== 1'bz) && SLEEP_delay; // rv 0
`else
  assign ADDR_A_in = ADDR_A;
  assign ADDR_B_in = ADDR_B;
  assign BWE_A_in[0] = (BWE_A[0] === 1'bz) || BWE_A[0]; // rv 1
  assign BWE_A_in[1] = (BWE_A[1] === 1'bz) || BWE_A[1]; // rv 1
  assign BWE_A_in[2] = (BWE_A[2] === 1'bz) || BWE_A[2]; // rv 1
  assign BWE_A_in[3] = (BWE_A[3] === 1'bz) || BWE_A[3]; // rv 1
  assign BWE_A_in[4] = (BWE_A[4] === 1'bz) || BWE_A[4]; // rv 1
  assign BWE_A_in[5] = (BWE_A[5] === 1'bz) || BWE_A[5]; // rv 1
  assign BWE_A_in[6] = (BWE_A[6] === 1'bz) || BWE_A[6]; // rv 1
  assign BWE_A_in[7] = (BWE_A[7] === 1'bz) || BWE_A[7]; // rv 1
  assign BWE_A_in[8] = (BWE_A[8] === 1'bz) || BWE_A[8]; // rv 1
  assign BWE_B_in[0] = (BWE_B[0] === 1'bz) || BWE_B[0]; // rv 1
  assign BWE_B_in[1] = (BWE_B[1] === 1'bz) || BWE_B[1]; // rv 1
  assign BWE_B_in[2] = (BWE_B[2] === 1'bz) || BWE_B[2]; // rv 1
  assign BWE_B_in[3] = (BWE_B[3] === 1'bz) || BWE_B[3]; // rv 1
  assign BWE_B_in[4] = (BWE_B[4] === 1'bz) || BWE_B[4]; // rv 1
  assign BWE_B_in[5] = (BWE_B[5] === 1'bz) || BWE_B[5]; // rv 1
  assign BWE_B_in[6] = (BWE_B[6] === 1'bz) || BWE_B[6]; // rv 1
  assign BWE_B_in[7] = (BWE_B[7] === 1'bz) || BWE_B[7]; // rv 1
  assign BWE_B_in[8] = (BWE_B[8] === 1'bz) || BWE_B[8]; // rv 1
  assign CLK_in = (CLK !== 1'bz) && (CLK ^ IS_CLK_INVERTED_REG); // rv 0
  assign DIN_A_in = DIN_A;
  assign DIN_B_in = DIN_B;
  assign EN_A_in = (EN_A !== 1'bz) && (EN_A ^ IS_EN_A_INVERTED_REG); // rv 0
  assign EN_B_in = (EN_B !== 1'bz) && (EN_B ^ IS_EN_B_INVERTED_REG); // rv 0
  assign INJECT_DBITERR_A_in = (INJECT_DBITERR_A !== 1'bz) && INJECT_DBITERR_A; // rv 0
  assign INJECT_DBITERR_B_in = (INJECT_DBITERR_B !== 1'bz) && INJECT_DBITERR_B; // rv 0
  assign INJECT_SBITERR_A_in = (INJECT_SBITERR_A !== 1'bz) && INJECT_SBITERR_A; // rv 0
  assign INJECT_SBITERR_B_in = (INJECT_SBITERR_B !== 1'bz) && INJECT_SBITERR_B; // rv 0
  assign OREG_CE_A_in = (OREG_CE_A === 1'bz) || OREG_CE_A; // rv 1
  assign OREG_CE_B_in = (OREG_CE_B === 1'bz) || OREG_CE_B; // rv 1
  assign OREG_ECC_CE_A_in = (OREG_ECC_CE_A === 1'bz) || OREG_ECC_CE_A; // rv 1
  assign OREG_ECC_CE_B_in = (OREG_ECC_CE_B === 1'bz) || OREG_ECC_CE_B; // rv 1
  assign RDB_WR_A_in = (RDB_WR_A !== 1'bz) && (RDB_WR_A ^ IS_RDB_WR_A_INVERTED_REG); // rv 0
  assign RDB_WR_B_in = (RDB_WR_B !== 1'bz) && (RDB_WR_B ^ IS_RDB_WR_B_INVERTED_REG); // rv 0
  assign RST_A_in = (RST_A !== 1'bz) && (RST_A ^ IS_RST_A_INVERTED_REG); // rv 0
  assign RST_B_in = (RST_B !== 1'bz) && (RST_B ^ IS_RST_B_INVERTED_REG); // rv 0
  assign SLEEP_in = (SLEEP !== 1'bz) && SLEEP; // rv 0
`endif 

`ifndef XIL_XECLIB
  reg attr_test;
  reg attr_err;
  
  initial begin
  trig_attr = 1'b0;
  `ifdef XIL_ATTR_TEST
    attr_test = 1'b1;
  `else
    attr_test = 1'b0;
  `endif
    attr_err = 1'b0;
    #1;
    trig_attr = ~trig_attr;
  end
`endif

`ifdef XIL_XECLIB
  assign AUTO_SLEEP_LATENCY_BIN = AUTO_SLEEP_LATENCY_REG[3:0];

  assign AVG_CONS_INACTIVE_CYCLES_BIN = AVG_CONS_INACTIVE_CYCLES_REG[16:0];

  assign BWE_MODE_A_BIN =
    (BWE_MODE_A_REG == "PARITY_INTERLEAVED") ? BWE_MODE_A_PARITY_INTERLEAVED :
    (BWE_MODE_A_REG == "PARITY_INDEPENDENT") ? BWE_MODE_A_PARITY_INDEPENDENT :
     BWE_MODE_A_PARITY_INTERLEAVED;

  assign BWE_MODE_B_BIN =
    (BWE_MODE_B_REG == "PARITY_INTERLEAVED") ? BWE_MODE_B_PARITY_INTERLEAVED :
    (BWE_MODE_B_REG == "PARITY_INDEPENDENT") ? BWE_MODE_B_PARITY_INDEPENDENT :
     BWE_MODE_B_PARITY_INTERLEAVED;

  assign EN_AUTO_SLEEP_MODE_BIN =
      (EN_AUTO_SLEEP_MODE_REG == "FALSE") ? EN_AUTO_SLEEP_MODE_FALSE :
      (EN_AUTO_SLEEP_MODE_REG == "TRUE") ? EN_AUTO_SLEEP_MODE_TRUE :
       EN_AUTO_SLEEP_MODE_FALSE;
  
  assign EN_ECC_RD_A_BIN =
    (EN_ECC_RD_A_REG == "FALSE") ? EN_ECC_RD_A_FALSE :
    (EN_ECC_RD_A_REG == "TRUE") ? EN_ECC_RD_A_TRUE :
     EN_ECC_RD_A_FALSE;

  assign EN_ECC_RD_B_BIN =
    (EN_ECC_RD_B_REG == "FALSE") ? EN_ECC_RD_B_FALSE :
    (EN_ECC_RD_B_REG == "TRUE") ? EN_ECC_RD_B_TRUE :
     EN_ECC_RD_B_FALSE;

  assign EN_ECC_WR_A_BIN =
    (EN_ECC_WR_A_REG == "FALSE") ? EN_ECC_WR_A_FALSE :
    (EN_ECC_WR_A_REG == "TRUE") ? EN_ECC_WR_A_TRUE :
     EN_ECC_WR_A_FALSE;

  assign EN_ECC_WR_B_BIN =
    (EN_ECC_WR_B_REG == "FALSE") ? EN_ECC_WR_B_FALSE :
    (EN_ECC_WR_B_REG == "TRUE") ? EN_ECC_WR_B_TRUE :
     EN_ECC_WR_B_FALSE;

  assign IREG_PRE_A_BIN =
    (IREG_PRE_A_REG == "FALSE") ? IREG_PRE_A_FALSE :
    (IREG_PRE_A_REG == "TRUE") ? IREG_PRE_A_TRUE :
     IREG_PRE_A_FALSE;

  assign IREG_PRE_B_BIN =
    (IREG_PRE_B_REG == "FALSE") ? IREG_PRE_B_FALSE :
    (IREG_PRE_B_REG == "TRUE") ? IREG_PRE_B_TRUE :
     IREG_PRE_B_FALSE;

  assign OREG_A_BIN =
    (OREG_A_REG == "FALSE") ? OREG_A_FALSE :
    (OREG_A_REG == "TRUE") ? OREG_A_TRUE :
     OREG_A_FALSE;

  assign OREG_B_BIN =
    (OREG_B_REG == "FALSE") ? OREG_B_FALSE :
    (OREG_B_REG == "TRUE") ? OREG_B_TRUE :
     OREG_B_FALSE;

  assign OREG_ECC_A_BIN =
    (OREG_ECC_A_REG == "FALSE") ? OREG_ECC_A_FALSE :
    (OREG_ECC_A_REG == "TRUE") ? OREG_ECC_A_TRUE :
     OREG_ECC_A_FALSE;

  assign OREG_ECC_B_BIN =
    (OREG_ECC_B_REG == "FALSE") ? OREG_ECC_B_FALSE :
    (OREG_ECC_B_REG == "TRUE") ? OREG_ECC_B_TRUE :
     OREG_ECC_B_FALSE;

  assign PR_SAVE_DATA_BIN =
      (PR_SAVE_DATA_REG == "FALSE") ? PR_SAVE_DATA_FALSE :
      (PR_SAVE_DATA_REG == "TRUE") ? PR_SAVE_DATA_TRUE :
       PR_SAVE_DATA_FALSE;

  assign READ_WIDTH_A_BIN = READ_WIDTH_A_REG[6:0];
  
  assign READ_WIDTH_B_BIN = READ_WIDTH_B_REG[6:0];
  
  assign RST_MODE_A_BIN =
    (RST_MODE_A_REG == "SYNC") ? RST_MODE_A_SYNC :
    (RST_MODE_A_REG == "ASYNC") ? RST_MODE_A_ASYNC :
     RST_MODE_A_SYNC;

  assign RST_MODE_B_BIN =
    (RST_MODE_B_REG == "SYNC") ? RST_MODE_B_SYNC :
    (RST_MODE_B_REG == "ASYNC") ? RST_MODE_B_ASYNC :
     RST_MODE_B_SYNC;

  assign USE_EXT_CE_A_BIN =
    (USE_EXT_CE_A_REG == "FALSE") ? USE_EXT_CE_A_FALSE :
    (USE_EXT_CE_A_REG == "TRUE") ? USE_EXT_CE_A_TRUE :
     USE_EXT_CE_A_FALSE;

  assign USE_EXT_CE_B_BIN =
    (USE_EXT_CE_B_REG == "FALSE") ? USE_EXT_CE_B_FALSE :
    (USE_EXT_CE_B_REG == "TRUE") ? USE_EXT_CE_B_TRUE :
     USE_EXT_CE_B_FALSE;

  assign WRITE_WIDTH_A_BIN = WRITE_WIDTH_A_REG[6:0];
  
  assign WRITE_WIDTH_B_BIN = WRITE_WIDTH_B_REG[6:0];
  
`else
  always @ (trig_attr) begin
    #1;
    AUTO_SLEEP_LATENCY_BIN = AUTO_SLEEP_LATENCY_REG[3:0];

    AVG_CONS_INACTIVE_CYCLES_BIN = AVG_CONS_INACTIVE_CYCLES_REG[16:0];

    BWE_MODE_A_BIN =
      (BWE_MODE_A_REG == "PARITY_INTERLEAVED") ? BWE_MODE_A_PARITY_INTERLEAVED :
      (BWE_MODE_A_REG == "PARITY_INDEPENDENT") ? BWE_MODE_A_PARITY_INDEPENDENT :
       BWE_MODE_A_PARITY_INTERLEAVED;

    BWE_MODE_B_BIN =
      (BWE_MODE_B_REG == "PARITY_INTERLEAVED") ? BWE_MODE_B_PARITY_INTERLEAVED :
      (BWE_MODE_B_REG == "PARITY_INDEPENDENT") ? BWE_MODE_B_PARITY_INDEPENDENT :
       BWE_MODE_B_PARITY_INTERLEAVED;

    EN_AUTO_SLEEP_MODE_BIN =
      (EN_AUTO_SLEEP_MODE_REG == "FALSE") ? EN_AUTO_SLEEP_MODE_FALSE :
      (EN_AUTO_SLEEP_MODE_REG == "TRUE") ? EN_AUTO_SLEEP_MODE_TRUE :
       EN_AUTO_SLEEP_MODE_FALSE;
  
    EN_ECC_RD_A_BIN =
      (EN_ECC_RD_A_REG == "FALSE") ? EN_ECC_RD_A_FALSE :
      (EN_ECC_RD_A_REG == "TRUE") ? EN_ECC_RD_A_TRUE :
       EN_ECC_RD_A_FALSE;

    EN_ECC_RD_B_BIN =
      (EN_ECC_RD_B_REG == "FALSE") ? EN_ECC_RD_B_FALSE :
      (EN_ECC_RD_B_REG == "TRUE") ? EN_ECC_RD_B_TRUE :
       EN_ECC_RD_B_FALSE;

    EN_ECC_WR_A_BIN =
      (EN_ECC_WR_A_REG == "FALSE") ? EN_ECC_WR_A_FALSE :
      (EN_ECC_WR_A_REG == "TRUE") ? EN_ECC_WR_A_TRUE :
       EN_ECC_WR_A_FALSE;

    EN_ECC_WR_B_BIN =
      (EN_ECC_WR_B_REG == "FALSE") ? EN_ECC_WR_B_FALSE :
      (EN_ECC_WR_B_REG == "TRUE") ? EN_ECC_WR_B_TRUE :
       EN_ECC_WR_B_FALSE;

    IREG_PRE_A_BIN =
      (IREG_PRE_A_REG == "FALSE") ? IREG_PRE_A_FALSE :
      (IREG_PRE_A_REG == "TRUE") ? IREG_PRE_A_TRUE :
       IREG_PRE_A_FALSE;

    IREG_PRE_B_BIN =
      (IREG_PRE_B_REG == "FALSE") ? IREG_PRE_B_FALSE :
      (IREG_PRE_B_REG == "TRUE") ? IREG_PRE_B_TRUE :
       IREG_PRE_B_FALSE;

    OREG_A_BIN =
      (OREG_A_REG == "FALSE") ? OREG_A_FALSE :
      (OREG_A_REG == "TRUE") ? OREG_A_TRUE :
       OREG_A_FALSE;

    OREG_B_BIN =
      (OREG_B_REG == "FALSE") ? OREG_B_FALSE :
      (OREG_B_REG == "TRUE") ? OREG_B_TRUE :
       OREG_B_FALSE;

    OREG_ECC_A_BIN =
      (OREG_ECC_A_REG == "FALSE") ? OREG_ECC_A_FALSE :
      (OREG_ECC_A_REG == "TRUE") ? OREG_ECC_A_TRUE :
       OREG_ECC_A_FALSE;

    OREG_ECC_B_BIN =
      (OREG_ECC_B_REG == "FALSE") ? OREG_ECC_B_FALSE :
      (OREG_ECC_B_REG == "TRUE") ? OREG_ECC_B_TRUE :
       OREG_ECC_B_FALSE;

    PR_SAVE_DATA_BIN =
      (PR_SAVE_DATA_REG == "FALSE") ? PR_SAVE_DATA_FALSE :
      (PR_SAVE_DATA_REG == "TRUE") ? PR_SAVE_DATA_TRUE :
       PR_SAVE_DATA_FALSE;

    READ_WIDTH_A_BIN = READ_WIDTH_A_REG[6:0];
  
    READ_WIDTH_B_BIN = READ_WIDTH_B_REG[6:0];
  
    RST_MODE_A_BIN =
      (RST_MODE_A_REG == "SYNC") ? RST_MODE_A_SYNC :
      (RST_MODE_A_REG == "ASYNC") ? RST_MODE_A_ASYNC :
       RST_MODE_A_SYNC;

    RST_MODE_B_BIN =
      (RST_MODE_B_REG == "SYNC") ? RST_MODE_B_SYNC :
      (RST_MODE_B_REG == "ASYNC") ? RST_MODE_B_ASYNC :
       RST_MODE_B_SYNC;

    USE_EXT_CE_A_BIN =
      (USE_EXT_CE_A_REG == "FALSE") ? USE_EXT_CE_A_FALSE :
      (USE_EXT_CE_A_REG == "TRUE") ? USE_EXT_CE_A_TRUE :
       USE_EXT_CE_A_FALSE;

    USE_EXT_CE_B_BIN =
      (USE_EXT_CE_B_REG == "FALSE") ? USE_EXT_CE_B_FALSE :
      (USE_EXT_CE_B_REG == "TRUE") ? USE_EXT_CE_B_TRUE :
       USE_EXT_CE_B_FALSE;

    WRITE_WIDTH_A_BIN = WRITE_WIDTH_A_REG[6:0];
  
    WRITE_WIDTH_B_BIN = WRITE_WIDTH_B_REG[6:0];
  
  end
`endif

`ifndef XIL_XECLIB
  always @ (trig_attr) begin
  #1;
    if ((attr_test == 1'b1) ||
        ((AUTO_SLEEP_LATENCY_REG != 8) &&
         (AUTO_SLEEP_LATENCY_REG != 3) &&
         (AUTO_SLEEP_LATENCY_REG != 4) &&
         (AUTO_SLEEP_LATENCY_REG != 5) &&
         (AUTO_SLEEP_LATENCY_REG != 6) &&
         (AUTO_SLEEP_LATENCY_REG != 7) &&
         (AUTO_SLEEP_LATENCY_REG != 9) &&
         (AUTO_SLEEP_LATENCY_REG != 10) &&
         (AUTO_SLEEP_LATENCY_REG != 11) &&
         (AUTO_SLEEP_LATENCY_REG != 12) &&
         (AUTO_SLEEP_LATENCY_REG != 13) &&
         (AUTO_SLEEP_LATENCY_REG != 14) &&
         (AUTO_SLEEP_LATENCY_REG != 15))) begin
      $display("Error: [Unisim %s-101] AUTO_SLEEP_LATENCY attribute is set to %d.  Legal values for this attribute are 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14 or 15. Instance: %m", MODULE_NAME, AUTO_SLEEP_LATENCY_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((AVG_CONS_INACTIVE_CYCLES_REG < 10) || (AVG_CONS_INACTIVE_CYCLES_REG > 100000))) begin
      $display("Error: [Unisim %s-102] AVG_CONS_INACTIVE_CYCLES attribute is set to %d.  Legal values for this attribute are 10 to 100000. Instance: %m", MODULE_NAME, AVG_CONS_INACTIVE_CYCLES_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((BWE_MODE_A_REG != "PARITY_INTERLEAVED") &&
         (BWE_MODE_A_REG != "PARITY_INDEPENDENT"))) begin
      $display("Error: [Unisim %s-103] BWE_MODE_A attribute is set to %s.  Legal values for this attribute are PARITY_INTERLEAVED or PARITY_INDEPENDENT. Instance: %m", MODULE_NAME, BWE_MODE_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((BWE_MODE_B_REG != "PARITY_INTERLEAVED") &&
         (BWE_MODE_B_REG != "PARITY_INDEPENDENT"))) begin
      $display("Error: [Unisim %s-104] BWE_MODE_B attribute is set to %s.  Legal values for this attribute are PARITY_INTERLEAVED or PARITY_INDEPENDENT. Instance: %m", MODULE_NAME, BWE_MODE_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((EN_AUTO_SLEEP_MODE_REG != "FALSE") &&
         (EN_AUTO_SLEEP_MODE_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-105] EN_AUTO_SLEEP_MODE attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, EN_AUTO_SLEEP_MODE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((EN_ECC_RD_A_REG != "FALSE") &&
         (EN_ECC_RD_A_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-106] EN_ECC_RD_A attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, EN_ECC_RD_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((EN_ECC_RD_B_REG != "FALSE") &&
         (EN_ECC_RD_B_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-107] EN_ECC_RD_B attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, EN_ECC_RD_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((EN_ECC_WR_A_REG != "FALSE") &&
         (EN_ECC_WR_A_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-108] EN_ECC_WR_A attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, EN_ECC_WR_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((EN_ECC_WR_B_REG != "FALSE") &&
         (EN_ECC_WR_B_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-109] EN_ECC_WR_B attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, EN_ECC_WR_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((IREG_PRE_A_REG != "FALSE") &&
         (IREG_PRE_A_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1135] IREG_PRE_A attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, IREG_PRE_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((IREG_PRE_B_REG != "FALSE") &&
         (IREG_PRE_B_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1136] IREG_PRE_B attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, IREG_PRE_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((OREG_A_REG != "FALSE") &&
         (OREG_A_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1148] OREG_A attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, OREG_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((OREG_B_REG != "FALSE") &&
         (OREG_B_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1149] OREG_B attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, OREG_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((OREG_ECC_A_REG != "FALSE") &&
         (OREG_ECC_A_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1150] OREG_ECC_A attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, OREG_ECC_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((OREG_ECC_B_REG != "FALSE") &&
         (OREG_ECC_B_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1151] OREG_ECC_B attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, OREG_ECC_B_REG);
      attr_err = 1'b1;
    end

  if ((attr_test == 1'b1) ||
      ((PR_SAVE_DATA_REG != "FALSE") &&
       (PR_SAVE_DATA_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1152] PR_SAVE_DATA attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, PR_SAVE_DATA_REG);
    attr_err = 1'b1;
  end
  
    if ((attr_test == 1'b1) ||
        ((READ_WIDTH_A_REG != 72) &&
         (READ_WIDTH_A_REG != 9) &&
         (READ_WIDTH_A_REG != 18) &&
         (READ_WIDTH_A_REG != 36))) begin
      $display("Error: [Unisim %s-1153] READ_WIDTH_A attribute is set to %d.  Legal values for this attribute are 72, 9, 18 or 36. Instance: %m", MODULE_NAME, READ_WIDTH_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((READ_WIDTH_B_REG != 72) &&
         (READ_WIDTH_B_REG != 9) &&
         (READ_WIDTH_B_REG != 18) &&
         (READ_WIDTH_B_REG != 36))) begin
      $display("Error: [Unisim %s-1154] READ_WIDTH_B attribute is set to %d.  Legal values for this attribute are 72, 9, 18 or 36. Instance: %m", MODULE_NAME, READ_WIDTH_B_REG);
      attr_err = 1'b1;
    end
  
    if ((attr_test == 1'b1) ||
        ((RST_MODE_A_REG != "SYNC") &&
         (RST_MODE_A_REG != "ASYNC"))) begin
      $display("Error: [Unisim %s-1155] RST_MODE_A attribute is set to %s.  Legal values for this attribute are SYNC or ASYNC. Instance: %m", MODULE_NAME, RST_MODE_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((RST_MODE_B_REG != "SYNC") &&
         (RST_MODE_B_REG != "ASYNC"))) begin
      $display("Error: [Unisim %s-1156] RST_MODE_B attribute is set to %s.  Legal values for this attribute are SYNC or ASYNC. Instance: %m", MODULE_NAME, RST_MODE_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((USE_EXT_CE_A_REG != "FALSE") &&
         (USE_EXT_CE_A_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1157] USE_EXT_CE_A attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, USE_EXT_CE_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((USE_EXT_CE_B_REG != "FALSE") &&
         (USE_EXT_CE_B_REG != "TRUE"))) begin
      $display("Error: [Unisim %s-1158] USE_EXT_CE_B attribute is set to %s.  Legal values for this attribute are FALSE or TRUE. Instance: %m", MODULE_NAME, USE_EXT_CE_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((WRITE_WIDTH_A_REG != 72) &&
         (WRITE_WIDTH_A_REG != 9) &&
         (WRITE_WIDTH_A_REG != 18) &&
         (WRITE_WIDTH_A_REG != 36))) begin
      $display("Error: [Unisim %s-1159] WRITE_WIDTH_A attribute is set to %d.  Legal values for this attribute are 72, 9, 18 or 36. Instance: %m", MODULE_NAME, WRITE_WIDTH_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((WRITE_WIDTH_B_REG != 72) &&
         (WRITE_WIDTH_B_REG != 9) &&
         (WRITE_WIDTH_B_REG != 18) &&
         (WRITE_WIDTH_B_REG != 36))) begin
      $display("Error: [Unisim %s-1160] WRITE_WIDTH_B attribute is set to %d.  Legal values for this attribute are 72, 9, 18 or 36. Instance: %m", MODULE_NAME, WRITE_WIDTH_B_REG);
      attr_err = 1'b1;
    end

    if (attr_err == 1'b1) #1 $finish;
  end
`endif

`ifdef XIL_TIMING
  reg notifier;
`endif

// begin behavioral model
// define tasks, functions
  
function [7:0] fn_ecc (
   input encode,
   input [63:0] d_i,
   input [7:0] dp_i
   );
   reg ecc_7;
begin
   fn_ecc[0] = d_i[0]   ^  d_i[1]   ^  d_i[3]   ^  d_i[4]   ^  d_i[6]   ^
               d_i[8]   ^  d_i[10]  ^  d_i[11]  ^  d_i[13]  ^  d_i[15]  ^
               d_i[17]  ^  d_i[19]  ^  d_i[21]  ^  d_i[23]  ^  d_i[25]  ^
               d_i[26]  ^  d_i[28]  ^  d_i[30]  ^  d_i[32]  ^  d_i[34]  ^
               d_i[36]  ^  d_i[38]  ^  d_i[40]  ^  d_i[42]  ^  d_i[44]  ^
               d_i[46]  ^  d_i[48]  ^  d_i[50]  ^  d_i[52]  ^  d_i[54]  ^
               d_i[56]  ^  d_i[57]  ^  d_i[59]  ^  d_i[61]  ^  d_i[63];

   fn_ecc[1] = d_i[0]   ^  d_i[2]   ^  d_i[3]   ^  d_i[5]   ^  d_i[6]   ^
               d_i[9]   ^  d_i[10]  ^  d_i[12]  ^  d_i[13]  ^  d_i[16]  ^
               d_i[17]  ^  d_i[20]  ^  d_i[21]  ^  d_i[24]  ^  d_i[25]  ^
               d_i[27]  ^  d_i[28]  ^  d_i[31]  ^  d_i[32]  ^  d_i[35]  ^
               d_i[36]  ^  d_i[39]  ^  d_i[40]  ^  d_i[43]  ^  d_i[44]  ^
               d_i[47]  ^  d_i[48]  ^  d_i[51]  ^  d_i[52]  ^  d_i[55]  ^
               d_i[56]  ^  d_i[58]  ^  d_i[59]  ^  d_i[62]  ^  d_i[63];

   fn_ecc[2] = d_i[1]   ^  d_i[2]   ^  d_i[3]   ^  d_i[7]   ^  d_i[8]   ^
               d_i[9]   ^  d_i[10]  ^  d_i[14]  ^  d_i[15]  ^  d_i[16]  ^
               d_i[17]  ^  d_i[22]  ^  d_i[23]  ^  d_i[24]  ^  d_i[25]  ^
               d_i[29]  ^  d_i[30]  ^  d_i[31]  ^  d_i[32]  ^  d_i[37]  ^
               d_i[38]  ^  d_i[39]  ^  d_i[40]  ^  d_i[45]  ^  d_i[46]  ^
               d_i[47]  ^  d_i[48]  ^  d_i[53]  ^  d_i[54]  ^  d_i[55]  ^
               d_i[56]  ^  d_i[60]  ^  d_i[61]  ^  d_i[62]  ^  d_i[63];

   fn_ecc[3] = d_i[4]   ^  d_i[5]   ^  d_i[6]   ^  d_i[7]   ^  d_i[8]   ^
               d_i[9]   ^  d_i[10]  ^  d_i[18]  ^  d_i[19]  ^  d_i[20]  ^
               d_i[21]  ^  d_i[22]  ^  d_i[23]  ^  d_i[24]  ^  d_i[25]  ^
               d_i[33]  ^  d_i[34]  ^  d_i[35]  ^  d_i[36]  ^  d_i[37]  ^
               d_i[38]  ^  d_i[39]  ^  d_i[40]  ^  d_i[49]  ^  d_i[50]  ^
               d_i[51]  ^  d_i[52]  ^  d_i[53]  ^  d_i[54]  ^  d_i[55]  ^
               d_i[56];

   fn_ecc[4] = d_i[11]  ^  d_i[12]  ^  d_i[13]  ^  d_i[14]  ^  d_i[15]  ^
               d_i[16]  ^  d_i[17]  ^  d_i[18]  ^  d_i[19]  ^  d_i[20]  ^
               d_i[21]  ^  d_i[22]  ^  d_i[23]  ^  d_i[24]  ^  d_i[25]  ^
               d_i[41]  ^  d_i[42]  ^  d_i[43]  ^  d_i[44]  ^  d_i[45]  ^
               d_i[46]  ^  d_i[47]  ^  d_i[48]  ^  d_i[49]  ^  d_i[50]  ^
               d_i[51]  ^  d_i[52]  ^  d_i[53]  ^  d_i[54]  ^  d_i[55]  ^
               d_i[56];

   fn_ecc[5] = d_i[26]  ^  d_i[27]  ^  d_i[28]  ^  d_i[29]  ^  d_i[30]  ^
               d_i[31]  ^  d_i[32]  ^  d_i[33]  ^  d_i[34]  ^  d_i[35]  ^
               d_i[36]  ^  d_i[37]  ^  d_i[38]  ^  d_i[39]  ^  d_i[40]  ^
               d_i[41]  ^  d_i[42]  ^  d_i[43]  ^  d_i[44]  ^  d_i[45]  ^
               d_i[46]  ^  d_i[47]  ^  d_i[48]  ^  d_i[49]  ^  d_i[50]  ^
               d_i[51]  ^  d_i[52]  ^  d_i[53]  ^  d_i[54]  ^  d_i[55]  ^
               d_i[56];

   fn_ecc[6] = d_i[57]  ^  d_i[58]  ^  d_i[59]  ^  d_i[60]  ^  d_i[61]  ^
               d_i[62]  ^  d_i[63];

   ecc_7 = d_i[0]   ^  d_i[1]   ^  d_i[2]   ^  d_i[3]   ^ d_i[4]   ^
           d_i[5]   ^  d_i[6]   ^  d_i[7]   ^  d_i[8]   ^ d_i[9]   ^
           d_i[10]  ^  d_i[11]  ^  d_i[12]  ^  d_i[13]  ^ d_i[14]  ^
           d_i[15]  ^  d_i[16]  ^  d_i[17]  ^  d_i[18]  ^ d_i[19]  ^
           d_i[20]  ^  d_i[21]  ^  d_i[22]  ^  d_i[23]  ^ d_i[24]  ^
           d_i[25]  ^  d_i[26]  ^  d_i[27]  ^  d_i[28]  ^ d_i[29]  ^
           d_i[30]  ^  d_i[31]  ^  d_i[32]  ^  d_i[33]  ^ d_i[34]  ^
           d_i[35]  ^  d_i[36]  ^  d_i[37]  ^  d_i[38]  ^ d_i[39]  ^
           d_i[40]  ^  d_i[41]  ^  d_i[42]  ^  d_i[43]  ^ d_i[44]  ^
           d_i[45]  ^  d_i[46]  ^  d_i[47]  ^  d_i[48]  ^ d_i[49]  ^
           d_i[50]  ^  d_i[51]  ^  d_i[52]  ^  d_i[53]  ^ d_i[54]  ^
           d_i[55]  ^  d_i[56]  ^  d_i[57]  ^  d_i[58]  ^ d_i[59]  ^
           d_i[60]  ^  d_i[61]  ^  d_i[62]  ^  d_i[63];

   if (encode) begin
      fn_ecc[7] = ecc_7 ^
                  fn_ecc[0] ^ fn_ecc[1] ^ fn_ecc[2] ^ fn_ecc[3] ^
                  fn_ecc[4] ^ fn_ecc[5] ^ fn_ecc[6];
      end
   else begin
      fn_ecc[7] = ecc_7 ^
                  dp_i[0] ^ dp_i[1] ^ dp_i[2] ^ dp_i[3] ^
                  dp_i[4] ^ dp_i[5] ^ dp_i[6];
      end
end
endfunction // fn_ecc

function [71:0] fn_cor_bit (
   input [6:0] error_bit,
   input [63:0] d_i,
   input [7:0] dp_i
   );
   reg [71:0] cor_int;
begin
   cor_int = {d_i[63:57], dp_i[6], d_i[56:26], dp_i[5], d_i[25:11], dp_i[4],
              d_i[10:4], dp_i[3], d_i[3:1], dp_i[2], d_i[0], dp_i[1:0],
              dp_i[7]};
   cor_int[error_bit] = ~cor_int[error_bit];
   fn_cor_bit = {cor_int[0], cor_int[64], cor_int[32], cor_int[16],
                 cor_int[8], cor_int[4], cor_int[2:1], cor_int[71:65],
                 cor_int[63:33], cor_int[31:17], cor_int[15:9],
                 cor_int[7:5], cor_int[3]};
end
endfunction // fn_cor_bit

`ifndef XIL_XECLIB
  always @ (trig_attr) begin
  #1;
    if ((attr_test == 1'b1) ||
        ((BWE_MODE_A_REG != "PARITY_INTERLEAVED") &&
         (WRITE_WIDTH_A_REG != 72))) begin
      $display("Error: [Unisim %s-3] BWE_MODE_A attribute is set to %s and WRITE_WIDTH_A attribute is set to %d. BWE_MODE_A must be set to \"PARITY_INTERLEAVED\" when WRITE_WIDTH_A is not equal to 72. Instance: %m", MODULE_NAME, BWE_MODE_A_REG, WRITE_WIDTH_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((BWE_MODE_B_REG != "PARITY_INTERLEAVED") &&
         (WRITE_WIDTH_B_REG != 72))) begin
      $display("Error: [Unisim %s-4] BWE_MODE_B attribute is set to %s and WRITE_WIDTH_B attribute is set to %d. BWE_MODE_B must be set to \"PARITY_INTERLEAVED\" when WRITE_WIDTH_B is not equal to 72. Instance: %m", MODULE_NAME, BWE_MODE_B_REG, WRITE_WIDTH_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((EN_ECC_WR_A_REG == "TRUE") &&
         (WRITE_WIDTH_A_REG != 72))) begin
      $display("Error: [Unisim %s-5] EN_ECC_WR_A attribute is set to %s and WRITE_WIDTH_A attribute is set to %d. EN_ECC_WR_A can only be set to \"TRUE\" when WRITE_WIDTH_A is equal to 72. Instance: %m", MODULE_NAME, EN_ECC_WR_A_REG, WRITE_WIDTH_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((EN_ECC_RD_A_REG == "TRUE") &&
         (READ_WIDTH_A_REG != 72))) begin
      $display("Error: [Unisim %s-6] EN_ECC_RD_A attribute is set to %s and READ_WIDTH_A attribute is set to %d. EN_ECC_RD_A can only be set to \"TRUE\" when READ_WIDTH_A is equal to 72. Instance: %m", MODULE_NAME, EN_ECC_RD_A_REG, READ_WIDTH_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((EN_ECC_WR_B_REG == "TRUE") &&
         (WRITE_WIDTH_B_REG != 72))) begin
      $display("Error: [Unisim %s-7] EN_ECC_WR_B attribute is set to %s and WRITE_WIDTH_B attribute is set to %d. EN_ECC_WR_B can only be set to \"TRUE\" when WRITE_WIDTH_B is equal to 72. Instance: %m", MODULE_NAME, EN_ECC_WR_B_REG, WRITE_WIDTH_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
        ((EN_ECC_RD_B_REG == "TRUE") &&
         (READ_WIDTH_B_REG != 72))) begin
      $display("Error: [Unisim %s-8] EN_ECC_RD_B attribute is set to %s and READ_WIDTH_B attribute is set to %d. EN_ECC_RD_B can only be set to \"TRUE\" when READ_WIDTH_B is equal to 72. Instance: %m", MODULE_NAME, EN_ECC_RD_B_REG, READ_WIDTH_B_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
       ((EN_AUTO_SLEEP_MODE_REG == "TRUE") && 
        (USE_EXT_CE_A_REG == "TRUE"))) begin
       $display("Error: [Unisim %s-19] EN_AUTO_SLEEP_MODE attribute is set to %s and USE_EXT_CE_A is set to %s. External OREG CE cannot be used when AUTO_SLEEP_MODE is enabled. Instance: %m", MODULE_NAME, EN_AUTO_SLEEP_MODE_REG, USE_EXT_CE_A_REG);
      attr_err = 1'b1;
    end

    if ((attr_test == 1'b1) ||
       ((EN_AUTO_SLEEP_MODE_REG == "TRUE") && 
        (USE_EXT_CE_B_REG == "TRUE"))) begin
       $display("Error: [Unisim %s-20] EN_AUTO_SLEEP_MODE attribute is set to %s and USE_EXT_CE_B is set to %s. External OREG CE cannot be used when AUTO_SLEEP_MODE is enabled. Instance: %m", MODULE_NAME, EN_AUTO_SLEEP_MODE_REG, USE_EXT_CE_B_REG);
      attr_err = 1'b1;
    end

    if (attr_err == 1'b1) #1 $finish;

  end
`endif

  localparam mem_width = 4 * 72;
  localparam mem_depth = 1024;
  localparam encode = 1'b1;
  localparam decode = 1'b0;
  localparam [25:0] ADDR_INIT = 26'b0;
  localparam [8:0] BWE_INIT = 9'b0;
  localparam [mem_width/4-1:0] D_INIT = {mem_width/4{1'b0}};
  localparam [mem_width/4-1:0] D_UNDEF = {mem_width/4{1'bx}};

  localparam mem_size = 294912;
  localparam memp_width = 8;
  localparam memp_depth = mem_size/8; // =36864 

  localparam tmp_mem_width = (READ_WIDTH_A >= READ_WIDTH_B) ? READ_WIDTH_A : READ_WIDTH_B;
  localparam tmp_memp_width = (tmp_mem_width <  9) ? 0 :
                              (tmp_mem_width < 18) ? 1 :
                              (tmp_mem_width < 36) ? 2 :
                              (tmp_mem_width < 72) ? 4 : 8;
  localparam tmp_mem_depth = mem_size/(tmp_mem_width-tmp_memp_width);

  typedef union packed {
    logic [255:0]     line;
    logic [3:0] [63:0] D72;
    logic [7:0] [31:0] D36;
    logic [15:0] [15:0] D18;
    logic [31:0] [7:0] D9;
  } mem_union;

  typedef union packed {
    logic [31:0]     line;
    logic [3:0] [7:0] D72;
    logic [7:0] [3:0] D36;
    logic [15:0] [1:0] D18;
    logic [31:0] [0:0] D9;
  } memp_union;

  mem_union mem_line;
  memp_union memp_line;

  reg[71:0] mem_cont_72;
  reg[35:0] mem_cont_36;
  reg[17:0] mem_cont_18;
  reg[8:0]  mem_cont_9;

  reg [mem_width-1 : 0 ]  mem      [0 : mem_depth-1];
  reg [memp_width-1 : 0 ]  memp      [0 : memp_depth-1];



task read_init_file;
begin
reg [tmp_mem_width-1:0] tmp_mem [0:tmp_mem_depth-1];
reg [tmp_mem_width-1:0] tmp_mem_tmp;
integer w,d,rama,ramb,rampb;
  $readmemh (INIT_FILE, tmp_mem);
  for (d=0;d<tmp_mem_depth;d=d+1) begin
    tmp_mem_tmp = tmp_mem[d];
    rama=d*tmp_mem_width/288;
    for (w=0;w<tmp_mem_width-tmp_memp_width;w=w+1) begin
      ramb=(d*(tmp_mem_width-tmp_memp_width))+w-rama*256;
      mem[rama][ramb] = tmp_mem_tmp[w];
    end
    if (tmp_memp_width > 0) begin
      for (w=0;w<tmp_memp_width;w=w+1) begin
        rampb=(256+(d*tmp_memp_width)+w)-rama*32;
        mem[rama][rampb] = tmp_mem_tmp[w+tmp_mem_width-tmp_memp_width];
      end
    end
  end
end
endtask

  integer wa;
  reg [14:0] ram_addr_a;
  reg [14:0] ram_addr_b;
  reg ram_ce_a;
  reg ram_ce_b;
  reg DEEPSLEEP_in = 1'b0;
  reg SHUTDOWN_in = 1'b0;
  reg ram_ce_a_int=0;
  reg ram_ce_b_int=0;
  reg ram_ce_a_pre=0;
  reg ram_ce_b_pre=0;
  reg [15:1] ram_ce_a_fifo;
  reg [15:1] ram_ce_b_fifo;
  reg [71:0] ram_bwe_a;
  reg [71:0] ram_bwe_b;
  reg ram_we_a;
  reg ram_we_b;
  reg ram_we_a_event = 1'b0;
  reg ram_we_b_event = 1'b0;
  reg [71:0] ram_data_a;
  reg [71:0] ram_data_b;

// input register stages
// decisions simulate faster than assignments - wider muxes, less busses
  reg [25:0] ADDR_A_reg;
  reg [25:0] ADDR_B_reg;
  reg [8:0] BWE_A_reg;
  reg [8:0] BWE_B_reg;
  reg [71:0] DIN_A_reg;
  reg [71:0] DIN_B_reg;
  reg EN_A_reg;
  reg EN_B_reg;
  reg INJECT_DBITERR_A_reg;
  reg INJECT_DBITERR_B_reg;
  reg INJECT_SBITERR_A_reg;
  reg INJECT_SBITERR_B_reg;
  reg RDB_WR_A_reg;
  reg RDB_WR_B_reg;
  reg [25:0] ADDR_A_int;
  reg [25:0] ADDR_B_int;
  reg [8:0] BWE_A_int;
  reg [8:0] BWE_B_int;
  reg [71:0] DIN_A_int;
  reg [71:0] DIN_B_int;
  reg EN_A_int;
  reg EN_B_int;
  reg INJECT_DBITERR_A_int;
  reg INJECT_DBITERR_B_int;
  reg INJECT_SBITERR_A_int;
  reg INJECT_SBITERR_B_int;
  reg RDB_WR_A_int;
  reg RDB_WR_B_int;

  reg RST_A_async = 1'b0;
  reg RST_B_async = 1'b0;
  reg RST_A_sync = 1'b0;
  reg RST_B_sync = 1'b0;

  integer wake_count;
  wire auto_sleep;
  reg shut_down;
  reg a_sleep;
  reg auto_sleep_A;
  reg auto_sleep_B;
  wire auto_wake_up_A;
  wire auto_wake_up_B;

  reg DBITERR_A_out;
  reg DBITERR_B_out;
  reg SBITERR_A_out;
  reg SBITERR_B_out;
  reg [71:0] DOUT_A_out;
  reg [71:0] DOUT_B_out;

  assign DBITERR_A = DBITERR_A_out;
  assign DBITERR_B = DBITERR_B_out;
  assign DOUT_A = DOUT_A_out;
  assign DOUT_B = DOUT_B_out;
  assign SBITERR_A = SBITERR_A_out;
  assign SBITERR_B = SBITERR_B_out;

`ifndef XIL_XECLIB
  reg INIT_RAM = 1'b0;
  initial begin
    #100; INIT_RAM = 1'b1;
  end
`endif

  always @ (*) begin
    if (RST_MODE_A_BIN == RST_MODE_A_ASYNC) begin
      RST_A_async = RST_A_in;
    end
  end

  always @ (*) begin
    if (RST_MODE_B_BIN == RST_MODE_B_ASYNC) begin
      RST_B_async = RST_B_in;
    end
  end

  always @ (posedge CLK_in) begin
    if ((RST_MODE_A_BIN == RST_MODE_A_SYNC) && (RST_A_sync !== RST_A_in))
      RST_A_sync <= RST_A_in;
    if ((RST_MODE_B_BIN == RST_MODE_B_SYNC) && (RST_B_sync !== RST_B_in))
      RST_B_sync <= RST_B_in;
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || 
       (IREG_PRE_A_BIN == IREG_PRE_A_FALSE)) begin
      ADDR_A_reg <= ADDR_INIT;
      EN_A_reg <= 1'b0;
      RDB_WR_A_reg <= 1'b0;
      BWE_A_reg <= BWE_INIT;
      DIN_A_reg <= D_INIT;
      INJECT_DBITERR_A_reg <= 1'b0;
      INJECT_SBITERR_A_reg <= 1'b0;
    end else begin
      EN_A_reg <= EN_A_in;
      if (EN_A_in) begin
        ADDR_A_reg[25:15] <= ADDR_A_in[25:15];
      end
      if ((EN_A_in && (EN_AUTO_SLEEP_MODE_BIN == EN_AUTO_SLEEP_MODE_FALSE)) ||
          ram_ce_a_fifo[1]) begin
        ADDR_A_reg[14:0] <= ADDR_A_in[14:0];
        BWE_A_reg <= BWE_A_in;
        DIN_A_reg <= DIN_A_in;
        INJECT_DBITERR_A_reg <= INJECT_DBITERR_A_in;
        INJECT_SBITERR_A_reg <= INJECT_SBITERR_A_in;
        RDB_WR_A_reg <= RDB_WR_A_in;
      end
    end
  end

  always @ (*) begin
    if (IREG_PRE_A_BIN == IREG_PRE_A_TRUE) begin
      ADDR_A_int = ADDR_A_reg;
    end else begin
      ADDR_A_int = ADDR_A_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_A_BIN == IREG_PRE_A_TRUE) begin
      BWE_A_int = BWE_A_reg;
    end else begin
      BWE_A_int = BWE_A_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_A_BIN == IREG_PRE_A_TRUE) begin
      DIN_A_int = DIN_A_reg;
    end else begin
      DIN_A_int = DIN_A_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_A_BIN == IREG_PRE_A_TRUE) begin
      EN_A_int = EN_A_reg;
    end else begin
      EN_A_int = EN_A_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_A_BIN == IREG_PRE_A_TRUE) begin
      INJECT_DBITERR_A_int = INJECT_DBITERR_A_reg;
    end else begin
      INJECT_DBITERR_A_int = INJECT_DBITERR_A_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_A_BIN == IREG_PRE_A_TRUE) begin
      INJECT_SBITERR_A_int = INJECT_SBITERR_A_reg;
    end else begin
      INJECT_SBITERR_A_int = INJECT_SBITERR_A_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_A_BIN == IREG_PRE_A_TRUE) begin
      RDB_WR_A_int = RDB_WR_A_reg;
    end else begin
      RDB_WR_A_int = RDB_WR_A_in;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || 
       (IREG_PRE_B_BIN == IREG_PRE_B_FALSE)) begin
      ADDR_B_reg <= ADDR_INIT;
      EN_B_reg <= 1'b0;
      RDB_WR_B_reg <= 1'b0;
      BWE_B_reg <= BWE_INIT;
      DIN_B_reg <= D_INIT;
      INJECT_DBITERR_B_reg <= 1'b0;
      INJECT_SBITERR_B_reg <= 1'b0;
    end else begin
      EN_B_reg <= EN_B_in;
      if (EN_B_in) begin
        ADDR_B_reg[25:15] <= ADDR_B_in[25:15];
      end
      if ((EN_B_in && (EN_AUTO_SLEEP_MODE_BIN == EN_AUTO_SLEEP_MODE_FALSE)) ||
          ram_ce_b_fifo[1]) begin
        ADDR_B_reg[14:0] <= ADDR_B_in[14:0];
        BWE_B_reg <= BWE_B_in;
        DIN_B_reg <= DIN_B_in;
        INJECT_DBITERR_B_reg <= INJECT_DBITERR_B_in;
        INJECT_SBITERR_B_reg <= INJECT_SBITERR_B_in;
        RDB_WR_B_reg <= RDB_WR_B_in;
      end
    end
  end

  always @ (*) begin
    if (IREG_PRE_B_BIN == IREG_PRE_B_TRUE) begin
      ADDR_B_int = ADDR_B_reg;
    end else begin
      ADDR_B_int = ADDR_B_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_B_BIN == IREG_PRE_B_TRUE) begin
      BWE_B_int = BWE_B_reg;
    end else begin
      BWE_B_int = BWE_B_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_B_BIN == IREG_PRE_B_TRUE) begin
      DIN_B_int = DIN_B_reg;
    end else begin
      DIN_B_int = DIN_B_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_B_BIN == IREG_PRE_B_TRUE) begin
      EN_B_int = EN_B_reg;
    end else begin
      EN_B_int = EN_B_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_B_BIN == IREG_PRE_B_TRUE) begin
      INJECT_DBITERR_B_int = INJECT_DBITERR_B_reg;
    end else begin
      INJECT_DBITERR_B_int = INJECT_DBITERR_B_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_B_BIN == IREG_PRE_B_TRUE) begin
      INJECT_SBITERR_B_int = INJECT_SBITERR_B_reg;
    end else begin
      INJECT_SBITERR_B_int = INJECT_SBITERR_B_in;
    end
  end

  always @ (*) begin
    if (IREG_PRE_B_BIN == IREG_PRE_B_TRUE) begin
      RDB_WR_B_int = RDB_WR_B_reg;
    end else begin
      RDB_WR_B_int = RDB_WR_B_in;
    end
  end

  reg [71:0] ram_data_a_lat;
  reg [71:0] ram_data_a_out;
//  reg [71:0] ram_data_a_hold=D_INIT;
  reg [71:0] ram_data_a_reg;
  reg [71:0] ram_data_a_ecc=72'h000000000000000000;
  reg [71:0] ram_data_b_lat;
  reg [71:0] ram_data_b_out;
  reg [71:0] ram_data_b_reg;
  reg [71:0] ram_data_b_ecc=72'h000000000000000000;
  reg RDACCESS_A_lat;
//  reg RDACCESS_A_hold;
  reg RDACCESS_B_lat;
  reg RDACCESS_A_int;
  reg RDACCESS_B_int;
  reg SBITERR_A_ecc=1'b0;
  reg DBITERR_A_ecc=1'b0;
  reg SBITERR_B_ecc=1'b0;
  reg DBITERR_B_ecc=1'b0;

  reg DBITERR_A_reg;
  reg DBITERR_B_reg;
  reg [71:0] DOUT_A_reg;
  reg [71:0] DOUT_B_reg;
  reg RDACCESS_A_reg;
  reg RDACCESS_B_reg;
  reg SBITERR_A_reg;
  reg SBITERR_B_reg;

  reg RDACCESS_A_ecc_reg;
  reg RDACCESS_B_ecc_reg;

  reg data_A_enable = 1'b0;
  reg data_B_enable = 1'b0;

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_A_async) begin
    if (RST_A_async || RST_A_in || glblGSR ||
`else
  always @ (posedge CLK_in or posedge RST_A_async or glblGSR) begin
    if (RST_A_in || glblGSR ||
`endif
        a_sleep || shut_down || SHUTDOWN_in) begin
      RDACCESS_A_int = 1'b0;
    end else begin
      if (OREG_ECC_A_BIN == OREG_ECC_A_TRUE) begin
        if ((USE_EXT_CE_A_BIN == USE_EXT_CE_A_FALSE) || OREG_ECC_CE_A_in) begin
          RDACCESS_A_int = RDACCESS_A_ecc_reg;
        end else begin
          RDACCESS_A_int = 1'b0;
        end
      end else if (OREG_A_BIN == OREG_A_TRUE) begin
        if ((USE_EXT_CE_A_BIN == USE_EXT_CE_A_FALSE) || OREG_CE_A_in) begin
          RDACCESS_A_int = RDACCESS_A_reg && ~SLEEP_in;
        end else begin
          RDACCESS_A_int = 1'b0;
        end
      end else begin
          RDACCESS_A_int = RDACCESS_A_lat;
      end
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_B_async) begin
    if (RST_B_async || RST_B_in || glblGSR ||
`else
  always @ (posedge CLK_in or posedge RST_B_async or glblGSR) begin
    if (RST_B_in || glblGSR ||
`endif
        a_sleep || shut_down || SHUTDOWN_in) begin
      RDACCESS_B_int = 1'b0;
    end else begin
      if (OREG_ECC_B_BIN == OREG_ECC_B_TRUE) begin
        if ((USE_EXT_CE_B_BIN == USE_EXT_CE_B_FALSE) || OREG_ECC_CE_B_in) begin
          RDACCESS_B_int = RDACCESS_B_ecc_reg;
        end else begin
          RDACCESS_B_int = 1'b0;
        end
      end else if (OREG_B_BIN == OREG_B_TRUE) begin
        if ((USE_EXT_CE_B_BIN == USE_EXT_CE_B_FALSE) || OREG_CE_B_in) begin
          RDACCESS_B_int = RDACCESS_B_reg && ~SLEEP_in;
        end else begin
          RDACCESS_B_int = 1'b0;
        end
      end else begin
          RDACCESS_B_int = RDACCESS_B_lat;
      end
    end
  end

  always @ (*) begin
    if (RST_A_async || RST_A_sync || shut_down || glblGSR) begin
      DBITERR_A_out = 1'b0;
      SBITERR_A_out = 1'b0;
    end else if (OREG_ECC_A_BIN == OREG_ECC_A_TRUE) begin
      DBITERR_A_out = DBITERR_A_reg;
      SBITERR_A_out = SBITERR_A_reg;
    end else if (EN_ECC_RD_A_BIN == EN_ECC_RD_A_TRUE) begin
      DBITERR_A_out = DBITERR_A_ecc;
      SBITERR_A_out = SBITERR_A_ecc;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_A_async) begin
    if (RST_A_async || RST_A_in || auto_sleep || a_sleep || shut_down || SHUTDOWN_in || glblGSR) begin
`else
  always @ (posedge CLK_in or posedge RST_A_async or glblGSR) begin
    if (RST_A_in || auto_sleep || a_sleep || shut_down || SHUTDOWN_in || glblGSR) begin
`endif
      data_A_enable <= 1'b0;
    end else if ((OREG_A_BIN == OREG_A_TRUE) && ram_ce_a && ~ram_we_a) begin
      data_A_enable <= 1'b1;
    end else if ((OREG_A_BIN == OREG_A_FALSE) && ram_ce_a_int && ~RDB_WR_A_int) begin
      data_A_enable <= 1'b1;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_B_async) begin
    if (RST_B_async || RST_B_in || auto_sleep || a_sleep || shut_down || SHUTDOWN_in || glblGSR) begin
`else
  always @ (posedge CLK_in or posedge RST_B_async or glblGSR) begin
    if (RST_B_in || auto_sleep || a_sleep || shut_down || SHUTDOWN_in || glblGSR) begin
`endif
      data_B_enable <= 1'b0;
    end else if ((OREG_B_BIN == OREG_B_TRUE) && ram_ce_b && ~ram_we_b) begin
      data_B_enable <= 1'b1;
    end else if ((OREG_B_BIN == OREG_B_FALSE) && ram_ce_b_int && ~RDB_WR_B_int) begin
      data_B_enable <= 1'b1;
    end
  end

  always @ (posedge CLK_in) begin
    if (ram_ce_a && ~ram_we_a && SLEEP_in && ~a_sleep && (OREG_A_BIN == OREG_A_TRUE)) begin
      $display("Warning: [Unisim %s-3] At time (%.3f) ns: Port A READ access at ADDR (%h) just prior to SLEEP with SLEEP asserted and OREG_A attribute set to (%s) will result in READ data getting lost and RDACCESS_A will not be asserted. Instance: %m", MODULE_NAME, $time/1000.0, ram_addr_a, OREG_A_REG);
    end else if (ram_ce_a && ram_we_a && SLEEP_in && ~a_sleep) begin
      $display("Warning: [Unisim %s-4] At time (%.3f) ns: Port A WRITE access at ADDR (%h) just prior to SLEEP with SLEEP asserted will result in WRITE data getting ignored. Instance: %m", MODULE_NAME, $time/1000.0, ram_addr_a);
    end else if (ram_ce_a_pre && a_sleep && SLEEP_in) begin
      $display("Warning: [Unisim %s-5] At time (%.3f) ns: Port A access at ADDR (%h) during SLEEP will be ignored. Instance: %m", MODULE_NAME, $time/1000.0, ram_addr_a);
    end else if (ram_ce_a_pre && a_sleep && ~SLEEP_in) begin
      $display("Warning: [Unisim %s-6] At time (%.3f) ns: Port A access at ADDR (%h) during WAKEUP time will be ignored. Instance: %m", MODULE_NAME, $time/1000.0, ram_addr_a);
    end
  end

  always @ (posedge CLK_in) begin
    if (ram_ce_b && ~ram_we_b && SLEEP_in && ~a_sleep && (OREG_B_BIN == OREG_B_TRUE)) begin
      $display("Warning: [Unisim %s-7] At time (%.3f) ns: Port B READ access at ADDR (%h) just prior to SLEEP with SLEEP asserted and OREG_B attribute set to (%s) will result in READ data getting lost and RDACCESS_B will not be asserted. Instance: %m", MODULE_NAME, $time/1000.0, ram_addr_b, OREG_B_REG);
    end else if (ram_ce_b && ram_we_b && SLEEP_in && ~a_sleep) begin
      $display("Warning: [Unisim %s-8] At time (%.3f) ns: Port B WRITE access at ADDR (%h) just prior to SLEEP with SLEEP asserted will result in WRITE data getting ignored. Instance: %m", MODULE_NAME, $time/1000.0, ram_addr_b);
    end else if (ram_ce_b_pre && a_sleep && SLEEP_in) begin
      $display("Warning: [Unisim %s-9] At time (%.3f) ns: Port B access at ADDR (%h) during SLEEP will be ignored. Instance: %m", MODULE_NAME, $time/1000.0, ram_addr_b);
    end else if (ram_ce_b_pre && a_sleep && ~SLEEP_in) begin
      $display("Warning: [Unisim %s-10] At time (%.3f) ns: Port B access at ADDR (%h) during WAKEUP time will be ignored. Instance: %m", MODULE_NAME, $time/1000.0, ram_addr_b);
    end
  end

//vc DOUT_A_out

  always @ (*) begin
    if (RST_A_async || RST_A_sync || glblGSR) begin
      DOUT_A_out = D_INIT;
    end else if (OREG_ECC_A_BIN == OREG_ECC_A_TRUE) begin
      DOUT_A_out = DOUT_A_reg;
    end else if (EN_ECC_RD_A_BIN == EN_ECC_RD_A_TRUE) begin
      DOUT_A_out = ram_data_a_ecc;
    end else if (data_A_enable) begin
      if (OREG_A_BIN == OREG_A_TRUE) begin
        DOUT_A_out = ram_data_a_reg;
      end else begin
        DOUT_A_out = ram_data_a_lat;
      end
    end else begin
      DOUT_A_out = D_INIT;
    end
  end

  always @ (*) begin
    if (RST_B_async || RST_B_sync || shut_down || glblGSR) begin
      DBITERR_B_out = 1'b0;
      SBITERR_B_out = 1'b0;
    end else if (OREG_ECC_B_BIN == OREG_ECC_B_TRUE) begin
      DBITERR_B_out = DBITERR_B_reg;
      SBITERR_B_out = SBITERR_B_reg;
    end else if (EN_ECC_RD_B_BIN == EN_ECC_RD_B_TRUE) begin
      DBITERR_B_out = DBITERR_B_ecc;
      SBITERR_B_out = SBITERR_B_ecc;
    end
  end

//vc DOUT_B_out

  always @ (*) begin
    if (RST_B_async || RST_B_sync || glblGSR) begin
      DOUT_B_out = D_INIT;
    end else if (OREG_ECC_B_BIN == OREG_ECC_B_TRUE) begin
      DOUT_B_out = DOUT_B_reg;
    end else if (EN_ECC_RD_B_BIN == EN_ECC_RD_B_TRUE) begin
      DOUT_B_out = ram_data_b_ecc;
    end else if (data_B_enable) begin
      if (OREG_B_BIN == OREG_B_TRUE) begin
        DOUT_B_out = ram_data_b_reg;
      end else begin
        DOUT_B_out = ram_data_b_lat;
      end
    end else begin
      DOUT_B_out = D_INIT;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_A_async) begin
    if (RST_A_async || RST_A_in || glblGSR || (OREG_ECC_A_BIN == OREG_ECC_A_FALSE)) begin
`else
  always @ (posedge CLK_in or posedge RST_A_async or glblGSR) begin
    if (RST_A_in || glblGSR || (OREG_ECC_A_BIN == OREG_ECC_A_FALSE)) begin
`endif
      DBITERR_A_reg <= 1'b0;
      SBITERR_A_reg <= 1'b0;
    end else if ((~a_sleep && ~shut_down && data_A_enable) && 
                 (((OREG_A_BIN == OREG_A_TRUE) && (RDACCESS_A_reg || RDACCESS_A_ecc_reg)) ||
                  ((OREG_A_BIN == OREG_A_FALSE) && (RDACCESS_A_lat || RDACCESS_A_ecc_reg)))) begin
      if (EN_ECC_RD_A_BIN == EN_ECC_RD_A_TRUE) begin
        if ((USE_EXT_CE_A_BIN == USE_EXT_CE_A_FALSE) || OREG_ECC_CE_A_in) begin
          DBITERR_A_reg <= DBITERR_A_ecc;
          SBITERR_A_reg <= SBITERR_A_ecc;
        end
      end
    end
  end

//vc DOUT_A_reg

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_A_async) begin
    if (RST_A_async || RST_A_in || glblGSR || (OREG_ECC_A_BIN == OREG_ECC_A_FALSE)) begin
`else
  always @ (posedge CLK_in or posedge RST_A_async or glblGSR) begin
    if (RST_A_in || glblGSR || (OREG_ECC_A_BIN == OREG_ECC_A_FALSE)) begin
`endif
      DOUT_A_reg <= D_INIT;
    end else if (~a_sleep) begin
      if (USE_EXT_CE_A_BIN == USE_EXT_CE_A_TRUE) begin
        if (OREG_ECC_CE_A_in) begin
          if (EN_ECC_RD_A_BIN == EN_ECC_RD_A_TRUE) begin
            DOUT_A_reg <= ram_data_a_ecc;
          end else if (OREG_A_BIN == OREG_A_TRUE) begin
            DOUT_A_reg <= ram_data_a_reg;
          end else begin
            DOUT_A_reg <= ram_data_a_lat;
          end
        end
      end else if (~shut_down && data_A_enable) begin
        if (((OREG_A_BIN == OREG_A_TRUE) && (RDACCESS_A_reg || RDACCESS_A_ecc_reg)) ||
            ((OREG_A_BIN == OREG_A_FALSE) && (RDACCESS_A_lat || RDACCESS_A_ecc_reg))) begin
          if (EN_ECC_RD_A_BIN == EN_ECC_RD_A_TRUE) begin
            DOUT_A_reg <= ram_data_a_ecc;
          end else if (OREG_A_BIN == OREG_A_TRUE) begin
            DOUT_A_reg <= ram_data_a_reg;
          end else begin
            DOUT_A_reg <= ram_data_a_lat;
          end
        end
      end
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_A_async) begin
    if (RST_A_async || RST_A_in || glblGSR || (OREG_ECC_A_BIN == OREG_ECC_A_FALSE)) begin
`else
  always @ (posedge CLK_in or posedge RST_A_async or glblGSR) begin
    if (RST_A_in || glblGSR || (OREG_ECC_A_BIN == OREG_ECC_A_FALSE)) begin
`endif
      RDACCESS_A_ecc_reg <= 1'b0;
    end else begin
      if (OREG_A_BIN == OREG_A_TRUE) begin
        if ((USE_EXT_CE_A_BIN == USE_EXT_CE_A_FALSE) || OREG_CE_A_in) begin
          RDACCESS_A_ecc_reg <= RDACCESS_A_reg;
        end
      end else begin
        RDACCESS_A_ecc_reg <= RDACCESS_A_lat;
      end
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_B_async) begin
    if (RST_B_async || RST_B_in || glblGSR || (OREG_ECC_B_BIN == OREG_ECC_B_FALSE)) begin
`else
  always @ (posedge CLK_in or posedge RST_B_async or glblGSR) begin
    if (RST_B_in || glblGSR || (OREG_ECC_B_BIN == OREG_ECC_B_FALSE)) begin
`endif
      DBITERR_B_reg <= 1'b0;
      SBITERR_B_reg <= 1'b0;
    end else if ((~a_sleep && ~shut_down && data_B_enable) && 
                 (((OREG_B_BIN == OREG_B_TRUE) && (RDACCESS_B_reg || RDACCESS_B_ecc_reg)) ||
                  ((OREG_B_BIN == OREG_B_FALSE) && (RDACCESS_B_lat || RDACCESS_B_ecc_reg)))) begin
      if (EN_ECC_RD_B_BIN == EN_ECC_RD_B_TRUE) begin
        if ((USE_EXT_CE_B_BIN == USE_EXT_CE_B_FALSE) || OREG_ECC_CE_B_in) begin
          DBITERR_B_reg <= DBITERR_B_ecc;
          SBITERR_B_reg <= SBITERR_B_ecc;
        end
      end
    end
  end

//vc DOUT_B_reg

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_B_async) begin
    if (RST_B_async || RST_B_in || glblGSR || (OREG_ECC_B_BIN == OREG_ECC_B_FALSE)) begin
`else
  always @ (posedge CLK_in or posedge RST_B_async or glblGSR) begin
    if (RST_B_in || glblGSR || (OREG_ECC_B_BIN == OREG_ECC_B_FALSE)) begin
`endif
      DOUT_B_reg <= D_INIT;
    end else if (~a_sleep) begin
      if (USE_EXT_CE_B_BIN == USE_EXT_CE_B_TRUE) begin
        if (OREG_ECC_CE_B_in) begin
          if (EN_ECC_RD_B_BIN == EN_ECC_RD_B_TRUE) begin
            DOUT_B_reg <= ram_data_b_ecc;
          end else if (OREG_B_BIN == OREG_B_TRUE) begin
            DOUT_B_reg <= ram_data_b_reg;
          end else begin
            DOUT_B_reg <= ram_data_b_lat;
          end
        end
      end else if (~shut_down && data_B_enable) begin
        if (((OREG_B_BIN == OREG_B_TRUE) && (RDACCESS_B_reg || RDACCESS_B_ecc_reg)) ||
            ((OREG_B_BIN == OREG_B_FALSE) && (RDACCESS_B_lat || RDACCESS_B_ecc_reg))) begin
          if (EN_ECC_RD_B_BIN == EN_ECC_RD_B_TRUE) begin
            DOUT_B_reg <= ram_data_b_ecc;
          end else if (OREG_B_BIN == OREG_B_TRUE) begin
            DOUT_B_reg <= ram_data_b_reg;
          end else begin
            DOUT_B_reg <= ram_data_b_lat;
          end
        end
      end
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_B_async) begin
    if (RST_B_async || RST_B_in || glblGSR || (OREG_ECC_B_BIN == OREG_ECC_B_FALSE)) begin
`else
  always @ (posedge CLK_in or posedge RST_B_async or glblGSR) begin
    if (RST_B_in || glblGSR || (OREG_ECC_B_BIN == OREG_ECC_B_FALSE)) begin
`endif
      RDACCESS_B_ecc_reg <= 1'b0;
    end else begin
      if (OREG_B_BIN == OREG_B_TRUE) begin
        if ((USE_EXT_CE_B_BIN == USE_EXT_CE_B_FALSE) || OREG_CE_B_in) begin
          RDACCESS_B_ecc_reg <= RDACCESS_B_reg;
        end
      end else begin
        RDACCESS_B_ecc_reg <= RDACCESS_B_lat;
      end
    end
  end

// ram oreg
`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_A_async) begin
    if (RST_A_async || RST_A_in || shut_down || a_sleep || glblGSR) begin
`else
  always @ (posedge CLK_in or posedge RST_A_async or shut_down or glblGSR) begin
    if (RST_A_in || shut_down || a_sleep || glblGSR) begin
`endif
      RDACCESS_A_reg <= 1'b0;
    end else if (ram_ce_a && ~ram_we_a && SLEEP_in && ~a_sleep && (OREG_A_BIN == OREG_A_TRUE)) begin
      RDACCESS_A_reg <= 1'b0;
    end else begin
      RDACCESS_A_reg <= RDACCESS_A_lat;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_A_async) begin
    if (RST_A_async || RST_A_in || shut_down || SLEEP_in || a_sleep ||
        auto_sleep ||
        glblGSR || (OREG_A_BIN == OREG_A_FALSE)) begin
`else
  always @ (posedge CLK_in or posedge RST_A_async or shut_down or glblGSR) begin
    if (RST_A_in || shut_down || SLEEP_in || a_sleep ||
        auto_sleep ||
        glblGSR || (OREG_A_BIN == OREG_A_FALSE)) begin
`endif
      ram_data_a_reg <= D_INIT;
    end else if (USE_EXT_CE_A_BIN == USE_EXT_CE_A_TRUE) begin
      if (OREG_CE_A_in) begin
        ram_data_a_reg = ram_data_a_lat;
      end
    end else if (ram_ce_a_int || RDACCESS_A_reg) begin
      ram_data_a_reg = ram_data_a_lat;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_B_async) begin
    if (RST_B_async || RST_B_in || shut_down || a_sleep || glblGSR) begin
`else
  always @ (posedge CLK_in or posedge RST_B_async or shut_down or glblGSR) begin
    if (RST_B_in || shut_down || a_sleep || glblGSR) begin
`endif
      RDACCESS_B_reg <= 1'b0;
    end else if (ram_ce_b && ~ram_we_b && SLEEP_in && ~a_sleep && (OREG_B_BIN == OREG_B_TRUE)) begin
      RDACCESS_B_reg <= 1'b0;
    end else begin
      RDACCESS_B_reg <= RDACCESS_B_lat;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_B_async) begin
    if (RST_B_async || RST_B_in || shut_down || SLEEP_in || a_sleep ||
        auto_sleep ||
        glblGSR || (OREG_B_BIN == OREG_B_FALSE)) begin
`else
  always @ (posedge CLK_in or posedge RST_B_async or shut_down or glblGSR) begin
    if (RST_B_in || shut_down || SLEEP_in || a_sleep ||
        auto_sleep ||
        glblGSR || (OREG_B_BIN == OREG_B_FALSE)) begin
`endif
      ram_data_b_reg <= D_INIT;
    end else if (USE_EXT_CE_B_BIN == USE_EXT_CE_B_TRUE) begin
      if (OREG_CE_B_in) begin
        ram_data_b_reg = ram_data_b_lat;
      end
    end else if (ram_ce_b_int || RDACCESS_B_reg) begin
      ram_data_b_reg = ram_data_b_lat;
    end
  end

  reg [15:1] ram_ce_a_fifo_in = 15'b0;
  always @ (*) begin
    ram_ce_a_fifo_in = 15'b0;
    ram_ce_a_fifo_in[AUTO_SLEEP_LATENCY_BIN] = EN_A_int;
  end
`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || (EN_AUTO_SLEEP_MODE_BIN == EN_AUTO_SLEEP_MODE_FALSE)) begin
      ram_ce_a_fifo <= 15'b0;
    end else begin
      ram_ce_a_fifo <= {1'b0, ram_ce_a_fifo[15:2]} | ram_ce_a_fifo_in;
    end
  end

  always @ (*) begin
    if (EN_AUTO_SLEEP_MODE_BIN == EN_AUTO_SLEEP_MODE_FALSE) begin
      ram_ce_a_pre = EN_A_int;
    end else begin
      ram_ce_a_pre = ram_ce_a_fifo[1]; 
    end
  end

  always @ (*) begin
    if (a_sleep || SLEEP_in || auto_sleep) begin
      ram_ce_a_int = 1'b0;
    end else begin
      ram_ce_a_int = ram_ce_a_pre;
    end
  end

  reg [15:1] ram_ce_b_fifo_in = 15'b0;
  always @ (*) begin
    ram_ce_b_fifo_in = 15'b0;
    ram_ce_b_fifo_in[AUTO_SLEEP_LATENCY_BIN] = EN_B_int;
  end
`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || (EN_AUTO_SLEEP_MODE_BIN == EN_AUTO_SLEEP_MODE_FALSE)) begin
      ram_ce_b_fifo <= 15'b0;
    end else begin
      ram_ce_b_fifo <= {1'b0, ram_ce_b_fifo[15:2]} | ram_ce_b_fifo_in;
    end
  end

  always @ (*) begin
    if (EN_AUTO_SLEEP_MODE_BIN == EN_AUTO_SLEEP_MODE_FALSE) begin
      ram_ce_b_pre = EN_B_int;
    end else begin
      ram_ce_b_pre = ram_ce_b_fifo[1]; 
    end
  end

  always @ (*) begin
    if (a_sleep || SLEEP_in || auto_sleep) begin
      ram_ce_b_int = 1'b0;
    end else begin
      ram_ce_b_int = ram_ce_b_pre;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || ~RDB_WR_A_int || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
      ram_bwe_a <= 72'h00;
    end else if (ram_ce_a_int) begin
      if (EN_ECC_WR_A_BIN == EN_ECC_WR_A_TRUE) begin
        ram_bwe_a <= 72'hFFFFFFFFFFFFFFFFFF;
      end else if (BWE_MODE_A_BIN == BWE_MODE_A_PARITY_INTERLEAVED) begin
        if (WRITE_WIDTH_A_BIN == 7'd72) begin
          ram_bwe_a <= {BWE_A_int[7:0], {8{BWE_A_int[7]}}, {8{BWE_A_int[6]}},
                        {8{BWE_A_int[5]}}, {8{BWE_A_int[4]}}, {8{BWE_A_int[3]}},
                        {8{BWE_A_int[2]}}, {8{BWE_A_int[1]}}, {8{BWE_A_int[0]}}};
        end else if (WRITE_WIDTH_A_BIN == 7'd36) begin
          ram_bwe_a <= {36'b0, BWE_A_int[3:0], {8{BWE_A_int[3]}}, {8{BWE_A_int[2]}},
                        {8{BWE_A_int[1]}}, {8{BWE_A_int[0]}}};
        end else if (WRITE_WIDTH_A_BIN == 7'd18) begin
          ram_bwe_a <= {54'b0, BWE_A_int[1:0], {8{BWE_A_int[1]}}, {8{BWE_A_int[0]}}};
        end else if (WRITE_WIDTH_A_BIN == 7'd9) begin
          ram_bwe_a <= {63'b0, BWE_A_int[0], {8{BWE_A_int[0]}}};
        end
      end else begin
        ram_bwe_a <= {{8{BWE_A_int[8]}},
                       {8{BWE_A_int[7]}}, {8{BWE_A_int[6]}}, {8{BWE_A_int[5]}}, {8{BWE_A_int[4]}},
                       {8{BWE_A_int[3]}}, {8{BWE_A_int[2]}}, {8{BWE_A_int[1]}}, {8{BWE_A_int[0]}}};
      end
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || ~RDB_WR_B_int || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
      ram_bwe_b <= 72'b0;
    end else if (ram_ce_b_int) begin
      if (EN_ECC_WR_B_BIN == EN_ECC_WR_B_TRUE) begin
        ram_bwe_b <= 72'hFFFFFFFFFFFFFFFFFF;
      end else if (BWE_MODE_B_BIN == BWE_MODE_B_PARITY_INTERLEAVED) begin
        if (WRITE_WIDTH_B_BIN == 7'd72) begin
          ram_bwe_b <= {BWE_B_int[7:0], {8{BWE_B_int[7]}}, {8{BWE_B_int[6]}},
                        {8{BWE_B_int[5]}}, {8{BWE_B_int[4]}}, {8{BWE_B_int[3]}},
                        {8{BWE_B_int[2]}}, {8{BWE_B_int[1]}}, {8{BWE_B_int[0]}}};
        end else if (WRITE_WIDTH_B_BIN == 7'd36) begin
          ram_bwe_b <= {36'b0, BWE_B_int[3:0], {8{BWE_B_int[3]}}, {8{BWE_B_int[2]}},
                        {8{BWE_B_int[1]}}, {8{BWE_B_int[0]}}};
        end else if (WRITE_WIDTH_B_BIN == 7'd18) begin
          ram_bwe_b <= {54'b0, BWE_B_int[1:0], {8{BWE_B_int[1]}}, {8{BWE_B_int[0]}}};
        end else if (WRITE_WIDTH_B_BIN == 7'd9) begin
          ram_bwe_b <= {63'b0, BWE_B_int[0], {8{BWE_B_int[0]}}};
        end
      end else begin
        ram_bwe_b <= {{8{BWE_B_int[8]}},
                       {8{BWE_B_int[7]}}, {8{BWE_B_int[6]}}, {8{BWE_B_int[5]}}, {8{BWE_B_int[4]}},
                       {8{BWE_B_int[3]}}, {8{BWE_B_int[2]}}, {8{BWE_B_int[1]}}, {8{BWE_B_int[0]}}};
      end
    end
  end


`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
      ram_addr_a <= 15'b0;
    end else if (ram_ce_a_int) begin
      ram_addr_a <= ADDR_A_int[14:0];
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
      ram_addr_b <= 15'b0;
    end else if (ram_ce_b_int) begin
      ram_addr_b <= ADDR_B_int[14:0];
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_A_async) begin
    if (glblGSR || (RST_A_async || RST_A_in) || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
`else
  always @ (posedge CLK_in or posedge RST_A_async or glblGSR) begin
    if (glblGSR || RST_A_in || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
`endif
      ram_ce_a <= 1'b0;
    end else begin
      ram_ce_a <= ram_ce_a_int;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in or posedge RST_B_async) begin
    if (glblGSR || (RST_B_async || RST_B_in) || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
`else
  always @ (posedge CLK_in or posedge RST_B_async or glblGSR) begin
    if (glblGSR || RST_B_in || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
`endif
      ram_ce_b <= 1'b0;
    end else begin
      ram_ce_b <= ram_ce_b_int;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in || ~ram_ce_a_int) begin
      ram_we_a <= 1'b0;
    end else begin
      ram_we_a <= RDB_WR_A_int;
      if (RDB_WR_A_int) ram_we_a_event <= ~ram_we_a_event;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in || ~ram_ce_b_int) begin
      ram_we_b <= 1'b0;
    end else begin
      ram_we_b <= RDB_WR_B_int;
      if (RDB_WR_B_int) ram_we_b_event <= ~ram_we_b_event;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
      ram_data_a <= D_INIT;
    end else if (RDB_WR_A_int && ram_ce_a_int) begin
      if (EN_ECC_WR_A_BIN == EN_ECC_WR_A_TRUE) begin
        ram_data_a[63:0] <= {DIN_A_int[63],
                             DIN_A_int[62] ^ (INJECT_DBITERR_A_int),
                             DIN_A_int[61:31],
                             DIN_A_int[30] ^ (INJECT_DBITERR_A_int || INJECT_SBITERR_A_int),
                             DIN_A_int[29:0]};
        ram_data_a[71:64] <= fn_ecc(encode, DIN_A_int[63:0], DIN_A_int[71:64]);
      end else if (EN_ECC_RD_A_BIN == EN_ECC_RD_A_TRUE) begin
        ram_data_a[63:0] <= {DIN_A_int[63],
                             DIN_A_int[62] ^ (INJECT_DBITERR_A_int),
                             DIN_A_int[61:31],
                             DIN_A_int[30] ^ (INJECT_DBITERR_A_int || INJECT_SBITERR_A_int),
                             DIN_A_int[29:0]};
        ram_data_a[71:64] <= DIN_A_int[71:64];
      end else begin
        ram_data_a <= DIN_A_int;
      end
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || a_sleep || DEEPSLEEP_in || SLEEP_in || auto_sleep || shut_down || SHUTDOWN_in) begin
      ram_data_b <= D_INIT;
    end else if (RDB_WR_B_int && ram_ce_b_int) begin
      if (EN_ECC_WR_B_BIN == EN_ECC_WR_B_TRUE) begin
        ram_data_b[63:0] <= {DIN_B_int[63],
                             DIN_B_int[62] ^ (INJECT_DBITERR_B_int),
                             DIN_B_int[61:31],
                             DIN_B_int[30] ^ (INJECT_DBITERR_B_int || INJECT_SBITERR_B_int),
                             DIN_B_int[29:0]};
        ram_data_b[71:64] <= fn_ecc(encode, DIN_B_int[63:0], DIN_B_int[71:64]);
      end else if (EN_ECC_RD_B_BIN == EN_ECC_RD_B_TRUE) begin
        ram_data_b[63:0] <= {DIN_B_int[63],
                             DIN_B_int[62] ^ (INJECT_DBITERR_B_int),
                             DIN_B_int[61:31],
                             DIN_B_int[30] ^ (INJECT_DBITERR_B_int || INJECT_SBITERR_B_int),
                             DIN_B_int[29:0]};
        ram_data_b[71:64] <= DIN_B_int[71:64];
      end else begin
        ram_data_b <= DIN_B_int;
      end
    end
  end

// ram
  always @ (*) begin
    if ((auto_sleep || SLEEP_in || SHUTDOWN_in || DEEPSLEEP_in) ||
        (((OREG_A_BIN == OREG_A_TRUE) || (OREG_ECC_A_BIN == OREG_ECC_A_TRUE )) &&
         (a_sleep || shut_down)))begin
      RDACCESS_A_lat <= 1'b0;
    end else if ((ram_ce_a_int === 1'b1) && (RDB_WR_A_int === 1'b0)) begin
      RDACCESS_A_lat <= 1'b1;
    end else begin
      RDACCESS_A_lat <= 1'b0;
    end
  end

  always @ (*) begin
    if ((auto_sleep || SLEEP_in || SHUTDOWN_in || DEEPSLEEP_in) ||
        (((OREG_B_BIN == OREG_B_TRUE) || (OREG_ECC_B_BIN == OREG_ECC_B_TRUE )) &&
         (a_sleep || shut_down)))begin
      RDACCESS_B_lat <= 1'b0;
    end else if ((ram_ce_b_int === 1'b1) && (RDB_WR_B_int === 1'b0)) begin
      RDACCESS_B_lat <= 1'b1;
    end else begin
      RDACCESS_B_lat <= 1'b0;
    end
  end

//vc initialize ram

`ifndef XIL_XECLIB
  reg first_time = 1'b1;
  always @ (posedge INIT_RAM) begin
    if (INIT_FILE != "NONE") begin
//         if (READ_WIDTH_A != READ_WIDTH_A_REG) begin
//          $display("Error: [Unisim %s-27] DRC : READ_WIDTH_A (%d) has been changed (%d) through write_attr function. In order to initialize memory via INIT_FILE (%s), the READ_WIDTH must be set by a static parameter. Instance: %m.", MODULE_NAME, READ_WIDTH_A, READ_WIDTH_A_REG, INIT_FILE_REG);
//         end else if (READ_WIDTH_B != READ_WIDTH_B_REG) begin
//          $display("Error: [Unisim %s-28] DRC : READ_WIDTH_B (%d) has been changed (%d) through write_attr function. In order to initialize memory via INIT_FILE (%s), the READ_WIDTH must be set by a static parameter. Instance: %m.", MODULE_NAME, READ_WIDTH_B, READ_WIDTH_B_REG, INIT_FILE_REG);
//         end else begin
      read_init_file;
//         end
    end else if (first_time || (PR_SAVE_DATA_REG == PR_SAVE_DATA_FALSE)) begin
    first_time = 1'b0;
    mem[10'h000] = INIT_000_REG;
    mem[10'h001] = INIT_001_REG;
    mem[10'h002] = INIT_002_REG;
    mem[10'h003] = INIT_003_REG;
    mem[10'h004] = INIT_004_REG;
    mem[10'h005] = INIT_005_REG;
    mem[10'h006] = INIT_006_REG;
    mem[10'h007] = INIT_007_REG;
    mem[10'h008] = INIT_008_REG;
    mem[10'h009] = INIT_009_REG;
    mem[10'h00a] = INIT_00A_REG;
    mem[10'h00b] = INIT_00B_REG;
    mem[10'h00c] = INIT_00C_REG;
    mem[10'h00d] = INIT_00D_REG;
    mem[10'h00e] = INIT_00E_REG;
    mem[10'h00f] = INIT_00F_REG;
    mem[10'h010] = INIT_010_REG;
    mem[10'h011] = INIT_011_REG;
    mem[10'h012] = INIT_012_REG;
    mem[10'h013] = INIT_013_REG;
    mem[10'h014] = INIT_014_REG;
    mem[10'h015] = INIT_015_REG;
    mem[10'h016] = INIT_016_REG;
    mem[10'h017] = INIT_017_REG;
    mem[10'h018] = INIT_018_REG;
    mem[10'h019] = INIT_019_REG;
    mem[10'h01a] = INIT_01A_REG;
    mem[10'h01b] = INIT_01B_REG;
    mem[10'h01c] = INIT_01C_REG;
    mem[10'h01d] = INIT_01D_REG;
    mem[10'h01e] = INIT_01E_REG;
    mem[10'h01f] = INIT_01F_REG;
    mem[10'h020] = INIT_020_REG;
    mem[10'h021] = INIT_021_REG;
    mem[10'h022] = INIT_022_REG;
    mem[10'h023] = INIT_023_REG;
    mem[10'h024] = INIT_024_REG;
    mem[10'h025] = INIT_025_REG;
    mem[10'h026] = INIT_026_REG;
    mem[10'h027] = INIT_027_REG;
    mem[10'h028] = INIT_028_REG;
    mem[10'h029] = INIT_029_REG;
    mem[10'h02a] = INIT_02A_REG;
    mem[10'h02b] = INIT_02B_REG;
    mem[10'h02c] = INIT_02C_REG;
    mem[10'h02d] = INIT_02D_REG;
    mem[10'h02e] = INIT_02E_REG;
    mem[10'h02f] = INIT_02F_REG;
    mem[10'h030] = INIT_030_REG;
    mem[10'h031] = INIT_031_REG;
    mem[10'h032] = INIT_032_REG;
    mem[10'h033] = INIT_033_REG;
    mem[10'h034] = INIT_034_REG;
    mem[10'h035] = INIT_035_REG;
    mem[10'h036] = INIT_036_REG;
    mem[10'h037] = INIT_037_REG;
    mem[10'h038] = INIT_038_REG;
    mem[10'h039] = INIT_039_REG;
    mem[10'h03a] = INIT_03A_REG;
    mem[10'h03b] = INIT_03B_REG;
    mem[10'h03c] = INIT_03C_REG;
    mem[10'h03d] = INIT_03D_REG;
    mem[10'h03e] = INIT_03E_REG;
    mem[10'h03f] = INIT_03F_REG;
    mem[10'h040] = INIT_040_REG;
    mem[10'h041] = INIT_041_REG;
    mem[10'h042] = INIT_042_REG;
    mem[10'h043] = INIT_043_REG;
    mem[10'h044] = INIT_044_REG;
    mem[10'h045] = INIT_045_REG;
    mem[10'h046] = INIT_046_REG;
    mem[10'h047] = INIT_047_REG;
    mem[10'h048] = INIT_048_REG;
    mem[10'h049] = INIT_049_REG;
    mem[10'h04a] = INIT_04A_REG;
    mem[10'h04b] = INIT_04B_REG;
    mem[10'h04c] = INIT_04C_REG;
    mem[10'h04d] = INIT_04D_REG;
    mem[10'h04e] = INIT_04E_REG;
    mem[10'h04f] = INIT_04F_REG;
    mem[10'h050] = INIT_050_REG;
    mem[10'h051] = INIT_051_REG;
    mem[10'h052] = INIT_052_REG;
    mem[10'h053] = INIT_053_REG;
    mem[10'h054] = INIT_054_REG;
    mem[10'h055] = INIT_055_REG;
    mem[10'h056] = INIT_056_REG;
    mem[10'h057] = INIT_057_REG;
    mem[10'h058] = INIT_058_REG;
    mem[10'h059] = INIT_059_REG;
    mem[10'h05a] = INIT_05A_REG;
    mem[10'h05b] = INIT_05B_REG;
    mem[10'h05c] = INIT_05C_REG;
    mem[10'h05d] = INIT_05D_REG;
    mem[10'h05e] = INIT_05E_REG;
    mem[10'h05f] = INIT_05F_REG;
    mem[10'h060] = INIT_060_REG;
    mem[10'h061] = INIT_061_REG;
    mem[10'h062] = INIT_062_REG;
    mem[10'h063] = INIT_063_REG;
    mem[10'h064] = INIT_064_REG;
    mem[10'h065] = INIT_065_REG;
    mem[10'h066] = INIT_066_REG;
    mem[10'h067] = INIT_067_REG;
    mem[10'h068] = INIT_068_REG;
    mem[10'h069] = INIT_069_REG;
    mem[10'h06a] = INIT_06A_REG;
    mem[10'h06b] = INIT_06B_REG;
    mem[10'h06c] = INIT_06C_REG;
    mem[10'h06d] = INIT_06D_REG;
    mem[10'h06e] = INIT_06E_REG;
    mem[10'h06f] = INIT_06F_REG;
    mem[10'h070] = INIT_070_REG;
    mem[10'h071] = INIT_071_REG;
    mem[10'h072] = INIT_072_REG;
    mem[10'h073] = INIT_073_REG;
    mem[10'h074] = INIT_074_REG;
    mem[10'h075] = INIT_075_REG;
    mem[10'h076] = INIT_076_REG;
    mem[10'h077] = INIT_077_REG;
    mem[10'h078] = INIT_078_REG;
    mem[10'h079] = INIT_079_REG;
    mem[10'h07a] = INIT_07A_REG;
    mem[10'h07b] = INIT_07B_REG;
    mem[10'h07c] = INIT_07C_REG;
    mem[10'h07d] = INIT_07D_REG;
    mem[10'h07e] = INIT_07E_REG;
    mem[10'h07f] = INIT_07F_REG;
    mem[10'h080] = INIT_080_REG;
    mem[10'h081] = INIT_081_REG;
    mem[10'h082] = INIT_082_REG;
    mem[10'h083] = INIT_083_REG;
    mem[10'h084] = INIT_084_REG;
    mem[10'h085] = INIT_085_REG;
    mem[10'h086] = INIT_086_REG;
    mem[10'h087] = INIT_087_REG;
    mem[10'h088] = INIT_088_REG;
    mem[10'h089] = INIT_089_REG;
    mem[10'h08a] = INIT_08A_REG;
    mem[10'h08b] = INIT_08B_REG;
    mem[10'h08c] = INIT_08C_REG;
    mem[10'h08d] = INIT_08D_REG;
    mem[10'h08e] = INIT_08E_REG;
    mem[10'h08f] = INIT_08F_REG;
    mem[10'h090] = INIT_090_REG;
    mem[10'h091] = INIT_091_REG;
    mem[10'h092] = INIT_092_REG;
    mem[10'h093] = INIT_093_REG;
    mem[10'h094] = INIT_094_REG;
    mem[10'h095] = INIT_095_REG;
    mem[10'h096] = INIT_096_REG;
    mem[10'h097] = INIT_097_REG;
    mem[10'h098] = INIT_098_REG;
    mem[10'h099] = INIT_099_REG;
    mem[10'h09a] = INIT_09A_REG;
    mem[10'h09b] = INIT_09B_REG;
    mem[10'h09c] = INIT_09C_REG;
    mem[10'h09d] = INIT_09D_REG;
    mem[10'h09e] = INIT_09E_REG;
    mem[10'h09f] = INIT_09F_REG;
    mem[10'h0a0] = INIT_0A0_REG;
    mem[10'h0a1] = INIT_0A1_REG;
    mem[10'h0a2] = INIT_0A2_REG;
    mem[10'h0a3] = INIT_0A3_REG;
    mem[10'h0a4] = INIT_0A4_REG;
    mem[10'h0a5] = INIT_0A5_REG;
    mem[10'h0a6] = INIT_0A6_REG;
    mem[10'h0a7] = INIT_0A7_REG;
    mem[10'h0a8] = INIT_0A8_REG;
    mem[10'h0a9] = INIT_0A9_REG;
    mem[10'h0aa] = INIT_0AA_REG;
    mem[10'h0ab] = INIT_0AB_REG;
    mem[10'h0ac] = INIT_0AC_REG;
    mem[10'h0ad] = INIT_0AD_REG;
    mem[10'h0ae] = INIT_0AE_REG;
    mem[10'h0af] = INIT_0AF_REG;
    mem[10'h0b0] = INIT_0B0_REG;
    mem[10'h0b1] = INIT_0B1_REG;
    mem[10'h0b2] = INIT_0B2_REG;
    mem[10'h0b3] = INIT_0B3_REG;
    mem[10'h0b4] = INIT_0B4_REG;
    mem[10'h0b5] = INIT_0B5_REG;
    mem[10'h0b6] = INIT_0B6_REG;
    mem[10'h0b7] = INIT_0B7_REG;
    mem[10'h0b8] = INIT_0B8_REG;
    mem[10'h0b9] = INIT_0B9_REG;
    mem[10'h0ba] = INIT_0BA_REG;
    mem[10'h0bb] = INIT_0BB_REG;
    mem[10'h0bc] = INIT_0BC_REG;
    mem[10'h0bd] = INIT_0BD_REG;
    mem[10'h0be] = INIT_0BE_REG;
    mem[10'h0bf] = INIT_0BF_REG;
    mem[10'h0c0] = INIT_0C0_REG;
    mem[10'h0c1] = INIT_0C1_REG;
    mem[10'h0c2] = INIT_0C2_REG;
    mem[10'h0c3] = INIT_0C3_REG;
    mem[10'h0c4] = INIT_0C4_REG;
    mem[10'h0c5] = INIT_0C5_REG;
    mem[10'h0c6] = INIT_0C6_REG;
    mem[10'h0c7] = INIT_0C7_REG;
    mem[10'h0c8] = INIT_0C8_REG;
    mem[10'h0c9] = INIT_0C9_REG;
    mem[10'h0ca] = INIT_0CA_REG;
    mem[10'h0cb] = INIT_0CB_REG;
    mem[10'h0cc] = INIT_0CC_REG;
    mem[10'h0cd] = INIT_0CD_REG;
    mem[10'h0ce] = INIT_0CE_REG;
    mem[10'h0cf] = INIT_0CF_REG;
    mem[10'h0d0] = INIT_0D0_REG;
    mem[10'h0d1] = INIT_0D1_REG;
    mem[10'h0d2] = INIT_0D2_REG;
    mem[10'h0d3] = INIT_0D3_REG;
    mem[10'h0d4] = INIT_0D4_REG;
    mem[10'h0d5] = INIT_0D5_REG;
    mem[10'h0d6] = INIT_0D6_REG;
    mem[10'h0d7] = INIT_0D7_REG;
    mem[10'h0d8] = INIT_0D8_REG;
    mem[10'h0d9] = INIT_0D9_REG;
    mem[10'h0da] = INIT_0DA_REG;
    mem[10'h0db] = INIT_0DB_REG;
    mem[10'h0dc] = INIT_0DC_REG;
    mem[10'h0dd] = INIT_0DD_REG;
    mem[10'h0de] = INIT_0DE_REG;
    mem[10'h0df] = INIT_0DF_REG;
    mem[10'h0e0] = INIT_0E0_REG;
    mem[10'h0e1] = INIT_0E1_REG;
    mem[10'h0e2] = INIT_0E2_REG;
    mem[10'h0e3] = INIT_0E3_REG;
    mem[10'h0e4] = INIT_0E4_REG;
    mem[10'h0e5] = INIT_0E5_REG;
    mem[10'h0e6] = INIT_0E6_REG;
    mem[10'h0e7] = INIT_0E7_REG;
    mem[10'h0e8] = INIT_0E8_REG;
    mem[10'h0e9] = INIT_0E9_REG;
    mem[10'h0ea] = INIT_0EA_REG;
    mem[10'h0eb] = INIT_0EB_REG;
    mem[10'h0ec] = INIT_0EC_REG;
    mem[10'h0ed] = INIT_0ED_REG;
    mem[10'h0ee] = INIT_0EE_REG;
    mem[10'h0ef] = INIT_0EF_REG;
    mem[10'h0f0] = INIT_0F0_REG;
    mem[10'h0f1] = INIT_0F1_REG;
    mem[10'h0f2] = INIT_0F2_REG;
    mem[10'h0f3] = INIT_0F3_REG;
    mem[10'h0f4] = INIT_0F4_REG;
    mem[10'h0f5] = INIT_0F5_REG;
    mem[10'h0f6] = INIT_0F6_REG;
    mem[10'h0f7] = INIT_0F7_REG;
    mem[10'h0f8] = INIT_0F8_REG;
    mem[10'h0f9] = INIT_0F9_REG;
    mem[10'h0fa] = INIT_0FA_REG;
    mem[10'h0fb] = INIT_0FB_REG;
    mem[10'h0fc] = INIT_0FC_REG;
    mem[10'h0fd] = INIT_0FD_REG;
    mem[10'h0fe] = INIT_0FE_REG;
    mem[10'h0ff] = INIT_0FF_REG;
    mem[10'h100] = INIT_100_REG;
    mem[10'h101] = INIT_101_REG;
    mem[10'h102] = INIT_102_REG;
    mem[10'h103] = INIT_103_REG;
    mem[10'h104] = INIT_104_REG;
    mem[10'h105] = INIT_105_REG;
    mem[10'h106] = INIT_106_REG;
    mem[10'h107] = INIT_107_REG;
    mem[10'h108] = INIT_108_REG;
    mem[10'h109] = INIT_109_REG;
    mem[10'h10a] = INIT_10A_REG;
    mem[10'h10b] = INIT_10B_REG;
    mem[10'h10c] = INIT_10C_REG;
    mem[10'h10d] = INIT_10D_REG;
    mem[10'h10e] = INIT_10E_REG;
    mem[10'h10f] = INIT_10F_REG;
    mem[10'h110] = INIT_110_REG;
    mem[10'h111] = INIT_111_REG;
    mem[10'h112] = INIT_112_REG;
    mem[10'h113] = INIT_113_REG;
    mem[10'h114] = INIT_114_REG;
    mem[10'h115] = INIT_115_REG;
    mem[10'h116] = INIT_116_REG;
    mem[10'h117] = INIT_117_REG;
    mem[10'h118] = INIT_118_REG;
    mem[10'h119] = INIT_119_REG;
    mem[10'h11a] = INIT_11A_REG;
    mem[10'h11b] = INIT_11B_REG;
    mem[10'h11c] = INIT_11C_REG;
    mem[10'h11d] = INIT_11D_REG;
    mem[10'h11e] = INIT_11E_REG;
    mem[10'h11f] = INIT_11F_REG;
    mem[10'h120] = INIT_120_REG;
    mem[10'h121] = INIT_121_REG;
    mem[10'h122] = INIT_122_REG;
    mem[10'h123] = INIT_123_REG;
    mem[10'h124] = INIT_124_REG;
    mem[10'h125] = INIT_125_REG;
    mem[10'h126] = INIT_126_REG;
    mem[10'h127] = INIT_127_REG;
    mem[10'h128] = INIT_128_REG;
    mem[10'h129] = INIT_129_REG;
    mem[10'h12a] = INIT_12A_REG;
    mem[10'h12b] = INIT_12B_REG;
    mem[10'h12c] = INIT_12C_REG;
    mem[10'h12d] = INIT_12D_REG;
    mem[10'h12e] = INIT_12E_REG;
    mem[10'h12f] = INIT_12F_REG;
    mem[10'h130] = INIT_130_REG;
    mem[10'h131] = INIT_131_REG;
    mem[10'h132] = INIT_132_REG;
    mem[10'h133] = INIT_133_REG;
    mem[10'h134] = INIT_134_REG;
    mem[10'h135] = INIT_135_REG;
    mem[10'h136] = INIT_136_REG;
    mem[10'h137] = INIT_137_REG;
    mem[10'h138] = INIT_138_REG;
    mem[10'h139] = INIT_139_REG;
    mem[10'h13a] = INIT_13A_REG;
    mem[10'h13b] = INIT_13B_REG;
    mem[10'h13c] = INIT_13C_REG;
    mem[10'h13d] = INIT_13D_REG;
    mem[10'h13e] = INIT_13E_REG;
    mem[10'h13f] = INIT_13F_REG;
    mem[10'h140] = INIT_140_REG;
    mem[10'h141] = INIT_141_REG;
    mem[10'h142] = INIT_142_REG;
    mem[10'h143] = INIT_143_REG;
    mem[10'h144] = INIT_144_REG;
    mem[10'h145] = INIT_145_REG;
    mem[10'h146] = INIT_146_REG;
    mem[10'h147] = INIT_147_REG;
    mem[10'h148] = INIT_148_REG;
    mem[10'h149] = INIT_149_REG;
    mem[10'h14a] = INIT_14A_REG;
    mem[10'h14b] = INIT_14B_REG;
    mem[10'h14c] = INIT_14C_REG;
    mem[10'h14d] = INIT_14D_REG;
    mem[10'h14e] = INIT_14E_REG;
    mem[10'h14f] = INIT_14F_REG;
    mem[10'h150] = INIT_150_REG;
    mem[10'h151] = INIT_151_REG;
    mem[10'h152] = INIT_152_REG;
    mem[10'h153] = INIT_153_REG;
    mem[10'h154] = INIT_154_REG;
    mem[10'h155] = INIT_155_REG;
    mem[10'h156] = INIT_156_REG;
    mem[10'h157] = INIT_157_REG;
    mem[10'h158] = INIT_158_REG;
    mem[10'h159] = INIT_159_REG;
    mem[10'h15a] = INIT_15A_REG;
    mem[10'h15b] = INIT_15B_REG;
    mem[10'h15c] = INIT_15C_REG;
    mem[10'h15d] = INIT_15D_REG;
    mem[10'h15e] = INIT_15E_REG;
    mem[10'h15f] = INIT_15F_REG;
    mem[10'h160] = INIT_160_REG;
    mem[10'h161] = INIT_161_REG;
    mem[10'h162] = INIT_162_REG;
    mem[10'h163] = INIT_163_REG;
    mem[10'h164] = INIT_164_REG;
    mem[10'h165] = INIT_165_REG;
    mem[10'h166] = INIT_166_REG;
    mem[10'h167] = INIT_167_REG;
    mem[10'h168] = INIT_168_REG;
    mem[10'h169] = INIT_169_REG;
    mem[10'h16a] = INIT_16A_REG;
    mem[10'h16b] = INIT_16B_REG;
    mem[10'h16c] = INIT_16C_REG;
    mem[10'h16d] = INIT_16D_REG;
    mem[10'h16e] = INIT_16E_REG;
    mem[10'h16f] = INIT_16F_REG;
    mem[10'h170] = INIT_170_REG;
    mem[10'h171] = INIT_171_REG;
    mem[10'h172] = INIT_172_REG;
    mem[10'h173] = INIT_173_REG;
    mem[10'h174] = INIT_174_REG;
    mem[10'h175] = INIT_175_REG;
    mem[10'h176] = INIT_176_REG;
    mem[10'h177] = INIT_177_REG;
    mem[10'h178] = INIT_178_REG;
    mem[10'h179] = INIT_179_REG;
    mem[10'h17a] = INIT_17A_REG;
    mem[10'h17b] = INIT_17B_REG;
    mem[10'h17c] = INIT_17C_REG;
    mem[10'h17d] = INIT_17D_REG;
    mem[10'h17e] = INIT_17E_REG;
    mem[10'h17f] = INIT_17F_REG;
    mem[10'h180] = INIT_180_REG;
    mem[10'h181] = INIT_181_REG;
    mem[10'h182] = INIT_182_REG;
    mem[10'h183] = INIT_183_REG;
    mem[10'h184] = INIT_184_REG;
    mem[10'h185] = INIT_185_REG;
    mem[10'h186] = INIT_186_REG;
    mem[10'h187] = INIT_187_REG;
    mem[10'h188] = INIT_188_REG;
    mem[10'h189] = INIT_189_REG;
    mem[10'h18a] = INIT_18A_REG;
    mem[10'h18b] = INIT_18B_REG;
    mem[10'h18c] = INIT_18C_REG;
    mem[10'h18d] = INIT_18D_REG;
    mem[10'h18e] = INIT_18E_REG;
    mem[10'h18f] = INIT_18F_REG;
    mem[10'h190] = INIT_190_REG;
    mem[10'h191] = INIT_191_REG;
    mem[10'h192] = INIT_192_REG;
    mem[10'h193] = INIT_193_REG;
    mem[10'h194] = INIT_194_REG;
    mem[10'h195] = INIT_195_REG;
    mem[10'h196] = INIT_196_REG;
    mem[10'h197] = INIT_197_REG;
    mem[10'h198] = INIT_198_REG;
    mem[10'h199] = INIT_199_REG;
    mem[10'h19a] = INIT_19A_REG;
    mem[10'h19b] = INIT_19B_REG;
    mem[10'h19c] = INIT_19C_REG;
    mem[10'h19d] = INIT_19D_REG;
    mem[10'h19e] = INIT_19E_REG;
    mem[10'h19f] = INIT_19F_REG;
    mem[10'h1a0] = INIT_1A0_REG;
    mem[10'h1a1] = INIT_1A1_REG;
    mem[10'h1a2] = INIT_1A2_REG;
    mem[10'h1a3] = INIT_1A3_REG;
    mem[10'h1a4] = INIT_1A4_REG;
    mem[10'h1a5] = INIT_1A5_REG;
    mem[10'h1a6] = INIT_1A6_REG;
    mem[10'h1a7] = INIT_1A7_REG;
    mem[10'h1a8] = INIT_1A8_REG;
    mem[10'h1a9] = INIT_1A9_REG;
    mem[10'h1aa] = INIT_1AA_REG;
    mem[10'h1ab] = INIT_1AB_REG;
    mem[10'h1ac] = INIT_1AC_REG;
    mem[10'h1ad] = INIT_1AD_REG;
    mem[10'h1ae] = INIT_1AE_REG;
    mem[10'h1af] = INIT_1AF_REG;
    mem[10'h1b0] = INIT_1B0_REG;
    mem[10'h1b1] = INIT_1B1_REG;
    mem[10'h1b2] = INIT_1B2_REG;
    mem[10'h1b3] = INIT_1B3_REG;
    mem[10'h1b4] = INIT_1B4_REG;
    mem[10'h1b5] = INIT_1B5_REG;
    mem[10'h1b6] = INIT_1B6_REG;
    mem[10'h1b7] = INIT_1B7_REG;
    mem[10'h1b8] = INIT_1B8_REG;
    mem[10'h1b9] = INIT_1B9_REG;
    mem[10'h1ba] = INIT_1BA_REG;
    mem[10'h1bb] = INIT_1BB_REG;
    mem[10'h1bc] = INIT_1BC_REG;
    mem[10'h1bd] = INIT_1BD_REG;
    mem[10'h1be] = INIT_1BE_REG;
    mem[10'h1bf] = INIT_1BF_REG;
    mem[10'h1c0] = INIT_1C0_REG;
    mem[10'h1c1] = INIT_1C1_REG;
    mem[10'h1c2] = INIT_1C2_REG;
    mem[10'h1c3] = INIT_1C3_REG;
    mem[10'h1c4] = INIT_1C4_REG;
    mem[10'h1c5] = INIT_1C5_REG;
    mem[10'h1c6] = INIT_1C6_REG;
    mem[10'h1c7] = INIT_1C7_REG;
    mem[10'h1c8] = INIT_1C8_REG;
    mem[10'h1c9] = INIT_1C9_REG;
    mem[10'h1ca] = INIT_1CA_REG;
    mem[10'h1cb] = INIT_1CB_REG;
    mem[10'h1cc] = INIT_1CC_REG;
    mem[10'h1cd] = INIT_1CD_REG;
    mem[10'h1ce] = INIT_1CE_REG;
    mem[10'h1cf] = INIT_1CF_REG;
    mem[10'h1d0] = INIT_1D0_REG;
    mem[10'h1d1] = INIT_1D1_REG;
    mem[10'h1d2] = INIT_1D2_REG;
    mem[10'h1d3] = INIT_1D3_REG;
    mem[10'h1d4] = INIT_1D4_REG;
    mem[10'h1d5] = INIT_1D5_REG;
    mem[10'h1d6] = INIT_1D6_REG;
    mem[10'h1d7] = INIT_1D7_REG;
    mem[10'h1d8] = INIT_1D8_REG;
    mem[10'h1d9] = INIT_1D9_REG;
    mem[10'h1da] = INIT_1DA_REG;
    mem[10'h1db] = INIT_1DB_REG;
    mem[10'h1dc] = INIT_1DC_REG;
    mem[10'h1dd] = INIT_1DD_REG;
    mem[10'h1de] = INIT_1DE_REG;
    mem[10'h1df] = INIT_1DF_REG;
    mem[10'h1e0] = INIT_1E0_REG;
    mem[10'h1e1] = INIT_1E1_REG;
    mem[10'h1e2] = INIT_1E2_REG;
    mem[10'h1e3] = INIT_1E3_REG;
    mem[10'h1e4] = INIT_1E4_REG;
    mem[10'h1e5] = INIT_1E5_REG;
    mem[10'h1e6] = INIT_1E6_REG;
    mem[10'h1e7] = INIT_1E7_REG;
    mem[10'h1e8] = INIT_1E8_REG;
    mem[10'h1e9] = INIT_1E9_REG;
    mem[10'h1ea] = INIT_1EA_REG;
    mem[10'h1eb] = INIT_1EB_REG;
    mem[10'h1ec] = INIT_1EC_REG;
    mem[10'h1ed] = INIT_1ED_REG;
    mem[10'h1ee] = INIT_1EE_REG;
    mem[10'h1ef] = INIT_1EF_REG;
    mem[10'h1f0] = INIT_1F0_REG;
    mem[10'h1f1] = INIT_1F1_REG;
    mem[10'h1f2] = INIT_1F2_REG;
    mem[10'h1f3] = INIT_1F3_REG;
    mem[10'h1f4] = INIT_1F4_REG;
    mem[10'h1f5] = INIT_1F5_REG;
    mem[10'h1f6] = INIT_1F6_REG;
    mem[10'h1f7] = INIT_1F7_REG;
    mem[10'h1f8] = INIT_1F8_REG;
    mem[10'h1f9] = INIT_1F9_REG;
    mem[10'h1fa] = INIT_1FA_REG;
    mem[10'h1fb] = INIT_1FB_REG;
    mem[10'h1fc] = INIT_1FC_REG;
    mem[10'h1fd] = INIT_1FD_REG;
    mem[10'h1fe] = INIT_1FE_REG;
    mem[10'h1ff] = INIT_1FF_REG;
    mem[10'h200] = INIT_200_REG;
    mem[10'h201] = INIT_201_REG;
    mem[10'h202] = INIT_202_REG;
    mem[10'h203] = INIT_203_REG;
    mem[10'h204] = INIT_204_REG;
    mem[10'h205] = INIT_205_REG;
    mem[10'h206] = INIT_206_REG;
    mem[10'h207] = INIT_207_REG;
    mem[10'h208] = INIT_208_REG;
    mem[10'h209] = INIT_209_REG;
    mem[10'h20a] = INIT_20A_REG;
    mem[10'h20b] = INIT_20B_REG;
    mem[10'h20c] = INIT_20C_REG;
    mem[10'h20d] = INIT_20D_REG;
    mem[10'h20e] = INIT_20E_REG;
    mem[10'h20f] = INIT_20F_REG;
    mem[10'h210] = INIT_210_REG;
    mem[10'h211] = INIT_211_REG;
    mem[10'h212] = INIT_212_REG;
    mem[10'h213] = INIT_213_REG;
    mem[10'h214] = INIT_214_REG;
    mem[10'h215] = INIT_215_REG;
    mem[10'h216] = INIT_216_REG;
    mem[10'h217] = INIT_217_REG;
    mem[10'h218] = INIT_218_REG;
    mem[10'h219] = INIT_219_REG;
    mem[10'h21a] = INIT_21A_REG;
    mem[10'h21b] = INIT_21B_REG;
    mem[10'h21c] = INIT_21C_REG;
    mem[10'h21d] = INIT_21D_REG;
    mem[10'h21e] = INIT_21E_REG;
    mem[10'h21f] = INIT_21F_REG;
    mem[10'h220] = INIT_220_REG;
    mem[10'h221] = INIT_221_REG;
    mem[10'h222] = INIT_222_REG;
    mem[10'h223] = INIT_223_REG;
    mem[10'h224] = INIT_224_REG;
    mem[10'h225] = INIT_225_REG;
    mem[10'h226] = INIT_226_REG;
    mem[10'h227] = INIT_227_REG;
    mem[10'h228] = INIT_228_REG;
    mem[10'h229] = INIT_229_REG;
    mem[10'h22a] = INIT_22A_REG;
    mem[10'h22b] = INIT_22B_REG;
    mem[10'h22c] = INIT_22C_REG;
    mem[10'h22d] = INIT_22D_REG;
    mem[10'h22e] = INIT_22E_REG;
    mem[10'h22f] = INIT_22F_REG;
    mem[10'h230] = INIT_230_REG;
    mem[10'h231] = INIT_231_REG;
    mem[10'h232] = INIT_232_REG;
    mem[10'h233] = INIT_233_REG;
    mem[10'h234] = INIT_234_REG;
    mem[10'h235] = INIT_235_REG;
    mem[10'h236] = INIT_236_REG;
    mem[10'h237] = INIT_237_REG;
    mem[10'h238] = INIT_238_REG;
    mem[10'h239] = INIT_239_REG;
    mem[10'h23a] = INIT_23A_REG;
    mem[10'h23b] = INIT_23B_REG;
    mem[10'h23c] = INIT_23C_REG;
    mem[10'h23d] = INIT_23D_REG;
    mem[10'h23e] = INIT_23E_REG;
    mem[10'h23f] = INIT_23F_REG;
    mem[10'h240] = INIT_240_REG;
    mem[10'h241] = INIT_241_REG;
    mem[10'h242] = INIT_242_REG;
    mem[10'h243] = INIT_243_REG;
    mem[10'h244] = INIT_244_REG;
    mem[10'h245] = INIT_245_REG;
    mem[10'h246] = INIT_246_REG;
    mem[10'h247] = INIT_247_REG;
    mem[10'h248] = INIT_248_REG;
    mem[10'h249] = INIT_249_REG;
    mem[10'h24a] = INIT_24A_REG;
    mem[10'h24b] = INIT_24B_REG;
    mem[10'h24c] = INIT_24C_REG;
    mem[10'h24d] = INIT_24D_REG;
    mem[10'h24e] = INIT_24E_REG;
    mem[10'h24f] = INIT_24F_REG;
    mem[10'h250] = INIT_250_REG;
    mem[10'h251] = INIT_251_REG;
    mem[10'h252] = INIT_252_REG;
    mem[10'h253] = INIT_253_REG;
    mem[10'h254] = INIT_254_REG;
    mem[10'h255] = INIT_255_REG;
    mem[10'h256] = INIT_256_REG;
    mem[10'h257] = INIT_257_REG;
    mem[10'h258] = INIT_258_REG;
    mem[10'h259] = INIT_259_REG;
    mem[10'h25a] = INIT_25A_REG;
    mem[10'h25b] = INIT_25B_REG;
    mem[10'h25c] = INIT_25C_REG;
    mem[10'h25d] = INIT_25D_REG;
    mem[10'h25e] = INIT_25E_REG;
    mem[10'h25f] = INIT_25F_REG;
    mem[10'h260] = INIT_260_REG;
    mem[10'h261] = INIT_261_REG;
    mem[10'h262] = INIT_262_REG;
    mem[10'h263] = INIT_263_REG;
    mem[10'h264] = INIT_264_REG;
    mem[10'h265] = INIT_265_REG;
    mem[10'h266] = INIT_266_REG;
    mem[10'h267] = INIT_267_REG;
    mem[10'h268] = INIT_268_REG;
    mem[10'h269] = INIT_269_REG;
    mem[10'h26a] = INIT_26A_REG;
    mem[10'h26b] = INIT_26B_REG;
    mem[10'h26c] = INIT_26C_REG;
    mem[10'h26d] = INIT_26D_REG;
    mem[10'h26e] = INIT_26E_REG;
    mem[10'h26f] = INIT_26F_REG;
    mem[10'h270] = INIT_270_REG;
    mem[10'h271] = INIT_271_REG;
    mem[10'h272] = INIT_272_REG;
    mem[10'h273] = INIT_273_REG;
    mem[10'h274] = INIT_274_REG;
    mem[10'h275] = INIT_275_REG;
    mem[10'h276] = INIT_276_REG;
    mem[10'h277] = INIT_277_REG;
    mem[10'h278] = INIT_278_REG;
    mem[10'h279] = INIT_279_REG;
    mem[10'h27a] = INIT_27A_REG;
    mem[10'h27b] = INIT_27B_REG;
    mem[10'h27c] = INIT_27C_REG;
    mem[10'h27d] = INIT_27D_REG;
    mem[10'h27e] = INIT_27E_REG;
    mem[10'h27f] = INIT_27F_REG;
    mem[10'h280] = INIT_280_REG;
    mem[10'h281] = INIT_281_REG;
    mem[10'h282] = INIT_282_REG;
    mem[10'h283] = INIT_283_REG;
    mem[10'h284] = INIT_284_REG;
    mem[10'h285] = INIT_285_REG;
    mem[10'h286] = INIT_286_REG;
    mem[10'h287] = INIT_287_REG;
    mem[10'h288] = INIT_288_REG;
    mem[10'h289] = INIT_289_REG;
    mem[10'h28a] = INIT_28A_REG;
    mem[10'h28b] = INIT_28B_REG;
    mem[10'h28c] = INIT_28C_REG;
    mem[10'h28d] = INIT_28D_REG;
    mem[10'h28e] = INIT_28E_REG;
    mem[10'h28f] = INIT_28F_REG;
    mem[10'h290] = INIT_290_REG;
    mem[10'h291] = INIT_291_REG;
    mem[10'h292] = INIT_292_REG;
    mem[10'h293] = INIT_293_REG;
    mem[10'h294] = INIT_294_REG;
    mem[10'h295] = INIT_295_REG;
    mem[10'h296] = INIT_296_REG;
    mem[10'h297] = INIT_297_REG;
    mem[10'h298] = INIT_298_REG;
    mem[10'h299] = INIT_299_REG;
    mem[10'h29a] = INIT_29A_REG;
    mem[10'h29b] = INIT_29B_REG;
    mem[10'h29c] = INIT_29C_REG;
    mem[10'h29d] = INIT_29D_REG;
    mem[10'h29e] = INIT_29E_REG;
    mem[10'h29f] = INIT_29F_REG;
    mem[10'h2a0] = INIT_2A0_REG;
    mem[10'h2a1] = INIT_2A1_REG;
    mem[10'h2a2] = INIT_2A2_REG;
    mem[10'h2a3] = INIT_2A3_REG;
    mem[10'h2a4] = INIT_2A4_REG;
    mem[10'h2a5] = INIT_2A5_REG;
    mem[10'h2a6] = INIT_2A6_REG;
    mem[10'h2a7] = INIT_2A7_REG;
    mem[10'h2a8] = INIT_2A8_REG;
    mem[10'h2a9] = INIT_2A9_REG;
    mem[10'h2aa] = INIT_2AA_REG;
    mem[10'h2ab] = INIT_2AB_REG;
    mem[10'h2ac] = INIT_2AC_REG;
    mem[10'h2ad] = INIT_2AD_REG;
    mem[10'h2ae] = INIT_2AE_REG;
    mem[10'h2af] = INIT_2AF_REG;
    mem[10'h2b0] = INIT_2B0_REG;
    mem[10'h2b1] = INIT_2B1_REG;
    mem[10'h2b2] = INIT_2B2_REG;
    mem[10'h2b3] = INIT_2B3_REG;
    mem[10'h2b4] = INIT_2B4_REG;
    mem[10'h2b5] = INIT_2B5_REG;
    mem[10'h2b6] = INIT_2B6_REG;
    mem[10'h2b7] = INIT_2B7_REG;
    mem[10'h2b8] = INIT_2B8_REG;
    mem[10'h2b9] = INIT_2B9_REG;
    mem[10'h2ba] = INIT_2BA_REG;
    mem[10'h2bb] = INIT_2BB_REG;
    mem[10'h2bc] = INIT_2BC_REG;
    mem[10'h2bd] = INIT_2BD_REG;
    mem[10'h2be] = INIT_2BE_REG;
    mem[10'h2bf] = INIT_2BF_REG;
    mem[10'h2c0] = INIT_2C0_REG;
    mem[10'h2c1] = INIT_2C1_REG;
    mem[10'h2c2] = INIT_2C2_REG;
    mem[10'h2c3] = INIT_2C3_REG;
    mem[10'h2c4] = INIT_2C4_REG;
    mem[10'h2c5] = INIT_2C5_REG;
    mem[10'h2c6] = INIT_2C6_REG;
    mem[10'h2c7] = INIT_2C7_REG;
    mem[10'h2c8] = INIT_2C8_REG;
    mem[10'h2c9] = INIT_2C9_REG;
    mem[10'h2ca] = INIT_2CA_REG;
    mem[10'h2cb] = INIT_2CB_REG;
    mem[10'h2cc] = INIT_2CC_REG;
    mem[10'h2cd] = INIT_2CD_REG;
    mem[10'h2ce] = INIT_2CE_REG;
    mem[10'h2cf] = INIT_2CF_REG;
    mem[10'h2d0] = INIT_2D0_REG;
    mem[10'h2d1] = INIT_2D1_REG;
    mem[10'h2d2] = INIT_2D2_REG;
    mem[10'h2d3] = INIT_2D3_REG;
    mem[10'h2d4] = INIT_2D4_REG;
    mem[10'h2d5] = INIT_2D5_REG;
    mem[10'h2d6] = INIT_2D6_REG;
    mem[10'h2d7] = INIT_2D7_REG;
    mem[10'h2d8] = INIT_2D8_REG;
    mem[10'h2d9] = INIT_2D9_REG;
    mem[10'h2da] = INIT_2DA_REG;
    mem[10'h2db] = INIT_2DB_REG;
    mem[10'h2dc] = INIT_2DC_REG;
    mem[10'h2dd] = INIT_2DD_REG;
    mem[10'h2de] = INIT_2DE_REG;
    mem[10'h2df] = INIT_2DF_REG;
    mem[10'h2e0] = INIT_2E0_REG;
    mem[10'h2e1] = INIT_2E1_REG;
    mem[10'h2e2] = INIT_2E2_REG;
    mem[10'h2e3] = INIT_2E3_REG;
    mem[10'h2e4] = INIT_2E4_REG;
    mem[10'h2e5] = INIT_2E5_REG;
    mem[10'h2e6] = INIT_2E6_REG;
    mem[10'h2e7] = INIT_2E7_REG;
    mem[10'h2e8] = INIT_2E8_REG;
    mem[10'h2e9] = INIT_2E9_REG;
    mem[10'h2ea] = INIT_2EA_REG;
    mem[10'h2eb] = INIT_2EB_REG;
    mem[10'h2ec] = INIT_2EC_REG;
    mem[10'h2ed] = INIT_2ED_REG;
    mem[10'h2ee] = INIT_2EE_REG;
    mem[10'h2ef] = INIT_2EF_REG;
    mem[10'h2f0] = INIT_2F0_REG;
    mem[10'h2f1] = INIT_2F1_REG;
    mem[10'h2f2] = INIT_2F2_REG;
    mem[10'h2f3] = INIT_2F3_REG;
    mem[10'h2f4] = INIT_2F4_REG;
    mem[10'h2f5] = INIT_2F5_REG;
    mem[10'h2f6] = INIT_2F6_REG;
    mem[10'h2f7] = INIT_2F7_REG;
    mem[10'h2f8] = INIT_2F8_REG;
    mem[10'h2f9] = INIT_2F9_REG;
    mem[10'h2fa] = INIT_2FA_REG;
    mem[10'h2fb] = INIT_2FB_REG;
    mem[10'h2fc] = INIT_2FC_REG;
    mem[10'h2fd] = INIT_2FD_REG;
    mem[10'h2fe] = INIT_2FE_REG;
    mem[10'h2ff] = INIT_2FF_REG;
    mem[10'h300] = INIT_300_REG;
    mem[10'h301] = INIT_301_REG;
    mem[10'h302] = INIT_302_REG;
    mem[10'h303] = INIT_303_REG;
    mem[10'h304] = INIT_304_REG;
    mem[10'h305] = INIT_305_REG;
    mem[10'h306] = INIT_306_REG;
    mem[10'h307] = INIT_307_REG;
    mem[10'h308] = INIT_308_REG;
    mem[10'h309] = INIT_309_REG;
    mem[10'h30a] = INIT_30A_REG;
    mem[10'h30b] = INIT_30B_REG;
    mem[10'h30c] = INIT_30C_REG;
    mem[10'h30d] = INIT_30D_REG;
    mem[10'h30e] = INIT_30E_REG;
    mem[10'h30f] = INIT_30F_REG;
    mem[10'h310] = INIT_310_REG;
    mem[10'h311] = INIT_311_REG;
    mem[10'h312] = INIT_312_REG;
    mem[10'h313] = INIT_313_REG;
    mem[10'h314] = INIT_314_REG;
    mem[10'h315] = INIT_315_REG;
    mem[10'h316] = INIT_316_REG;
    mem[10'h317] = INIT_317_REG;
    mem[10'h318] = INIT_318_REG;
    mem[10'h319] = INIT_319_REG;
    mem[10'h31a] = INIT_31A_REG;
    mem[10'h31b] = INIT_31B_REG;
    mem[10'h31c] = INIT_31C_REG;
    mem[10'h31d] = INIT_31D_REG;
    mem[10'h31e] = INIT_31E_REG;
    mem[10'h31f] = INIT_31F_REG;
    mem[10'h320] = INIT_320_REG;
    mem[10'h321] = INIT_321_REG;
    mem[10'h322] = INIT_322_REG;
    mem[10'h323] = INIT_323_REG;
    mem[10'h324] = INIT_324_REG;
    mem[10'h325] = INIT_325_REG;
    mem[10'h326] = INIT_326_REG;
    mem[10'h327] = INIT_327_REG;
    mem[10'h328] = INIT_328_REG;
    mem[10'h329] = INIT_329_REG;
    mem[10'h32a] = INIT_32A_REG;
    mem[10'h32b] = INIT_32B_REG;
    mem[10'h32c] = INIT_32C_REG;
    mem[10'h32d] = INIT_32D_REG;
    mem[10'h32e] = INIT_32E_REG;
    mem[10'h32f] = INIT_32F_REG;
    mem[10'h330] = INIT_330_REG;
    mem[10'h331] = INIT_331_REG;
    mem[10'h332] = INIT_332_REG;
    mem[10'h333] = INIT_333_REG;
    mem[10'h334] = INIT_334_REG;
    mem[10'h335] = INIT_335_REG;
    mem[10'h336] = INIT_336_REG;
    mem[10'h337] = INIT_337_REG;
    mem[10'h338] = INIT_338_REG;
    mem[10'h339] = INIT_339_REG;
    mem[10'h33a] = INIT_33A_REG;
    mem[10'h33b] = INIT_33B_REG;
    mem[10'h33c] = INIT_33C_REG;
    mem[10'h33d] = INIT_33D_REG;
    mem[10'h33e] = INIT_33E_REG;
    mem[10'h33f] = INIT_33F_REG;
    mem[10'h340] = INIT_340_REG;
    mem[10'h341] = INIT_341_REG;
    mem[10'h342] = INIT_342_REG;
    mem[10'h343] = INIT_343_REG;
    mem[10'h344] = INIT_344_REG;
    mem[10'h345] = INIT_345_REG;
    mem[10'h346] = INIT_346_REG;
    mem[10'h347] = INIT_347_REG;
    mem[10'h348] = INIT_348_REG;
    mem[10'h349] = INIT_349_REG;
    mem[10'h34a] = INIT_34A_REG;
    mem[10'h34b] = INIT_34B_REG;
    mem[10'h34c] = INIT_34C_REG;
    mem[10'h34d] = INIT_34D_REG;
    mem[10'h34e] = INIT_34E_REG;
    mem[10'h34f] = INIT_34F_REG;
    mem[10'h350] = INIT_350_REG;
    mem[10'h351] = INIT_351_REG;
    mem[10'h352] = INIT_352_REG;
    mem[10'h353] = INIT_353_REG;
    mem[10'h354] = INIT_354_REG;
    mem[10'h355] = INIT_355_REG;
    mem[10'h356] = INIT_356_REG;
    mem[10'h357] = INIT_357_REG;
    mem[10'h358] = INIT_358_REG;
    mem[10'h359] = INIT_359_REG;
    mem[10'h35a] = INIT_35A_REG;
    mem[10'h35b] = INIT_35B_REG;
    mem[10'h35c] = INIT_35C_REG;
    mem[10'h35d] = INIT_35D_REG;
    mem[10'h35e] = INIT_35E_REG;
    mem[10'h35f] = INIT_35F_REG;
    mem[10'h360] = INIT_360_REG;
    mem[10'h361] = INIT_361_REG;
    mem[10'h362] = INIT_362_REG;
    mem[10'h363] = INIT_363_REG;
    mem[10'h364] = INIT_364_REG;
    mem[10'h365] = INIT_365_REG;
    mem[10'h366] = INIT_366_REG;
    mem[10'h367] = INIT_367_REG;
    mem[10'h368] = INIT_368_REG;
    mem[10'h369] = INIT_369_REG;
    mem[10'h36a] = INIT_36A_REG;
    mem[10'h36b] = INIT_36B_REG;
    mem[10'h36c] = INIT_36C_REG;
    mem[10'h36d] = INIT_36D_REG;
    mem[10'h36e] = INIT_36E_REG;
    mem[10'h36f] = INIT_36F_REG;
    mem[10'h370] = INIT_370_REG;
    mem[10'h371] = INIT_371_REG;
    mem[10'h372] = INIT_372_REG;
    mem[10'h373] = INIT_373_REG;
    mem[10'h374] = INIT_374_REG;
    mem[10'h375] = INIT_375_REG;
    mem[10'h376] = INIT_376_REG;
    mem[10'h377] = INIT_377_REG;
    mem[10'h378] = INIT_378_REG;
    mem[10'h379] = INIT_379_REG;
    mem[10'h37a] = INIT_37A_REG;
    mem[10'h37b] = INIT_37B_REG;
    mem[10'h37c] = INIT_37C_REG;
    mem[10'h37d] = INIT_37D_REG;
    mem[10'h37e] = INIT_37E_REG;
    mem[10'h37f] = INIT_37F_REG;
    mem[10'h380] = INIT_380_REG;
    mem[10'h381] = INIT_381_REG;
    mem[10'h382] = INIT_382_REG;
    mem[10'h383] = INIT_383_REG;
    mem[10'h384] = INIT_384_REG;
    mem[10'h385] = INIT_385_REG;
    mem[10'h386] = INIT_386_REG;
    mem[10'h387] = INIT_387_REG;
    mem[10'h388] = INIT_388_REG;
    mem[10'h389] = INIT_389_REG;
    mem[10'h38a] = INIT_38A_REG;
    mem[10'h38b] = INIT_38B_REG;
    mem[10'h38c] = INIT_38C_REG;
    mem[10'h38d] = INIT_38D_REG;
    mem[10'h38e] = INIT_38E_REG;
    mem[10'h38f] = INIT_38F_REG;
    mem[10'h390] = INIT_390_REG;
    mem[10'h391] = INIT_391_REG;
    mem[10'h392] = INIT_392_REG;
    mem[10'h393] = INIT_393_REG;
    mem[10'h394] = INIT_394_REG;
    mem[10'h395] = INIT_395_REG;
    mem[10'h396] = INIT_396_REG;
    mem[10'h397] = INIT_397_REG;
    mem[10'h398] = INIT_398_REG;
    mem[10'h399] = INIT_399_REG;
    mem[10'h39a] = INIT_39A_REG;
    mem[10'h39b] = INIT_39B_REG;
    mem[10'h39c] = INIT_39C_REG;
    mem[10'h39d] = INIT_39D_REG;
    mem[10'h39e] = INIT_39E_REG;
    mem[10'h39f] = INIT_39F_REG;
    mem[10'h3a0] = INIT_3A0_REG;
    mem[10'h3a1] = INIT_3A1_REG;
    mem[10'h3a2] = INIT_3A2_REG;
    mem[10'h3a3] = INIT_3A3_REG;
    mem[10'h3a4] = INIT_3A4_REG;
    mem[10'h3a5] = INIT_3A5_REG;
    mem[10'h3a6] = INIT_3A6_REG;
    mem[10'h3a7] = INIT_3A7_REG;
    mem[10'h3a8] = INIT_3A8_REG;
    mem[10'h3a9] = INIT_3A9_REG;
    mem[10'h3aa] = INIT_3AA_REG;
    mem[10'h3ab] = INIT_3AB_REG;
    mem[10'h3ac] = INIT_3AC_REG;
    mem[10'h3ad] = INIT_3AD_REG;
    mem[10'h3ae] = INIT_3AE_REG;
    mem[10'h3af] = INIT_3AF_REG;
    mem[10'h3b0] = INIT_3B0_REG;
    mem[10'h3b1] = INIT_3B1_REG;
    mem[10'h3b2] = INIT_3B2_REG;
    mem[10'h3b3] = INIT_3B3_REG;
    mem[10'h3b4] = INIT_3B4_REG;
    mem[10'h3b5] = INIT_3B5_REG;
    mem[10'h3b6] = INIT_3B6_REG;
    mem[10'h3b7] = INIT_3B7_REG;
    mem[10'h3b8] = INIT_3B8_REG;
    mem[10'h3b9] = INIT_3B9_REG;
    mem[10'h3ba] = INIT_3BA_REG;
    mem[10'h3bb] = INIT_3BB_REG;
    mem[10'h3bc] = INIT_3BC_REG;
    mem[10'h3bd] = INIT_3BD_REG;
    mem[10'h3be] = INIT_3BE_REG;
    mem[10'h3bf] = INIT_3BF_REG;
    mem[10'h3c0] = INIT_3C0_REG;
    mem[10'h3c1] = INIT_3C1_REG;
    mem[10'h3c2] = INIT_3C2_REG;
    mem[10'h3c3] = INIT_3C3_REG;
    mem[10'h3c4] = INIT_3C4_REG;
    mem[10'h3c5] = INIT_3C5_REG;
    mem[10'h3c6] = INIT_3C6_REG;
    mem[10'h3c7] = INIT_3C7_REG;
    mem[10'h3c8] = INIT_3C8_REG;
    mem[10'h3c9] = INIT_3C9_REG;
    mem[10'h3ca] = INIT_3CA_REG;
    mem[10'h3cb] = INIT_3CB_REG;
    mem[10'h3cc] = INIT_3CC_REG;
    mem[10'h3cd] = INIT_3CD_REG;
    mem[10'h3ce] = INIT_3CE_REG;
    mem[10'h3cf] = INIT_3CF_REG;
    mem[10'h3d0] = INIT_3D0_REG;
    mem[10'h3d1] = INIT_3D1_REG;
    mem[10'h3d2] = INIT_3D2_REG;
    mem[10'h3d3] = INIT_3D3_REG;
    mem[10'h3d4] = INIT_3D4_REG;
    mem[10'h3d5] = INIT_3D5_REG;
    mem[10'h3d6] = INIT_3D6_REG;
    mem[10'h3d7] = INIT_3D7_REG;
    mem[10'h3d8] = INIT_3D8_REG;
    mem[10'h3d9] = INIT_3D9_REG;
    mem[10'h3da] = INIT_3DA_REG;
    mem[10'h3db] = INIT_3DB_REG;
    mem[10'h3dc] = INIT_3DC_REG;
    mem[10'h3dd] = INIT_3DD_REG;
    mem[10'h3de] = INIT_3DE_REG;
    mem[10'h3df] = INIT_3DF_REG;
    mem[10'h3e0] = INIT_3E0_REG;
    mem[10'h3e1] = INIT_3E1_REG;
    mem[10'h3e2] = INIT_3E2_REG;
    mem[10'h3e3] = INIT_3E3_REG;
    mem[10'h3e4] = INIT_3E4_REG;
    mem[10'h3e5] = INIT_3E5_REG;
    mem[10'h3e6] = INIT_3E6_REG;
    mem[10'h3e7] = INIT_3E7_REG;
    mem[10'h3e8] = INIT_3E8_REG;
    mem[10'h3e9] = INIT_3E9_REG;
    mem[10'h3ea] = INIT_3EA_REG;
    mem[10'h3eb] = INIT_3EB_REG;
    mem[10'h3ec] = INIT_3EC_REG;
    mem[10'h3ed] = INIT_3ED_REG;
    mem[10'h3ee] = INIT_3EE_REG;
    mem[10'h3ef] = INIT_3EF_REG;
    mem[10'h3f0] = INIT_3F0_REG;
    mem[10'h3f1] = INIT_3F1_REG;
    mem[10'h3f2] = INIT_3F2_REG;
    mem[10'h3f3] = INIT_3F3_REG;
    mem[10'h3f4] = INIT_3F4_REG;
    mem[10'h3f5] = INIT_3F5_REG;
    mem[10'h3f6] = INIT_3F6_REG;
    mem[10'h3f7] = INIT_3F7_REG;
    mem[10'h3f8] = INIT_3F8_REG;
    mem[10'h3f9] = INIT_3F9_REG;
    mem[10'h3fa] = INIT_3FA_REG;
    mem[10'h3fb] = INIT_3FB_REG;
    mem[10'h3fc] = INIT_3FC_REG;
    mem[10'h3fd] = INIT_3FD_REG;
    mem[10'h3fe] = INIT_3FE_REG;
    mem[10'h3ff] = INIT_3FF_REG;
   end
  end
  always @ (posedge shut_down) begin
    mem[10'h000] = D_UNDEF;
    mem[10'h001] = D_UNDEF;
    mem[10'h002] = D_UNDEF;
    mem[10'h003] = D_UNDEF;
    mem[10'h004] = D_UNDEF;
    mem[10'h005] = D_UNDEF;
    mem[10'h006] = D_UNDEF;
    mem[10'h007] = D_UNDEF;
    mem[10'h008] = D_UNDEF;
    mem[10'h009] = D_UNDEF;
    mem[10'h00a] = D_UNDEF;
    mem[10'h00b] = D_UNDEF;
    mem[10'h00c] = D_UNDEF;
    mem[10'h00d] = D_UNDEF;
    mem[10'h00e] = D_UNDEF;
    mem[10'h00f] = D_UNDEF;
    mem[10'h010] = D_UNDEF;
    mem[10'h011] = D_UNDEF;
    mem[10'h012] = D_UNDEF;
    mem[10'h013] = D_UNDEF;
    mem[10'h014] = D_UNDEF;
    mem[10'h015] = D_UNDEF;
    mem[10'h016] = D_UNDEF;
    mem[10'h017] = D_UNDEF;
    mem[10'h018] = D_UNDEF;
    mem[10'h019] = D_UNDEF;
    mem[10'h01a] = D_UNDEF;
    mem[10'h01b] = D_UNDEF;
    mem[10'h01c] = D_UNDEF;
    mem[10'h01d] = D_UNDEF;
    mem[10'h01e] = D_UNDEF;
    mem[10'h01f] = D_UNDEF;
    mem[10'h020] = D_UNDEF;
    mem[10'h021] = D_UNDEF;
    mem[10'h022] = D_UNDEF;
    mem[10'h023] = D_UNDEF;
    mem[10'h024] = D_UNDEF;
    mem[10'h025] = D_UNDEF;
    mem[10'h026] = D_UNDEF;
    mem[10'h027] = D_UNDEF;
    mem[10'h028] = D_UNDEF;
    mem[10'h029] = D_UNDEF;
    mem[10'h02a] = D_UNDEF;
    mem[10'h02b] = D_UNDEF;
    mem[10'h02c] = D_UNDEF;
    mem[10'h02d] = D_UNDEF;
    mem[10'h02e] = D_UNDEF;
    mem[10'h02f] = D_UNDEF;
    mem[10'h030] = D_UNDEF;
    mem[10'h031] = D_UNDEF;
    mem[10'h032] = D_UNDEF;
    mem[10'h033] = D_UNDEF;
    mem[10'h034] = D_UNDEF;
    mem[10'h035] = D_UNDEF;
    mem[10'h036] = D_UNDEF;
    mem[10'h037] = D_UNDEF;
    mem[10'h038] = D_UNDEF;
    mem[10'h039] = D_UNDEF;
    mem[10'h03a] = D_UNDEF;
    mem[10'h03b] = D_UNDEF;
    mem[10'h03c] = D_UNDEF;
    mem[10'h03d] = D_UNDEF;
    mem[10'h03e] = D_UNDEF;
    mem[10'h03f] = D_UNDEF;
    mem[10'h040] = D_UNDEF;
    mem[10'h041] = D_UNDEF;
    mem[10'h042] = D_UNDEF;
    mem[10'h043] = D_UNDEF;
    mem[10'h044] = D_UNDEF;
    mem[10'h045] = D_UNDEF;
    mem[10'h046] = D_UNDEF;
    mem[10'h047] = D_UNDEF;
    mem[10'h048] = D_UNDEF;
    mem[10'h049] = D_UNDEF;
    mem[10'h04a] = D_UNDEF;
    mem[10'h04b] = D_UNDEF;
    mem[10'h04c] = D_UNDEF;
    mem[10'h04d] = D_UNDEF;
    mem[10'h04e] = D_UNDEF;
    mem[10'h04f] = D_UNDEF;
    mem[10'h050] = D_UNDEF;
    mem[10'h051] = D_UNDEF;
    mem[10'h052] = D_UNDEF;
    mem[10'h053] = D_UNDEF;
    mem[10'h054] = D_UNDEF;
    mem[10'h055] = D_UNDEF;
    mem[10'h056] = D_UNDEF;
    mem[10'h057] = D_UNDEF;
    mem[10'h058] = D_UNDEF;
    mem[10'h059] = D_UNDEF;
    mem[10'h05a] = D_UNDEF;
    mem[10'h05b] = D_UNDEF;
    mem[10'h05c] = D_UNDEF;
    mem[10'h05d] = D_UNDEF;
    mem[10'h05e] = D_UNDEF;
    mem[10'h05f] = D_UNDEF;
    mem[10'h060] = D_UNDEF;
    mem[10'h061] = D_UNDEF;
    mem[10'h062] = D_UNDEF;
    mem[10'h063] = D_UNDEF;
    mem[10'h064] = D_UNDEF;
    mem[10'h065] = D_UNDEF;
    mem[10'h066] = D_UNDEF;
    mem[10'h067] = D_UNDEF;
    mem[10'h068] = D_UNDEF;
    mem[10'h069] = D_UNDEF;
    mem[10'h06a] = D_UNDEF;
    mem[10'h06b] = D_UNDEF;
    mem[10'h06c] = D_UNDEF;
    mem[10'h06d] = D_UNDEF;
    mem[10'h06e] = D_UNDEF;
    mem[10'h06f] = D_UNDEF;
    mem[10'h070] = D_UNDEF;
    mem[10'h071] = D_UNDEF;
    mem[10'h072] = D_UNDEF;
    mem[10'h073] = D_UNDEF;
    mem[10'h074] = D_UNDEF;
    mem[10'h075] = D_UNDEF;
    mem[10'h076] = D_UNDEF;
    mem[10'h077] = D_UNDEF;
    mem[10'h078] = D_UNDEF;
    mem[10'h079] = D_UNDEF;
    mem[10'h07a] = D_UNDEF;
    mem[10'h07b] = D_UNDEF;
    mem[10'h07c] = D_UNDEF;
    mem[10'h07d] = D_UNDEF;
    mem[10'h07e] = D_UNDEF;
    mem[10'h07f] = D_UNDEF;
    mem[10'h080] = D_UNDEF;
    mem[10'h081] = D_UNDEF;
    mem[10'h082] = D_UNDEF;
    mem[10'h083] = D_UNDEF;
    mem[10'h084] = D_UNDEF;
    mem[10'h085] = D_UNDEF;
    mem[10'h086] = D_UNDEF;
    mem[10'h087] = D_UNDEF;
    mem[10'h088] = D_UNDEF;
    mem[10'h089] = D_UNDEF;
    mem[10'h08a] = D_UNDEF;
    mem[10'h08b] = D_UNDEF;
    mem[10'h08c] = D_UNDEF;
    mem[10'h08d] = D_UNDEF;
    mem[10'h08e] = D_UNDEF;
    mem[10'h08f] = D_UNDEF;
    mem[10'h090] = D_UNDEF;
    mem[10'h091] = D_UNDEF;
    mem[10'h092] = D_UNDEF;
    mem[10'h093] = D_UNDEF;
    mem[10'h094] = D_UNDEF;
    mem[10'h095] = D_UNDEF;
    mem[10'h096] = D_UNDEF;
    mem[10'h097] = D_UNDEF;
    mem[10'h098] = D_UNDEF;
    mem[10'h099] = D_UNDEF;
    mem[10'h09a] = D_UNDEF;
    mem[10'h09b] = D_UNDEF;
    mem[10'h09c] = D_UNDEF;
    mem[10'h09d] = D_UNDEF;
    mem[10'h09e] = D_UNDEF;
    mem[10'h09f] = D_UNDEF;
    mem[10'h0a0] = D_UNDEF;
    mem[10'h0a1] = D_UNDEF;
    mem[10'h0a2] = D_UNDEF;
    mem[10'h0a3] = D_UNDEF;
    mem[10'h0a4] = D_UNDEF;
    mem[10'h0a5] = D_UNDEF;
    mem[10'h0a6] = D_UNDEF;
    mem[10'h0a7] = D_UNDEF;
    mem[10'h0a8] = D_UNDEF;
    mem[10'h0a9] = D_UNDEF;
    mem[10'h0aa] = D_UNDEF;
    mem[10'h0ab] = D_UNDEF;
    mem[10'h0ac] = D_UNDEF;
    mem[10'h0ad] = D_UNDEF;
    mem[10'h0ae] = D_UNDEF;
    mem[10'h0af] = D_UNDEF;
    mem[10'h0b0] = D_UNDEF;
    mem[10'h0b1] = D_UNDEF;
    mem[10'h0b2] = D_UNDEF;
    mem[10'h0b3] = D_UNDEF;
    mem[10'h0b4] = D_UNDEF;
    mem[10'h0b5] = D_UNDEF;
    mem[10'h0b6] = D_UNDEF;
    mem[10'h0b7] = D_UNDEF;
    mem[10'h0b8] = D_UNDEF;
    mem[10'h0b9] = D_UNDEF;
    mem[10'h0ba] = D_UNDEF;
    mem[10'h0bb] = D_UNDEF;
    mem[10'h0bc] = D_UNDEF;
    mem[10'h0bd] = D_UNDEF;
    mem[10'h0be] = D_UNDEF;
    mem[10'h0bf] = D_UNDEF;
    mem[10'h0c0] = D_UNDEF;
    mem[10'h0c1] = D_UNDEF;
    mem[10'h0c2] = D_UNDEF;
    mem[10'h0c3] = D_UNDEF;
    mem[10'h0c4] = D_UNDEF;
    mem[10'h0c5] = D_UNDEF;
    mem[10'h0c6] = D_UNDEF;
    mem[10'h0c7] = D_UNDEF;
    mem[10'h0c8] = D_UNDEF;
    mem[10'h0c9] = D_UNDEF;
    mem[10'h0ca] = D_UNDEF;
    mem[10'h0cb] = D_UNDEF;
    mem[10'h0cc] = D_UNDEF;
    mem[10'h0cd] = D_UNDEF;
    mem[10'h0ce] = D_UNDEF;
    mem[10'h0cf] = D_UNDEF;
    mem[10'h0d0] = D_UNDEF;
    mem[10'h0d1] = D_UNDEF;
    mem[10'h0d2] = D_UNDEF;
    mem[10'h0d3] = D_UNDEF;
    mem[10'h0d4] = D_UNDEF;
    mem[10'h0d5] = D_UNDEF;
    mem[10'h0d6] = D_UNDEF;
    mem[10'h0d7] = D_UNDEF;
    mem[10'h0d8] = D_UNDEF;
    mem[10'h0d9] = D_UNDEF;
    mem[10'h0da] = D_UNDEF;
    mem[10'h0db] = D_UNDEF;
    mem[10'h0dc] = D_UNDEF;
    mem[10'h0dd] = D_UNDEF;
    mem[10'h0de] = D_UNDEF;
    mem[10'h0df] = D_UNDEF;
    mem[10'h0e0] = D_UNDEF;
    mem[10'h0e1] = D_UNDEF;
    mem[10'h0e2] = D_UNDEF;
    mem[10'h0e3] = D_UNDEF;
    mem[10'h0e4] = D_UNDEF;
    mem[10'h0e5] = D_UNDEF;
    mem[10'h0e6] = D_UNDEF;
    mem[10'h0e7] = D_UNDEF;
    mem[10'h0e8] = D_UNDEF;
    mem[10'h0e9] = D_UNDEF;
    mem[10'h0ea] = D_UNDEF;
    mem[10'h0eb] = D_UNDEF;
    mem[10'h0ec] = D_UNDEF;
    mem[10'h0ed] = D_UNDEF;
    mem[10'h0ee] = D_UNDEF;
    mem[10'h0ef] = D_UNDEF;
    mem[10'h0f0] = D_UNDEF;
    mem[10'h0f1] = D_UNDEF;
    mem[10'h0f2] = D_UNDEF;
    mem[10'h0f3] = D_UNDEF;
    mem[10'h0f4] = D_UNDEF;
    mem[10'h0f5] = D_UNDEF;
    mem[10'h0f6] = D_UNDEF;
    mem[10'h0f7] = D_UNDEF;
    mem[10'h0f8] = D_UNDEF;
    mem[10'h0f9] = D_UNDEF;
    mem[10'h0fa] = D_UNDEF;
    mem[10'h0fb] = D_UNDEF;
    mem[10'h0fc] = D_UNDEF;
    mem[10'h0fd] = D_UNDEF;
    mem[10'h0fe] = D_UNDEF;
    mem[10'h0ff] = D_UNDEF;
    mem[10'h100] = D_UNDEF;
    mem[10'h101] = D_UNDEF;
    mem[10'h102] = D_UNDEF;
    mem[10'h103] = D_UNDEF;
    mem[10'h104] = D_UNDEF;
    mem[10'h105] = D_UNDEF;
    mem[10'h106] = D_UNDEF;
    mem[10'h107] = D_UNDEF;
    mem[10'h108] = D_UNDEF;
    mem[10'h109] = D_UNDEF;
    mem[10'h10a] = D_UNDEF;
    mem[10'h10b] = D_UNDEF;
    mem[10'h10c] = D_UNDEF;
    mem[10'h10d] = D_UNDEF;
    mem[10'h10e] = D_UNDEF;
    mem[10'h10f] = D_UNDEF;
    mem[10'h110] = D_UNDEF;
    mem[10'h111] = D_UNDEF;
    mem[10'h112] = D_UNDEF;
    mem[10'h113] = D_UNDEF;
    mem[10'h114] = D_UNDEF;
    mem[10'h115] = D_UNDEF;
    mem[10'h116] = D_UNDEF;
    mem[10'h117] = D_UNDEF;
    mem[10'h118] = D_UNDEF;
    mem[10'h119] = D_UNDEF;
    mem[10'h11a] = D_UNDEF;
    mem[10'h11b] = D_UNDEF;
    mem[10'h11c] = D_UNDEF;
    mem[10'h11d] = D_UNDEF;
    mem[10'h11e] = D_UNDEF;
    mem[10'h11f] = D_UNDEF;
    mem[10'h120] = D_UNDEF;
    mem[10'h121] = D_UNDEF;
    mem[10'h122] = D_UNDEF;
    mem[10'h123] = D_UNDEF;
    mem[10'h124] = D_UNDEF;
    mem[10'h125] = D_UNDEF;
    mem[10'h126] = D_UNDEF;
    mem[10'h127] = D_UNDEF;
    mem[10'h128] = D_UNDEF;
    mem[10'h129] = D_UNDEF;
    mem[10'h12a] = D_UNDEF;
    mem[10'h12b] = D_UNDEF;
    mem[10'h12c] = D_UNDEF;
    mem[10'h12d] = D_UNDEF;
    mem[10'h12e] = D_UNDEF;
    mem[10'h12f] = D_UNDEF;
    mem[10'h130] = D_UNDEF;
    mem[10'h131] = D_UNDEF;
    mem[10'h132] = D_UNDEF;
    mem[10'h133] = D_UNDEF;
    mem[10'h134] = D_UNDEF;
    mem[10'h135] = D_UNDEF;
    mem[10'h136] = D_UNDEF;
    mem[10'h137] = D_UNDEF;
    mem[10'h138] = D_UNDEF;
    mem[10'h139] = D_UNDEF;
    mem[10'h13a] = D_UNDEF;
    mem[10'h13b] = D_UNDEF;
    mem[10'h13c] = D_UNDEF;
    mem[10'h13d] = D_UNDEF;
    mem[10'h13e] = D_UNDEF;
    mem[10'h13f] = D_UNDEF;
    mem[10'h140] = D_UNDEF;
    mem[10'h141] = D_UNDEF;
    mem[10'h142] = D_UNDEF;
    mem[10'h143] = D_UNDEF;
    mem[10'h144] = D_UNDEF;
    mem[10'h145] = D_UNDEF;
    mem[10'h146] = D_UNDEF;
    mem[10'h147] = D_UNDEF;
    mem[10'h148] = D_UNDEF;
    mem[10'h149] = D_UNDEF;
    mem[10'h14a] = D_UNDEF;
    mem[10'h14b] = D_UNDEF;
    mem[10'h14c] = D_UNDEF;
    mem[10'h14d] = D_UNDEF;
    mem[10'h14e] = D_UNDEF;
    mem[10'h14f] = D_UNDEF;
    mem[10'h150] = D_UNDEF;
    mem[10'h151] = D_UNDEF;
    mem[10'h152] = D_UNDEF;
    mem[10'h153] = D_UNDEF;
    mem[10'h154] = D_UNDEF;
    mem[10'h155] = D_UNDEF;
    mem[10'h156] = D_UNDEF;
    mem[10'h157] = D_UNDEF;
    mem[10'h158] = D_UNDEF;
    mem[10'h159] = D_UNDEF;
    mem[10'h15a] = D_UNDEF;
    mem[10'h15b] = D_UNDEF;
    mem[10'h15c] = D_UNDEF;
    mem[10'h15d] = D_UNDEF;
    mem[10'h15e] = D_UNDEF;
    mem[10'h15f] = D_UNDEF;
    mem[10'h160] = D_UNDEF;
    mem[10'h161] = D_UNDEF;
    mem[10'h162] = D_UNDEF;
    mem[10'h163] = D_UNDEF;
    mem[10'h164] = D_UNDEF;
    mem[10'h165] = D_UNDEF;
    mem[10'h166] = D_UNDEF;
    mem[10'h167] = D_UNDEF;
    mem[10'h168] = D_UNDEF;
    mem[10'h169] = D_UNDEF;
    mem[10'h16a] = D_UNDEF;
    mem[10'h16b] = D_UNDEF;
    mem[10'h16c] = D_UNDEF;
    mem[10'h16d] = D_UNDEF;
    mem[10'h16e] = D_UNDEF;
    mem[10'h16f] = D_UNDEF;
    mem[10'h170] = D_UNDEF;
    mem[10'h171] = D_UNDEF;
    mem[10'h172] = D_UNDEF;
    mem[10'h173] = D_UNDEF;
    mem[10'h174] = D_UNDEF;
    mem[10'h175] = D_UNDEF;
    mem[10'h176] = D_UNDEF;
    mem[10'h177] = D_UNDEF;
    mem[10'h178] = D_UNDEF;
    mem[10'h179] = D_UNDEF;
    mem[10'h17a] = D_UNDEF;
    mem[10'h17b] = D_UNDEF;
    mem[10'h17c] = D_UNDEF;
    mem[10'h17d] = D_UNDEF;
    mem[10'h17e] = D_UNDEF;
    mem[10'h17f] = D_UNDEF;
    mem[10'h180] = D_UNDEF;
    mem[10'h181] = D_UNDEF;
    mem[10'h182] = D_UNDEF;
    mem[10'h183] = D_UNDEF;
    mem[10'h184] = D_UNDEF;
    mem[10'h185] = D_UNDEF;
    mem[10'h186] = D_UNDEF;
    mem[10'h187] = D_UNDEF;
    mem[10'h188] = D_UNDEF;
    mem[10'h189] = D_UNDEF;
    mem[10'h18a] = D_UNDEF;
    mem[10'h18b] = D_UNDEF;
    mem[10'h18c] = D_UNDEF;
    mem[10'h18d] = D_UNDEF;
    mem[10'h18e] = D_UNDEF;
    mem[10'h18f] = D_UNDEF;
    mem[10'h190] = D_UNDEF;
    mem[10'h191] = D_UNDEF;
    mem[10'h192] = D_UNDEF;
    mem[10'h193] = D_UNDEF;
    mem[10'h194] = D_UNDEF;
    mem[10'h195] = D_UNDEF;
    mem[10'h196] = D_UNDEF;
    mem[10'h197] = D_UNDEF;
    mem[10'h198] = D_UNDEF;
    mem[10'h199] = D_UNDEF;
    mem[10'h19a] = D_UNDEF;
    mem[10'h19b] = D_UNDEF;
    mem[10'h19c] = D_UNDEF;
    mem[10'h19d] = D_UNDEF;
    mem[10'h19e] = D_UNDEF;
    mem[10'h19f] = D_UNDEF;
    mem[10'h1a0] = D_UNDEF;
    mem[10'h1a1] = D_UNDEF;
    mem[10'h1a2] = D_UNDEF;
    mem[10'h1a3] = D_UNDEF;
    mem[10'h1a4] = D_UNDEF;
    mem[10'h1a5] = D_UNDEF;
    mem[10'h1a6] = D_UNDEF;
    mem[10'h1a7] = D_UNDEF;
    mem[10'h1a8] = D_UNDEF;
    mem[10'h1a9] = D_UNDEF;
    mem[10'h1aa] = D_UNDEF;
    mem[10'h1ab] = D_UNDEF;
    mem[10'h1ac] = D_UNDEF;
    mem[10'h1ad] = D_UNDEF;
    mem[10'h1ae] = D_UNDEF;
    mem[10'h1af] = D_UNDEF;
    mem[10'h1b0] = D_UNDEF;
    mem[10'h1b1] = D_UNDEF;
    mem[10'h1b2] = D_UNDEF;
    mem[10'h1b3] = D_UNDEF;
    mem[10'h1b4] = D_UNDEF;
    mem[10'h1b5] = D_UNDEF;
    mem[10'h1b6] = D_UNDEF;
    mem[10'h1b7] = D_UNDEF;
    mem[10'h1b8] = D_UNDEF;
    mem[10'h1b9] = D_UNDEF;
    mem[10'h1ba] = D_UNDEF;
    mem[10'h1bb] = D_UNDEF;
    mem[10'h1bc] = D_UNDEF;
    mem[10'h1bd] = D_UNDEF;
    mem[10'h1be] = D_UNDEF;
    mem[10'h1bf] = D_UNDEF;
    mem[10'h1c0] = D_UNDEF;
    mem[10'h1c1] = D_UNDEF;
    mem[10'h1c2] = D_UNDEF;
    mem[10'h1c3] = D_UNDEF;
    mem[10'h1c4] = D_UNDEF;
    mem[10'h1c5] = D_UNDEF;
    mem[10'h1c6] = D_UNDEF;
    mem[10'h1c7] = D_UNDEF;
    mem[10'h1c8] = D_UNDEF;
    mem[10'h1c9] = D_UNDEF;
    mem[10'h1ca] = D_UNDEF;
    mem[10'h1cb] = D_UNDEF;
    mem[10'h1cc] = D_UNDEF;
    mem[10'h1cd] = D_UNDEF;
    mem[10'h1ce] = D_UNDEF;
    mem[10'h1cf] = D_UNDEF;
    mem[10'h1d0] = D_UNDEF;
    mem[10'h1d1] = D_UNDEF;
    mem[10'h1d2] = D_UNDEF;
    mem[10'h1d3] = D_UNDEF;
    mem[10'h1d4] = D_UNDEF;
    mem[10'h1d5] = D_UNDEF;
    mem[10'h1d6] = D_UNDEF;
    mem[10'h1d7] = D_UNDEF;
    mem[10'h1d8] = D_UNDEF;
    mem[10'h1d9] = D_UNDEF;
    mem[10'h1da] = D_UNDEF;
    mem[10'h1db] = D_UNDEF;
    mem[10'h1dc] = D_UNDEF;
    mem[10'h1dd] = D_UNDEF;
    mem[10'h1de] = D_UNDEF;
    mem[10'h1df] = D_UNDEF;
    mem[10'h1e0] = D_UNDEF;
    mem[10'h1e1] = D_UNDEF;
    mem[10'h1e2] = D_UNDEF;
    mem[10'h1e3] = D_UNDEF;
    mem[10'h1e4] = D_UNDEF;
    mem[10'h1e5] = D_UNDEF;
    mem[10'h1e6] = D_UNDEF;
    mem[10'h1e7] = D_UNDEF;
    mem[10'h1e8] = D_UNDEF;
    mem[10'h1e9] = D_UNDEF;
    mem[10'h1ea] = D_UNDEF;
    mem[10'h1eb] = D_UNDEF;
    mem[10'h1ec] = D_UNDEF;
    mem[10'h1ed] = D_UNDEF;
    mem[10'h1ee] = D_UNDEF;
    mem[10'h1ef] = D_UNDEF;
    mem[10'h1f0] = D_UNDEF;
    mem[10'h1f1] = D_UNDEF;
    mem[10'h1f2] = D_UNDEF;
    mem[10'h1f3] = D_UNDEF;
    mem[10'h1f4] = D_UNDEF;
    mem[10'h1f5] = D_UNDEF;
    mem[10'h1f6] = D_UNDEF;
    mem[10'h1f7] = D_UNDEF;
    mem[10'h1f8] = D_UNDEF;
    mem[10'h1f9] = D_UNDEF;
    mem[10'h1fa] = D_UNDEF;
    mem[10'h1fb] = D_UNDEF;
    mem[10'h1fc] = D_UNDEF;
    mem[10'h1fd] = D_UNDEF;
    mem[10'h1fe] = D_UNDEF;
    mem[10'h1ff] = D_UNDEF;
    mem[10'h200] = D_UNDEF;
    mem[10'h201] = D_UNDEF;
    mem[10'h202] = D_UNDEF;
    mem[10'h203] = D_UNDEF;
    mem[10'h204] = D_UNDEF;
    mem[10'h205] = D_UNDEF;
    mem[10'h206] = D_UNDEF;
    mem[10'h207] = D_UNDEF;
    mem[10'h208] = D_UNDEF;
    mem[10'h209] = D_UNDEF;
    mem[10'h20a] = D_UNDEF;
    mem[10'h20b] = D_UNDEF;
    mem[10'h20c] = D_UNDEF;
    mem[10'h20d] = D_UNDEF;
    mem[10'h20e] = D_UNDEF;
    mem[10'h20f] = D_UNDEF;
    mem[10'h210] = D_UNDEF;
    mem[10'h211] = D_UNDEF;
    mem[10'h212] = D_UNDEF;
    mem[10'h213] = D_UNDEF;
    mem[10'h214] = D_UNDEF;
    mem[10'h215] = D_UNDEF;
    mem[10'h216] = D_UNDEF;
    mem[10'h217] = D_UNDEF;
    mem[10'h218] = D_UNDEF;
    mem[10'h219] = D_UNDEF;
    mem[10'h21a] = D_UNDEF;
    mem[10'h21b] = D_UNDEF;
    mem[10'h21c] = D_UNDEF;
    mem[10'h21d] = D_UNDEF;
    mem[10'h21e] = D_UNDEF;
    mem[10'h21f] = D_UNDEF;
    mem[10'h220] = D_UNDEF;
    mem[10'h221] = D_UNDEF;
    mem[10'h222] = D_UNDEF;
    mem[10'h223] = D_UNDEF;
    mem[10'h224] = D_UNDEF;
    mem[10'h225] = D_UNDEF;
    mem[10'h226] = D_UNDEF;
    mem[10'h227] = D_UNDEF;
    mem[10'h228] = D_UNDEF;
    mem[10'h229] = D_UNDEF;
    mem[10'h22a] = D_UNDEF;
    mem[10'h22b] = D_UNDEF;
    mem[10'h22c] = D_UNDEF;
    mem[10'h22d] = D_UNDEF;
    mem[10'h22e] = D_UNDEF;
    mem[10'h22f] = D_UNDEF;
    mem[10'h230] = D_UNDEF;
    mem[10'h231] = D_UNDEF;
    mem[10'h232] = D_UNDEF;
    mem[10'h233] = D_UNDEF;
    mem[10'h234] = D_UNDEF;
    mem[10'h235] = D_UNDEF;
    mem[10'h236] = D_UNDEF;
    mem[10'h237] = D_UNDEF;
    mem[10'h238] = D_UNDEF;
    mem[10'h239] = D_UNDEF;
    mem[10'h23a] = D_UNDEF;
    mem[10'h23b] = D_UNDEF;
    mem[10'h23c] = D_UNDEF;
    mem[10'h23d] = D_UNDEF;
    mem[10'h23e] = D_UNDEF;
    mem[10'h23f] = D_UNDEF;
    mem[10'h240] = D_UNDEF;
    mem[10'h241] = D_UNDEF;
    mem[10'h242] = D_UNDEF;
    mem[10'h243] = D_UNDEF;
    mem[10'h244] = D_UNDEF;
    mem[10'h245] = D_UNDEF;
    mem[10'h246] = D_UNDEF;
    mem[10'h247] = D_UNDEF;
    mem[10'h248] = D_UNDEF;
    mem[10'h249] = D_UNDEF;
    mem[10'h24a] = D_UNDEF;
    mem[10'h24b] = D_UNDEF;
    mem[10'h24c] = D_UNDEF;
    mem[10'h24d] = D_UNDEF;
    mem[10'h24e] = D_UNDEF;
    mem[10'h24f] = D_UNDEF;
    mem[10'h250] = D_UNDEF;
    mem[10'h251] = D_UNDEF;
    mem[10'h252] = D_UNDEF;
    mem[10'h253] = D_UNDEF;
    mem[10'h254] = D_UNDEF;
    mem[10'h255] = D_UNDEF;
    mem[10'h256] = D_UNDEF;
    mem[10'h257] = D_UNDEF;
    mem[10'h258] = D_UNDEF;
    mem[10'h259] = D_UNDEF;
    mem[10'h25a] = D_UNDEF;
    mem[10'h25b] = D_UNDEF;
    mem[10'h25c] = D_UNDEF;
    mem[10'h25d] = D_UNDEF;
    mem[10'h25e] = D_UNDEF;
    mem[10'h25f] = D_UNDEF;
    mem[10'h260] = D_UNDEF;
    mem[10'h261] = D_UNDEF;
    mem[10'h262] = D_UNDEF;
    mem[10'h263] = D_UNDEF;
    mem[10'h264] = D_UNDEF;
    mem[10'h265] = D_UNDEF;
    mem[10'h266] = D_UNDEF;
    mem[10'h267] = D_UNDEF;
    mem[10'h268] = D_UNDEF;
    mem[10'h269] = D_UNDEF;
    mem[10'h26a] = D_UNDEF;
    mem[10'h26b] = D_UNDEF;
    mem[10'h26c] = D_UNDEF;
    mem[10'h26d] = D_UNDEF;
    mem[10'h26e] = D_UNDEF;
    mem[10'h26f] = D_UNDEF;
    mem[10'h270] = D_UNDEF;
    mem[10'h271] = D_UNDEF;
    mem[10'h272] = D_UNDEF;
    mem[10'h273] = D_UNDEF;
    mem[10'h274] = D_UNDEF;
    mem[10'h275] = D_UNDEF;
    mem[10'h276] = D_UNDEF;
    mem[10'h277] = D_UNDEF;
    mem[10'h278] = D_UNDEF;
    mem[10'h279] = D_UNDEF;
    mem[10'h27a] = D_UNDEF;
    mem[10'h27b] = D_UNDEF;
    mem[10'h27c] = D_UNDEF;
    mem[10'h27d] = D_UNDEF;
    mem[10'h27e] = D_UNDEF;
    mem[10'h27f] = D_UNDEF;
    mem[10'h280] = D_UNDEF;
    mem[10'h281] = D_UNDEF;
    mem[10'h282] = D_UNDEF;
    mem[10'h283] = D_UNDEF;
    mem[10'h284] = D_UNDEF;
    mem[10'h285] = D_UNDEF;
    mem[10'h286] = D_UNDEF;
    mem[10'h287] = D_UNDEF;
    mem[10'h288] = D_UNDEF;
    mem[10'h289] = D_UNDEF;
    mem[10'h28a] = D_UNDEF;
    mem[10'h28b] = D_UNDEF;
    mem[10'h28c] = D_UNDEF;
    mem[10'h28d] = D_UNDEF;
    mem[10'h28e] = D_UNDEF;
    mem[10'h28f] = D_UNDEF;
    mem[10'h290] = D_UNDEF;
    mem[10'h291] = D_UNDEF;
    mem[10'h292] = D_UNDEF;
    mem[10'h293] = D_UNDEF;
    mem[10'h294] = D_UNDEF;
    mem[10'h295] = D_UNDEF;
    mem[10'h296] = D_UNDEF;
    mem[10'h297] = D_UNDEF;
    mem[10'h298] = D_UNDEF;
    mem[10'h299] = D_UNDEF;
    mem[10'h29a] = D_UNDEF;
    mem[10'h29b] = D_UNDEF;
    mem[10'h29c] = D_UNDEF;
    mem[10'h29d] = D_UNDEF;
    mem[10'h29e] = D_UNDEF;
    mem[10'h29f] = D_UNDEF;
    mem[10'h2a0] = D_UNDEF;
    mem[10'h2a1] = D_UNDEF;
    mem[10'h2a2] = D_UNDEF;
    mem[10'h2a3] = D_UNDEF;
    mem[10'h2a4] = D_UNDEF;
    mem[10'h2a5] = D_UNDEF;
    mem[10'h2a6] = D_UNDEF;
    mem[10'h2a7] = D_UNDEF;
    mem[10'h2a8] = D_UNDEF;
    mem[10'h2a9] = D_UNDEF;
    mem[10'h2aa] = D_UNDEF;
    mem[10'h2ab] = D_UNDEF;
    mem[10'h2ac] = D_UNDEF;
    mem[10'h2ad] = D_UNDEF;
    mem[10'h2ae] = D_UNDEF;
    mem[10'h2af] = D_UNDEF;
    mem[10'h2b0] = D_UNDEF;
    mem[10'h2b1] = D_UNDEF;
    mem[10'h2b2] = D_UNDEF;
    mem[10'h2b3] = D_UNDEF;
    mem[10'h2b4] = D_UNDEF;
    mem[10'h2b5] = D_UNDEF;
    mem[10'h2b6] = D_UNDEF;
    mem[10'h2b7] = D_UNDEF;
    mem[10'h2b8] = D_UNDEF;
    mem[10'h2b9] = D_UNDEF;
    mem[10'h2ba] = D_UNDEF;
    mem[10'h2bb] = D_UNDEF;
    mem[10'h2bc] = D_UNDEF;
    mem[10'h2bd] = D_UNDEF;
    mem[10'h2be] = D_UNDEF;
    mem[10'h2bf] = D_UNDEF;
    mem[10'h2c0] = D_UNDEF;
    mem[10'h2c1] = D_UNDEF;
    mem[10'h2c2] = D_UNDEF;
    mem[10'h2c3] = D_UNDEF;
    mem[10'h2c4] = D_UNDEF;
    mem[10'h2c5] = D_UNDEF;
    mem[10'h2c6] = D_UNDEF;
    mem[10'h2c7] = D_UNDEF;
    mem[10'h2c8] = D_UNDEF;
    mem[10'h2c9] = D_UNDEF;
    mem[10'h2ca] = D_UNDEF;
    mem[10'h2cb] = D_UNDEF;
    mem[10'h2cc] = D_UNDEF;
    mem[10'h2cd] = D_UNDEF;
    mem[10'h2ce] = D_UNDEF;
    mem[10'h2cf] = D_UNDEF;
    mem[10'h2d0] = D_UNDEF;
    mem[10'h2d1] = D_UNDEF;
    mem[10'h2d2] = D_UNDEF;
    mem[10'h2d3] = D_UNDEF;
    mem[10'h2d4] = D_UNDEF;
    mem[10'h2d5] = D_UNDEF;
    mem[10'h2d6] = D_UNDEF;
    mem[10'h2d7] = D_UNDEF;
    mem[10'h2d8] = D_UNDEF;
    mem[10'h2d9] = D_UNDEF;
    mem[10'h2da] = D_UNDEF;
    mem[10'h2db] = D_UNDEF;
    mem[10'h2dc] = D_UNDEF;
    mem[10'h2dd] = D_UNDEF;
    mem[10'h2de] = D_UNDEF;
    mem[10'h2df] = D_UNDEF;
    mem[10'h2e0] = D_UNDEF;
    mem[10'h2e1] = D_UNDEF;
    mem[10'h2e2] = D_UNDEF;
    mem[10'h2e3] = D_UNDEF;
    mem[10'h2e4] = D_UNDEF;
    mem[10'h2e5] = D_UNDEF;
    mem[10'h2e6] = D_UNDEF;
    mem[10'h2e7] = D_UNDEF;
    mem[10'h2e8] = D_UNDEF;
    mem[10'h2e9] = D_UNDEF;
    mem[10'h2ea] = D_UNDEF;
    mem[10'h2eb] = D_UNDEF;
    mem[10'h2ec] = D_UNDEF;
    mem[10'h2ed] = D_UNDEF;
    mem[10'h2ee] = D_UNDEF;
    mem[10'h2ef] = D_UNDEF;
    mem[10'h2f0] = D_UNDEF;
    mem[10'h2f1] = D_UNDEF;
    mem[10'h2f2] = D_UNDEF;
    mem[10'h2f3] = D_UNDEF;
    mem[10'h2f4] = D_UNDEF;
    mem[10'h2f5] = D_UNDEF;
    mem[10'h2f6] = D_UNDEF;
    mem[10'h2f7] = D_UNDEF;
    mem[10'h2f8] = D_UNDEF;
    mem[10'h2f9] = D_UNDEF;
    mem[10'h2fa] = D_UNDEF;
    mem[10'h2fb] = D_UNDEF;
    mem[10'h2fc] = D_UNDEF;
    mem[10'h2fd] = D_UNDEF;
    mem[10'h2fe] = D_UNDEF;
    mem[10'h2ff] = D_UNDEF;
    mem[10'h300] = D_UNDEF;
    mem[10'h301] = D_UNDEF;
    mem[10'h302] = D_UNDEF;
    mem[10'h303] = D_UNDEF;
    mem[10'h304] = D_UNDEF;
    mem[10'h305] = D_UNDEF;
    mem[10'h306] = D_UNDEF;
    mem[10'h307] = D_UNDEF;
    mem[10'h308] = D_UNDEF;
    mem[10'h309] = D_UNDEF;
    mem[10'h30a] = D_UNDEF;
    mem[10'h30b] = D_UNDEF;
    mem[10'h30c] = D_UNDEF;
    mem[10'h30d] = D_UNDEF;
    mem[10'h30e] = D_UNDEF;
    mem[10'h30f] = D_UNDEF;
    mem[10'h310] = D_UNDEF;
    mem[10'h311] = D_UNDEF;
    mem[10'h312] = D_UNDEF;
    mem[10'h313] = D_UNDEF;
    mem[10'h314] = D_UNDEF;
    mem[10'h315] = D_UNDEF;
    mem[10'h316] = D_UNDEF;
    mem[10'h317] = D_UNDEF;
    mem[10'h318] = D_UNDEF;
    mem[10'h319] = D_UNDEF;
    mem[10'h31a] = D_UNDEF;
    mem[10'h31b] = D_UNDEF;
    mem[10'h31c] = D_UNDEF;
    mem[10'h31d] = D_UNDEF;
    mem[10'h31e] = D_UNDEF;
    mem[10'h31f] = D_UNDEF;
    mem[10'h320] = D_UNDEF;
    mem[10'h321] = D_UNDEF;
    mem[10'h322] = D_UNDEF;
    mem[10'h323] = D_UNDEF;
    mem[10'h324] = D_UNDEF;
    mem[10'h325] = D_UNDEF;
    mem[10'h326] = D_UNDEF;
    mem[10'h327] = D_UNDEF;
    mem[10'h328] = D_UNDEF;
    mem[10'h329] = D_UNDEF;
    mem[10'h32a] = D_UNDEF;
    mem[10'h32b] = D_UNDEF;
    mem[10'h32c] = D_UNDEF;
    mem[10'h32d] = D_UNDEF;
    mem[10'h32e] = D_UNDEF;
    mem[10'h32f] = D_UNDEF;
    mem[10'h330] = D_UNDEF;
    mem[10'h331] = D_UNDEF;
    mem[10'h332] = D_UNDEF;
    mem[10'h333] = D_UNDEF;
    mem[10'h334] = D_UNDEF;
    mem[10'h335] = D_UNDEF;
    mem[10'h336] = D_UNDEF;
    mem[10'h337] = D_UNDEF;
    mem[10'h338] = D_UNDEF;
    mem[10'h339] = D_UNDEF;
    mem[10'h33a] = D_UNDEF;
    mem[10'h33b] = D_UNDEF;
    mem[10'h33c] = D_UNDEF;
    mem[10'h33d] = D_UNDEF;
    mem[10'h33e] = D_UNDEF;
    mem[10'h33f] = D_UNDEF;
    mem[10'h340] = D_UNDEF;
    mem[10'h341] = D_UNDEF;
    mem[10'h342] = D_UNDEF;
    mem[10'h343] = D_UNDEF;
    mem[10'h344] = D_UNDEF;
    mem[10'h345] = D_UNDEF;
    mem[10'h346] = D_UNDEF;
    mem[10'h347] = D_UNDEF;
    mem[10'h348] = D_UNDEF;
    mem[10'h349] = D_UNDEF;
    mem[10'h34a] = D_UNDEF;
    mem[10'h34b] = D_UNDEF;
    mem[10'h34c] = D_UNDEF;
    mem[10'h34d] = D_UNDEF;
    mem[10'h34e] = D_UNDEF;
    mem[10'h34f] = D_UNDEF;
    mem[10'h350] = D_UNDEF;
    mem[10'h351] = D_UNDEF;
    mem[10'h352] = D_UNDEF;
    mem[10'h353] = D_UNDEF;
    mem[10'h354] = D_UNDEF;
    mem[10'h355] = D_UNDEF;
    mem[10'h356] = D_UNDEF;
    mem[10'h357] = D_UNDEF;
    mem[10'h358] = D_UNDEF;
    mem[10'h359] = D_UNDEF;
    mem[10'h35a] = D_UNDEF;
    mem[10'h35b] = D_UNDEF;
    mem[10'h35c] = D_UNDEF;
    mem[10'h35d] = D_UNDEF;
    mem[10'h35e] = D_UNDEF;
    mem[10'h35f] = D_UNDEF;
    mem[10'h360] = D_UNDEF;
    mem[10'h361] = D_UNDEF;
    mem[10'h362] = D_UNDEF;
    mem[10'h363] = D_UNDEF;
    mem[10'h364] = D_UNDEF;
    mem[10'h365] = D_UNDEF;
    mem[10'h366] = D_UNDEF;
    mem[10'h367] = D_UNDEF;
    mem[10'h368] = D_UNDEF;
    mem[10'h369] = D_UNDEF;
    mem[10'h36a] = D_UNDEF;
    mem[10'h36b] = D_UNDEF;
    mem[10'h36c] = D_UNDEF;
    mem[10'h36d] = D_UNDEF;
    mem[10'h36e] = D_UNDEF;
    mem[10'h36f] = D_UNDEF;
    mem[10'h370] = D_UNDEF;
    mem[10'h371] = D_UNDEF;
    mem[10'h372] = D_UNDEF;
    mem[10'h373] = D_UNDEF;
    mem[10'h374] = D_UNDEF;
    mem[10'h375] = D_UNDEF;
    mem[10'h376] = D_UNDEF;
    mem[10'h377] = D_UNDEF;
    mem[10'h378] = D_UNDEF;
    mem[10'h379] = D_UNDEF;
    mem[10'h37a] = D_UNDEF;
    mem[10'h37b] = D_UNDEF;
    mem[10'h37c] = D_UNDEF;
    mem[10'h37d] = D_UNDEF;
    mem[10'h37e] = D_UNDEF;
    mem[10'h37f] = D_UNDEF;
    mem[10'h380] = D_UNDEF;
    mem[10'h381] = D_UNDEF;
    mem[10'h382] = D_UNDEF;
    mem[10'h383] = D_UNDEF;
    mem[10'h384] = D_UNDEF;
    mem[10'h385] = D_UNDEF;
    mem[10'h386] = D_UNDEF;
    mem[10'h387] = D_UNDEF;
    mem[10'h388] = D_UNDEF;
    mem[10'h389] = D_UNDEF;
    mem[10'h38a] = D_UNDEF;
    mem[10'h38b] = D_UNDEF;
    mem[10'h38c] = D_UNDEF;
    mem[10'h38d] = D_UNDEF;
    mem[10'h38e] = D_UNDEF;
    mem[10'h38f] = D_UNDEF;
    mem[10'h390] = D_UNDEF;
    mem[10'h391] = D_UNDEF;
    mem[10'h392] = D_UNDEF;
    mem[10'h393] = D_UNDEF;
    mem[10'h394] = D_UNDEF;
    mem[10'h395] = D_UNDEF;
    mem[10'h396] = D_UNDEF;
    mem[10'h397] = D_UNDEF;
    mem[10'h398] = D_UNDEF;
    mem[10'h399] = D_UNDEF;
    mem[10'h39a] = D_UNDEF;
    mem[10'h39b] = D_UNDEF;
    mem[10'h39c] = D_UNDEF;
    mem[10'h39d] = D_UNDEF;
    mem[10'h39e] = D_UNDEF;
    mem[10'h39f] = D_UNDEF;
    mem[10'h3a0] = D_UNDEF;
    mem[10'h3a1] = D_UNDEF;
    mem[10'h3a2] = D_UNDEF;
    mem[10'h3a3] = D_UNDEF;
    mem[10'h3a4] = D_UNDEF;
    mem[10'h3a5] = D_UNDEF;
    mem[10'h3a6] = D_UNDEF;
    mem[10'h3a7] = D_UNDEF;
    mem[10'h3a8] = D_UNDEF;
    mem[10'h3a9] = D_UNDEF;
    mem[10'h3aa] = D_UNDEF;
    mem[10'h3ab] = D_UNDEF;
    mem[10'h3ac] = D_UNDEF;
    mem[10'h3ad] = D_UNDEF;
    mem[10'h3ae] = D_UNDEF;
    mem[10'h3af] = D_UNDEF;
    mem[10'h3b0] = D_UNDEF;
    mem[10'h3b1] = D_UNDEF;
    mem[10'h3b2] = D_UNDEF;
    mem[10'h3b3] = D_UNDEF;
    mem[10'h3b4] = D_UNDEF;
    mem[10'h3b5] = D_UNDEF;
    mem[10'h3b6] = D_UNDEF;
    mem[10'h3b7] = D_UNDEF;
    mem[10'h3b8] = D_UNDEF;
    mem[10'h3b9] = D_UNDEF;
    mem[10'h3ba] = D_UNDEF;
    mem[10'h3bb] = D_UNDEF;
    mem[10'h3bc] = D_UNDEF;
    mem[10'h3bd] = D_UNDEF;
    mem[10'h3be] = D_UNDEF;
    mem[10'h3bf] = D_UNDEF;
    mem[10'h3c0] = D_UNDEF;
    mem[10'h3c1] = D_UNDEF;
    mem[10'h3c2] = D_UNDEF;
    mem[10'h3c3] = D_UNDEF;
    mem[10'h3c4] = D_UNDEF;
    mem[10'h3c5] = D_UNDEF;
    mem[10'h3c6] = D_UNDEF;
    mem[10'h3c7] = D_UNDEF;
    mem[10'h3c8] = D_UNDEF;
    mem[10'h3c9] = D_UNDEF;
    mem[10'h3ca] = D_UNDEF;
    mem[10'h3cb] = D_UNDEF;
    mem[10'h3cc] = D_UNDEF;
    mem[10'h3cd] = D_UNDEF;
    mem[10'h3ce] = D_UNDEF;
    mem[10'h3cf] = D_UNDEF;
    mem[10'h3d0] = D_UNDEF;
    mem[10'h3d1] = D_UNDEF;
    mem[10'h3d2] = D_UNDEF;
    mem[10'h3d3] = D_UNDEF;
    mem[10'h3d4] = D_UNDEF;
    mem[10'h3d5] = D_UNDEF;
    mem[10'h3d6] = D_UNDEF;
    mem[10'h3d7] = D_UNDEF;
    mem[10'h3d8] = D_UNDEF;
    mem[10'h3d9] = D_UNDEF;
    mem[10'h3da] = D_UNDEF;
    mem[10'h3db] = D_UNDEF;
    mem[10'h3dc] = D_UNDEF;
    mem[10'h3dd] = D_UNDEF;
    mem[10'h3de] = D_UNDEF;
    mem[10'h3df] = D_UNDEF;
    mem[10'h3e0] = D_UNDEF;
    mem[10'h3e1] = D_UNDEF;
    mem[10'h3e2] = D_UNDEF;
    mem[10'h3e3] = D_UNDEF;
    mem[10'h3e4] = D_UNDEF;
    mem[10'h3e5] = D_UNDEF;
    mem[10'h3e6] = D_UNDEF;
    mem[10'h3e7] = D_UNDEF;
    mem[10'h3e8] = D_UNDEF;
    mem[10'h3e9] = D_UNDEF;
    mem[10'h3ea] = D_UNDEF;
    mem[10'h3eb] = D_UNDEF;
    mem[10'h3ec] = D_UNDEF;
    mem[10'h3ed] = D_UNDEF;
    mem[10'h3ee] = D_UNDEF;
    mem[10'h3ef] = D_UNDEF;
    mem[10'h3f0] = D_UNDEF;
    mem[10'h3f1] = D_UNDEF;
    mem[10'h3f2] = D_UNDEF;
    mem[10'h3f3] = D_UNDEF;
    mem[10'h3f4] = D_UNDEF;
    mem[10'h3f5] = D_UNDEF;
    mem[10'h3f6] = D_UNDEF;
    mem[10'h3f7] = D_UNDEF;
    mem[10'h3f8] = D_UNDEF;
    mem[10'h3f9] = D_UNDEF;
    mem[10'h3fa] = D_UNDEF;
    mem[10'h3fb] = D_UNDEF;
    mem[10'h3fc] = D_UNDEF;
    mem[10'h3fd] = D_UNDEF;
    mem[10'h3fe] = D_UNDEF;
    mem[10'h3ff] = D_UNDEF;
  end
`endif

  always @ (*) begin
    if (RST_A_sync || RST_A_async || glblGSR || a_sleep || shut_down) begin
      ram_data_a_lat = D_INIT;
    end else if (ram_ce_a && ~ram_we_a) begin 
      ram_data_a_lat = ram_data_a_out;
    end
  end

  always @ (*) begin
    if (RST_B_sync || RST_B_async || glblGSR || a_sleep || shut_down) begin
      ram_data_b_lat = D_INIT;
    end else if (ram_ce_b && ~ram_we_b) begin 
      ram_data_b_lat = ram_data_b_out;
    end
  end

//vc mem write and read

`ifdef XIL_XECLIB
  always @ (posedge RST_A_async or posedge RST_B_async or posedge CLK_in) begin
`else
  always @ (ram_we_a or ram_we_b or ram_ce_a or ram_ce_b or a_sleep or shut_down or ram_addr_a or ram_addr_b or ram_data_a or ram_data_b or ram_bwe_a or ram_bwe_b or ram_we_a_event or ram_we_b_event or posedge RST_A_async or posedge RST_B_async or posedge RST_A_sync or posedge RST_B_sync or glblGSR) begin
`endif
    if (RST_A_async || RST_A_sync || shut_down || glblGSR) begin
      ram_data_a_out = D_INIT;
    end
    if (ram_we_a && ~shut_down && ~a_sleep && ~glblGSR) begin
      mem_line.line = mem [ram_addr_a[14:5]][255:0];
      memp_line.line = mem [ram_addr_a[14:5]][287:256];
      if (WRITE_WIDTH_A_BIN == 7'd72) begin
        mem_cont_72 = {memp_line.D72[ram_addr_a[4:3]],mem_line.D72[ram_addr_a[4:3]]};
        mem_cont_72 = (ram_data_a & ram_bwe_a) | (mem_cont_72 & ~ram_bwe_a);
        {memp_line.D72[ram_addr_a[4:3]],mem_line.D72[ram_addr_a[4:3]]} = mem_cont_72;
      end else if (WRITE_WIDTH_A_BIN == 7'd36) begin
        mem_cont_36 = {memp_line.D36[ram_addr_a[4:2]],mem_line.D36[ram_addr_a[4:2]]};
        mem_cont_36 = (ram_data_a[35:0] & ram_bwe_a[35:0]) | (mem_cont_36 & ~ram_bwe_a[35:0]);
        {memp_line.D36[ram_addr_a[4:2]],mem_line.D36[ram_addr_a[4:2]]} = mem_cont_36;
      end else if (WRITE_WIDTH_A_BIN == 7'd18) begin
        mem_cont_18 = {memp_line.D18[ram_addr_a[4:1]],mem_line.D18[ram_addr_a[4:1]]};
        mem_cont_18 = (ram_data_a[17:0] & ram_bwe_a[17:0]) | (mem_cont_18 & ~ram_bwe_a[17:0]);
        {memp_line.D18[ram_addr_a[4:1]],mem_line.D18[ram_addr_a[4:1]]} = mem_cont_18;
      end else if (WRITE_WIDTH_A_BIN == 7'd9) begin
        mem_cont_9  = {memp_line.D9[ram_addr_a[4:0]],mem_line.D9[ram_addr_a[4:0]]};
        mem_cont_9  = (ram_data_a[8:0] & ram_bwe_a[8:0]) | (mem_cont_9 & ~ram_bwe_a[8:0]);
        {memp_line.D9[ram_addr_a[4:0]],mem_line.D9[ram_addr_a[4:0]]} = mem_cont_9;
      end
      mem [ram_addr_a[14:5]][255:0] = mem_line.line;
      mem [ram_addr_a[14:5]][287:256] = memp_line.line;
    end 
    if (ram_ce_a && ~ram_we_a && ~RST_A_in && ~shut_down && ~a_sleep && ~glblGSR) begin
      mem_line.line = mem [ram_addr_a[14:5]][255:0];
      memp_line.line = mem [ram_addr_a[14:5]][287:256];
      if (READ_WIDTH_A_BIN == 7'd72) begin
        ram_data_a_out = {memp_line.D72[ram_addr_a[4:3]],mem_line.D72[ram_addr_a[4:3]]};
      end else if (READ_WIDTH_A_BIN == 7'd36) begin
        ram_data_a_out = {{36{1'b0}},memp_line.D36[ram_addr_a[4:2]],mem_line.D36[ram_addr_a[4:2]]};
      end else if (READ_WIDTH_A_BIN == 7'd18) begin
        ram_data_a_out = {{54{1'b0}},memp_line.D18[ram_addr_a[4:1]],mem_line.D18[ram_addr_a[4:1]]};
      end else if (READ_WIDTH_A_BIN == 7'd9) begin
        ram_data_a_out = {{63{1'b0}},memp_line.D9[ram_addr_a[4:0]],mem_line.D9[ram_addr_a[4:0]]};
      end
    end

    if (RST_B_async || RST_B_sync || shut_down || glblGSR) begin
      ram_data_b_out = D_INIT;
    end
    if (ram_we_b && ~shut_down && ~a_sleep && ~glblGSR) begin
      mem_line.line = mem [ram_addr_b[14:5]][255:0];
      memp_line.line = mem [ram_addr_b[14:5]][287:256];
      if (WRITE_WIDTH_B_BIN == 7'd72) begin
        mem_cont_72 = {memp_line.D72[ram_addr_b[4:3]],mem_line.D72[ram_addr_b[4:3]]};
        mem_cont_72 = (ram_data_b & ram_bwe_b) | (mem_cont_72 & ~ram_bwe_b);
        {memp_line.D72[ram_addr_b[4:3]],mem_line.D72[ram_addr_b[4:3]]} = mem_cont_72;
      end else if (WRITE_WIDTH_B_BIN == 7'd36) begin
        mem_cont_36 = {memp_line.D36[ram_addr_b[4:2]],mem_line.D36[ram_addr_b[4:2]]};
        mem_cont_36 = (ram_data_b[35:0] & ram_bwe_b[35:0]) | (mem_cont_36 & ~ram_bwe_b[35:0]);
        {memp_line.D36[ram_addr_b[4:2]],mem_line.D36[ram_addr_b[4:2]]} = mem_cont_36;
      end else if (WRITE_WIDTH_B_BIN == 7'd18) begin
        mem_cont_18 = {memp_line.D18[ram_addr_b[4:1]],mem_line.D18[ram_addr_b[4:1]]};
        mem_cont_18 = (ram_data_b[17:0] & ram_bwe_b[17:0]) | (mem_cont_18 & ~ram_bwe_b[17:0]);
        {memp_line.D18[ram_addr_b[4:1]],mem_line.D18[ram_addr_b[4:1]]} = mem_cont_18;
      end else if (WRITE_WIDTH_B_BIN == 7'd9) begin
        mem_cont_9  = {memp_line.D9[ram_addr_b[4:0]],mem_line.D9[ram_addr_b[4:0]]};
        mem_cont_9  = (ram_data_b[8:0] & ram_bwe_b[8:0]) | (mem_cont_9 & ~ram_bwe_b[8:0]);
        {memp_line.D9[ram_addr_b[4:0]],mem_line.D9[ram_addr_b[4:0]]} = mem_cont_9;
      end
      mem [ram_addr_b[14:5]][255:0] = mem_line.line;
      mem [ram_addr_b[14:5]][287:256] = memp_line.line;
    end 
    if (ram_ce_b && ~ram_we_b && ~RST_B_in && ~shut_down && ~a_sleep && ~glblGSR) begin
      mem_line.line = mem [ram_addr_b[14:5]][255:0];
      memp_line.line = mem [ram_addr_b[14:5]][287:256];
      if (READ_WIDTH_B_BIN == 7'd72) begin
        ram_data_b_out = {memp_line.D72[ram_addr_b[4:3]],mem_line.D72[ram_addr_b[4:3]]};
      end else if (READ_WIDTH_B_BIN == 7'd36) begin
        ram_data_b_out = {{36{1'b0}},memp_line.D36[ram_addr_b[4:2]],mem_line.D36[ram_addr_b[4:2]]};
      end else if (READ_WIDTH_B_BIN == 7'd18) begin
        ram_data_b_out = {{54{1'b0}},memp_line.D18[ram_addr_b[4:1]],mem_line.D18[ram_addr_b[4:1]]};
      end else if (READ_WIDTH_B_BIN == 7'd9) begin
        ram_data_b_out = {{63{1'b0}},memp_line.D9[ram_addr_b[4:0]],mem_line.D9[ram_addr_b[4:0]]};
      end
    end
  end

// ecc correction
  task ecc_cor;
  output [71:0] data_cor; output sbiterr; output dbiterr;
  input [71:0] data;
  reg [7:0] synd_rd; reg [7:0] synd_ecc; reg decode;
  begin
    decode = 1'b0;
    synd_rd = fn_ecc(decode, data[63:0], data[71:64]);
    synd_ecc = synd_rd ^ data[71:64];
    sbiterr = (|synd_ecc &&  synd_ecc[7]);
    dbiterr = (|synd_ecc && ~synd_ecc[7]);
    if (sbiterr) begin
      data_cor = fn_cor_bit(synd_ecc[6:0],data[63:0],data[71:64]);
    end else begin
      data_cor = data;
    end
  end
  endtask

  always @ (*) begin
    if (a_sleep || shut_down || glblGSR || (EN_ECC_RD_A_BIN == EN_ECC_RD_A_FALSE)) begin
      ram_data_a_ecc <= D_INIT;
    end else if (EN_ECC_RD_A_BIN == EN_ECC_RD_A_TRUE) begin
      if (OREG_A_BIN == OREG_A_TRUE) begin
        ecc_cor(ram_data_a_ecc, SBITERR_A_ecc, DBITERR_A_ecc, ram_data_a_reg);
      end else begin
        ecc_cor(ram_data_a_ecc, SBITERR_A_ecc, DBITERR_A_ecc, ram_data_a_lat);
      end
    end
  end

  always @ (*) begin
    if (a_sleep || shut_down || glblGSR || (EN_ECC_RD_B_BIN == EN_ECC_RD_B_FALSE)) begin
      ram_data_b_ecc <= D_INIT;
    end else if (EN_ECC_RD_B_BIN == EN_ECC_RD_B_TRUE) begin
      if (OREG_B_BIN == OREG_B_TRUE) begin
        ecc_cor(ram_data_b_ecc, SBITERR_B_ecc, DBITERR_B_ecc, ram_data_b_reg);
      end else begin
        ecc_cor(ram_data_b_ecc, SBITERR_B_ecc, DBITERR_B_ecc, ram_data_b_lat);
      end
    end
  end

// sleep, deepsleep, shutdown
`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR) begin
      wake_count <= 0;
    end else if (((wake_count > 0) && 
                  (~(auto_sleep || SLEEP_in || DEEPSLEEP_in || SHUTDOWN_in))) ||
                 (~(SHUTDOWN_in || DEEPSLEEP_in) && (wake_count > 2)) ||
                 (~SHUTDOWN_in && (wake_count > 3))) begin
      wake_count <= wake_count - 1;
    end else if (SHUTDOWN_in) begin
      wake_count <= 9;
    end else if (DEEPSLEEP_in && (wake_count <= 3)) begin
      wake_count <= 3;
    end else if (SLEEP_in && (wake_count <= 2)) begin
      wake_count <= 2;
    end else if (auto_sleep && (wake_count <= 1)) begin
      wake_count <= 1;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || (~auto_sleep && wake_count == 1)) begin
      a_sleep <= 1'b0;
    end else if (DEEPSLEEP_in || SLEEP_in || auto_sleep) begin
      a_sleep <= 1'b1;
    end
  end

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || (wake_count == 1)) begin
      shut_down <= 1'b0;
    end else if (SHUTDOWN_in) begin
      shut_down <= 1'b1;
    end
  end

  assign auto_sleep = auto_sleep_A && auto_sleep_B && ~auto_wake_up_A && ~auto_wake_up_B; 
  assign auto_wake_up_A = ram_ce_a_fifo[3];

`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || (EN_AUTO_SLEEP_MODE_BIN == EN_AUTO_SLEEP_MODE_FALSE)) begin
      auto_sleep_A <= 1'b0;
    end else if (auto_wake_up_A &&  auto_sleep_A) begin
      auto_sleep_A <= 1'b0;
    end else if (~|ram_ce_a_fifo && ~auto_sleep_A) begin
      auto_sleep_A <= 1'b1;
    end
  end

  assign auto_wake_up_B = ram_ce_b_fifo[3];
`ifdef XIL_XECLIB
  always @ (posedge CLK_in) begin
`else
  always @ (posedge CLK_in or glblGSR) begin
`endif
    if (glblGSR || (EN_AUTO_SLEEP_MODE_BIN == EN_AUTO_SLEEP_MODE_FALSE)) begin
      auto_sleep_B <= 1'b0;
    end else if (auto_wake_up_B &&  auto_sleep_B) begin
      auto_sleep_B <= 1'b0;
    end else if (~|ram_ce_b_fifo && ~auto_sleep_B) begin
      auto_sleep_B <= 1'b1;
    end
  end

// end behavioral model

`ifndef XIL_XECLIB
`ifdef XIL_TIMING
  
  wire clk_en_n;
  wire clk_en_p;
  
  assign clk_en_n =  IS_CLK_INVERTED_REG;
  assign clk_en_p = ~IS_CLK_INVERTED_REG;

`endif

  specify
    (CLK *> DOUT_A) = (100:100:100, 100:100:100);
    (CLK *> DOUT_B) = (100:100:100, 100:100:100);
    (CLK => DBITERR_A) = (100:100:100, 100:100:100);
    (CLK => DBITERR_B) = (100:100:100, 100:100:100);
    (CLK => SBITERR_A) = (100:100:100, 100:100:100);
    (CLK => SBITERR_B) = (100:100:100, 100:100:100);
    (negedge RST_A *> (DOUT_A +: 0)) = (100:100:100, 100:100:100);
    (negedge RST_A => (DBITERR_A +: 0)) = (100:100:100, 100:100:100);
    (negedge RST_A => (SBITERR_A +: 0)) = (100:100:100, 100:100:100);
    (negedge RST_B *> (DOUT_B +: 0)) = (100:100:100, 100:100:100);
    (negedge RST_B => (DBITERR_B +: 0)) = (100:100:100, 100:100:100);
    (negedge RST_B => (SBITERR_B +: 0)) = (100:100:100, 100:100:100);
    (posedge RST_A *> (DOUT_A +: 0)) = (100:100:100, 100:100:100);
    (posedge RST_A => (DBITERR_A +: 0)) = (100:100:100, 100:100:100);
    (posedge RST_A => (SBITERR_A +: 0)) = (100:100:100, 100:100:100);
    (posedge RST_B *> (DOUT_B +: 0)) = (100:100:100, 100:100:100);
    (posedge RST_B => (DBITERR_B +: 0)) = (100:100:100, 100:100:100);
    (posedge RST_B => (SBITERR_B +: 0)) = (100:100:100, 100:100:100);
`ifdef XIL_TIMING
    $period (negedge CLK, 0:0:0, notifier);
    $period (posedge CLK, 0:0:0, notifier);
    $recrem (negedge RST_A, negedge CLK, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, RST_A_delay, CLK_delay);
    $recrem (negedge RST_A, posedge CLK, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, RST_A_delay, CLK_delay);
    $recrem (negedge RST_B, negedge CLK, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, RST_B_delay, CLK_delay);
    $recrem (negedge RST_B, posedge CLK, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, RST_B_delay, CLK_delay);
    $recrem (posedge RST_A, negedge CLK, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, RST_A_delay, CLK_delay);
    $recrem (posedge RST_A, posedge CLK, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, RST_A_delay, CLK_delay);
    $recrem (posedge RST_B, negedge CLK, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, RST_B_delay, CLK_delay);
    $recrem (posedge RST_B, posedge CLK, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, RST_B_delay, CLK_delay);
    $setuphold (negedge CLK, negedge ADDR_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, ADDR_A_delay);
    $setuphold (negedge CLK, negedge ADDR_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, ADDR_B_delay);
    $setuphold (negedge CLK, negedge BWE_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, BWE_A_delay);
    $setuphold (negedge CLK, negedge BWE_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, BWE_B_delay);
    $setuphold (negedge CLK, negedge DIN_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, DIN_A_delay);
    $setuphold (negedge CLK, negedge DIN_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, DIN_B_delay);
    $setuphold (negedge CLK, negedge EN_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, EN_A_delay);
    $setuphold (negedge CLK, negedge EN_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, EN_B_delay);
    $setuphold (negedge CLK, negedge INJECT_DBITERR_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, INJECT_DBITERR_A_delay);
    $setuphold (negedge CLK, negedge INJECT_DBITERR_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, INJECT_DBITERR_B_delay);
    $setuphold (negedge CLK, negedge INJECT_SBITERR_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, INJECT_SBITERR_A_delay);
    $setuphold (negedge CLK, negedge INJECT_SBITERR_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, INJECT_SBITERR_B_delay);
    $setuphold (negedge CLK, negedge OREG_CE_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, OREG_CE_A_delay);
    $setuphold (negedge CLK, negedge OREG_CE_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, OREG_CE_B_delay);
    $setuphold (negedge CLK, negedge OREG_ECC_CE_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, OREG_ECC_CE_A_delay);
    $setuphold (negedge CLK, negedge OREG_ECC_CE_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, OREG_ECC_CE_B_delay);
    $setuphold (negedge CLK, negedge RDB_WR_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, RDB_WR_A_delay);
    $setuphold (negedge CLK, negedge RDB_WR_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, RDB_WR_B_delay);
    $setuphold (negedge CLK, negedge RST_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, RST_A_delay);
    $setuphold (negedge CLK, negedge RST_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, RST_B_delay);
    $setuphold (negedge CLK, negedge SLEEP, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, SLEEP_delay);
    $setuphold (negedge CLK, posedge ADDR_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, ADDR_A_delay);
    $setuphold (negedge CLK, posedge ADDR_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, ADDR_B_delay);
    $setuphold (negedge CLK, posedge BWE_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, BWE_A_delay);
    $setuphold (negedge CLK, posedge BWE_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, BWE_B_delay);
    $setuphold (negedge CLK, posedge DIN_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, DIN_A_delay);
    $setuphold (negedge CLK, posedge DIN_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, DIN_B_delay);
    $setuphold (negedge CLK, posedge EN_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, EN_A_delay);
    $setuphold (negedge CLK, posedge EN_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, EN_B_delay);
    $setuphold (negedge CLK, posedge INJECT_DBITERR_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, INJECT_DBITERR_A_delay);
    $setuphold (negedge CLK, posedge INJECT_DBITERR_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, INJECT_DBITERR_B_delay);
    $setuphold (negedge CLK, posedge INJECT_SBITERR_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, INJECT_SBITERR_A_delay);
    $setuphold (negedge CLK, posedge INJECT_SBITERR_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, INJECT_SBITERR_B_delay);
    $setuphold (negedge CLK, posedge OREG_CE_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, OREG_CE_A_delay);
    $setuphold (negedge CLK, posedge OREG_CE_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, OREG_CE_B_delay);
    $setuphold (negedge CLK, posedge OREG_ECC_CE_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, OREG_ECC_CE_A_delay);
    $setuphold (negedge CLK, posedge OREG_ECC_CE_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, OREG_ECC_CE_B_delay);
    $setuphold (negedge CLK, posedge RDB_WR_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, RDB_WR_A_delay);
    $setuphold (negedge CLK, posedge RDB_WR_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, RDB_WR_B_delay);
    $setuphold (negedge CLK, posedge RST_A, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, RST_A_delay);
    $setuphold (negedge CLK, posedge RST_B, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, RST_B_delay);
    $setuphold (negedge CLK, posedge SLEEP, 0:0:0, 0:0:0, notifier, clk_en_n, clk_en_n, CLK_delay, SLEEP_delay);
    $setuphold (posedge CLK, negedge ADDR_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, ADDR_A_delay);
    $setuphold (posedge CLK, negedge ADDR_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, ADDR_B_delay);
    $setuphold (posedge CLK, negedge BWE_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, BWE_A_delay);
    $setuphold (posedge CLK, negedge BWE_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, BWE_B_delay);
    $setuphold (posedge CLK, negedge DIN_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, DIN_A_delay);
    $setuphold (posedge CLK, negedge DIN_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, DIN_B_delay);
    $setuphold (posedge CLK, negedge EN_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, EN_A_delay);
    $setuphold (posedge CLK, negedge EN_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, EN_B_delay);
    $setuphold (posedge CLK, negedge INJECT_DBITERR_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, INJECT_DBITERR_A_delay);
    $setuphold (posedge CLK, negedge INJECT_DBITERR_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, INJECT_DBITERR_B_delay);
    $setuphold (posedge CLK, negedge INJECT_SBITERR_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, INJECT_SBITERR_A_delay);
    $setuphold (posedge CLK, negedge INJECT_SBITERR_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, INJECT_SBITERR_B_delay);
    $setuphold (posedge CLK, negedge OREG_CE_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, OREG_CE_A_delay);
    $setuphold (posedge CLK, negedge OREG_CE_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, OREG_CE_B_delay);
    $setuphold (posedge CLK, negedge OREG_ECC_CE_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, OREG_ECC_CE_A_delay);
    $setuphold (posedge CLK, negedge OREG_ECC_CE_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, OREG_ECC_CE_B_delay);
    $setuphold (posedge CLK, negedge RDB_WR_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, RDB_WR_A_delay);
    $setuphold (posedge CLK, negedge RDB_WR_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, RDB_WR_B_delay);
    $setuphold (posedge CLK, negedge RST_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, RST_A_delay);
    $setuphold (posedge CLK, negedge RST_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, RST_B_delay);
    $setuphold (posedge CLK, negedge SLEEP, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, SLEEP_delay);
    $setuphold (posedge CLK, posedge ADDR_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, ADDR_A_delay);
    $setuphold (posedge CLK, posedge ADDR_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, ADDR_B_delay);
    $setuphold (posedge CLK, posedge BWE_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, BWE_A_delay);
    $setuphold (posedge CLK, posedge BWE_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, BWE_B_delay);
    $setuphold (posedge CLK, posedge DIN_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, DIN_A_delay);
    $setuphold (posedge CLK, posedge DIN_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, DIN_B_delay);
    $setuphold (posedge CLK, posedge EN_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, EN_A_delay);
    $setuphold (posedge CLK, posedge EN_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, EN_B_delay);
    $setuphold (posedge CLK, posedge INJECT_DBITERR_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, INJECT_DBITERR_A_delay);
    $setuphold (posedge CLK, posedge INJECT_DBITERR_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, INJECT_DBITERR_B_delay);
    $setuphold (posedge CLK, posedge INJECT_SBITERR_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, INJECT_SBITERR_A_delay);
    $setuphold (posedge CLK, posedge INJECT_SBITERR_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, INJECT_SBITERR_B_delay);
    $setuphold (posedge CLK, posedge OREG_CE_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, OREG_CE_A_delay);
    $setuphold (posedge CLK, posedge OREG_CE_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, OREG_CE_B_delay);
    $setuphold (posedge CLK, posedge OREG_ECC_CE_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, OREG_ECC_CE_A_delay);
    $setuphold (posedge CLK, posedge OREG_ECC_CE_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, OREG_ECC_CE_B_delay);
    $setuphold (posedge CLK, posedge RDB_WR_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, RDB_WR_A_delay);
    $setuphold (posedge CLK, posedge RDB_WR_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, RDB_WR_B_delay);
    $setuphold (posedge CLK, posedge RST_A, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, RST_A_delay);
    $setuphold (posedge CLK, posedge RST_B, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, RST_B_delay);
    $setuphold (posedge CLK, posedge SLEEP, 0:0:0, 0:0:0, notifier, clk_en_p, clk_en_p, CLK_delay, SLEEP_delay);
    $width (negedge CLK, 0:0:0, 0, notifier);
    $width (negedge RST_A, 0:0:0, 0, notifier);
    $width (negedge RST_B, 0:0:0, 0, notifier);
    $width (posedge CLK, 0:0:0, 0, notifier);
    $width (posedge RST_A, 0:0:0, 0, notifier);
    $width (posedge RST_B, 0:0:0, 0, notifier);
`endif
    specparam PATHPULSE$ = 0;
  endspecify
`endif
endmodule

`endcelldefine
