///////////////////////////////////////////////////////////////////////////////
//  Copyright (c) 1995/2023 Xilinx, Inc.
//  All Right Reserved.
///////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /     Vendor      : Xilinx
// \   \   \/      Version     : 2023.1
//  \   \          Description : Xilinx Unified Simulation Library Component
//  /   /                        GTME5_QUAD
// /___/   /\      Filename    : GTME5_QUAD.sv
// \   \  /  \
//  \___\/\___\
//
///////////////////////////////////////////////////////////////////////////////
//  Revision:
//
//  End Revision:
///////////////////////////////////////////////////////////////////////////////

`timescale 1 ps / 1 ps

`celldefine

(* hier_bypass_ports="in:integer:CH0_GTMRXN:CH0_GTMRXN_integer in:integer:CH0_GTMRXP:CH0_GTMRXP_integer in:integer:CH1_GTMRXN:CH1_GTMRXN_integer in:integer:CH1_GTMRXP:CH1_GTMRXP_integer in:integer:CH2_GTMRXN:CH2_GTMRXN_integer in:integer:CH2_GTMRXP:CH2_GTMRXP_integer in:integer:CH3_GTMRXN:CH3_GTMRXN_integer in:integer:CH3_GTMRXP:CH3_GTMRXP_integer out:integer:CH0_GTMTXN:CH0_GTMTXN_integer out:integer:CH0_GTMTXP:CH0_GTMTXP_integer out:integer:CH1_GTMTXN:CH1_GTMTXN_integer out:integer:CH1_GTMTXP:CH1_GTMTXP_integer out:integer:CH2_GTMTXN:CH2_GTMTXN_integer out:integer:CH2_GTMTXP:CH2_GTMTXP_integer out:integer:CH3_GTMTXN:CH3_GTMTXN_integer out:integer:CH3_GTMTXP:CH3_GTMTXP_integer" *)

module GTME5_QUAD #(
`ifdef XIL_TIMING
  parameter LOC = "UNPLACED",
`endif
  parameter [31:0] A_CFG0 = 32'h0000007C,
  parameter [31:0] A_CFG1 = 32'h00400040,
  parameter [31:0] A_CFG2 = 32'h00000000,
  parameter [31:0] A_CFG3 = 32'h00000000,
  parameter [31:0] A_CFG4 = 32'h00000000,
  parameter [31:0] A_CFG5 = 32'h00000000,
  parameter [31:0] CH0_CHCLK_CFG0 = 32'h78805E1F,
  parameter [31:0] CH0_CHCLK_CFG1 = 32'h006C00B3,
  parameter [31:0] CH0_CHCLK_CFG2 = 32'h0000000E,
  parameter [31:0] CH0_CHCLK_CFG3 = 32'h000CAB00,
  parameter [31:0] CH0_CHCLK_CFG4 = 32'h00000000,
  parameter [31:0] CH0_CHCLK_CFG5 = 32'h00000240,
  parameter [31:0] CH0_EYESCAN_CFG0 = 32'h00000000,
  parameter [31:0] CH0_EYESCAN_CFG1 = 32'h00000000,
  parameter [31:0] CH0_EYESCAN_CFG2 = 32'h00000000,
  parameter [31:0] CH0_EYESCAN_CFG3 = 32'h00000000,
  parameter [31:0] CH0_EYESCAN_CFG4 = 32'h00000000,
  parameter [31:0] CH0_EYESCAN_CFG5 = 32'h00000000,
  parameter [31:0] CH0_EYESCAN_CFG6 = 32'h00000000,
  parameter [31:0] CH0_EYESCAN_CFG7 = 32'h00000000,
  parameter [31:0] CH0_EYESCAN_CFG8 = 32'h00000000,
  parameter [31:0] CH0_FABRIC_INTF_CFG0 = 32'h00000000,
  parameter [31:0] CH0_FABRIC_INTF_CFG1 = 32'h00000000,
  parameter [31:0] CH0_FABRIC_INTF_CFG2 = 32'h00000000,
  parameter [31:0] CH0_FABRIC_INTF_CFG3 = 32'h00000000,
  parameter [31:0] CH0_FABRIC_INTF_CFG4 = 32'h00000000,
  parameter [31:0] CH0_FABRIC_INTF_CFG5 = 32'h00000000,
  parameter [0:0] CH0_INSTANTIATED = 1'b1,
  parameter [31:0] CH0_MONITOR_CFG0 = 32'h00000000,
  parameter [31:0] CH0_PMA_MISC_CFG0 = 32'h00000DC0,
  parameter [31:0] CH0_RESET_BYP_HDSHK_CFG = 32'h00000000,
  parameter [31:0] CH0_RESET_CFG = 32'h00000005,
  parameter [31:0] CH0_RESET_LOOPER_ID_CFG = 32'h00102070,
  parameter [31:0] CH0_RESET_LOOP_ID_CFG0 = 32'h00000010,
  parameter [31:0] CH0_RESET_LOOP_ID_CFG1 = 32'h76543210,
  parameter [31:0] CH0_RESET_LOOP_ID_CFG2 = 32'h00000210,
  parameter [31:0] CH0_RESET_TIME_CFG0 = 32'h02008421,
  parameter [31:0] CH0_RESET_TIME_CFG1 = 32'h02108421,
  parameter [31:0] CH0_RESET_TIME_CFG2 = 32'h02000021,
  parameter [31:0] CH0_RESET_TIME_CFG3 = 32'h00010801,
  parameter real CH0_RXOUTCLK_FREQ = 322.2656250,
  parameter real CH0_RXOUTCLK_REF_FREQ = 156.2500000,
  parameter CH0_RXOUTCLK_REF_SOURCE = "HSCLK0_LCPLLGTGREFCLK",
  parameter [31:0] CH0_RX_APT_CFG0 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG1 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG10 = 32'h0001FE80,
  parameter [31:0] CH0_RX_APT_CFG11 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG12 = 32'h00003F80,
  parameter [31:0] CH0_RX_APT_CFG13 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG14 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG15 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG16 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG17 = 32'h00181E00,
  parameter [31:0] CH0_RX_APT_CFG18 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG19 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG2 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG20 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG21 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG22 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG23 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG24 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG25 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG26 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG27 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG28 = 32'h00000018,
  parameter [31:0] CH0_RX_APT_CFG29 = 32'h08120000,
  parameter [31:0] CH0_RX_APT_CFG3 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG30 = 32'h000B0414,
  parameter [31:0] CH0_RX_APT_CFG31 = 32'h02001028,
  parameter [31:0] CH0_RX_APT_CFG32 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG33 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG34 = 32'h000318C6,
  parameter [31:0] CH0_RX_APT_CFG35 = 32'h00444444,
  parameter [31:0] CH0_RX_APT_CFG36 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG37 = 32'h60000000,
  parameter [31:0] CH0_RX_APT_CFG38 = 32'h01000000,
  parameter [31:0] CH0_RX_APT_CFG39 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG4 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG40 = 32'h10001000,
  parameter [31:0] CH0_RX_APT_CFG41 = 32'h10001000,
  parameter [31:0] CH0_RX_APT_CFG42 = 32'h000C6318,
  parameter [31:0] CH0_RX_APT_CFG43 = 32'h00444444,
  parameter [31:0] CH0_RX_APT_CFG44 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG45 = 32'h00303800,
  parameter [31:0] CH0_RX_APT_CFG46 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG47 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG48 = 32'h00180018,
  parameter [31:0] CH0_RX_APT_CFG49 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG5 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG50 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG51 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG52 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG53 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG54 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG55 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG56 = 32'h000018E8,
  parameter [31:0] CH0_RX_APT_CFG57 = 32'hFFFF0000,
  parameter [31:0] CH0_RX_APT_CFG58 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG6 = 32'h000003FF,
  parameter [31:0] CH0_RX_APT_CFG7 = 32'h00000000,
  parameter [31:0] CH0_RX_APT_CFG8 = 32'h00777777,
  parameter [31:0] CH0_RX_APT_CFG9 = 32'h00000000,
  parameter [31:0] CH0_RX_CAL_CFG0 = 32'h00000000,
  parameter [31:0] CH0_RX_CAL_CFG1 = 32'h00000000,
  parameter [31:0] CH0_RX_CAL_CFG2 = 32'h00000000,
  parameter [31:0] CH0_RX_CDR_CFG0 = 32'h78000001,
  parameter [31:0] CH0_RX_CDR_CFG1 = 32'h60000100,
  parameter [31:0] CH0_RX_CDR_CFG2 = 32'h11081564,
  parameter [31:0] CH0_RX_CDR_CFG3 = 32'h000B5CF6,
  parameter [31:0] CH0_RX_CDR_CFG4 = 32'h078C0000,
  parameter [31:0] CH0_RX_CDR_CFG5 = 32'h00000000,
  parameter [31:0] CH0_RX_CTLE_ADC_CFG0 = 32'h6000020D,
  parameter [31:0] CH0_RX_CTLE_ADC_CFG1 = 32'h253FBEBF,
  parameter [31:0] CH0_RX_CTLE_ADC_CFG2 = 32'h00000000,
  parameter [31:0] CH0_RX_CTLE_HF_CFG0 = 32'h33030800,
  parameter [31:0] CH0_RX_CTLE_HF_CFG1 = 32'h31731BE0,
  parameter [31:0] CH0_RX_DSP_CFG0 = 32'h00000000,
  parameter [31:0] CH0_RX_DSP_CFG1 = 32'h00000000,
  parameter [31:0] CH0_RX_MISC_CFG1 = 32'h00000000,
  parameter [31:0] CH0_RX_PAD_CFG0 = 32'h00000008,
  parameter [31:0] CH0_RX_PAD_CFG1 = 32'h8040497A,
  parameter [31:0] CH0_RX_PCS_CFG0 = 32'h00000000,
  parameter [31:0] CH0_RX_PCS_CFG1 = 32'h89C00000,
  parameter [31:0] CH0_RX_RSV_CFG0 = 32'h00000000,
  parameter [31:0] CH0_RX_RSV_CFG1 = 32'h00000000,
  parameter [31:0] CH0_RX_SPARE_CFG0 = 32'h00000000,
  parameter CH0_SIM_MODE = "FAST",
  parameter CH0_SIM_RECEIVER_DETECT_PASS = "TRUE",
  parameter CH0_SIM_RESET_SPEEDUP = "TRUE",
  parameter real CH0_TXOUTCLK_FREQ = 322.2656250,
  parameter real CH0_TXOUTCLK_REF_FREQ = 156.2500000,
  parameter CH0_TXOUTCLK_REF_SOURCE = "HSCLK0_LCPLLGTGREFCLK",
  parameter [31:0] CH0_TX_CAL_CFG0 = 32'h00000003,
  parameter [31:0] CH0_TX_CAL_CFG1 = 32'h00000000,
  parameter [31:0] CH0_TX_CAL_CFG2 = 32'h00000000,
  parameter [31:0] CH0_TX_CTRL_CFG0 = 32'h00002215,
  parameter [31:0] CH0_TX_CTRL_CFG1 = 32'h024D0000,
  parameter [31:0] CH0_TX_CTRL_CFG2 = 32'hD8000020,
  parameter [31:0] CH0_TX_CTRL_CFG3 = 32'h00000000,
  parameter [31:0] CH0_TX_MISC_CFG0 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG0 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG1 = 32'h88000000,
  parameter [31:0] CH0_TX_PCS_CFG2 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG3 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG4 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG5 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG6 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG7 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG8 = 32'h00000000,
  parameter [31:0] CH0_TX_PCS_CFG9 = 32'h00000000,
  parameter [31:0] CH1_CHCLK_CFG0 = 32'h78805E1F,
  parameter [31:0] CH1_CHCLK_CFG1 = 32'h006C00B3,
  parameter [31:0] CH1_CHCLK_CFG2 = 32'h0000000E,
  parameter [31:0] CH1_CHCLK_CFG3 = 32'h000CAB00,
  parameter [31:0] CH1_CHCLK_CFG4 = 32'h00000000,
  parameter [31:0] CH1_CHCLK_CFG5 = 32'h00000240,
  parameter [31:0] CH1_EYESCAN_CFG0 = 32'h00000000,
  parameter [31:0] CH1_EYESCAN_CFG1 = 32'h00000000,
  parameter [31:0] CH1_EYESCAN_CFG2 = 32'h00000000,
  parameter [31:0] CH1_EYESCAN_CFG3 = 32'h00000000,
  parameter [31:0] CH1_EYESCAN_CFG4 = 32'h00000000,
  parameter [31:0] CH1_EYESCAN_CFG5 = 32'h00000000,
  parameter [31:0] CH1_EYESCAN_CFG6 = 32'h00000000,
  parameter [31:0] CH1_EYESCAN_CFG7 = 32'h00000000,
  parameter [31:0] CH1_EYESCAN_CFG8 = 32'h00000000,
  parameter [31:0] CH1_FABRIC_INTF_CFG0 = 32'h00000000,
  parameter [31:0] CH1_FABRIC_INTF_CFG1 = 32'h00000000,
  parameter [31:0] CH1_FABRIC_INTF_CFG2 = 32'h00000000,
  parameter [31:0] CH1_FABRIC_INTF_CFG3 = 32'h00000000,
  parameter [31:0] CH1_FABRIC_INTF_CFG4 = 32'h00000000,
  parameter [31:0] CH1_FABRIC_INTF_CFG5 = 32'h00000000,
  parameter [0:0] CH1_INSTANTIATED = 1'b1,
  parameter [31:0] CH1_MONITOR_CFG0 = 32'h00000000,
  parameter [31:0] CH1_PMA_MISC_CFG0 = 32'h000001C0,
  parameter [31:0] CH1_RESET_BYP_HDSHK_CFG = 32'h00000000,
  parameter [31:0] CH1_RESET_CFG = 32'h00000005,
  parameter [31:0] CH1_RESET_LOOPER_ID_CFG = 32'h00102070,
  parameter [31:0] CH1_RESET_LOOP_ID_CFG0 = 32'h00000010,
  parameter [31:0] CH1_RESET_LOOP_ID_CFG1 = 32'h76543210,
  parameter [31:0] CH1_RESET_LOOP_ID_CFG2 = 32'h00000210,
  parameter [31:0] CH1_RESET_TIME_CFG0 = 32'h02008421,
  parameter [31:0] CH1_RESET_TIME_CFG1 = 32'h02108421,
  parameter [31:0] CH1_RESET_TIME_CFG2 = 32'h02000021,
  parameter [31:0] CH1_RESET_TIME_CFG3 = 32'h00010801,
  parameter real CH1_RXOUTCLK_FREQ = 322.2656250,
  parameter real CH1_RXOUTCLK_REF_FREQ = 156.2500000,
  parameter CH1_RXOUTCLK_REF_SOURCE = "HSCLK0_LCPLLGTGREFCLK",
  parameter [31:0] CH1_RX_APT_CFG0 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG1 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG10 = 32'h0001FE80,
  parameter [31:0] CH1_RX_APT_CFG11 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG12 = 32'h00003F80,
  parameter [31:0] CH1_RX_APT_CFG13 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG14 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG15 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG16 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG17 = 32'h00181E00,
  parameter [31:0] CH1_RX_APT_CFG18 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG19 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG2 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG20 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG21 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG22 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG23 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG24 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG25 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG26 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG27 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG28 = 32'h00000018,
  parameter [31:0] CH1_RX_APT_CFG29 = 32'h08120000,
  parameter [31:0] CH1_RX_APT_CFG3 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG30 = 32'h000B0414,
  parameter [31:0] CH1_RX_APT_CFG31 = 32'h02001028,
  parameter [31:0] CH1_RX_APT_CFG32 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG33 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG34 = 32'h000318C6,
  parameter [31:0] CH1_RX_APT_CFG35 = 32'h00444444,
  parameter [31:0] CH1_RX_APT_CFG36 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG37 = 32'h60000000,
  parameter [31:0] CH1_RX_APT_CFG38 = 32'h01000000,
  parameter [31:0] CH1_RX_APT_CFG39 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG4 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG40 = 32'h10001000,
  parameter [31:0] CH1_RX_APT_CFG41 = 32'h10001000,
  parameter [31:0] CH1_RX_APT_CFG42 = 32'h000C6318,
  parameter [31:0] CH1_RX_APT_CFG43 = 32'h00444444,
  parameter [31:0] CH1_RX_APT_CFG44 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG45 = 32'h00303800,
  parameter [31:0] CH1_RX_APT_CFG46 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG47 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG48 = 32'h00180018,
  parameter [31:0] CH1_RX_APT_CFG49 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG5 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG50 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG51 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG52 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG53 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG54 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG55 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG56 = 32'h000018E8,
  parameter [31:0] CH1_RX_APT_CFG57 = 32'hFFFF0000,
  parameter [31:0] CH1_RX_APT_CFG58 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG6 = 32'h000003FF,
  parameter [31:0] CH1_RX_APT_CFG7 = 32'h00000000,
  parameter [31:0] CH1_RX_APT_CFG8 = 32'h00777777,
  parameter [31:0] CH1_RX_APT_CFG9 = 32'h00000000,
  parameter [31:0] CH1_RX_CAL_CFG0 = 32'h00000000,
  parameter [31:0] CH1_RX_CAL_CFG1 = 32'h00000000,
  parameter [31:0] CH1_RX_CAL_CFG2 = 32'h00000000,
  parameter [31:0] CH1_RX_CDR_CFG0 = 32'h78000001,
  parameter [31:0] CH1_RX_CDR_CFG1 = 32'h60000100,
  parameter [31:0] CH1_RX_CDR_CFG2 = 32'h11081564,
  parameter [31:0] CH1_RX_CDR_CFG3 = 32'h000B5CF6,
  parameter [31:0] CH1_RX_CDR_CFG4 = 32'h078C0000,
  parameter [31:0] CH1_RX_CDR_CFG5 = 32'h00000000,
  parameter [31:0] CH1_RX_CTLE_ADC_CFG0 = 32'h6000020D,
  parameter [31:0] CH1_RX_CTLE_ADC_CFG1 = 32'h253FBEBF,
  parameter [31:0] CH1_RX_CTLE_ADC_CFG2 = 32'h00000000,
  parameter [31:0] CH1_RX_CTLE_HF_CFG0 = 32'h33030800,
  parameter [31:0] CH1_RX_CTLE_HF_CFG1 = 32'h31731BE0,
  parameter [31:0] CH1_RX_DSP_CFG0 = 32'h00000000,
  parameter [31:0] CH1_RX_DSP_CFG1 = 32'h00000000,
  parameter [31:0] CH1_RX_MISC_CFG1 = 32'h00000000,
  parameter [31:0] CH1_RX_PAD_CFG0 = 32'h00000008,
  parameter [31:0] CH1_RX_PAD_CFG1 = 32'h8040497A,
  parameter [31:0] CH1_RX_PCS_CFG0 = 32'h00000000,
  parameter [31:0] CH1_RX_PCS_CFG1 = 32'h89C00000,
  parameter [31:0] CH1_RX_RSV_CFG0 = 32'h00000000,
  parameter [31:0] CH1_RX_RSV_CFG1 = 32'h00000000,
  parameter [31:0] CH1_RX_SPARE_CFG0 = 32'h00000000,
  parameter CH1_SIM_MODE = "FAST",
  parameter CH1_SIM_RECEIVER_DETECT_PASS = "TRUE",
  parameter CH1_SIM_RESET_SPEEDUP = "TRUE",
  parameter real CH1_TXOUTCLK_FREQ = 322.2656250,
  parameter real CH1_TXOUTCLK_REF_FREQ = 156.2500000,
  parameter CH1_TXOUTCLK_REF_SOURCE = "HSCLK0_LCPLLGTGREFCLK",
  parameter [31:0] CH1_TX_CAL_CFG0 = 32'h00000003,
  parameter [31:0] CH1_TX_CAL_CFG1 = 32'h00000000,
  parameter [31:0] CH1_TX_CAL_CFG2 = 32'h00000000,
  parameter [31:0] CH1_TX_CTRL_CFG0 = 32'h00002215,
  parameter [31:0] CH1_TX_CTRL_CFG1 = 32'h024D0000,
  parameter [31:0] CH1_TX_CTRL_CFG2 = 32'hD8000020,
  parameter [31:0] CH1_TX_CTRL_CFG3 = 32'h00000000,
  parameter [31:0] CH1_TX_MISC_CFG0 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG0 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG1 = 32'h88000000,
  parameter [31:0] CH1_TX_PCS_CFG2 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG3 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG4 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG5 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG6 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG7 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG8 = 32'h00000000,
  parameter [31:0] CH1_TX_PCS_CFG9 = 32'h00000000,
  parameter [31:0] CH2_CHCLK_CFG0 = 32'h78805E1F,
  parameter [31:0] CH2_CHCLK_CFG1 = 32'h006C00B3,
  parameter [31:0] CH2_CHCLK_CFG2 = 32'h0000000E,
  parameter [31:0] CH2_CHCLK_CFG3 = 32'h000CAB00,
  parameter [31:0] CH2_CHCLK_CFG4 = 32'h00000000,
  parameter [31:0] CH2_CHCLK_CFG5 = 32'h00000240,
  parameter [31:0] CH2_EYESCAN_CFG0 = 32'h00000000,
  parameter [31:0] CH2_EYESCAN_CFG1 = 32'h00000000,
  parameter [31:0] CH2_EYESCAN_CFG2 = 32'h00000000,
  parameter [31:0] CH2_EYESCAN_CFG3 = 32'h00000000,
  parameter [31:0] CH2_EYESCAN_CFG4 = 32'h00000000,
  parameter [31:0] CH2_EYESCAN_CFG5 = 32'h00000000,
  parameter [31:0] CH2_EYESCAN_CFG6 = 32'h00000000,
  parameter [31:0] CH2_EYESCAN_CFG7 = 32'h00000000,
  parameter [31:0] CH2_EYESCAN_CFG8 = 32'h00000000,
  parameter [31:0] CH2_FABRIC_INTF_CFG0 = 32'h00000000,
  parameter [31:0] CH2_FABRIC_INTF_CFG1 = 32'h00000000,
  parameter [31:0] CH2_FABRIC_INTF_CFG2 = 32'h00000000,
  parameter [31:0] CH2_FABRIC_INTF_CFG3 = 32'h00000000,
  parameter [31:0] CH2_FABRIC_INTF_CFG4 = 32'h00000000,
  parameter [31:0] CH2_FABRIC_INTF_CFG5 = 32'h00000000,
  parameter [0:0] CH2_INSTANTIATED = 1'b1,
  parameter [31:0] CH2_MONITOR_CFG0 = 32'h00000000,
  parameter [31:0] CH2_PMA_MISC_CFG0 = 32'h00000DC0,
  parameter [31:0] CH2_RESET_BYP_HDSHK_CFG = 32'h00000000,
  parameter [31:0] CH2_RESET_CFG = 32'h00000005,
  parameter [31:0] CH2_RESET_LOOPER_ID_CFG = 32'h00102070,
  parameter [31:0] CH2_RESET_LOOP_ID_CFG0 = 32'h00000010,
  parameter [31:0] CH2_RESET_LOOP_ID_CFG1 = 32'h76543210,
  parameter [31:0] CH2_RESET_LOOP_ID_CFG2 = 32'h00000210,
  parameter [31:0] CH2_RESET_TIME_CFG0 = 32'h02008421,
  parameter [31:0] CH2_RESET_TIME_CFG1 = 32'h02108421,
  parameter [31:0] CH2_RESET_TIME_CFG2 = 32'h02000021,
  parameter [31:0] CH2_RESET_TIME_CFG3 = 32'h00010801,
  parameter real CH2_RXOUTCLK_FREQ = 322.2656250,
  parameter real CH2_RXOUTCLK_REF_FREQ = 156.2500000,
  parameter CH2_RXOUTCLK_REF_SOURCE = "HSCLK0_LCPLLGTGREFCLK",
  parameter [31:0] CH2_RX_APT_CFG0 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG1 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG10 = 32'h0001FE80,
  parameter [31:0] CH2_RX_APT_CFG11 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG12 = 32'h00003F80,
  parameter [31:0] CH2_RX_APT_CFG13 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG14 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG15 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG16 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG17 = 32'h00181E00,
  parameter [31:0] CH2_RX_APT_CFG18 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG19 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG2 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG20 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG21 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG22 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG23 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG24 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG25 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG26 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG27 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG28 = 32'h00000018,
  parameter [31:0] CH2_RX_APT_CFG29 = 32'h08120000,
  parameter [31:0] CH2_RX_APT_CFG3 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG30 = 32'h000B0414,
  parameter [31:0] CH2_RX_APT_CFG31 = 32'h02001028,
  parameter [31:0] CH2_RX_APT_CFG32 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG33 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG34 = 32'h000318C6,
  parameter [31:0] CH2_RX_APT_CFG35 = 32'h00444444,
  parameter [31:0] CH2_RX_APT_CFG36 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG37 = 32'h60000000,
  parameter [31:0] CH2_RX_APT_CFG38 = 32'h01000000,
  parameter [31:0] CH2_RX_APT_CFG39 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG4 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG40 = 32'h10001000,
  parameter [31:0] CH2_RX_APT_CFG41 = 32'h10001000,
  parameter [31:0] CH2_RX_APT_CFG42 = 32'h000C6318,
  parameter [31:0] CH2_RX_APT_CFG43 = 32'h00444444,
  parameter [31:0] CH2_RX_APT_CFG44 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG45 = 32'h00303800,
  parameter [31:0] CH2_RX_APT_CFG46 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG47 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG48 = 32'h00180018,
  parameter [31:0] CH2_RX_APT_CFG49 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG5 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG50 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG51 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG52 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG53 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG54 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG55 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG56 = 32'h000018E8,
  parameter [31:0] CH2_RX_APT_CFG57 = 32'hFFFF0000,
  parameter [31:0] CH2_RX_APT_CFG58 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG6 = 32'h000003FF,
  parameter [31:0] CH2_RX_APT_CFG7 = 32'h00000000,
  parameter [31:0] CH2_RX_APT_CFG8 = 32'h00777777,
  parameter [31:0] CH2_RX_APT_CFG9 = 32'h00000000,
  parameter [31:0] CH2_RX_CAL_CFG0 = 32'h00000000,
  parameter [31:0] CH2_RX_CAL_CFG1 = 32'h00000000,
  parameter [31:0] CH2_RX_CAL_CFG2 = 32'h00000000,
  parameter [31:0] CH2_RX_CDR_CFG0 = 32'h78000001,
  parameter [31:0] CH2_RX_CDR_CFG1 = 32'h60000100,
  parameter [31:0] CH2_RX_CDR_CFG2 = 32'h11081564,
  parameter [31:0] CH2_RX_CDR_CFG3 = 32'h000B5CF6,
  parameter [31:0] CH2_RX_CDR_CFG4 = 32'h078C0000,
  parameter [31:0] CH2_RX_CDR_CFG5 = 32'h00000000,
  parameter [31:0] CH2_RX_CTLE_ADC_CFG0 = 32'h6000020D,
  parameter [31:0] CH2_RX_CTLE_ADC_CFG1 = 32'h253FBEBF,
  parameter [31:0] CH2_RX_CTLE_ADC_CFG2 = 32'h00000000,
  parameter [31:0] CH2_RX_CTLE_HF_CFG0 = 32'h33030800,
  parameter [31:0] CH2_RX_CTLE_HF_CFG1 = 32'h31731BE0,
  parameter [31:0] CH2_RX_DSP_CFG0 = 32'h00000000,
  parameter [31:0] CH2_RX_DSP_CFG1 = 32'h00000000,
  parameter [31:0] CH2_RX_MISC_CFG1 = 32'h00000000,
  parameter [31:0] CH2_RX_PAD_CFG0 = 32'h00000008,
  parameter [31:0] CH2_RX_PAD_CFG1 = 32'h8040497A,
  parameter [31:0] CH2_RX_PCS_CFG0 = 32'h00000000,
  parameter [31:0] CH2_RX_PCS_CFG1 = 32'h89C00000,
  parameter [31:0] CH2_RX_RSV_CFG0 = 32'h00000000,
  parameter [31:0] CH2_RX_RSV_CFG1 = 32'h00000000,
  parameter [31:0] CH2_RX_SPARE_CFG0 = 32'h00000000,
  parameter CH2_SIM_MODE = "FAST",
  parameter CH2_SIM_RECEIVER_DETECT_PASS = "TRUE",
  parameter CH2_SIM_RESET_SPEEDUP = "TRUE",
  parameter real CH2_TXOUTCLK_FREQ = 322.2656250,
  parameter real CH2_TXOUTCLK_REF_FREQ = 156.2500000,
  parameter CH2_TXOUTCLK_REF_SOURCE = "HSCLK0_LCPLLGTGREFCLK",
  parameter [31:0] CH2_TX_CAL_CFG0 = 32'h00000003,
  parameter [31:0] CH2_TX_CAL_CFG1 = 32'h00000000,
  parameter [31:0] CH2_TX_CAL_CFG2 = 32'h00000000,
  parameter [31:0] CH2_TX_CTRL_CFG0 = 32'h00002215,
  parameter [31:0] CH2_TX_CTRL_CFG1 = 32'h024D0000,
  parameter [31:0] CH2_TX_CTRL_CFG2 = 32'hD8000020,
  parameter [31:0] CH2_TX_CTRL_CFG3 = 32'h00000000,
  parameter [31:0] CH2_TX_MISC_CFG0 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG0 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG1 = 32'h88000000,
  parameter [31:0] CH2_TX_PCS_CFG2 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG3 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG4 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG5 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG6 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG7 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG8 = 32'h00000000,
  parameter [31:0] CH2_TX_PCS_CFG9 = 32'h00000000,
  parameter [31:0] CH3_CHCLK_CFG0 = 32'h78805E1F,
  parameter [31:0] CH3_CHCLK_CFG1 = 32'h006C00B3,
  parameter [31:0] CH3_CHCLK_CFG2 = 32'h0000000E,
  parameter [31:0] CH3_CHCLK_CFG3 = 32'h000CAB00,
  parameter [31:0] CH3_CHCLK_CFG4 = 32'h00000000,
  parameter [31:0] CH3_CHCLK_CFG5 = 32'h00000240,
  parameter [31:0] CH3_EYESCAN_CFG0 = 32'h00000000,
  parameter [31:0] CH3_EYESCAN_CFG1 = 32'h00000000,
  parameter [31:0] CH3_EYESCAN_CFG2 = 32'h00000000,
  parameter [31:0] CH3_EYESCAN_CFG3 = 32'h00000000,
  parameter [31:0] CH3_EYESCAN_CFG4 = 32'h00000000,
  parameter [31:0] CH3_EYESCAN_CFG5 = 32'h00000000,
  parameter [31:0] CH3_EYESCAN_CFG6 = 32'h00000000,
  parameter [31:0] CH3_EYESCAN_CFG7 = 32'h00000000,
  parameter [31:0] CH3_EYESCAN_CFG8 = 32'h00000000,
  parameter [31:0] CH3_FABRIC_INTF_CFG0 = 32'h00000000,
  parameter [31:0] CH3_FABRIC_INTF_CFG1 = 32'h00000000,
  parameter [31:0] CH3_FABRIC_INTF_CFG2 = 32'h00000000,
  parameter [31:0] CH3_FABRIC_INTF_CFG3 = 32'h00000000,
  parameter [31:0] CH3_FABRIC_INTF_CFG4 = 32'h00000000,
  parameter [31:0] CH3_FABRIC_INTF_CFG5 = 32'h00000000,
  parameter [0:0] CH3_INSTANTIATED = 1'b1,
  parameter [31:0] CH3_MONITOR_CFG0 = 32'h00000000,
  parameter [31:0] CH3_PMA_MISC_CFG0 = 32'h000001C0,
  parameter [31:0] CH3_RESET_BYP_HDSHK_CFG = 32'h00000000,
  parameter [31:0] CH3_RESET_CFG = 32'h00000005,
  parameter [31:0] CH3_RESET_LOOPER_ID_CFG = 32'h00102070,
  parameter [31:0] CH3_RESET_LOOP_ID_CFG0 = 32'h00000010,
  parameter [31:0] CH3_RESET_LOOP_ID_CFG1 = 32'h76543210,
  parameter [31:0] CH3_RESET_LOOP_ID_CFG2 = 32'h00000210,
  parameter [31:0] CH3_RESET_TIME_CFG0 = 32'h02008421,
  parameter [31:0] CH3_RESET_TIME_CFG1 = 32'h02108421,
  parameter [31:0] CH3_RESET_TIME_CFG2 = 32'h02000021,
  parameter [31:0] CH3_RESET_TIME_CFG3 = 32'h00010801,
  parameter real CH3_RXOUTCLK_FREQ = 322.2656250,
  parameter real CH3_RXOUTCLK_REF_FREQ = 156.2500000,
  parameter CH3_RXOUTCLK_REF_SOURCE = "HSCLK0_LCPLLGTGREFCLK",
  parameter [31:0] CH3_RX_APT_CFG0 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG1 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG10 = 32'h0001FE80,
  parameter [31:0] CH3_RX_APT_CFG11 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG12 = 32'h00003F80,
  parameter [31:0] CH3_RX_APT_CFG13 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG14 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG15 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG16 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG17 = 32'h00181E00,
  parameter [31:0] CH3_RX_APT_CFG18 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG19 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG2 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG20 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG21 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG22 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG23 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG24 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG25 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG26 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG27 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG28 = 32'h00000018,
  parameter [31:0] CH3_RX_APT_CFG29 = 32'h08120000,
  parameter [31:0] CH3_RX_APT_CFG3 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG30 = 32'h000B0414,
  parameter [31:0] CH3_RX_APT_CFG31 = 32'h02001028,
  parameter [31:0] CH3_RX_APT_CFG32 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG33 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG34 = 32'h000318C6,
  parameter [31:0] CH3_RX_APT_CFG35 = 32'h00444444,
  parameter [31:0] CH3_RX_APT_CFG36 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG37 = 32'h60000000,
  parameter [31:0] CH3_RX_APT_CFG38 = 32'h01000000,
  parameter [31:0] CH3_RX_APT_CFG39 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG4 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG40 = 32'h10001000,
  parameter [31:0] CH3_RX_APT_CFG41 = 32'h10001000,
  parameter [31:0] CH3_RX_APT_CFG42 = 32'h000C6318,
  parameter [31:0] CH3_RX_APT_CFG43 = 32'h00444444,
  parameter [31:0] CH3_RX_APT_CFG44 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG45 = 32'h00303800,
  parameter [31:0] CH3_RX_APT_CFG46 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG47 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG48 = 32'h00180018,
  parameter [31:0] CH3_RX_APT_CFG49 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG5 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG50 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG51 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG52 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG53 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG54 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG55 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG56 = 32'h000018E8,
  parameter [31:0] CH3_RX_APT_CFG57 = 32'hFFFF0000,
  parameter [31:0] CH3_RX_APT_CFG58 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG6 = 32'h000003FF,
  parameter [31:0] CH3_RX_APT_CFG7 = 32'h00000000,
  parameter [31:0] CH3_RX_APT_CFG8 = 32'h00777777,
  parameter [31:0] CH3_RX_APT_CFG9 = 32'h00000000,
  parameter [31:0] CH3_RX_CAL_CFG0 = 32'h00000000,
  parameter [31:0] CH3_RX_CAL_CFG1 = 32'h00000000,
  parameter [31:0] CH3_RX_CAL_CFG2 = 32'h00000000,
  parameter [31:0] CH3_RX_CDR_CFG0 = 32'h78000001,
  parameter [31:0] CH3_RX_CDR_CFG1 = 32'h60000100,
  parameter [31:0] CH3_RX_CDR_CFG2 = 32'h11081564,
  parameter [31:0] CH3_RX_CDR_CFG3 = 32'h000B5CF6,
  parameter [31:0] CH3_RX_CDR_CFG4 = 32'h078C0000,
  parameter [31:0] CH3_RX_CDR_CFG5 = 32'h00000000,
  parameter [31:0] CH3_RX_CTLE_ADC_CFG0 = 32'h6000020D,
  parameter [31:0] CH3_RX_CTLE_ADC_CFG1 = 32'h253FBEBF,
  parameter [31:0] CH3_RX_CTLE_ADC_CFG2 = 32'h00000000,
  parameter [31:0] CH3_RX_CTLE_HF_CFG0 = 32'h33030800,
  parameter [31:0] CH3_RX_CTLE_HF_CFG1 = 32'h31731BE0,
  parameter [31:0] CH3_RX_DSP_CFG0 = 32'h00000000,
  parameter [31:0] CH3_RX_DSP_CFG1 = 32'h00000000,
  parameter [31:0] CH3_RX_MISC_CFG1 = 32'h00000000,
  parameter [31:0] CH3_RX_PAD_CFG0 = 32'h00000008,
  parameter [31:0] CH3_RX_PAD_CFG1 = 32'h8040497A,
  parameter [31:0] CH3_RX_PCS_CFG0 = 32'h00000000,
  parameter [31:0] CH3_RX_PCS_CFG1 = 32'h89C00000,
  parameter [31:0] CH3_RX_RSV_CFG0 = 32'h00000000,
  parameter [31:0] CH3_RX_RSV_CFG1 = 32'h00000000,
  parameter [31:0] CH3_RX_SPARE_CFG0 = 32'h00000000,
  parameter CH3_SIM_MODE = "FAST",
  parameter CH3_SIM_RECEIVER_DETECT_PASS = "TRUE",
  parameter CH3_SIM_RESET_SPEEDUP = "TRUE",
  parameter real CH3_TXOUTCLK_FREQ = 322.2656250,
  parameter real CH3_TXOUTCLK_REF_FREQ = 156.2500000,
  parameter CH3_TXOUTCLK_REF_SOURCE = "HSCLK0_LCPLLGTGREFCLK",
  parameter [31:0] CH3_TX_CAL_CFG0 = 32'h00000003,
  parameter [31:0] CH3_TX_CAL_CFG1 = 32'h00000000,
  parameter [31:0] CH3_TX_CAL_CFG2 = 32'h00000000,
  parameter [31:0] CH3_TX_CTRL_CFG0 = 32'h00002215,
  parameter [31:0] CH3_TX_CTRL_CFG1 = 32'h024D0000,
  parameter [31:0] CH3_TX_CTRL_CFG2 = 32'hD8000020,
  parameter [31:0] CH3_TX_CTRL_CFG3 = 32'h00000000,
  parameter [31:0] CH3_TX_MISC_CFG0 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG0 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG1 = 32'h88000000,
  parameter [31:0] CH3_TX_PCS_CFG2 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG3 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG4 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG5 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG6 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG7 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG8 = 32'h00000000,
  parameter [31:0] CH3_TX_PCS_CFG9 = 32'h00000000,
  parameter CHANNEL_CONNECTIVITY = "NONE",
  parameter [31:0] CTRL_RSV_CFG0 = 32'h00000018,
  parameter [31:0] CTRL_RSV_CFG1 = 32'h00000000,
  parameter [0:0] HS0_LCPLL_IPS_PIN_EN = 1'b0,
  parameter integer HS0_LCPLL_IPS_REFCLK_SEL = 0,
  parameter [2:0] HS0_LCPLL_REFCLK_MAP0 = 3'h0,
  parameter [2:0] HS0_LCPLL_REFCLK_MAP1 = 3'h1,
  parameter [2:0] HS0_LCPLL_REFCLK_MAP2 = 3'h2,
  parameter [2:0] HS0_LCPLL_REFCLK_MAP3 = 3'h3,
  parameter [2:0] HS0_LCPLL_REFCLK_MAP4 = 3'h4,
  parameter [2:0] HS0_LCPLL_REFCLK_MAP5 = 3'h5,
  parameter [2:0] HS0_LCPLL_REFCLK_MAP6 = 3'h6,
  parameter [2:0] HS0_LCPLL_REFCLK_MAP7 = 3'h7,
  parameter [0:0] HS1_LCPLL_IPS_PIN_EN = 1'b0,
  parameter integer HS1_LCPLL_IPS_REFCLK_SEL = 0,
  parameter [2:0] HS1_LCPLL_REFCLK_MAP0 = 3'h0,
  parameter [2:0] HS1_LCPLL_REFCLK_MAP1 = 3'h1,
  parameter [2:0] HS1_LCPLL_REFCLK_MAP2 = 3'h2,
  parameter [2:0] HS1_LCPLL_REFCLK_MAP3 = 3'h3,
  parameter [2:0] HS1_LCPLL_REFCLK_MAP4 = 3'h4,
  parameter [2:0] HS1_LCPLL_REFCLK_MAP5 = 3'h5,
  parameter [2:0] HS1_LCPLL_REFCLK_MAP6 = 3'h6,
  parameter [2:0] HS1_LCPLL_REFCLK_MAP7 = 3'h7,
  parameter [31:0] HSCLK0_HSDIST_CFG = 32'h00DE241E,
  parameter [0:0] HSCLK0_INSTANTIATED = 1'b1,
  parameter [31:0] HSCLK0_LCPLL_CFG0 = 32'h90401F04,
  parameter [31:0] HSCLK0_LCPLL_CFG1 = 32'h04200F00,
  parameter [31:0] HSCLK0_LCPLL_CFG2 = 32'h80600208,
  parameter [31:0] HSCLK0_LCPLL_LGC_CFG0 = 32'hE5D48B10,
  parameter [31:0] HSCLK0_LCPLL_LGC_CFG1 = 32'h00121840,
  parameter [31:0] HSCLK0_LCPLL_LGC_CFG2 = 32'h00000037,
  parameter integer HSCLK0_RXRECCLK_SEL = 0,
  parameter [31:0] HSCLK1_HSDIST_CFG = 32'h00DE241E,
  parameter [0:0] HSCLK1_INSTANTIATED = 1'b1,
  parameter [31:0] HSCLK1_LCPLL_CFG0 = 32'h90401F04,
  parameter [31:0] HSCLK1_LCPLL_CFG1 = 32'h04200F00,
  parameter [31:0] HSCLK1_LCPLL_CFG2 = 32'h80600208,
  parameter [31:0] HSCLK1_LCPLL_LGC_CFG0 = 32'hE5D48B10,
  parameter [31:0] HSCLK1_LCPLL_LGC_CFG1 = 32'h00121840,
  parameter [31:0] HSCLK1_LCPLL_LGC_CFG2 = 32'h00000037,
  parameter integer HSCLK1_RXRECCLK_SEL = 0,
  parameter MEMORY_INIT_FILE = "NONE",
  parameter [31:0] MST_RESET_CFG = 32'h00000000,
  parameter [31:0] PIN_CFG0 = 32'h00000000,
  parameter [31:0] POR_CFG = 32'h00004200,
  parameter [0:0] QUAD_INSTANTIATED = 1'b1,
  parameter QUAD_SIM_MODE = "FAST",
  parameter QUAD_SIM_RESET_SPEEDUP = "TRUE",
  parameter [31:0] RCALBG0_CFG0 = 32'h00000000,
  parameter [31:0] RCALBG0_CFG1 = 32'h00000000,
  parameter [31:0] RCALBG0_CFG2 = 32'h00000000,
  parameter [31:0] RCALBG0_CFG3 = 32'h00000000,
  parameter [31:0] RCALBG0_CFG4 = 32'h00000003,
  parameter [31:0] RCALBG0_CFG5 = 32'h000002B3,
  parameter [31:0] RCALBG1_CFG0 = 32'h00000000,
  parameter [31:0] RCALBG1_CFG1 = 32'h00000000,
  parameter [31:0] RCALBG1_CFG2 = 32'h00000000,
  parameter [31:0] RCALBG1_CFG3 = 32'h00000000,
  parameter [31:0] RCALBG1_CFG4 = 32'h00000003,
  parameter [31:0] RCALBG1_CFG5 = 32'h000002B3,
  parameter [31:0] RXRSTDONE_DIST_SEL = 32'h00000000,
  parameter integer SIM_VERSION = 1,
  parameter STAT_NPI_REG_LIST = "NONE",
  parameter [31:0] TERMPROG_CFG = 32'h00000000,
  parameter [31:0] TXRSTDONE_DIST_SEL = 32'h00000000,
  parameter [31:0] UB_CFG0 = 32'h73400000
)(
  output [31:0] APB3PRDATA,
  output APB3PREADY,
  output APB3PSLVERR,
  output [31:0] CH0_DMONITOROUT,
  output CH0_DMONITOROUTCLK,
  output CH0_EYESCANDATAERROR,
  output CH0_GTMTXN,
  output CH0_GTMTXP,
  output CH0_ILORESETDONE,
  output [15:0] CH0_PCSRSVDOUT,
  output [15:0] CH0_PINRSVDAS,
  output [1:0] CH0_REFDEBUGOUT,
  output CH0_RESETEXCEPTION,
  output [2:0] CH0_RXBUFSTATUS,
  output CH0_RXCDRLOCK,
  output CH0_RXCDRPHDONE,
  output [255:0] CH0_RXDATA,
  output CH0_RXDEBUGPCSOUT,
  output CH0_RXOUTCLK,
  output CH0_RXPMARESETDONE,
  output CH0_RXPRBSERR,
  output CH0_RXPRBSLOCKED,
  output CH0_RXPROGDIVRESETDONE,
  output CH0_RXRESETDONE,
  output [2:0] CH0_TXBUFSTATUS,
  output CH0_TXDCCDONE,
  output CH0_TXDEBUGPCSOUT,
  output CH0_TXOUTCLK,
  output CH0_TXPMARESETDONE,
  output CH0_TXPROGDIVRESETDONE,
  output CH0_TXRESETDONE,
  output [31:0] CH1_DMONITOROUT,
  output CH1_DMONITOROUTCLK,
  output CH1_EYESCANDATAERROR,
  output CH1_GTMTXN,
  output CH1_GTMTXP,
  output CH1_ILORESETDONE,
  output [15:0] CH1_PCSRSVDOUT,
  output [15:0] CH1_PINRSVDAS,
  output [1:0] CH1_REFDEBUGOUT,
  output CH1_RESETEXCEPTION,
  output [2:0] CH1_RXBUFSTATUS,
  output CH1_RXCDRLOCK,
  output CH1_RXCDRPHDONE,
  output [255:0] CH1_RXDATA,
  output CH1_RXDEBUGPCSOUT,
  output CH1_RXOUTCLK,
  output CH1_RXPMARESETDONE,
  output CH1_RXPRBSERR,
  output CH1_RXPRBSLOCKED,
  output CH1_RXPROGDIVRESETDONE,
  output CH1_RXRESETDONE,
  output [2:0] CH1_TXBUFSTATUS,
  output CH1_TXDCCDONE,
  output CH1_TXDEBUGPCSOUT,
  output CH1_TXOUTCLK,
  output CH1_TXPMARESETDONE,
  output CH1_TXPROGDIVRESETDONE,
  output CH1_TXRESETDONE,
  output [31:0] CH2_DMONITOROUT,
  output CH2_DMONITOROUTCLK,
  output CH2_EYESCANDATAERROR,
  output CH2_GTMTXN,
  output CH2_GTMTXP,
  output CH2_ILORESETDONE,
  output [15:0] CH2_PCSRSVDOUT,
  output [15:0] CH2_PINRSVDAS,
  output [1:0] CH2_REFDEBUGOUT,
  output CH2_RESETEXCEPTION,
  output [2:0] CH2_RXBUFSTATUS,
  output CH2_RXCDRLOCK,
  output CH2_RXCDRPHDONE,
  output [255:0] CH2_RXDATA,
  output CH2_RXDEBUGPCSOUT,
  output CH2_RXOUTCLK,
  output CH2_RXPMARESETDONE,
  output CH2_RXPRBSERR,
  output CH2_RXPRBSLOCKED,
  output CH2_RXPROGDIVRESETDONE,
  output CH2_RXRESETDONE,
  output [2:0] CH2_TXBUFSTATUS,
  output CH2_TXDCCDONE,
  output CH2_TXDEBUGPCSOUT,
  output CH2_TXOUTCLK,
  output CH2_TXPMARESETDONE,
  output CH2_TXPROGDIVRESETDONE,
  output CH2_TXRESETDONE,
  output [31:0] CH3_DMONITOROUT,
  output CH3_DMONITOROUTCLK,
  output CH3_EYESCANDATAERROR,
  output CH3_GTMTXN,
  output CH3_GTMTXP,
  output CH3_ILORESETDONE,
  output [15:0] CH3_PCSRSVDOUT,
  output [15:0] CH3_PINRSVDAS,
  output [1:0] CH3_REFDEBUGOUT,
  output CH3_RESETEXCEPTION,
  output [2:0] CH3_RXBUFSTATUS,
  output CH3_RXCDRLOCK,
  output CH3_RXCDRPHDONE,
  output [255:0] CH3_RXDATA,
  output CH3_RXDEBUGPCSOUT,
  output CH3_RXOUTCLK,
  output CH3_RXPMARESETDONE,
  output CH3_RXPRBSERR,
  output CH3_RXPRBSLOCKED,
  output CH3_RXPROGDIVRESETDONE,
  output CH3_RXRESETDONE,
  output [2:0] CH3_TXBUFSTATUS,
  output CH3_TXDCCDONE,
  output CH3_TXDEBUGPCSOUT,
  output CH3_TXOUTCLK,
  output CH3_TXPMARESETDONE,
  output CH3_TXPROGDIVRESETDONE,
  output CH3_TXRESETDONE,
  output CORRECTERR,
  output [7:0] CTRLRSVDOUT,
  output [15:0] DEBUGTRACETDATA,
  output DEBUGTRACETVALID,
  output [31:0] GPO,
  output GTPOWERGOOD,
  output HSCLK0_LCPLLFBCLKLOST,
  output HSCLK0_LCPLLLOCK,
  output HSCLK0_LCPLLREFCLKLOST,
  output HSCLK0_LCPLLREFCLKMONITOR,
  output HSCLK0_RXRECCLKOUT0,
  output HSCLK0_RXRECCLKOUT1,
  output [1:0] HSCLK0_RXRECCLKSEL,
  output HSCLK1_LCPLLFBCLKLOST,
  output HSCLK1_LCPLLLOCK,
  output HSCLK1_LCPLLREFCLKLOST,
  output HSCLK1_LCPLLREFCLKMONITOR,
  output HSCLK1_RXRECCLKOUT0,
  output HSCLK1_RXRECCLKOUT1,
  output [1:0] HSCLK1_RXRECCLKSEL,
  output [31:0] M0_AXIS_TDATA,
  output M0_AXIS_TLAST,
  output M0_AXIS_TVALID,
  output [31:0] M1_AXIS_TDATA,
  output M1_AXIS_TLAST,
  output M1_AXIS_TVALID,
  output [31:0] M2_AXIS_TDATA,
  output M2_AXIS_TLAST,
  output M2_AXIS_TVALID,
  output [31:0] M3_AXIS_TDATA,
  output M3_AXIS_TLAST,
  output M3_AXIS_TVALID,
  output [3:0] MSTRXRESETDONE,
  output [3:0] MSTTXRESETDONE,
  output REFCLK0_CLKTESTSIGINT,
  output REFCLK0_GTREFCLKPDINT,
  output REFCLK1_CLKTESTSIGINT,
  output REFCLK1_GTREFCLKPDINT,
  output [1:0] RESETDONE_NORTHOUT,
  output [1:0] RESETDONE_SOUTHOUT,
  output S0_AXIS_TREADY,
  output S1_AXIS_TREADY,
  output S2_AXIS_TREADY,
  output S3_AXIS_TREADY,
  output TRIGACKIN0,
  output TRIGOUT0,
  output UBINTERRUPT,
  output UBTXUART,
  output UNCORRECTERR,

  input APB3CLK,
  input [15:0] APB3PADDR,
  input APB3PENABLE,
  input APB3PRESETN,
  input APB3PSEL,
  input [31:0] APB3PWDATA,
  input APB3PWRITE,
  input AXISCLK,
  input BGBYPASSB,
  input BGMONITORENB,
  input BGPDB,
  input [4:0] BGRCALOVRD,
  input BGRCALOVRDENB,
  input CH0_CDRFREQOS,
  input CH0_CDRINCPCTRL,
  input CH0_CDRSTEPDIR,
  input CH0_CDRSTEPSQ,
  input CH0_CDRSTEPSX,
  input CH0_CLKRSVD0,
  input CH0_CLKRSVD1,
  input CH0_DMONFIFORESET,
  input CH0_DMONITORCLK,
  input CH0_EYESCANRESET,
  input CH0_EYESCANTRIGGER,
  input CH0_GTMRXN,
  input CH0_GTMRXP,
  input [15:0] CH0_GTRSVD,
  input CH0_GTRXRESET,
  input CH0_GTTXRESET,
  input CH0_ILORESET,
  input CH0_ILORESETMASK,
  input [2:0] CH0_LOOPBACK,
  input [15:0] CH0_PCSRSVDIN,
  input CH0_RXCDRHOLD,
  input CH0_RXCDROVRDEN,
  input CH0_RXCDRRESET,
  input CH0_RXLATCLK,
  input [2:0] CH0_RXPCSRESETMASK,
  input [1:0] CH0_RXPD,
  input CH0_RXPERST,
  input [7:0] CH0_RXPMARESETMASK,
  input CH0_RXPOLARITY,
  input CH0_RXPRBSCNTRESET,
  input CH0_RXPRBSCNTSTOP,
  input [3:0] CH0_RXPRBSSEL,
  input CH0_RXPROGDIVRESET,
  input CH0_RXQPRBSEN,
  input [7:0] CH0_RXRATE,
  input [1:0] CH0_RXRESETMODE,
  input CH0_RXRSV0,
  input CH0_RXRSV1,
  input CH0_RXRSV2,
  input CH0_RXUSERRDY,
  input CH0_RXUSRCLK,
  input CH0_TSTCLK0,
  input CH0_TSTCLK1,
  input [255:0] CH0_TXDATA,
  input CH0_TXINHIBIT,
  input CH0_TXLATCLK,
  input [6:0] CH0_TXMAINCURSOR,
  input CH0_TXPCSRESETMASK,
  input [1:0] CH0_TXPD,
  input CH0_TXPERST,
  input CH0_TXPISOPD,
  input [1:0] CH0_TXPMARESETMASK,
  input CH0_TXPOLARITY,
  input [5:0] CH0_TXPOSTCURSOR,
  input CH0_TXPRBSFORCEERR,
  input [3:0] CH0_TXPRBSSEL,
  input [5:0] CH0_TXPRECURSOR,
  input [5:0] CH0_TXPRECURSOR2,
  input [5:0] CH0_TXPRECURSOR3,
  input CH0_TXPROGDIVRESET,
  input CH0_TXQPRBSEN,
  input [7:0] CH0_TXRATE,
  input [1:0] CH0_TXRESETMODE,
  input [4:0] CH0_TXRSV0,
  input [3:0] CH0_TXRSV1,
  input CH0_TXUSERRDY,
  input CH0_TXUSRCLK,
  input CH1_CDRFREQOS,
  input CH1_CDRINCPCTRL,
  input CH1_CDRSTEPDIR,
  input CH1_CDRSTEPSQ,
  input CH1_CDRSTEPSX,
  input CH1_CLKRSVD0,
  input CH1_CLKRSVD1,
  input CH1_DMONFIFORESET,
  input CH1_DMONITORCLK,
  input CH1_EYESCANRESET,
  input CH1_EYESCANTRIGGER,
  input CH1_GTMRXN,
  input CH1_GTMRXP,
  input [15:0] CH1_GTRSVD,
  input CH1_GTRXRESET,
  input CH1_GTTXRESET,
  input CH1_ILORESET,
  input CH1_ILORESETMASK,
  input [2:0] CH1_LOOPBACK,
  input [15:0] CH1_PCSRSVDIN,
  input CH1_RXCDRHOLD,
  input CH1_RXCDROVRDEN,
  input CH1_RXCDRRESET,
  input CH1_RXLATCLK,
  input [2:0] CH1_RXPCSRESETMASK,
  input [1:0] CH1_RXPD,
  input CH1_RXPERST,
  input [7:0] CH1_RXPMARESETMASK,
  input CH1_RXPOLARITY,
  input CH1_RXPRBSCNTRESET,
  input CH1_RXPRBSCNTSTOP,
  input [3:0] CH1_RXPRBSSEL,
  input CH1_RXPROGDIVRESET,
  input CH1_RXQPRBSEN,
  input [7:0] CH1_RXRATE,
  input [1:0] CH1_RXRESETMODE,
  input CH1_RXRSV0,
  input CH1_RXRSV1,
  input CH1_RXRSV2,
  input CH1_RXUSERRDY,
  input CH1_RXUSRCLK,
  input CH1_TSTCLK0,
  input CH1_TSTCLK1,
  input [255:0] CH1_TXDATA,
  input CH1_TXINHIBIT,
  input CH1_TXLATCLK,
  input [6:0] CH1_TXMAINCURSOR,
  input CH1_TXPCSRESETMASK,
  input [1:0] CH1_TXPD,
  input CH1_TXPERST,
  input CH1_TXPISOPD,
  input [1:0] CH1_TXPMARESETMASK,
  input CH1_TXPOLARITY,
  input [5:0] CH1_TXPOSTCURSOR,
  input CH1_TXPRBSFORCEERR,
  input [3:0] CH1_TXPRBSSEL,
  input [5:0] CH1_TXPRECURSOR,
  input [5:0] CH1_TXPRECURSOR2,
  input [5:0] CH1_TXPRECURSOR3,
  input CH1_TXPROGDIVRESET,
  input CH1_TXQPRBSEN,
  input [7:0] CH1_TXRATE,
  input [1:0] CH1_TXRESETMODE,
  input [4:0] CH1_TXRSV0,
  input [3:0] CH1_TXRSV1,
  input CH1_TXUSERRDY,
  input CH1_TXUSRCLK,
  input CH2_CDRFREQOS,
  input CH2_CDRINCPCTRL,
  input CH2_CDRSTEPDIR,
  input CH2_CDRSTEPSQ,
  input CH2_CDRSTEPSX,
  input CH2_CLKRSVD0,
  input CH2_CLKRSVD1,
  input CH2_DMONFIFORESET,
  input CH2_DMONITORCLK,
  input CH2_EYESCANRESET,
  input CH2_EYESCANTRIGGER,
  input CH2_GTMRXN,
  input CH2_GTMRXP,
  input [15:0] CH2_GTRSVD,
  input CH2_GTRXRESET,
  input CH2_GTTXRESET,
  input CH2_ILORESET,
  input CH2_ILORESETMASK,
  input [2:0] CH2_LOOPBACK,
  input [15:0] CH2_PCSRSVDIN,
  input CH2_RXCDRHOLD,
  input CH2_RXCDROVRDEN,
  input CH2_RXCDRRESET,
  input CH2_RXLATCLK,
  input [2:0] CH2_RXPCSRESETMASK,
  input [1:0] CH2_RXPD,
  input CH2_RXPERST,
  input [7:0] CH2_RXPMARESETMASK,
  input CH2_RXPOLARITY,
  input CH2_RXPRBSCNTRESET,
  input CH2_RXPRBSCNTSTOP,
  input [3:0] CH2_RXPRBSSEL,
  input CH2_RXPROGDIVRESET,
  input CH2_RXQPRBSEN,
  input [7:0] CH2_RXRATE,
  input [1:0] CH2_RXRESETMODE,
  input CH2_RXRSV0,
  input CH2_RXRSV1,
  input CH2_RXRSV2,
  input CH2_RXUSERRDY,
  input CH2_RXUSRCLK,
  input CH2_TSTCLK0,
  input CH2_TSTCLK1,
  input [255:0] CH2_TXDATA,
  input CH2_TXINHIBIT,
  input CH2_TXLATCLK,
  input [6:0] CH2_TXMAINCURSOR,
  input CH2_TXPCSRESETMASK,
  input [1:0] CH2_TXPD,
  input CH2_TXPERST,
  input CH2_TXPISOPD,
  input [1:0] CH2_TXPMARESETMASK,
  input CH2_TXPOLARITY,
  input [5:0] CH2_TXPOSTCURSOR,
  input CH2_TXPRBSFORCEERR,
  input [3:0] CH2_TXPRBSSEL,
  input [5:0] CH2_TXPRECURSOR,
  input [5:0] CH2_TXPRECURSOR2,
  input [5:0] CH2_TXPRECURSOR3,
  input CH2_TXPROGDIVRESET,
  input CH2_TXQPRBSEN,
  input [7:0] CH2_TXRATE,
  input [1:0] CH2_TXRESETMODE,
  input [4:0] CH2_TXRSV0,
  input [3:0] CH2_TXRSV1,
  input CH2_TXUSERRDY,
  input CH2_TXUSRCLK,
  input CH3_CDRFREQOS,
  input CH3_CDRINCPCTRL,
  input CH3_CDRSTEPDIR,
  input CH3_CDRSTEPSQ,
  input CH3_CDRSTEPSX,
  input CH3_CLKRSVD0,
  input CH3_CLKRSVD1,
  input CH3_DMONFIFORESET,
  input CH3_DMONITORCLK,
  input CH3_EYESCANRESET,
  input CH3_EYESCANTRIGGER,
  input CH3_GTMRXN,
  input CH3_GTMRXP,
  input [15:0] CH3_GTRSVD,
  input CH3_GTRXRESET,
  input CH3_GTTXRESET,
  input CH3_ILORESET,
  input CH3_ILORESETMASK,
  input [2:0] CH3_LOOPBACK,
  input [15:0] CH3_PCSRSVDIN,
  input CH3_RXCDRHOLD,
  input CH3_RXCDROVRDEN,
  input CH3_RXCDRRESET,
  input CH3_RXLATCLK,
  input [2:0] CH3_RXPCSRESETMASK,
  input [1:0] CH3_RXPD,
  input CH3_RXPERST,
  input [7:0] CH3_RXPMARESETMASK,
  input CH3_RXPOLARITY,
  input CH3_RXPRBSCNTRESET,
  input CH3_RXPRBSCNTSTOP,
  input [3:0] CH3_RXPRBSSEL,
  input CH3_RXPROGDIVRESET,
  input CH3_RXQPRBSEN,
  input [7:0] CH3_RXRATE,
  input [1:0] CH3_RXRESETMODE,
  input CH3_RXRSV0,
  input CH3_RXRSV1,
  input CH3_RXRSV2,
  input CH3_RXUSERRDY,
  input CH3_RXUSRCLK,
  input CH3_TSTCLK0,
  input CH3_TSTCLK1,
  input [255:0] CH3_TXDATA,
  input CH3_TXINHIBIT,
  input CH3_TXLATCLK,
  input [6:0] CH3_TXMAINCURSOR,
  input CH3_TXPCSRESETMASK,
  input [1:0] CH3_TXPD,
  input CH3_TXPERST,
  input CH3_TXPISOPD,
  input [1:0] CH3_TXPMARESETMASK,
  input CH3_TXPOLARITY,
  input [5:0] CH3_TXPOSTCURSOR,
  input CH3_TXPRBSFORCEERR,
  input [3:0] CH3_TXPRBSSEL,
  input [5:0] CH3_TXPRECURSOR,
  input [5:0] CH3_TXPRECURSOR2,
  input [5:0] CH3_TXPRECURSOR3,
  input CH3_TXPROGDIVRESET,
  input CH3_TXQPRBSEN,
  input [7:0] CH3_TXRATE,
  input [1:0] CH3_TXRESETMODE,
  input [4:0] CH3_TXRSV0,
  input [3:0] CH3_TXRSV1,
  input CH3_TXUSERRDY,
  input CH3_TXUSRCLK,
  input COESTATUSDEBUG,
  input [7:0] CTRLRSVDIN,
  input DEBUGTRACECLK,
  input DEBUGTRACEREADY,
  input [31:0] GPI,
  input [7:0] HSCLK0_LCPLLFBDIV,
  input HSCLK0_LCPLLGTGREFCLK,
  input HSCLK0_LCPLLGTREFCLK0,
  input HSCLK0_LCPLLGTREFCLK1,
  input HSCLK0_LCPLLNORTHREFCLK0,
  input HSCLK0_LCPLLNORTHREFCLK1,
  input HSCLK0_LCPLLPD,
  input [2:0] HSCLK0_LCPLLREFCLKSEL,
  input HSCLK0_LCPLLRESET,
  input HSCLK0_LCPLLRESETBYPASSMODE,
  input [1:0] HSCLK0_LCPLLRESETMASK,
  input [25:0] HSCLK0_LCPLLSDMDATA,
  input HSCLK0_LCPLLSDMTOGGLE,
  input HSCLK0_LCPLLSOUTHREFCLK0,
  input HSCLK0_LCPLLSOUTHREFCLK1,
  input [7:0] HSCLK1_LCPLLFBDIV,
  input HSCLK1_LCPLLGTGREFCLK,
  input HSCLK1_LCPLLGTREFCLK0,
  input HSCLK1_LCPLLGTREFCLK1,
  input HSCLK1_LCPLLNORTHREFCLK0,
  input HSCLK1_LCPLLNORTHREFCLK1,
  input HSCLK1_LCPLLPD,
  input [2:0] HSCLK1_LCPLLREFCLKSEL,
  input HSCLK1_LCPLLRESET,
  input HSCLK1_LCPLLRESETBYPASSMODE,
  input [1:0] HSCLK1_LCPLLRESETMASK,
  input [25:0] HSCLK1_LCPLLSDMDATA,
  input HSCLK1_LCPLLSDMTOGGLE,
  input HSCLK1_LCPLLSOUTHREFCLK0,
  input HSCLK1_LCPLLSOUTHREFCLK1,
  input M0_AXIS_TREADY,
  input M1_AXIS_TREADY,
  input M2_AXIS_TREADY,
  input M3_AXIS_TREADY,
  input [3:0] MSTRXRESET,
  input [3:0] MSTTXRESET,
  input REFCLK0_CLKTESTSIG,
  input REFCLK0_GTREFCLKPD,
  input REFCLK1_CLKTESTSIG,
  input REFCLK1_GTREFCLKPD,
  input [1:0] RESETDONE_NORTHIN,
  input [1:0] RESETDONE_SOUTHIN,
  input [31:0] S0_AXIS_TDATA,
  input S0_AXIS_TLAST,
  input S0_AXIS_TVALID,
  input [31:0] S1_AXIS_TDATA,
  input S1_AXIS_TLAST,
  input S1_AXIS_TVALID,
  input [31:0] S2_AXIS_TDATA,
  input S2_AXIS_TLAST,
  input S2_AXIS_TVALID,
  input [31:0] S3_AXIS_TDATA,
  input S3_AXIS_TLAST,
  input S3_AXIS_TVALID,
  input TRIGACKOUT0,
  input TRIGIN0,
  input UBENABLE,
  input [11:0] UBINTR,
  input UBIOLMBRST,
  input UBMBRST,
  input UBRXUART
);

// define constants
  localparam MODULE_NAME = "GTME5_QUAD";
  
  reg trig_attr;
// include dynamic registers - XILINX test only
`ifdef XIL_DR
  `include "GTME5_QUAD_dr.v"
`else
  reg [31:0] A_CFG0_REG = A_CFG0;
  reg [31:0] A_CFG1_REG = A_CFG1;
  reg [31:0] A_CFG2_REG = A_CFG2;
  reg [31:0] A_CFG3_REG = A_CFG3;
  reg [31:0] A_CFG4_REG = A_CFG4;
  reg [31:0] A_CFG5_REG = A_CFG5;
  reg [31:0] CH0_CHCLK_CFG0_REG = CH0_CHCLK_CFG0;
  reg [31:0] CH0_CHCLK_CFG1_REG = CH0_CHCLK_CFG1;
  reg [31:0] CH0_CHCLK_CFG2_REG = CH0_CHCLK_CFG2;
  reg [31:0] CH0_CHCLK_CFG3_REG = CH0_CHCLK_CFG3;
  reg [31:0] CH0_CHCLK_CFG4_REG = CH0_CHCLK_CFG4;
  reg [31:0] CH0_CHCLK_CFG5_REG = CH0_CHCLK_CFG5;
  reg [31:0] CH0_EYESCAN_CFG0_REG = CH0_EYESCAN_CFG0;
  reg [31:0] CH0_EYESCAN_CFG1_REG = CH0_EYESCAN_CFG1;
  reg [31:0] CH0_EYESCAN_CFG2_REG = CH0_EYESCAN_CFG2;
  reg [31:0] CH0_EYESCAN_CFG3_REG = CH0_EYESCAN_CFG3;
  reg [31:0] CH0_EYESCAN_CFG4_REG = CH0_EYESCAN_CFG4;
  reg [31:0] CH0_EYESCAN_CFG5_REG = CH0_EYESCAN_CFG5;
  reg [31:0] CH0_EYESCAN_CFG6_REG = CH0_EYESCAN_CFG6;
  reg [31:0] CH0_EYESCAN_CFG7_REG = CH0_EYESCAN_CFG7;
  reg [31:0] CH0_EYESCAN_CFG8_REG = CH0_EYESCAN_CFG8;
  reg [31:0] CH0_FABRIC_INTF_CFG0_REG = CH0_FABRIC_INTF_CFG0;
  reg [31:0] CH0_FABRIC_INTF_CFG1_REG = CH0_FABRIC_INTF_CFG1;
  reg [31:0] CH0_FABRIC_INTF_CFG2_REG = CH0_FABRIC_INTF_CFG2;
  reg [31:0] CH0_FABRIC_INTF_CFG3_REG = CH0_FABRIC_INTF_CFG3;
  reg [31:0] CH0_FABRIC_INTF_CFG4_REG = CH0_FABRIC_INTF_CFG4;
  reg [31:0] CH0_FABRIC_INTF_CFG5_REG = CH0_FABRIC_INTF_CFG5;
  reg [0:0] CH0_INSTANTIATED_REG = CH0_INSTANTIATED;
  reg [31:0] CH0_MONITOR_CFG0_REG = CH0_MONITOR_CFG0;
  reg [31:0] CH0_PMA_MISC_CFG0_REG = CH0_PMA_MISC_CFG0;
  reg [31:0] CH0_RESET_BYP_HDSHK_CFG_REG = CH0_RESET_BYP_HDSHK_CFG;
  reg [31:0] CH0_RESET_CFG_REG = CH0_RESET_CFG;
  reg [31:0] CH0_RESET_LOOPER_ID_CFG_REG = CH0_RESET_LOOPER_ID_CFG;
  reg [31:0] CH0_RESET_LOOP_ID_CFG0_REG = CH0_RESET_LOOP_ID_CFG0;
  reg [31:0] CH0_RESET_LOOP_ID_CFG1_REG = CH0_RESET_LOOP_ID_CFG1;
  reg [31:0] CH0_RESET_LOOP_ID_CFG2_REG = CH0_RESET_LOOP_ID_CFG2;
  reg [31:0] CH0_RESET_TIME_CFG0_REG = CH0_RESET_TIME_CFG0;
  reg [31:0] CH0_RESET_TIME_CFG1_REG = CH0_RESET_TIME_CFG1;
  reg [31:0] CH0_RESET_TIME_CFG2_REG = CH0_RESET_TIME_CFG2;
  reg [31:0] CH0_RESET_TIME_CFG3_REG = CH0_RESET_TIME_CFG3;
  real CH0_RXOUTCLK_FREQ_REG = CH0_RXOUTCLK_FREQ;
  real CH0_RXOUTCLK_REF_FREQ_REG = CH0_RXOUTCLK_REF_FREQ;
  reg [192:1] CH0_RXOUTCLK_REF_SOURCE_REG = CH0_RXOUTCLK_REF_SOURCE;
  reg [31:0] CH0_RX_APT_CFG0_REG = CH0_RX_APT_CFG0;
  reg [31:0] CH0_RX_APT_CFG1_REG = CH0_RX_APT_CFG1;
  reg [31:0] CH0_RX_APT_CFG10_REG = CH0_RX_APT_CFG10;
  reg [31:0] CH0_RX_APT_CFG11_REG = CH0_RX_APT_CFG11;
  reg [31:0] CH0_RX_APT_CFG12_REG = CH0_RX_APT_CFG12;
  reg [31:0] CH0_RX_APT_CFG13_REG = CH0_RX_APT_CFG13;
  reg [31:0] CH0_RX_APT_CFG14_REG = CH0_RX_APT_CFG14;
  reg [31:0] CH0_RX_APT_CFG15_REG = CH0_RX_APT_CFG15;
  reg [31:0] CH0_RX_APT_CFG16_REG = CH0_RX_APT_CFG16;
  reg [31:0] CH0_RX_APT_CFG17_REG = CH0_RX_APT_CFG17;
  reg [31:0] CH0_RX_APT_CFG18_REG = CH0_RX_APT_CFG18;
  reg [31:0] CH0_RX_APT_CFG19_REG = CH0_RX_APT_CFG19;
  reg [31:0] CH0_RX_APT_CFG2_REG = CH0_RX_APT_CFG2;
  reg [31:0] CH0_RX_APT_CFG20_REG = CH0_RX_APT_CFG20;
  reg [31:0] CH0_RX_APT_CFG21_REG = CH0_RX_APT_CFG21;
  reg [31:0] CH0_RX_APT_CFG22_REG = CH0_RX_APT_CFG22;
  reg [31:0] CH0_RX_APT_CFG23_REG = CH0_RX_APT_CFG23;
  reg [31:0] CH0_RX_APT_CFG24_REG = CH0_RX_APT_CFG24;
  reg [31:0] CH0_RX_APT_CFG25_REG = CH0_RX_APT_CFG25;
  reg [31:0] CH0_RX_APT_CFG26_REG = CH0_RX_APT_CFG26;
  reg [31:0] CH0_RX_APT_CFG27_REG = CH0_RX_APT_CFG27;
  reg [31:0] CH0_RX_APT_CFG28_REG = CH0_RX_APT_CFG28;
  reg [31:0] CH0_RX_APT_CFG29_REG = CH0_RX_APT_CFG29;
  reg [31:0] CH0_RX_APT_CFG3_REG = CH0_RX_APT_CFG3;
  reg [31:0] CH0_RX_APT_CFG30_REG = CH0_RX_APT_CFG30;
  reg [31:0] CH0_RX_APT_CFG31_REG = CH0_RX_APT_CFG31;
  reg [31:0] CH0_RX_APT_CFG32_REG = CH0_RX_APT_CFG32;
  reg [31:0] CH0_RX_APT_CFG33_REG = CH0_RX_APT_CFG33;
  reg [31:0] CH0_RX_APT_CFG34_REG = CH0_RX_APT_CFG34;
  reg [31:0] CH0_RX_APT_CFG35_REG = CH0_RX_APT_CFG35;
  reg [31:0] CH0_RX_APT_CFG36_REG = CH0_RX_APT_CFG36;
  reg [31:0] CH0_RX_APT_CFG37_REG = CH0_RX_APT_CFG37;
  reg [31:0] CH0_RX_APT_CFG38_REG = CH0_RX_APT_CFG38;
  reg [31:0] CH0_RX_APT_CFG39_REG = CH0_RX_APT_CFG39;
  reg [31:0] CH0_RX_APT_CFG4_REG = CH0_RX_APT_CFG4;
  reg [31:0] CH0_RX_APT_CFG40_REG = CH0_RX_APT_CFG40;
  reg [31:0] CH0_RX_APT_CFG41_REG = CH0_RX_APT_CFG41;
  reg [31:0] CH0_RX_APT_CFG42_REG = CH0_RX_APT_CFG42;
  reg [31:0] CH0_RX_APT_CFG43_REG = CH0_RX_APT_CFG43;
  reg [31:0] CH0_RX_APT_CFG44_REG = CH0_RX_APT_CFG44;
  reg [31:0] CH0_RX_APT_CFG45_REG = CH0_RX_APT_CFG45;
  reg [31:0] CH0_RX_APT_CFG46_REG = CH0_RX_APT_CFG46;
  reg [31:0] CH0_RX_APT_CFG47_REG = CH0_RX_APT_CFG47;
  reg [31:0] CH0_RX_APT_CFG48_REG = CH0_RX_APT_CFG48;
  reg [31:0] CH0_RX_APT_CFG49_REG = CH0_RX_APT_CFG49;
  reg [31:0] CH0_RX_APT_CFG5_REG = CH0_RX_APT_CFG5;
  reg [31:0] CH0_RX_APT_CFG50_REG = CH0_RX_APT_CFG50;
  reg [31:0] CH0_RX_APT_CFG51_REG = CH0_RX_APT_CFG51;
  reg [31:0] CH0_RX_APT_CFG52_REG = CH0_RX_APT_CFG52;
  reg [31:0] CH0_RX_APT_CFG53_REG = CH0_RX_APT_CFG53;
  reg [31:0] CH0_RX_APT_CFG54_REG = CH0_RX_APT_CFG54;
  reg [31:0] CH0_RX_APT_CFG55_REG = CH0_RX_APT_CFG55;
  reg [31:0] CH0_RX_APT_CFG56_REG = CH0_RX_APT_CFG56;
  reg [31:0] CH0_RX_APT_CFG57_REG = CH0_RX_APT_CFG57;
  reg [31:0] CH0_RX_APT_CFG58_REG = CH0_RX_APT_CFG58;
  reg [31:0] CH0_RX_APT_CFG6_REG = CH0_RX_APT_CFG6;
  reg [31:0] CH0_RX_APT_CFG7_REG = CH0_RX_APT_CFG7;
  reg [31:0] CH0_RX_APT_CFG8_REG = CH0_RX_APT_CFG8;
  reg [31:0] CH0_RX_APT_CFG9_REG = CH0_RX_APT_CFG9;
  reg [31:0] CH0_RX_CAL_CFG0_REG = CH0_RX_CAL_CFG0;
  reg [31:0] CH0_RX_CAL_CFG1_REG = CH0_RX_CAL_CFG1;
  reg [31:0] CH0_RX_CAL_CFG2_REG = CH0_RX_CAL_CFG2;
  reg [31:0] CH0_RX_CDR_CFG0_REG = CH0_RX_CDR_CFG0;
  reg [31:0] CH0_RX_CDR_CFG1_REG = CH0_RX_CDR_CFG1;
  reg [31:0] CH0_RX_CDR_CFG2_REG = CH0_RX_CDR_CFG2;
  reg [31:0] CH0_RX_CDR_CFG3_REG = CH0_RX_CDR_CFG3;
  reg [31:0] CH0_RX_CDR_CFG4_REG = CH0_RX_CDR_CFG4;
  reg [31:0] CH0_RX_CDR_CFG5_REG = CH0_RX_CDR_CFG5;
  reg [31:0] CH0_RX_CTLE_ADC_CFG0_REG = CH0_RX_CTLE_ADC_CFG0;
  reg [31:0] CH0_RX_CTLE_ADC_CFG1_REG = CH0_RX_CTLE_ADC_CFG1;
  reg [31:0] CH0_RX_CTLE_ADC_CFG2_REG = CH0_RX_CTLE_ADC_CFG2;
  reg [31:0] CH0_RX_CTLE_HF_CFG0_REG = CH0_RX_CTLE_HF_CFG0;
  reg [31:0] CH0_RX_CTLE_HF_CFG1_REG = CH0_RX_CTLE_HF_CFG1;
  reg [31:0] CH0_RX_DSP_CFG0_REG = CH0_RX_DSP_CFG0;
  reg [31:0] CH0_RX_DSP_CFG1_REG = CH0_RX_DSP_CFG1;
  reg [31:0] CH0_RX_MISC_CFG1_REG = CH0_RX_MISC_CFG1;
  reg [31:0] CH0_RX_PAD_CFG0_REG = CH0_RX_PAD_CFG0;
  reg [31:0] CH0_RX_PAD_CFG1_REG = CH0_RX_PAD_CFG1;
  reg [31:0] CH0_RX_PCS_CFG0_REG = CH0_RX_PCS_CFG0;
  reg [31:0] CH0_RX_PCS_CFG1_REG = CH0_RX_PCS_CFG1;
  reg [31:0] CH0_RX_RSV_CFG0_REG = CH0_RX_RSV_CFG0;
  reg [31:0] CH0_RX_RSV_CFG1_REG = CH0_RX_RSV_CFG1;
  reg [31:0] CH0_RX_SPARE_CFG0_REG = CH0_RX_SPARE_CFG0;
  reg [48:1] CH0_SIM_MODE_REG = CH0_SIM_MODE;
  reg [40:1] CH0_SIM_RECEIVER_DETECT_PASS_REG = CH0_SIM_RECEIVER_DETECT_PASS;
  reg [40:1] CH0_SIM_RESET_SPEEDUP_REG = CH0_SIM_RESET_SPEEDUP;
  real CH0_TXOUTCLK_FREQ_REG = CH0_TXOUTCLK_FREQ;
  real CH0_TXOUTCLK_REF_FREQ_REG = CH0_TXOUTCLK_REF_FREQ;
  reg [192:1] CH0_TXOUTCLK_REF_SOURCE_REG = CH0_TXOUTCLK_REF_SOURCE;
  reg [31:0] CH0_TX_CAL_CFG0_REG = CH0_TX_CAL_CFG0;
  reg [31:0] CH0_TX_CAL_CFG1_REG = CH0_TX_CAL_CFG1;
  reg [31:0] CH0_TX_CAL_CFG2_REG = CH0_TX_CAL_CFG2;
  reg [31:0] CH0_TX_CTRL_CFG0_REG = CH0_TX_CTRL_CFG0;
  reg [31:0] CH0_TX_CTRL_CFG1_REG = CH0_TX_CTRL_CFG1;
  reg [31:0] CH0_TX_CTRL_CFG2_REG = CH0_TX_CTRL_CFG2;
  reg [31:0] CH0_TX_CTRL_CFG3_REG = CH0_TX_CTRL_CFG3;
  reg [31:0] CH0_TX_MISC_CFG0_REG = CH0_TX_MISC_CFG0;
  reg [31:0] CH0_TX_PCS_CFG0_REG = CH0_TX_PCS_CFG0;
  reg [31:0] CH0_TX_PCS_CFG1_REG = CH0_TX_PCS_CFG1;
  reg [31:0] CH0_TX_PCS_CFG2_REG = CH0_TX_PCS_CFG2;
  reg [31:0] CH0_TX_PCS_CFG3_REG = CH0_TX_PCS_CFG3;
  reg [31:0] CH0_TX_PCS_CFG4_REG = CH0_TX_PCS_CFG4;
  reg [31:0] CH0_TX_PCS_CFG5_REG = CH0_TX_PCS_CFG5;
  reg [31:0] CH0_TX_PCS_CFG6_REG = CH0_TX_PCS_CFG6;
  reg [31:0] CH0_TX_PCS_CFG7_REG = CH0_TX_PCS_CFG7;
  reg [31:0] CH0_TX_PCS_CFG8_REG = CH0_TX_PCS_CFG8;
  reg [31:0] CH0_TX_PCS_CFG9_REG = CH0_TX_PCS_CFG9;
  reg [31:0] CH1_CHCLK_CFG0_REG = CH1_CHCLK_CFG0;
  reg [31:0] CH1_CHCLK_CFG1_REG = CH1_CHCLK_CFG1;
  reg [31:0] CH1_CHCLK_CFG2_REG = CH1_CHCLK_CFG2;
  reg [31:0] CH1_CHCLK_CFG3_REG = CH1_CHCLK_CFG3;
  reg [31:0] CH1_CHCLK_CFG4_REG = CH1_CHCLK_CFG4;
  reg [31:0] CH1_CHCLK_CFG5_REG = CH1_CHCLK_CFG5;
  reg [31:0] CH1_EYESCAN_CFG0_REG = CH1_EYESCAN_CFG0;
  reg [31:0] CH1_EYESCAN_CFG1_REG = CH1_EYESCAN_CFG1;
  reg [31:0] CH1_EYESCAN_CFG2_REG = CH1_EYESCAN_CFG2;
  reg [31:0] CH1_EYESCAN_CFG3_REG = CH1_EYESCAN_CFG3;
  reg [31:0] CH1_EYESCAN_CFG4_REG = CH1_EYESCAN_CFG4;
  reg [31:0] CH1_EYESCAN_CFG5_REG = CH1_EYESCAN_CFG5;
  reg [31:0] CH1_EYESCAN_CFG6_REG = CH1_EYESCAN_CFG6;
  reg [31:0] CH1_EYESCAN_CFG7_REG = CH1_EYESCAN_CFG7;
  reg [31:0] CH1_EYESCAN_CFG8_REG = CH1_EYESCAN_CFG8;
  reg [31:0] CH1_FABRIC_INTF_CFG0_REG = CH1_FABRIC_INTF_CFG0;
  reg [31:0] CH1_FABRIC_INTF_CFG1_REG = CH1_FABRIC_INTF_CFG1;
  reg [31:0] CH1_FABRIC_INTF_CFG2_REG = CH1_FABRIC_INTF_CFG2;
  reg [31:0] CH1_FABRIC_INTF_CFG3_REG = CH1_FABRIC_INTF_CFG3;
  reg [31:0] CH1_FABRIC_INTF_CFG4_REG = CH1_FABRIC_INTF_CFG4;
  reg [31:0] CH1_FABRIC_INTF_CFG5_REG = CH1_FABRIC_INTF_CFG5;
  reg [0:0] CH1_INSTANTIATED_REG = CH1_INSTANTIATED;
  reg [31:0] CH1_MONITOR_CFG0_REG = CH1_MONITOR_CFG0;
  reg [31:0] CH1_PMA_MISC_CFG0_REG = CH1_PMA_MISC_CFG0;
  reg [31:0] CH1_RESET_BYP_HDSHK_CFG_REG = CH1_RESET_BYP_HDSHK_CFG;
  reg [31:0] CH1_RESET_CFG_REG = CH1_RESET_CFG;
  reg [31:0] CH1_RESET_LOOPER_ID_CFG_REG = CH1_RESET_LOOPER_ID_CFG;
  reg [31:0] CH1_RESET_LOOP_ID_CFG0_REG = CH1_RESET_LOOP_ID_CFG0;
  reg [31:0] CH1_RESET_LOOP_ID_CFG1_REG = CH1_RESET_LOOP_ID_CFG1;
  reg [31:0] CH1_RESET_LOOP_ID_CFG2_REG = CH1_RESET_LOOP_ID_CFG2;
  reg [31:0] CH1_RESET_TIME_CFG0_REG = CH1_RESET_TIME_CFG0;
  reg [31:0] CH1_RESET_TIME_CFG1_REG = CH1_RESET_TIME_CFG1;
  reg [31:0] CH1_RESET_TIME_CFG2_REG = CH1_RESET_TIME_CFG2;
  reg [31:0] CH1_RESET_TIME_CFG3_REG = CH1_RESET_TIME_CFG3;
  real CH1_RXOUTCLK_FREQ_REG = CH1_RXOUTCLK_FREQ;
  real CH1_RXOUTCLK_REF_FREQ_REG = CH1_RXOUTCLK_REF_FREQ;
  reg [192:1] CH1_RXOUTCLK_REF_SOURCE_REG = CH1_RXOUTCLK_REF_SOURCE;
  reg [31:0] CH1_RX_APT_CFG0_REG = CH1_RX_APT_CFG0;
  reg [31:0] CH1_RX_APT_CFG1_REG = CH1_RX_APT_CFG1;
  reg [31:0] CH1_RX_APT_CFG10_REG = CH1_RX_APT_CFG10;
  reg [31:0] CH1_RX_APT_CFG11_REG = CH1_RX_APT_CFG11;
  reg [31:0] CH1_RX_APT_CFG12_REG = CH1_RX_APT_CFG12;
  reg [31:0] CH1_RX_APT_CFG13_REG = CH1_RX_APT_CFG13;
  reg [31:0] CH1_RX_APT_CFG14_REG = CH1_RX_APT_CFG14;
  reg [31:0] CH1_RX_APT_CFG15_REG = CH1_RX_APT_CFG15;
  reg [31:0] CH1_RX_APT_CFG16_REG = CH1_RX_APT_CFG16;
  reg [31:0] CH1_RX_APT_CFG17_REG = CH1_RX_APT_CFG17;
  reg [31:0] CH1_RX_APT_CFG18_REG = CH1_RX_APT_CFG18;
  reg [31:0] CH1_RX_APT_CFG19_REG = CH1_RX_APT_CFG19;
  reg [31:0] CH1_RX_APT_CFG2_REG = CH1_RX_APT_CFG2;
  reg [31:0] CH1_RX_APT_CFG20_REG = CH1_RX_APT_CFG20;
  reg [31:0] CH1_RX_APT_CFG21_REG = CH1_RX_APT_CFG21;
  reg [31:0] CH1_RX_APT_CFG22_REG = CH1_RX_APT_CFG22;
  reg [31:0] CH1_RX_APT_CFG23_REG = CH1_RX_APT_CFG23;
  reg [31:0] CH1_RX_APT_CFG24_REG = CH1_RX_APT_CFG24;
  reg [31:0] CH1_RX_APT_CFG25_REG = CH1_RX_APT_CFG25;
  reg [31:0] CH1_RX_APT_CFG26_REG = CH1_RX_APT_CFG26;
  reg [31:0] CH1_RX_APT_CFG27_REG = CH1_RX_APT_CFG27;
  reg [31:0] CH1_RX_APT_CFG28_REG = CH1_RX_APT_CFG28;
  reg [31:0] CH1_RX_APT_CFG29_REG = CH1_RX_APT_CFG29;
  reg [31:0] CH1_RX_APT_CFG3_REG = CH1_RX_APT_CFG3;
  reg [31:0] CH1_RX_APT_CFG30_REG = CH1_RX_APT_CFG30;
  reg [31:0] CH1_RX_APT_CFG31_REG = CH1_RX_APT_CFG31;
  reg [31:0] CH1_RX_APT_CFG32_REG = CH1_RX_APT_CFG32;
  reg [31:0] CH1_RX_APT_CFG33_REG = CH1_RX_APT_CFG33;
  reg [31:0] CH1_RX_APT_CFG34_REG = CH1_RX_APT_CFG34;
  reg [31:0] CH1_RX_APT_CFG35_REG = CH1_RX_APT_CFG35;
  reg [31:0] CH1_RX_APT_CFG36_REG = CH1_RX_APT_CFG36;
  reg [31:0] CH1_RX_APT_CFG37_REG = CH1_RX_APT_CFG37;
  reg [31:0] CH1_RX_APT_CFG38_REG = CH1_RX_APT_CFG38;
  reg [31:0] CH1_RX_APT_CFG39_REG = CH1_RX_APT_CFG39;
  reg [31:0] CH1_RX_APT_CFG4_REG = CH1_RX_APT_CFG4;
  reg [31:0] CH1_RX_APT_CFG40_REG = CH1_RX_APT_CFG40;
  reg [31:0] CH1_RX_APT_CFG41_REG = CH1_RX_APT_CFG41;
  reg [31:0] CH1_RX_APT_CFG42_REG = CH1_RX_APT_CFG42;
  reg [31:0] CH1_RX_APT_CFG43_REG = CH1_RX_APT_CFG43;
  reg [31:0] CH1_RX_APT_CFG44_REG = CH1_RX_APT_CFG44;
  reg [31:0] CH1_RX_APT_CFG45_REG = CH1_RX_APT_CFG45;
  reg [31:0] CH1_RX_APT_CFG46_REG = CH1_RX_APT_CFG46;
  reg [31:0] CH1_RX_APT_CFG47_REG = CH1_RX_APT_CFG47;
  reg [31:0] CH1_RX_APT_CFG48_REG = CH1_RX_APT_CFG48;
  reg [31:0] CH1_RX_APT_CFG49_REG = CH1_RX_APT_CFG49;
  reg [31:0] CH1_RX_APT_CFG5_REG = CH1_RX_APT_CFG5;
  reg [31:0] CH1_RX_APT_CFG50_REG = CH1_RX_APT_CFG50;
  reg [31:0] CH1_RX_APT_CFG51_REG = CH1_RX_APT_CFG51;
  reg [31:0] CH1_RX_APT_CFG52_REG = CH1_RX_APT_CFG52;
  reg [31:0] CH1_RX_APT_CFG53_REG = CH1_RX_APT_CFG53;
  reg [31:0] CH1_RX_APT_CFG54_REG = CH1_RX_APT_CFG54;
  reg [31:0] CH1_RX_APT_CFG55_REG = CH1_RX_APT_CFG55;
  reg [31:0] CH1_RX_APT_CFG56_REG = CH1_RX_APT_CFG56;
  reg [31:0] CH1_RX_APT_CFG57_REG = CH1_RX_APT_CFG57;
  reg [31:0] CH1_RX_APT_CFG58_REG = CH1_RX_APT_CFG58;
  reg [31:0] CH1_RX_APT_CFG6_REG = CH1_RX_APT_CFG6;
  reg [31:0] CH1_RX_APT_CFG7_REG = CH1_RX_APT_CFG7;
  reg [31:0] CH1_RX_APT_CFG8_REG = CH1_RX_APT_CFG8;
  reg [31:0] CH1_RX_APT_CFG9_REG = CH1_RX_APT_CFG9;
  reg [31:0] CH1_RX_CAL_CFG0_REG = CH1_RX_CAL_CFG0;
  reg [31:0] CH1_RX_CAL_CFG1_REG = CH1_RX_CAL_CFG1;
  reg [31:0] CH1_RX_CAL_CFG2_REG = CH1_RX_CAL_CFG2;
  reg [31:0] CH1_RX_CDR_CFG0_REG = CH1_RX_CDR_CFG0;
  reg [31:0] CH1_RX_CDR_CFG1_REG = CH1_RX_CDR_CFG1;
  reg [31:0] CH1_RX_CDR_CFG2_REG = CH1_RX_CDR_CFG2;
  reg [31:0] CH1_RX_CDR_CFG3_REG = CH1_RX_CDR_CFG3;
  reg [31:0] CH1_RX_CDR_CFG4_REG = CH1_RX_CDR_CFG4;
  reg [31:0] CH1_RX_CDR_CFG5_REG = CH1_RX_CDR_CFG5;
  reg [31:0] CH1_RX_CTLE_ADC_CFG0_REG = CH1_RX_CTLE_ADC_CFG0;
  reg [31:0] CH1_RX_CTLE_ADC_CFG1_REG = CH1_RX_CTLE_ADC_CFG1;
  reg [31:0] CH1_RX_CTLE_ADC_CFG2_REG = CH1_RX_CTLE_ADC_CFG2;
  reg [31:0] CH1_RX_CTLE_HF_CFG0_REG = CH1_RX_CTLE_HF_CFG0;
  reg [31:0] CH1_RX_CTLE_HF_CFG1_REG = CH1_RX_CTLE_HF_CFG1;
  reg [31:0] CH1_RX_DSP_CFG0_REG = CH1_RX_DSP_CFG0;
  reg [31:0] CH1_RX_DSP_CFG1_REG = CH1_RX_DSP_CFG1;
  reg [31:0] CH1_RX_MISC_CFG1_REG = CH1_RX_MISC_CFG1;
  reg [31:0] CH1_RX_PAD_CFG0_REG = CH1_RX_PAD_CFG0;
  reg [31:0] CH1_RX_PAD_CFG1_REG = CH1_RX_PAD_CFG1;
  reg [31:0] CH1_RX_PCS_CFG0_REG = CH1_RX_PCS_CFG0;
  reg [31:0] CH1_RX_PCS_CFG1_REG = CH1_RX_PCS_CFG1;
  reg [31:0] CH1_RX_RSV_CFG0_REG = CH1_RX_RSV_CFG0;
  reg [31:0] CH1_RX_RSV_CFG1_REG = CH1_RX_RSV_CFG1;
  reg [31:0] CH1_RX_SPARE_CFG0_REG = CH1_RX_SPARE_CFG0;
  reg [48:1] CH1_SIM_MODE_REG = CH1_SIM_MODE;
  reg [40:1] CH1_SIM_RECEIVER_DETECT_PASS_REG = CH1_SIM_RECEIVER_DETECT_PASS;
  reg [40:1] CH1_SIM_RESET_SPEEDUP_REG = CH1_SIM_RESET_SPEEDUP;
  real CH1_TXOUTCLK_FREQ_REG = CH1_TXOUTCLK_FREQ;
  real CH1_TXOUTCLK_REF_FREQ_REG = CH1_TXOUTCLK_REF_FREQ;
  reg [192:1] CH1_TXOUTCLK_REF_SOURCE_REG = CH1_TXOUTCLK_REF_SOURCE;
  reg [31:0] CH1_TX_CAL_CFG0_REG = CH1_TX_CAL_CFG0;
  reg [31:0] CH1_TX_CAL_CFG1_REG = CH1_TX_CAL_CFG1;
  reg [31:0] CH1_TX_CAL_CFG2_REG = CH1_TX_CAL_CFG2;
  reg [31:0] CH1_TX_CTRL_CFG0_REG = CH1_TX_CTRL_CFG0;
  reg [31:0] CH1_TX_CTRL_CFG1_REG = CH1_TX_CTRL_CFG1;
  reg [31:0] CH1_TX_CTRL_CFG2_REG = CH1_TX_CTRL_CFG2;
  reg [31:0] CH1_TX_CTRL_CFG3_REG = CH1_TX_CTRL_CFG3;
  reg [31:0] CH1_TX_MISC_CFG0_REG = CH1_TX_MISC_CFG0;
  reg [31:0] CH1_TX_PCS_CFG0_REG = CH1_TX_PCS_CFG0;
  reg [31:0] CH1_TX_PCS_CFG1_REG = CH1_TX_PCS_CFG1;
  reg [31:0] CH1_TX_PCS_CFG2_REG = CH1_TX_PCS_CFG2;
  reg [31:0] CH1_TX_PCS_CFG3_REG = CH1_TX_PCS_CFG3;
  reg [31:0] CH1_TX_PCS_CFG4_REG = CH1_TX_PCS_CFG4;
  reg [31:0] CH1_TX_PCS_CFG5_REG = CH1_TX_PCS_CFG5;
  reg [31:0] CH1_TX_PCS_CFG6_REG = CH1_TX_PCS_CFG6;
  reg [31:0] CH1_TX_PCS_CFG7_REG = CH1_TX_PCS_CFG7;
  reg [31:0] CH1_TX_PCS_CFG8_REG = CH1_TX_PCS_CFG8;
  reg [31:0] CH1_TX_PCS_CFG9_REG = CH1_TX_PCS_CFG9;
  reg [31:0] CH2_CHCLK_CFG0_REG = CH2_CHCLK_CFG0;
  reg [31:0] CH2_CHCLK_CFG1_REG = CH2_CHCLK_CFG1;
  reg [31:0] CH2_CHCLK_CFG2_REG = CH2_CHCLK_CFG2;
  reg [31:0] CH2_CHCLK_CFG3_REG = CH2_CHCLK_CFG3;
  reg [31:0] CH2_CHCLK_CFG4_REG = CH2_CHCLK_CFG4;
  reg [31:0] CH2_CHCLK_CFG5_REG = CH2_CHCLK_CFG5;
  reg [31:0] CH2_EYESCAN_CFG0_REG = CH2_EYESCAN_CFG0;
  reg [31:0] CH2_EYESCAN_CFG1_REG = CH2_EYESCAN_CFG1;
  reg [31:0] CH2_EYESCAN_CFG2_REG = CH2_EYESCAN_CFG2;
  reg [31:0] CH2_EYESCAN_CFG3_REG = CH2_EYESCAN_CFG3;
  reg [31:0] CH2_EYESCAN_CFG4_REG = CH2_EYESCAN_CFG4;
  reg [31:0] CH2_EYESCAN_CFG5_REG = CH2_EYESCAN_CFG5;
  reg [31:0] CH2_EYESCAN_CFG6_REG = CH2_EYESCAN_CFG6;
  reg [31:0] CH2_EYESCAN_CFG7_REG = CH2_EYESCAN_CFG7;
  reg [31:0] CH2_EYESCAN_CFG8_REG = CH2_EYESCAN_CFG8;
  reg [31:0] CH2_FABRIC_INTF_CFG0_REG = CH2_FABRIC_INTF_CFG0;
  reg [31:0] CH2_FABRIC_INTF_CFG1_REG = CH2_FABRIC_INTF_CFG1;
  reg [31:0] CH2_FABRIC_INTF_CFG2_REG = CH2_FABRIC_INTF_CFG2;
  reg [31:0] CH2_FABRIC_INTF_CFG3_REG = CH2_FABRIC_INTF_CFG3;
  reg [31:0] CH2_FABRIC_INTF_CFG4_REG = CH2_FABRIC_INTF_CFG4;
  reg [31:0] CH2_FABRIC_INTF_CFG5_REG = CH2_FABRIC_INTF_CFG5;
  reg [0:0] CH2_INSTANTIATED_REG = CH2_INSTANTIATED;
  reg [31:0] CH2_MONITOR_CFG0_REG = CH2_MONITOR_CFG0;
  reg [31:0] CH2_PMA_MISC_CFG0_REG = CH2_PMA_MISC_CFG0;
  reg [31:0] CH2_RESET_BYP_HDSHK_CFG_REG = CH2_RESET_BYP_HDSHK_CFG;
  reg [31:0] CH2_RESET_CFG_REG = CH2_RESET_CFG;
  reg [31:0] CH2_RESET_LOOPER_ID_CFG_REG = CH2_RESET_LOOPER_ID_CFG;
  reg [31:0] CH2_RESET_LOOP_ID_CFG0_REG = CH2_RESET_LOOP_ID_CFG0;
  reg [31:0] CH2_RESET_LOOP_ID_CFG1_REG = CH2_RESET_LOOP_ID_CFG1;
  reg [31:0] CH2_RESET_LOOP_ID_CFG2_REG = CH2_RESET_LOOP_ID_CFG2;
  reg [31:0] CH2_RESET_TIME_CFG0_REG = CH2_RESET_TIME_CFG0;
  reg [31:0] CH2_RESET_TIME_CFG1_REG = CH2_RESET_TIME_CFG1;
  reg [31:0] CH2_RESET_TIME_CFG2_REG = CH2_RESET_TIME_CFG2;
  reg [31:0] CH2_RESET_TIME_CFG3_REG = CH2_RESET_TIME_CFG3;
  real CH2_RXOUTCLK_FREQ_REG = CH2_RXOUTCLK_FREQ;
  real CH2_RXOUTCLK_REF_FREQ_REG = CH2_RXOUTCLK_REF_FREQ;
  reg [192:1] CH2_RXOUTCLK_REF_SOURCE_REG = CH2_RXOUTCLK_REF_SOURCE;
  reg [31:0] CH2_RX_APT_CFG0_REG = CH2_RX_APT_CFG0;
  reg [31:0] CH2_RX_APT_CFG1_REG = CH2_RX_APT_CFG1;
  reg [31:0] CH2_RX_APT_CFG10_REG = CH2_RX_APT_CFG10;
  reg [31:0] CH2_RX_APT_CFG11_REG = CH2_RX_APT_CFG11;
  reg [31:0] CH2_RX_APT_CFG12_REG = CH2_RX_APT_CFG12;
  reg [31:0] CH2_RX_APT_CFG13_REG = CH2_RX_APT_CFG13;
  reg [31:0] CH2_RX_APT_CFG14_REG = CH2_RX_APT_CFG14;
  reg [31:0] CH2_RX_APT_CFG15_REG = CH2_RX_APT_CFG15;
  reg [31:0] CH2_RX_APT_CFG16_REG = CH2_RX_APT_CFG16;
  reg [31:0] CH2_RX_APT_CFG17_REG = CH2_RX_APT_CFG17;
  reg [31:0] CH2_RX_APT_CFG18_REG = CH2_RX_APT_CFG18;
  reg [31:0] CH2_RX_APT_CFG19_REG = CH2_RX_APT_CFG19;
  reg [31:0] CH2_RX_APT_CFG2_REG = CH2_RX_APT_CFG2;
  reg [31:0] CH2_RX_APT_CFG20_REG = CH2_RX_APT_CFG20;
  reg [31:0] CH2_RX_APT_CFG21_REG = CH2_RX_APT_CFG21;
  reg [31:0] CH2_RX_APT_CFG22_REG = CH2_RX_APT_CFG22;
  reg [31:0] CH2_RX_APT_CFG23_REG = CH2_RX_APT_CFG23;
  reg [31:0] CH2_RX_APT_CFG24_REG = CH2_RX_APT_CFG24;
  reg [31:0] CH2_RX_APT_CFG25_REG = CH2_RX_APT_CFG25;
  reg [31:0] CH2_RX_APT_CFG26_REG = CH2_RX_APT_CFG26;
  reg [31:0] CH2_RX_APT_CFG27_REG = CH2_RX_APT_CFG27;
  reg [31:0] CH2_RX_APT_CFG28_REG = CH2_RX_APT_CFG28;
  reg [31:0] CH2_RX_APT_CFG29_REG = CH2_RX_APT_CFG29;
  reg [31:0] CH2_RX_APT_CFG3_REG = CH2_RX_APT_CFG3;
  reg [31:0] CH2_RX_APT_CFG30_REG = CH2_RX_APT_CFG30;
  reg [31:0] CH2_RX_APT_CFG31_REG = CH2_RX_APT_CFG31;
  reg [31:0] CH2_RX_APT_CFG32_REG = CH2_RX_APT_CFG32;
  reg [31:0] CH2_RX_APT_CFG33_REG = CH2_RX_APT_CFG33;
  reg [31:0] CH2_RX_APT_CFG34_REG = CH2_RX_APT_CFG34;
  reg [31:0] CH2_RX_APT_CFG35_REG = CH2_RX_APT_CFG35;
  reg [31:0] CH2_RX_APT_CFG36_REG = CH2_RX_APT_CFG36;
  reg [31:0] CH2_RX_APT_CFG37_REG = CH2_RX_APT_CFG37;
  reg [31:0] CH2_RX_APT_CFG38_REG = CH2_RX_APT_CFG38;
  reg [31:0] CH2_RX_APT_CFG39_REG = CH2_RX_APT_CFG39;
  reg [31:0] CH2_RX_APT_CFG4_REG = CH2_RX_APT_CFG4;
  reg [31:0] CH2_RX_APT_CFG40_REG = CH2_RX_APT_CFG40;
  reg [31:0] CH2_RX_APT_CFG41_REG = CH2_RX_APT_CFG41;
  reg [31:0] CH2_RX_APT_CFG42_REG = CH2_RX_APT_CFG42;
  reg [31:0] CH2_RX_APT_CFG43_REG = CH2_RX_APT_CFG43;
  reg [31:0] CH2_RX_APT_CFG44_REG = CH2_RX_APT_CFG44;
  reg [31:0] CH2_RX_APT_CFG45_REG = CH2_RX_APT_CFG45;
  reg [31:0] CH2_RX_APT_CFG46_REG = CH2_RX_APT_CFG46;
  reg [31:0] CH2_RX_APT_CFG47_REG = CH2_RX_APT_CFG47;
  reg [31:0] CH2_RX_APT_CFG48_REG = CH2_RX_APT_CFG48;
  reg [31:0] CH2_RX_APT_CFG49_REG = CH2_RX_APT_CFG49;
  reg [31:0] CH2_RX_APT_CFG5_REG = CH2_RX_APT_CFG5;
  reg [31:0] CH2_RX_APT_CFG50_REG = CH2_RX_APT_CFG50;
  reg [31:0] CH2_RX_APT_CFG51_REG = CH2_RX_APT_CFG51;
  reg [31:0] CH2_RX_APT_CFG52_REG = CH2_RX_APT_CFG52;
  reg [31:0] CH2_RX_APT_CFG53_REG = CH2_RX_APT_CFG53;
  reg [31:0] CH2_RX_APT_CFG54_REG = CH2_RX_APT_CFG54;
  reg [31:0] CH2_RX_APT_CFG55_REG = CH2_RX_APT_CFG55;
  reg [31:0] CH2_RX_APT_CFG56_REG = CH2_RX_APT_CFG56;
  reg [31:0] CH2_RX_APT_CFG57_REG = CH2_RX_APT_CFG57;
  reg [31:0] CH2_RX_APT_CFG58_REG = CH2_RX_APT_CFG58;
  reg [31:0] CH2_RX_APT_CFG6_REG = CH2_RX_APT_CFG6;
  reg [31:0] CH2_RX_APT_CFG7_REG = CH2_RX_APT_CFG7;
  reg [31:0] CH2_RX_APT_CFG8_REG = CH2_RX_APT_CFG8;
  reg [31:0] CH2_RX_APT_CFG9_REG = CH2_RX_APT_CFG9;
  reg [31:0] CH2_RX_CAL_CFG0_REG = CH2_RX_CAL_CFG0;
  reg [31:0] CH2_RX_CAL_CFG1_REG = CH2_RX_CAL_CFG1;
  reg [31:0] CH2_RX_CAL_CFG2_REG = CH2_RX_CAL_CFG2;
  reg [31:0] CH2_RX_CDR_CFG0_REG = CH2_RX_CDR_CFG0;
  reg [31:0] CH2_RX_CDR_CFG1_REG = CH2_RX_CDR_CFG1;
  reg [31:0] CH2_RX_CDR_CFG2_REG = CH2_RX_CDR_CFG2;
  reg [31:0] CH2_RX_CDR_CFG3_REG = CH2_RX_CDR_CFG3;
  reg [31:0] CH2_RX_CDR_CFG4_REG = CH2_RX_CDR_CFG4;
  reg [31:0] CH2_RX_CDR_CFG5_REG = CH2_RX_CDR_CFG5;
  reg [31:0] CH2_RX_CTLE_ADC_CFG0_REG = CH2_RX_CTLE_ADC_CFG0;
  reg [31:0] CH2_RX_CTLE_ADC_CFG1_REG = CH2_RX_CTLE_ADC_CFG1;
  reg [31:0] CH2_RX_CTLE_ADC_CFG2_REG = CH2_RX_CTLE_ADC_CFG2;
  reg [31:0] CH2_RX_CTLE_HF_CFG0_REG = CH2_RX_CTLE_HF_CFG0;
  reg [31:0] CH2_RX_CTLE_HF_CFG1_REG = CH2_RX_CTLE_HF_CFG1;
  reg [31:0] CH2_RX_DSP_CFG0_REG = CH2_RX_DSP_CFG0;
  reg [31:0] CH2_RX_DSP_CFG1_REG = CH2_RX_DSP_CFG1;
  reg [31:0] CH2_RX_MISC_CFG1_REG = CH2_RX_MISC_CFG1;
  reg [31:0] CH2_RX_PAD_CFG0_REG = CH2_RX_PAD_CFG0;
  reg [31:0] CH2_RX_PAD_CFG1_REG = CH2_RX_PAD_CFG1;
  reg [31:0] CH2_RX_PCS_CFG0_REG = CH2_RX_PCS_CFG0;
  reg [31:0] CH2_RX_PCS_CFG1_REG = CH2_RX_PCS_CFG1;
  reg [31:0] CH2_RX_RSV_CFG0_REG = CH2_RX_RSV_CFG0;
  reg [31:0] CH2_RX_RSV_CFG1_REG = CH2_RX_RSV_CFG1;
  reg [31:0] CH2_RX_SPARE_CFG0_REG = CH2_RX_SPARE_CFG0;
  reg [48:1] CH2_SIM_MODE_REG = CH2_SIM_MODE;
  reg [40:1] CH2_SIM_RECEIVER_DETECT_PASS_REG = CH2_SIM_RECEIVER_DETECT_PASS;
  reg [40:1] CH2_SIM_RESET_SPEEDUP_REG = CH2_SIM_RESET_SPEEDUP;
  real CH2_TXOUTCLK_FREQ_REG = CH2_TXOUTCLK_FREQ;
  real CH2_TXOUTCLK_REF_FREQ_REG = CH2_TXOUTCLK_REF_FREQ;
  reg [192:1] CH2_TXOUTCLK_REF_SOURCE_REG = CH2_TXOUTCLK_REF_SOURCE;
  reg [31:0] CH2_TX_CAL_CFG0_REG = CH2_TX_CAL_CFG0;
  reg [31:0] CH2_TX_CAL_CFG1_REG = CH2_TX_CAL_CFG1;
  reg [31:0] CH2_TX_CAL_CFG2_REG = CH2_TX_CAL_CFG2;
  reg [31:0] CH2_TX_CTRL_CFG0_REG = CH2_TX_CTRL_CFG0;
  reg [31:0] CH2_TX_CTRL_CFG1_REG = CH2_TX_CTRL_CFG1;
  reg [31:0] CH2_TX_CTRL_CFG2_REG = CH2_TX_CTRL_CFG2;
  reg [31:0] CH2_TX_CTRL_CFG3_REG = CH2_TX_CTRL_CFG3;
  reg [31:0] CH2_TX_MISC_CFG0_REG = CH2_TX_MISC_CFG0;
  reg [31:0] CH2_TX_PCS_CFG0_REG = CH2_TX_PCS_CFG0;
  reg [31:0] CH2_TX_PCS_CFG1_REG = CH2_TX_PCS_CFG1;
  reg [31:0] CH2_TX_PCS_CFG2_REG = CH2_TX_PCS_CFG2;
  reg [31:0] CH2_TX_PCS_CFG3_REG = CH2_TX_PCS_CFG3;
  reg [31:0] CH2_TX_PCS_CFG4_REG = CH2_TX_PCS_CFG4;
  reg [31:0] CH2_TX_PCS_CFG5_REG = CH2_TX_PCS_CFG5;
  reg [31:0] CH2_TX_PCS_CFG6_REG = CH2_TX_PCS_CFG6;
  reg [31:0] CH2_TX_PCS_CFG7_REG = CH2_TX_PCS_CFG7;
  reg [31:0] CH2_TX_PCS_CFG8_REG = CH2_TX_PCS_CFG8;
  reg [31:0] CH2_TX_PCS_CFG9_REG = CH2_TX_PCS_CFG9;
  reg [31:0] CH3_CHCLK_CFG0_REG = CH3_CHCLK_CFG0;
  reg [31:0] CH3_CHCLK_CFG1_REG = CH3_CHCLK_CFG1;
  reg [31:0] CH3_CHCLK_CFG2_REG = CH3_CHCLK_CFG2;
  reg [31:0] CH3_CHCLK_CFG3_REG = CH3_CHCLK_CFG3;
  reg [31:0] CH3_CHCLK_CFG4_REG = CH3_CHCLK_CFG4;
  reg [31:0] CH3_CHCLK_CFG5_REG = CH3_CHCLK_CFG5;
  reg [31:0] CH3_EYESCAN_CFG0_REG = CH3_EYESCAN_CFG0;
  reg [31:0] CH3_EYESCAN_CFG1_REG = CH3_EYESCAN_CFG1;
  reg [31:0] CH3_EYESCAN_CFG2_REG = CH3_EYESCAN_CFG2;
  reg [31:0] CH3_EYESCAN_CFG3_REG = CH3_EYESCAN_CFG3;
  reg [31:0] CH3_EYESCAN_CFG4_REG = CH3_EYESCAN_CFG4;
  reg [31:0] CH3_EYESCAN_CFG5_REG = CH3_EYESCAN_CFG5;
  reg [31:0] CH3_EYESCAN_CFG6_REG = CH3_EYESCAN_CFG6;
  reg [31:0] CH3_EYESCAN_CFG7_REG = CH3_EYESCAN_CFG7;
  reg [31:0] CH3_EYESCAN_CFG8_REG = CH3_EYESCAN_CFG8;
  reg [31:0] CH3_FABRIC_INTF_CFG0_REG = CH3_FABRIC_INTF_CFG0;
  reg [31:0] CH3_FABRIC_INTF_CFG1_REG = CH3_FABRIC_INTF_CFG1;
  reg [31:0] CH3_FABRIC_INTF_CFG2_REG = CH3_FABRIC_INTF_CFG2;
  reg [31:0] CH3_FABRIC_INTF_CFG3_REG = CH3_FABRIC_INTF_CFG3;
  reg [31:0] CH3_FABRIC_INTF_CFG4_REG = CH3_FABRIC_INTF_CFG4;
  reg [31:0] CH3_FABRIC_INTF_CFG5_REG = CH3_FABRIC_INTF_CFG5;
  reg [0:0] CH3_INSTANTIATED_REG = CH3_INSTANTIATED;
  reg [31:0] CH3_MONITOR_CFG0_REG = CH3_MONITOR_CFG0;
  reg [31:0] CH3_PMA_MISC_CFG0_REG = CH3_PMA_MISC_CFG0;
  reg [31:0] CH3_RESET_BYP_HDSHK_CFG_REG = CH3_RESET_BYP_HDSHK_CFG;
  reg [31:0] CH3_RESET_CFG_REG = CH3_RESET_CFG;
  reg [31:0] CH3_RESET_LOOPER_ID_CFG_REG = CH3_RESET_LOOPER_ID_CFG;
  reg [31:0] CH3_RESET_LOOP_ID_CFG0_REG = CH3_RESET_LOOP_ID_CFG0;
  reg [31:0] CH3_RESET_LOOP_ID_CFG1_REG = CH3_RESET_LOOP_ID_CFG1;
  reg [31:0] CH3_RESET_LOOP_ID_CFG2_REG = CH3_RESET_LOOP_ID_CFG2;
  reg [31:0] CH3_RESET_TIME_CFG0_REG = CH3_RESET_TIME_CFG0;
  reg [31:0] CH3_RESET_TIME_CFG1_REG = CH3_RESET_TIME_CFG1;
  reg [31:0] CH3_RESET_TIME_CFG2_REG = CH3_RESET_TIME_CFG2;
  reg [31:0] CH3_RESET_TIME_CFG3_REG = CH3_RESET_TIME_CFG3;
  real CH3_RXOUTCLK_FREQ_REG = CH3_RXOUTCLK_FREQ;
  real CH3_RXOUTCLK_REF_FREQ_REG = CH3_RXOUTCLK_REF_FREQ;
  reg [192:1] CH3_RXOUTCLK_REF_SOURCE_REG = CH3_RXOUTCLK_REF_SOURCE;
  reg [31:0] CH3_RX_APT_CFG0_REG = CH3_RX_APT_CFG0;
  reg [31:0] CH3_RX_APT_CFG1_REG = CH3_RX_APT_CFG1;
  reg [31:0] CH3_RX_APT_CFG10_REG = CH3_RX_APT_CFG10;
  reg [31:0] CH3_RX_APT_CFG11_REG = CH3_RX_APT_CFG11;
  reg [31:0] CH3_RX_APT_CFG12_REG = CH3_RX_APT_CFG12;
  reg [31:0] CH3_RX_APT_CFG13_REG = CH3_RX_APT_CFG13;
  reg [31:0] CH3_RX_APT_CFG14_REG = CH3_RX_APT_CFG14;
  reg [31:0] CH3_RX_APT_CFG15_REG = CH3_RX_APT_CFG15;
  reg [31:0] CH3_RX_APT_CFG16_REG = CH3_RX_APT_CFG16;
  reg [31:0] CH3_RX_APT_CFG17_REG = CH3_RX_APT_CFG17;
  reg [31:0] CH3_RX_APT_CFG18_REG = CH3_RX_APT_CFG18;
  reg [31:0] CH3_RX_APT_CFG19_REG = CH3_RX_APT_CFG19;
  reg [31:0] CH3_RX_APT_CFG2_REG = CH3_RX_APT_CFG2;
  reg [31:0] CH3_RX_APT_CFG20_REG = CH3_RX_APT_CFG20;
  reg [31:0] CH3_RX_APT_CFG21_REG = CH3_RX_APT_CFG21;
  reg [31:0] CH3_RX_APT_CFG22_REG = CH3_RX_APT_CFG22;
  reg [31:0] CH3_RX_APT_CFG23_REG = CH3_RX_APT_CFG23;
  reg [31:0] CH3_RX_APT_CFG24_REG = CH3_RX_APT_CFG24;
  reg [31:0] CH3_RX_APT_CFG25_REG = CH3_RX_APT_CFG25;
  reg [31:0] CH3_RX_APT_CFG26_REG = CH3_RX_APT_CFG26;
  reg [31:0] CH3_RX_APT_CFG27_REG = CH3_RX_APT_CFG27;
  reg [31:0] CH3_RX_APT_CFG28_REG = CH3_RX_APT_CFG28;
  reg [31:0] CH3_RX_APT_CFG29_REG = CH3_RX_APT_CFG29;
  reg [31:0] CH3_RX_APT_CFG3_REG = CH3_RX_APT_CFG3;
  reg [31:0] CH3_RX_APT_CFG30_REG = CH3_RX_APT_CFG30;
  reg [31:0] CH3_RX_APT_CFG31_REG = CH3_RX_APT_CFG31;
  reg [31:0] CH3_RX_APT_CFG32_REG = CH3_RX_APT_CFG32;
  reg [31:0] CH3_RX_APT_CFG33_REG = CH3_RX_APT_CFG33;
  reg [31:0] CH3_RX_APT_CFG34_REG = CH3_RX_APT_CFG34;
  reg [31:0] CH3_RX_APT_CFG35_REG = CH3_RX_APT_CFG35;
  reg [31:0] CH3_RX_APT_CFG36_REG = CH3_RX_APT_CFG36;
  reg [31:0] CH3_RX_APT_CFG37_REG = CH3_RX_APT_CFG37;
  reg [31:0] CH3_RX_APT_CFG38_REG = CH3_RX_APT_CFG38;
  reg [31:0] CH3_RX_APT_CFG39_REG = CH3_RX_APT_CFG39;
  reg [31:0] CH3_RX_APT_CFG4_REG = CH3_RX_APT_CFG4;
  reg [31:0] CH3_RX_APT_CFG40_REG = CH3_RX_APT_CFG40;
  reg [31:0] CH3_RX_APT_CFG41_REG = CH3_RX_APT_CFG41;
  reg [31:0] CH3_RX_APT_CFG42_REG = CH3_RX_APT_CFG42;
  reg [31:0] CH3_RX_APT_CFG43_REG = CH3_RX_APT_CFG43;
  reg [31:0] CH3_RX_APT_CFG44_REG = CH3_RX_APT_CFG44;
  reg [31:0] CH3_RX_APT_CFG45_REG = CH3_RX_APT_CFG45;
  reg [31:0] CH3_RX_APT_CFG46_REG = CH3_RX_APT_CFG46;
  reg [31:0] CH3_RX_APT_CFG47_REG = CH3_RX_APT_CFG47;
  reg [31:0] CH3_RX_APT_CFG48_REG = CH3_RX_APT_CFG48;
  reg [31:0] CH3_RX_APT_CFG49_REG = CH3_RX_APT_CFG49;
  reg [31:0] CH3_RX_APT_CFG5_REG = CH3_RX_APT_CFG5;
  reg [31:0] CH3_RX_APT_CFG50_REG = CH3_RX_APT_CFG50;
  reg [31:0] CH3_RX_APT_CFG51_REG = CH3_RX_APT_CFG51;
  reg [31:0] CH3_RX_APT_CFG52_REG = CH3_RX_APT_CFG52;
  reg [31:0] CH3_RX_APT_CFG53_REG = CH3_RX_APT_CFG53;
  reg [31:0] CH3_RX_APT_CFG54_REG = CH3_RX_APT_CFG54;
  reg [31:0] CH3_RX_APT_CFG55_REG = CH3_RX_APT_CFG55;
  reg [31:0] CH3_RX_APT_CFG56_REG = CH3_RX_APT_CFG56;
  reg [31:0] CH3_RX_APT_CFG57_REG = CH3_RX_APT_CFG57;
  reg [31:0] CH3_RX_APT_CFG58_REG = CH3_RX_APT_CFG58;
  reg [31:0] CH3_RX_APT_CFG6_REG = CH3_RX_APT_CFG6;
  reg [31:0] CH3_RX_APT_CFG7_REG = CH3_RX_APT_CFG7;
  reg [31:0] CH3_RX_APT_CFG8_REG = CH3_RX_APT_CFG8;
  reg [31:0] CH3_RX_APT_CFG9_REG = CH3_RX_APT_CFG9;
  reg [31:0] CH3_RX_CAL_CFG0_REG = CH3_RX_CAL_CFG0;
  reg [31:0] CH3_RX_CAL_CFG1_REG = CH3_RX_CAL_CFG1;
  reg [31:0] CH3_RX_CAL_CFG2_REG = CH3_RX_CAL_CFG2;
  reg [31:0] CH3_RX_CDR_CFG0_REG = CH3_RX_CDR_CFG0;
  reg [31:0] CH3_RX_CDR_CFG1_REG = CH3_RX_CDR_CFG1;
  reg [31:0] CH3_RX_CDR_CFG2_REG = CH3_RX_CDR_CFG2;
  reg [31:0] CH3_RX_CDR_CFG3_REG = CH3_RX_CDR_CFG3;
  reg [31:0] CH3_RX_CDR_CFG4_REG = CH3_RX_CDR_CFG4;
  reg [31:0] CH3_RX_CDR_CFG5_REG = CH3_RX_CDR_CFG5;
  reg [31:0] CH3_RX_CTLE_ADC_CFG0_REG = CH3_RX_CTLE_ADC_CFG0;
  reg [31:0] CH3_RX_CTLE_ADC_CFG1_REG = CH3_RX_CTLE_ADC_CFG1;
  reg [31:0] CH3_RX_CTLE_ADC_CFG2_REG = CH3_RX_CTLE_ADC_CFG2;
  reg [31:0] CH3_RX_CTLE_HF_CFG0_REG = CH3_RX_CTLE_HF_CFG0;
  reg [31:0] CH3_RX_CTLE_HF_CFG1_REG = CH3_RX_CTLE_HF_CFG1;
  reg [31:0] CH3_RX_DSP_CFG0_REG = CH3_RX_DSP_CFG0;
  reg [31:0] CH3_RX_DSP_CFG1_REG = CH3_RX_DSP_CFG1;
  reg [31:0] CH3_RX_MISC_CFG1_REG = CH3_RX_MISC_CFG1;
  reg [31:0] CH3_RX_PAD_CFG0_REG = CH3_RX_PAD_CFG0;
  reg [31:0] CH3_RX_PAD_CFG1_REG = CH3_RX_PAD_CFG1;
  reg [31:0] CH3_RX_PCS_CFG0_REG = CH3_RX_PCS_CFG0;
  reg [31:0] CH3_RX_PCS_CFG1_REG = CH3_RX_PCS_CFG1;
  reg [31:0] CH3_RX_RSV_CFG0_REG = CH3_RX_RSV_CFG0;
  reg [31:0] CH3_RX_RSV_CFG1_REG = CH3_RX_RSV_CFG1;
  reg [31:0] CH3_RX_SPARE_CFG0_REG = CH3_RX_SPARE_CFG0;
  reg [48:1] CH3_SIM_MODE_REG = CH3_SIM_MODE;
  reg [40:1] CH3_SIM_RECEIVER_DETECT_PASS_REG = CH3_SIM_RECEIVER_DETECT_PASS;
  reg [40:1] CH3_SIM_RESET_SPEEDUP_REG = CH3_SIM_RESET_SPEEDUP;
  real CH3_TXOUTCLK_FREQ_REG = CH3_TXOUTCLK_FREQ;
  real CH3_TXOUTCLK_REF_FREQ_REG = CH3_TXOUTCLK_REF_FREQ;
  reg [192:1] CH3_TXOUTCLK_REF_SOURCE_REG = CH3_TXOUTCLK_REF_SOURCE;
  reg [31:0] CH3_TX_CAL_CFG0_REG = CH3_TX_CAL_CFG0;
  reg [31:0] CH3_TX_CAL_CFG1_REG = CH3_TX_CAL_CFG1;
  reg [31:0] CH3_TX_CAL_CFG2_REG = CH3_TX_CAL_CFG2;
  reg [31:0] CH3_TX_CTRL_CFG0_REG = CH3_TX_CTRL_CFG0;
  reg [31:0] CH3_TX_CTRL_CFG1_REG = CH3_TX_CTRL_CFG1;
  reg [31:0] CH3_TX_CTRL_CFG2_REG = CH3_TX_CTRL_CFG2;
  reg [31:0] CH3_TX_CTRL_CFG3_REG = CH3_TX_CTRL_CFG3;
  reg [31:0] CH3_TX_MISC_CFG0_REG = CH3_TX_MISC_CFG0;
  reg [31:0] CH3_TX_PCS_CFG0_REG = CH3_TX_PCS_CFG0;
  reg [31:0] CH3_TX_PCS_CFG1_REG = CH3_TX_PCS_CFG1;
  reg [31:0] CH3_TX_PCS_CFG2_REG = CH3_TX_PCS_CFG2;
  reg [31:0] CH3_TX_PCS_CFG3_REG = CH3_TX_PCS_CFG3;
  reg [31:0] CH3_TX_PCS_CFG4_REG = CH3_TX_PCS_CFG4;
  reg [31:0] CH3_TX_PCS_CFG5_REG = CH3_TX_PCS_CFG5;
  reg [31:0] CH3_TX_PCS_CFG6_REG = CH3_TX_PCS_CFG6;
  reg [31:0] CH3_TX_PCS_CFG7_REG = CH3_TX_PCS_CFG7;
  reg [31:0] CH3_TX_PCS_CFG8_REG = CH3_TX_PCS_CFG8;
  reg [31:0] CH3_TX_PCS_CFG9_REG = CH3_TX_PCS_CFG9;
  reg [32:1] CHANNEL_CONNECTIVITY_REG = CHANNEL_CONNECTIVITY;
  reg [31:0] CTRL_RSV_CFG0_REG = CTRL_RSV_CFG0;
  reg [31:0] CTRL_RSV_CFG1_REG = CTRL_RSV_CFG1;
  reg [0:0] HS0_LCPLL_IPS_PIN_EN_REG = HS0_LCPLL_IPS_PIN_EN;
  reg [2:0] HS0_LCPLL_IPS_REFCLK_SEL_REG = HS0_LCPLL_IPS_REFCLK_SEL;
  reg [2:0] HS0_LCPLL_REFCLK_MAP0_REG = HS0_LCPLL_REFCLK_MAP0;
  reg [2:0] HS0_LCPLL_REFCLK_MAP1_REG = HS0_LCPLL_REFCLK_MAP1;
  reg [2:0] HS0_LCPLL_REFCLK_MAP2_REG = HS0_LCPLL_REFCLK_MAP2;
  reg [2:0] HS0_LCPLL_REFCLK_MAP3_REG = HS0_LCPLL_REFCLK_MAP3;
  reg [2:0] HS0_LCPLL_REFCLK_MAP4_REG = HS0_LCPLL_REFCLK_MAP4;
  reg [2:0] HS0_LCPLL_REFCLK_MAP5_REG = HS0_LCPLL_REFCLK_MAP5;
  reg [2:0] HS0_LCPLL_REFCLK_MAP6_REG = HS0_LCPLL_REFCLK_MAP6;
  reg [2:0] HS0_LCPLL_REFCLK_MAP7_REG = HS0_LCPLL_REFCLK_MAP7;
  reg [0:0] HS1_LCPLL_IPS_PIN_EN_REG = HS1_LCPLL_IPS_PIN_EN;
  reg [2:0] HS1_LCPLL_IPS_REFCLK_SEL_REG = HS1_LCPLL_IPS_REFCLK_SEL;
  reg [2:0] HS1_LCPLL_REFCLK_MAP0_REG = HS1_LCPLL_REFCLK_MAP0;
  reg [2:0] HS1_LCPLL_REFCLK_MAP1_REG = HS1_LCPLL_REFCLK_MAP1;
  reg [2:0] HS1_LCPLL_REFCLK_MAP2_REG = HS1_LCPLL_REFCLK_MAP2;
  reg [2:0] HS1_LCPLL_REFCLK_MAP3_REG = HS1_LCPLL_REFCLK_MAP3;
  reg [2:0] HS1_LCPLL_REFCLK_MAP4_REG = HS1_LCPLL_REFCLK_MAP4;
  reg [2:0] HS1_LCPLL_REFCLK_MAP5_REG = HS1_LCPLL_REFCLK_MAP5;
  reg [2:0] HS1_LCPLL_REFCLK_MAP6_REG = HS1_LCPLL_REFCLK_MAP6;
  reg [2:0] HS1_LCPLL_REFCLK_MAP7_REG = HS1_LCPLL_REFCLK_MAP7;
  reg [31:0] HSCLK0_HSDIST_CFG_REG = HSCLK0_HSDIST_CFG;
  reg [0:0] HSCLK0_INSTANTIATED_REG = HSCLK0_INSTANTIATED;
  reg [31:0] HSCLK0_LCPLL_CFG0_REG = HSCLK0_LCPLL_CFG0;
  reg [31:0] HSCLK0_LCPLL_CFG1_REG = HSCLK0_LCPLL_CFG1;
  reg [31:0] HSCLK0_LCPLL_CFG2_REG = HSCLK0_LCPLL_CFG2;
  reg [31:0] HSCLK0_LCPLL_LGC_CFG0_REG = HSCLK0_LCPLL_LGC_CFG0;
  reg [31:0] HSCLK0_LCPLL_LGC_CFG1_REG = HSCLK0_LCPLL_LGC_CFG1;
  reg [31:0] HSCLK0_LCPLL_LGC_CFG2_REG = HSCLK0_LCPLL_LGC_CFG2;
  reg [1:0] HSCLK0_RXRECCLK_SEL_REG = HSCLK0_RXRECCLK_SEL;
  reg [31:0] HSCLK1_HSDIST_CFG_REG = HSCLK1_HSDIST_CFG;
  reg [0:0] HSCLK1_INSTANTIATED_REG = HSCLK1_INSTANTIATED;
  reg [31:0] HSCLK1_LCPLL_CFG0_REG = HSCLK1_LCPLL_CFG0;
  reg [31:0] HSCLK1_LCPLL_CFG1_REG = HSCLK1_LCPLL_CFG1;
  reg [31:0] HSCLK1_LCPLL_CFG2_REG = HSCLK1_LCPLL_CFG2;
  reg [31:0] HSCLK1_LCPLL_LGC_CFG0_REG = HSCLK1_LCPLL_LGC_CFG0;
  reg [31:0] HSCLK1_LCPLL_LGC_CFG1_REG = HSCLK1_LCPLL_LGC_CFG1;
  reg [31:0] HSCLK1_LCPLL_LGC_CFG2_REG = HSCLK1_LCPLL_LGC_CFG2;
  reg [1:0] HSCLK1_RXRECCLK_SEL_REG = HSCLK1_RXRECCLK_SEL;
  reg [32:1] MEMORY_INIT_FILE_REG = MEMORY_INIT_FILE;
  reg [31:0] MST_RESET_CFG_REG = MST_RESET_CFG;
  reg [31:0] PIN_CFG0_REG = PIN_CFG0;
  reg [31:0] POR_CFG_REG = POR_CFG;
  reg [0:0] QUAD_INSTANTIATED_REG = QUAD_INSTANTIATED;
  reg [48:1] QUAD_SIM_MODE_REG = QUAD_SIM_MODE;
  reg [40:1] QUAD_SIM_RESET_SPEEDUP_REG = QUAD_SIM_RESET_SPEEDUP;
  reg [31:0] RCALBG0_CFG0_REG = RCALBG0_CFG0;
  reg [31:0] RCALBG0_CFG1_REG = RCALBG0_CFG1;
  reg [31:0] RCALBG0_CFG2_REG = RCALBG0_CFG2;
  reg [31:0] RCALBG0_CFG3_REG = RCALBG0_CFG3;
  reg [31:0] RCALBG0_CFG4_REG = RCALBG0_CFG4;
  reg [31:0] RCALBG0_CFG5_REG = RCALBG0_CFG5;
  reg [31:0] RCALBG1_CFG0_REG = RCALBG1_CFG0;
  reg [31:0] RCALBG1_CFG1_REG = RCALBG1_CFG1;
  reg [31:0] RCALBG1_CFG2_REG = RCALBG1_CFG2;
  reg [31:0] RCALBG1_CFG3_REG = RCALBG1_CFG3;
  reg [31:0] RCALBG1_CFG4_REG = RCALBG1_CFG4;
  reg [31:0] RCALBG1_CFG5_REG = RCALBG1_CFG5;
  reg [31:0] RXRSTDONE_DIST_SEL_REG = RXRSTDONE_DIST_SEL;
  reg [2:0] SIM_VERSION_REG = SIM_VERSION;
  reg [32:1] STAT_NPI_REG_LIST_REG = STAT_NPI_REG_LIST;
  reg [31:0] TERMPROG_CFG_REG = TERMPROG_CFG;
  reg [31:0] TXRSTDONE_DIST_SEL_REG = TXRSTDONE_DIST_SEL;
  reg [31:0] UB_CFG0_REG = UB_CFG0;
`endif

`ifdef XIL_XECLIB
  wire [63:0] CH0_RXOUTCLK_FREQ_BIN;
  wire [63:0] CH0_RXOUTCLK_REF_FREQ_BIN;
  wire [63:0] CH0_TXOUTCLK_FREQ_BIN;
  wire [63:0] CH0_TXOUTCLK_REF_FREQ_BIN;
  wire [63:0] CH1_RXOUTCLK_FREQ_BIN;
  wire [63:0] CH1_RXOUTCLK_REF_FREQ_BIN;
  wire [63:0] CH1_TXOUTCLK_FREQ_BIN;
  wire [63:0] CH1_TXOUTCLK_REF_FREQ_BIN;
  wire [63:0] CH2_RXOUTCLK_FREQ_BIN;
  wire [63:0] CH2_RXOUTCLK_REF_FREQ_BIN;
  wire [63:0] CH2_TXOUTCLK_FREQ_BIN;
  wire [63:0] CH2_TXOUTCLK_REF_FREQ_BIN;
  wire [63:0] CH3_RXOUTCLK_FREQ_BIN;
  wire [63:0] CH3_RXOUTCLK_REF_FREQ_BIN;
  wire [63:0] CH3_TXOUTCLK_FREQ_BIN;
  wire [63:0] CH3_TXOUTCLK_REF_FREQ_BIN;
`else
  reg [63:0] CH0_RXOUTCLK_FREQ_BIN;
  reg [63:0] CH0_RXOUTCLK_REF_FREQ_BIN;
  reg [63:0] CH0_TXOUTCLK_FREQ_BIN;
  reg [63:0] CH0_TXOUTCLK_REF_FREQ_BIN;
  reg [63:0] CH1_RXOUTCLK_FREQ_BIN;
  reg [63:0] CH1_RXOUTCLK_REF_FREQ_BIN;
  reg [63:0] CH1_TXOUTCLK_FREQ_BIN;
  reg [63:0] CH1_TXOUTCLK_REF_FREQ_BIN;
  reg [63:0] CH2_RXOUTCLK_FREQ_BIN;
  reg [63:0] CH2_RXOUTCLK_REF_FREQ_BIN;
  reg [63:0] CH2_TXOUTCLK_FREQ_BIN;
  reg [63:0] CH2_TXOUTCLK_REF_FREQ_BIN;
  reg [63:0] CH3_RXOUTCLK_FREQ_BIN;
  reg [63:0] CH3_RXOUTCLK_REF_FREQ_BIN;
  reg [63:0] CH3_TXOUTCLK_FREQ_BIN;
  reg [63:0] CH3_TXOUTCLK_REF_FREQ_BIN;
`endif

/*
`ifdef XIL_XECLIB
reg glblGSR = 1'b0;
`else
tri0 glblGSR = glbl.GSR;
`endif*/

  wire CH0_GTMTXN_out;
  wire CH0_GTMTXP_out;
  wire CH1_GTMTXN_out;
  wire CH1_GTMTXP_out;
  wire CH2_GTMTXN_out;
  wire CH2_GTMTXP_out;
  wire CH3_GTMTXN_out;
  wire CH3_GTMTXP_out;
  wire APB3PREADY_out;
  wire APB3PSLVERR_out;
  wire CH0_DMONITOROUTCLK_out;
  wire CH0_EYESCANDATAERROR_out;
  wire CH0_ILORESETDONE_out;
  wire CH0_RESETEXCEPTION_out;
  wire CH0_RXCDRLOCK_out;
  wire CH0_RXCDRPHDONE_out;
  wire CH0_RXDEBUGPCSOUT_out;
  wire CH0_RXOUTCLK_out;
  wire CH0_RXPMARESETDONE_out;
  wire CH0_RXPRBSERR_out;
  wire CH0_RXPRBSLOCKED_out;
  wire CH0_RXPROGDIVRESETDONE_out;
  wire CH0_RXRESETDONE_out;
  wire CH0_SCANCNTRLOUT_out;
  wire CH0_TXDCCDONE_out;
  wire CH0_TXDEBUGPCSOUT_out;
  wire CH0_TXOUTCLK_out;
  wire CH0_TXPMARESETDONE_out;
  wire CH0_TXPROGDIVRESETDONE_out;
  wire CH0_TXRESETDONE_out;
  wire CH1_DMONITOROUTCLK_out;
  wire CH1_EYESCANDATAERROR_out;
  wire CH1_ILORESETDONE_out;
  wire CH1_RESETEXCEPTION_out;
  wire CH1_RXCDRLOCK_out;
  wire CH1_RXCDRPHDONE_out;
  wire CH1_RXDEBUGPCSOUT_out;
  wire CH1_RXOUTCLK_out;
  wire CH1_RXPMARESETDONE_out;
  wire CH1_RXPRBSERR_out;
  wire CH1_RXPRBSLOCKED_out;
  wire CH1_RXPROGDIVRESETDONE_out;
  wire CH1_RXRESETDONE_out;
  wire CH1_SCANCNTRLOUT_out;
  wire CH1_TXDCCDONE_out;
  wire CH1_TXDEBUGPCSOUT_out;
  wire CH1_TXOUTCLK_out;
  wire CH1_TXPMARESETDONE_out;
  wire CH1_TXPROGDIVRESETDONE_out;
  wire CH1_TXRESETDONE_out;
  wire CH2_DMONITOROUTCLK_out;
  wire CH2_EYESCANDATAERROR_out;
  wire CH2_ILORESETDONE_out;
  wire CH2_RESETEXCEPTION_out;
  wire CH2_RXCDRLOCK_out;
  wire CH2_RXCDRPHDONE_out;
  wire CH2_RXDEBUGPCSOUT_out;
  wire CH2_RXOUTCLK_out;
  wire CH2_RXPMARESETDONE_out;
  wire CH2_RXPRBSERR_out;
  wire CH2_RXPRBSLOCKED_out;
  wire CH2_RXPROGDIVRESETDONE_out;
  wire CH2_RXRESETDONE_out;
  wire CH2_SCANCNTRLOUT_out;
  wire CH2_TXDCCDONE_out;
  wire CH2_TXDEBUGPCSOUT_out;
  wire CH2_TXOUTCLK_out;
  wire CH2_TXPMARESETDONE_out;
  wire CH2_TXPROGDIVRESETDONE_out;
  wire CH2_TXRESETDONE_out;
  wire CH3_DMONITOROUTCLK_out;
  wire CH3_EYESCANDATAERROR_out;
  wire CH3_ILORESETDONE_out;
  wire CH3_RESETEXCEPTION_out;
  wire CH3_RXCDRLOCK_out;
  wire CH3_RXCDRPHDONE_out;
  wire CH3_RXDEBUGPCSOUT_out;
  wire CH3_RXOUTCLK_out;
  wire CH3_RXPMARESETDONE_out;
  wire CH3_RXPRBSERR_out;
  wire CH3_RXPRBSLOCKED_out;
  wire CH3_RXPROGDIVRESETDONE_out;
  wire CH3_RXRESETDONE_out;
  wire CH3_SCANCNTRLOUT_out;
  wire CH3_TXDCCDONE_out;
  wire CH3_TXDEBUGPCSOUT_out;
  wire CH3_TXOUTCLK_out;
  wire CH3_TXPMARESETDONE_out;
  wire CH3_TXPROGDIVRESETDONE_out;
  wire CH3_TXRESETDONE_out;
  wire CORRECTERR_out;
  wire DEBUGTRACETVALID_out;
  wire GTPOWERGOOD_out;
  wire HSCLK0_LCPLLFBCLKLOST_out;
  wire HSCLK0_LCPLLLOCK_out;
  wire HSCLK0_LCPLLREFCLKLOST_out;
  wire HSCLK0_LCPLLREFCLKMONITOR_out;
  wire HSCLK0_RXRECCLKOUT0_out;
  wire HSCLK0_RXRECCLKOUT1_out;
  wire HSCLK1_LCPLLFBCLKLOST_out;
  wire HSCLK1_LCPLLLOCK_out;
  wire HSCLK1_LCPLLREFCLKLOST_out;
  wire HSCLK1_LCPLLREFCLKMONITOR_out;
  wire HSCLK1_RXRECCLKOUT0_out;
  wire HSCLK1_RXRECCLKOUT1_out;
  wire M0_AXIS_TLAST_out;
  wire M0_AXIS_TVALID_out;
  wire M1_AXIS_TLAST_out;
  wire M1_AXIS_TVALID_out;
  wire M2_AXIS_TLAST_out;
  wire M2_AXIS_TVALID_out;
  wire M3_AXIS_TLAST_out;
  wire M3_AXIS_TVALID_out;
  wire RCALCMP_out;
  wire REFCLK0_CLKTESTSIGINT_out;
  wire REFCLK0_GTREFCLKPDINT_out;
  wire REFCLK1_CLKTESTSIGINT_out;
  wire REFCLK1_GTREFCLKPDINT_out;
  wire S0_AXIS_TREADY_out;
  wire S1_AXIS_TREADY_out;
  wire S2_AXIS_TREADY_out;
  wire S3_AXIS_TREADY_out;
  wire SCANCNTRLOUT_out;
  wire TRIGACKIN0_out;
  wire TRIGOUT0_out;
  wire UBINTERRUPT_out;
  wire UBTXUART_out;
  wire UNCORRECTERR_out;
  wire [15:0] CH0_PCSRSVDOUT_out;
  wire [15:0] CH0_PINRSVDAS_out;
  wire [15:0] CH1_PCSRSVDOUT_out;
  wire [15:0] CH1_PINRSVDAS_out;
  wire [15:0] CH2_PCSRSVDOUT_out;
  wire [15:0] CH2_PINRSVDAS_out;
  wire [15:0] CH3_PCSRSVDOUT_out;
  wire [15:0] CH3_PINRSVDAS_out;
  wire [15:0] DEBUGTRACETDATA_out;
  wire [1:0] CH0_REFDEBUGOUT_out;
  wire [1:0] CH1_REFDEBUGOUT_out;
  wire [1:0] CH2_REFDEBUGOUT_out;
  wire [1:0] CH3_REFDEBUGOUT_out;
  wire [1:0] HSCLK0_RXRECCLKSEL_out;
  wire [1:0] HSCLK1_RXRECCLKSEL_out;
  wire [1:0] RESETDONE_NORTHOUT_out;
  wire [1:0] RESETDONE_SOUTHOUT_out;
  wire [255:0] CH0_RXDATA_out;
  wire [255:0] CH1_RXDATA_out;
  wire [255:0] CH2_RXDATA_out;
  wire [255:0] CH3_RXDATA_out;
  wire [2:0] CH0_RXBUFSTATUS_out;
  wire [2:0] CH0_TXBUFSTATUS_out;
  wire [2:0] CH1_RXBUFSTATUS_out;
  wire [2:0] CH1_TXBUFSTATUS_out;
  wire [2:0] CH2_RXBUFSTATUS_out;
  wire [2:0] CH2_TXBUFSTATUS_out;
  wire [2:0] CH3_RXBUFSTATUS_out;
  wire [2:0] CH3_TXBUFSTATUS_out;
  wire [31:0] APB3PRDATA_out;
  wire [31:0] CH0_DMONITOROUT_out;
  wire [31:0] CH1_DMONITOROUT_out;
  wire [31:0] CH2_DMONITOROUT_out;
  wire [31:0] CH3_DMONITOROUT_out;
  wire [31:0] GPO_out;
  wire [31:0] M0_AXIS_TDATA_out;
  wire [31:0] M1_AXIS_TDATA_out;
  wire [31:0] M2_AXIS_TDATA_out;
  wire [31:0] M3_AXIS_TDATA_out;
  wire [3:0] CH0_SCANOUT_out;
  wire [3:0] CH1_SCANOUT_out;
  wire [3:0] CH2_SCANOUT_out;
  wire [3:0] CH3_SCANOUT_out;
  wire [3:0] MSTRXRESETDONE_out;
  wire [3:0] MSTTXRESETDONE_out;
  wire [3:0] SCANOUT_out;
  wire [4:0] RCALOUT_out;
  wire [7:0] CTRLRSVDOUT_out;


//declare internal signals
  integer CH0_GTMTXN_integer;
  integer CH0_GTMTXP_integer;
  integer CH1_GTMTXN_integer;
  integer CH1_GTMTXP_integer;
  integer CH2_GTMTXN_integer;
  integer CH2_GTMTXP_integer;
  integer CH3_GTMTXN_integer;
  integer CH3_GTMTXP_integer;
  integer CH0_GTMRXN_integer;
  integer CH0_GTMRXP_integer;
  integer CH1_GTMRXN_integer;
  integer CH1_GTMRXP_integer;
  integer CH2_GTMRXN_integer;
  integer CH2_GTMRXP_integer;
  integer CH3_GTMRXN_integer;
  integer CH3_GTMRXP_integer;


  wire CH0_GTMRXN_in;
  wire CH0_GTMRXP_in;
  wire CH1_GTMRXN_in;
  wire CH1_GTMRXP_in;
  wire CH2_GTMRXN_in;
  wire CH2_GTMRXP_in;
  wire CH3_GTMRXN_in;
  wire CH3_GTMRXP_in;
  wire APB3CLK_in;
  wire APB3PENABLE_in;
  wire APB3PRESETN_in;
  wire APB3PSEL_in;
  wire APB3PWRITE_in;
  wire AXISCLK_in;
  wire BGBYPASSB_in;
  wire BGMONITORENB_in;
  wire BGPDB_in;
  wire BGRCALOVRDENB_in;
  wire CH0_BSR_SERIAL_in;
  wire CH0_CDRFREQOS_in;
  wire CH0_CDRINCPCTRL_in;
  wire CH0_CDRSTEPDIR_in;
  wire CH0_CDRSTEPSQ_in;
  wire CH0_CDRSTEPSX_in;
  wire CH0_CLKRSVD0_in;
  wire CH0_CLKRSVD1_in;
  wire CH0_CSSDSTOPCLKB_in;
  wire CH0_DMONFIFORESET_in;
  wire CH0_DMONITORCLK_in;
  wire CH0_EDTUPDATEB_in;
  wire CH0_EYESCANRESET_in;
  wire CH0_EYESCANTRIGGER_in;
  wire CH0_GTRXRESET_in;
  wire CH0_GTTXRESET_in;
  wire CH0_ILORESETMASK_in;
  wire CH0_ILORESET_in;
  wire CH0_RXCDRHOLD_in;
  wire CH0_RXCDROVRDEN_in;
  wire CH0_RXCDRRESET_in;
  wire CH0_RXLATCLK_in;
  wire CH0_RXPERST_in;
  wire CH0_RXPOLARITY_in;
  wire CH0_RXPRBSCNTRESET_in;
  wire CH0_RXPRBSCNTSTOP_in;
  wire CH0_RXPROGDIVRESET_in;
  wire CH0_RXQPRBSEN_in;
  wire CH0_RXRSV0_in;
  wire CH0_RXRSV1_in;
  wire CH0_RXRSV2_in;
  wire CH0_RXUSERRDY_in;
  wire CH0_RXUSRCLK_in;
  wire CH0_SCANCLKB_in;
  wire CH0_SCANCNTRLIN_in;
  wire CH0_SCANENB_in;
  wire CH0_SCANRSTB_in;
  wire CH0_TSTCLK0_in;
  wire CH0_TSTCLK1_in;
  wire CH0_TXINHIBIT_in;
  wire CH0_TXLATCLK_in;
  wire CH0_TXPCSRESETMASK_in;
  wire CH0_TXPERST_in;
  wire CH0_TXPISOPD_in;
  wire CH0_TXPOLARITY_in;
  wire CH0_TXPRBSFORCEERR_in;
  wire CH0_TXPROGDIVRESET_in;
  wire CH0_TXQPRBSEN_in;
  wire CH0_TXUSERRDY_in;
  wire CH0_TXUSRCLK_in;
  wire CH1_BSR_SERIAL_in;
  wire CH1_CDRFREQOS_in;
  wire CH1_CDRINCPCTRL_in;
  wire CH1_CDRSTEPDIR_in;
  wire CH1_CDRSTEPSQ_in;
  wire CH1_CDRSTEPSX_in;
  wire CH1_CLKRSVD0_in;
  wire CH1_CLKRSVD1_in;
  wire CH1_CSSDSTOPCLKB_in;
  wire CH1_DMONFIFORESET_in;
  wire CH1_DMONITORCLK_in;
  wire CH1_EDTUPDATEB_in;
  wire CH1_EYESCANRESET_in;
  wire CH1_EYESCANTRIGGER_in;
  wire CH1_GTRXRESET_in;
  wire CH1_GTTXRESET_in;
  wire CH1_ILORESETMASK_in;
  wire CH1_ILORESET_in;
  wire CH1_RXCDRHOLD_in;
  wire CH1_RXCDROVRDEN_in;
  wire CH1_RXCDRRESET_in;
  wire CH1_RXLATCLK_in;
  wire CH1_RXPERST_in;
  wire CH1_RXPOLARITY_in;
  wire CH1_RXPRBSCNTRESET_in;
  wire CH1_RXPRBSCNTSTOP_in;
  wire CH1_RXPROGDIVRESET_in;
  wire CH1_RXQPRBSEN_in;
  wire CH1_RXRSV0_in;
  wire CH1_RXRSV1_in;
  wire CH1_RXRSV2_in;
  wire CH1_RXUSERRDY_in;
  wire CH1_RXUSRCLK_in;
  wire CH1_SCANCLKB_in;
  wire CH1_SCANCNTRLIN_in;
  wire CH1_SCANENB_in;
  wire CH1_SCANRSTB_in;
  wire CH1_TSTCLK0_in;
  wire CH1_TSTCLK1_in;
  wire CH1_TXINHIBIT_in;
  wire CH1_TXLATCLK_in;
  wire CH1_TXPCSRESETMASK_in;
  wire CH1_TXPERST_in;
  wire CH1_TXPISOPD_in;
  wire CH1_TXPOLARITY_in;
  wire CH1_TXPRBSFORCEERR_in;
  wire CH1_TXPROGDIVRESET_in;
  wire CH1_TXQPRBSEN_in;
  wire CH1_TXUSERRDY_in;
  wire CH1_TXUSRCLK_in;
  wire CH2_BSR_SERIAL_in;
  wire CH2_CDRFREQOS_in;
  wire CH2_CDRINCPCTRL_in;
  wire CH2_CDRSTEPDIR_in;
  wire CH2_CDRSTEPSQ_in;
  wire CH2_CDRSTEPSX_in;
  wire CH2_CLKRSVD0_in;
  wire CH2_CLKRSVD1_in;
  wire CH2_CSSDSTOPCLKB_in;
  wire CH2_DMONFIFORESET_in;
  wire CH2_DMONITORCLK_in;
  wire CH2_EDTUPDATEB_in;
  wire CH2_EYESCANRESET_in;
  wire CH2_EYESCANTRIGGER_in;
  wire CH2_GTRXRESET_in;
  wire CH2_GTTXRESET_in;
  wire CH2_ILORESETMASK_in;
  wire CH2_ILORESET_in;
  wire CH2_RXCDRHOLD_in;
  wire CH2_RXCDROVRDEN_in;
  wire CH2_RXCDRRESET_in;
  wire CH2_RXLATCLK_in;
  wire CH2_RXPERST_in;
  wire CH2_RXPOLARITY_in;
  wire CH2_RXPRBSCNTRESET_in;
  wire CH2_RXPRBSCNTSTOP_in;
  wire CH2_RXPROGDIVRESET_in;
  wire CH2_RXQPRBSEN_in;
  wire CH2_RXRSV0_in;
  wire CH2_RXRSV1_in;
  wire CH2_RXRSV2_in;
  wire CH2_RXUSERRDY_in;
  wire CH2_RXUSRCLK_in;
  wire CH2_SCANCLKB_in;
  wire CH2_SCANCNTRLIN_in;
  wire CH2_SCANENB_in;
  wire CH2_SCANRSTB_in;
  wire CH2_TSTCLK0_in;
  wire CH2_TSTCLK1_in;
  wire CH2_TXINHIBIT_in;
  wire CH2_TXLATCLK_in;
  wire CH2_TXPCSRESETMASK_in;
  wire CH2_TXPERST_in;
  wire CH2_TXPISOPD_in;
  wire CH2_TXPOLARITY_in;
  wire CH2_TXPRBSFORCEERR_in;
  wire CH2_TXPROGDIVRESET_in;
  wire CH2_TXQPRBSEN_in;
  wire CH2_TXUSERRDY_in;
  wire CH2_TXUSRCLK_in;
  wire CH3_BSR_SERIAL_in;
  wire CH3_CDRFREQOS_in;
  wire CH3_CDRINCPCTRL_in;
  wire CH3_CDRSTEPDIR_in;
  wire CH3_CDRSTEPSQ_in;
  wire CH3_CDRSTEPSX_in;
  wire CH3_CLKRSVD0_in;
  wire CH3_CLKRSVD1_in;
  wire CH3_CSSDSTOPCLKB_in;
  wire CH3_DMONFIFORESET_in;
  wire CH3_DMONITORCLK_in;
  wire CH3_EDTUPDATEB_in;
  wire CH3_EYESCANRESET_in;
  wire CH3_EYESCANTRIGGER_in;
  wire CH3_GTRXRESET_in;
  wire CH3_GTTXRESET_in;
  wire CH3_ILORESETMASK_in;
  wire CH3_ILORESET_in;
  wire CH3_RXCDRHOLD_in;
  wire CH3_RXCDROVRDEN_in;
  wire CH3_RXCDRRESET_in;
  wire CH3_RXLATCLK_in;
  wire CH3_RXPERST_in;
  wire CH3_RXPOLARITY_in;
  wire CH3_RXPRBSCNTRESET_in;
  wire CH3_RXPRBSCNTSTOP_in;
  wire CH3_RXPROGDIVRESET_in;
  wire CH3_RXQPRBSEN_in;
  wire CH3_RXRSV0_in;
  wire CH3_RXRSV1_in;
  wire CH3_RXRSV2_in;
  wire CH3_RXUSERRDY_in;
  wire CH3_RXUSRCLK_in;
  wire CH3_SCANCLKB_in;
  wire CH3_SCANCNTRLIN_in;
  wire CH3_SCANENB_in;
  wire CH3_SCANRSTB_in;
  wire CH3_TSTCLK0_in;
  wire CH3_TSTCLK1_in;
  wire CH3_TXINHIBIT_in;
  wire CH3_TXLATCLK_in;
  wire CH3_TXPCSRESETMASK_in;
  wire CH3_TXPERST_in;
  wire CH3_TXPISOPD_in;
  wire CH3_TXPOLARITY_in;
  wire CH3_TXPRBSFORCEERR_in;
  wire CH3_TXPROGDIVRESET_in;
  wire CH3_TXQPRBSEN_in;
  wire CH3_TXUSERRDY_in;
  wire CH3_TXUSRCLK_in;
  wire COESTATUSDEBUG_in;
  wire CSSDSTOPCLKB_in;
  wire DEBUGTRACECLK_in;
  wire DEBUGTRACEREADY_in;
  wire EDTUPDATEB_in;
  wire HSCLK0_LCPLLGTGREFCLK_in;
  wire HSCLK0_LCPLLGTREFCLK0_in;
  wire HSCLK0_LCPLLGTREFCLK1_in;
  wire HSCLK0_LCPLLNORTHREFCLK0_in;
  wire HSCLK0_LCPLLNORTHREFCLK1_in;
  wire HSCLK0_LCPLLPD_in;
  wire HSCLK0_LCPLLRESETBYPASSMODE_in;
  wire HSCLK0_LCPLLRESET_in;
  wire HSCLK0_LCPLLSDMTOGGLE_in;
  wire HSCLK0_LCPLLSOUTHREFCLK0_in;
  wire HSCLK0_LCPLLSOUTHREFCLK1_in;
  wire HSCLK1_LCPLLGTGREFCLK_in;
  wire HSCLK1_LCPLLGTREFCLK0_in;
  wire HSCLK1_LCPLLGTREFCLK1_in;
  wire HSCLK1_LCPLLNORTHREFCLK0_in;
  wire HSCLK1_LCPLLNORTHREFCLK1_in;
  wire HSCLK1_LCPLLPD_in;
  wire HSCLK1_LCPLLRESETBYPASSMODE_in;
  wire HSCLK1_LCPLLRESET_in;
  wire HSCLK1_LCPLLSDMTOGGLE_in;
  wire HSCLK1_LCPLLSOUTHREFCLK0_in;
  wire HSCLK1_LCPLLSOUTHREFCLK1_in;
  wire M0_AXIS_TREADY_in;
  wire M1_AXIS_TREADY_in;
  wire M2_AXIS_TREADY_in;
  wire M3_AXIS_TREADY_in;
  wire REFCLK0_CLKTESTSIG_in;
  wire REFCLK0_GTREFCLKPD_in;
  wire REFCLK1_CLKTESTSIG_in;
  wire REFCLK1_GTREFCLKPD_in;
  wire S0_AXIS_TLAST_in;
  wire S0_AXIS_TVALID_in;
  wire S1_AXIS_TLAST_in;
  wire S1_AXIS_TVALID_in;
  wire S2_AXIS_TLAST_in;
  wire S2_AXIS_TVALID_in;
  wire S3_AXIS_TLAST_in;
  wire S3_AXIS_TVALID_in;
  wire SCANCLKB_in;
  wire SCANCNTRLIN_in;
  wire SCANENB_in;
  wire SCANRSTB_in;
  wire TRIGACKOUT0_in;
  wire TRIGIN0_in;
  wire UBENABLE_in;
  wire UBIOLMBRST_in;
  wire UBMBRST_in;
  wire UBRXUART_in;
  wire [11:0] UBINTR_in;
  wire [15:0] APB3PADDR_in;
  wire [15:0] CH0_GTRSVD_in;
  wire [15:0] CH0_PCSRSVDIN_in;
  wire [15:0] CH1_GTRSVD_in;
  wire [15:0] CH1_PCSRSVDIN_in;
  wire [15:0] CH2_GTRSVD_in;
  wire [15:0] CH2_PCSRSVDIN_in;
  wire [15:0] CH3_GTRSVD_in;
  wire [15:0] CH3_PCSRSVDIN_in;
  wire [1:0] CH0_RXPD_in;
  wire [1:0] CH0_RXRESETMODE_in;
  wire [1:0] CH0_TXPD_in;
  wire [1:0] CH0_TXPMARESETMASK_in;
  wire [1:0] CH0_TXRESETMODE_in;
  wire [1:0] CH1_RXPD_in;
  wire [1:0] CH1_RXRESETMODE_in;
  wire [1:0] CH1_TXPD_in;
  wire [1:0] CH1_TXPMARESETMASK_in;
  wire [1:0] CH1_TXRESETMODE_in;
  wire [1:0] CH2_RXPD_in;
  wire [1:0] CH2_RXRESETMODE_in;
  wire [1:0] CH2_TXPD_in;
  wire [1:0] CH2_TXPMARESETMASK_in;
  wire [1:0] CH2_TXRESETMODE_in;
  wire [1:0] CH3_RXPD_in;
  wire [1:0] CH3_RXRESETMODE_in;
  wire [1:0] CH3_TXPD_in;
  wire [1:0] CH3_TXPMARESETMASK_in;
  wire [1:0] CH3_TXRESETMODE_in;
  wire [1:0] HSCLK0_LCPLLRESETMASK_in;
  wire [1:0] HSCLK1_LCPLLRESETMASK_in;
  wire [1:0] RESETDONE_NORTHIN_in;
  wire [1:0] RESETDONE_SOUTHIN_in;
  wire [255:0] CH0_TXDATA_in;
  wire [255:0] CH1_TXDATA_in;
  wire [255:0] CH2_TXDATA_in;
  wire [255:0] CH3_TXDATA_in;
  wire [25:0] HSCLK0_LCPLLSDMDATA_in;
  wire [25:0] HSCLK1_LCPLLSDMDATA_in;
  wire [2:0] CH0_LOOPBACK_in;
  wire [2:0] CH0_RXPCSRESETMASK_in;
  wire [2:0] CH1_LOOPBACK_in;
  wire [2:0] CH1_RXPCSRESETMASK_in;
  wire [2:0] CH2_LOOPBACK_in;
  wire [2:0] CH2_RXPCSRESETMASK_in;
  wire [2:0] CH3_LOOPBACK_in;
  wire [2:0] CH3_RXPCSRESETMASK_in;
  wire [2:0] HSCLK0_LCPLLREFCLKSEL_in;
  wire [2:0] HSCLK1_LCPLLREFCLKSEL_in;
  wire [31:0] APB3PWDATA_in;
  wire [31:0] GPI_in;
  wire [31:0] S0_AXIS_TDATA_in;
  wire [31:0] S1_AXIS_TDATA_in;
  wire [31:0] S2_AXIS_TDATA_in;
  wire [31:0] S3_AXIS_TDATA_in;
  wire [3:0] CH0_RXPRBSSEL_in;
  wire [3:0] CH0_SCANIN_in;
  wire [3:0] CH0_TXPRBSSEL_in;
  wire [3:0] CH0_TXRSV1_in;
  wire [3:0] CH1_RXPRBSSEL_in;
  wire [3:0] CH1_SCANIN_in;
  wire [3:0] CH1_TXPRBSSEL_in;
  wire [3:0] CH1_TXRSV1_in;
  wire [3:0] CH2_RXPRBSSEL_in;
  wire [3:0] CH2_SCANIN_in;
  wire [3:0] CH2_TXPRBSSEL_in;
  wire [3:0] CH2_TXRSV1_in;
  wire [3:0] CH3_RXPRBSSEL_in;
  wire [3:0] CH3_SCANIN_in;
  wire [3:0] CH3_TXPRBSSEL_in;
  wire [3:0] CH3_TXRSV1_in;
  wire [3:0] MSTRXRESET_in;
  wire [3:0] MSTTXRESET_in;
  wire [3:0] SCANIN_in;
  wire [4:0] BGRCALOVRD_in;
  wire [4:0] CH0_TXRSV0_in;
  wire [4:0] CH1_TXRSV0_in;
  wire [4:0] CH2_TXRSV0_in;
  wire [4:0] CH3_TXRSV0_in;
  wire [5:0] CH0_TXPOSTCURSOR_in;
  wire [5:0] CH0_TXPRECURSOR2_in;
  wire [5:0] CH0_TXPRECURSOR3_in;
  wire [5:0] CH0_TXPRECURSOR_in;
  wire [5:0] CH1_TXPOSTCURSOR_in;
  wire [5:0] CH1_TXPRECURSOR2_in;
  wire [5:0] CH1_TXPRECURSOR3_in;
  wire [5:0] CH1_TXPRECURSOR_in;
  wire [5:0] CH2_TXPOSTCURSOR_in;
  wire [5:0] CH2_TXPRECURSOR2_in;
  wire [5:0] CH2_TXPRECURSOR3_in;
  wire [5:0] CH2_TXPRECURSOR_in;
  wire [5:0] CH3_TXPOSTCURSOR_in;
  wire [5:0] CH3_TXPRECURSOR2_in;
  wire [5:0] CH3_TXPRECURSOR3_in;
  wire [5:0] CH3_TXPRECURSOR_in;
  wire [6:0] CH0_TXMAINCURSOR_in;
  wire [6:0] CH1_TXMAINCURSOR_in;
  wire [6:0] CH2_TXMAINCURSOR_in;
  wire [6:0] CH3_TXMAINCURSOR_in;
  wire [7:0] CH0_RXPMARESETMASK_in;
  wire [7:0] CH0_RXRATE_in;
  wire [7:0] CH0_TXRATE_in;
  wire [7:0] CH1_RXPMARESETMASK_in;
  wire [7:0] CH1_RXRATE_in;
  wire [7:0] CH1_TXRATE_in;
  wire [7:0] CH2_RXPMARESETMASK_in;
  wire [7:0] CH2_RXRATE_in;
  wire [7:0] CH2_TXRATE_in;
  wire [7:0] CH3_RXPMARESETMASK_in;
  wire [7:0] CH3_RXRATE_in;
  wire [7:0] CH3_TXRATE_in;
  wire [7:0] CTRLRSVDIN_in;
  wire [7:0] HSCLK0_LCPLLFBDIV_in;
  wire [7:0] HSCLK1_LCPLLFBDIV_in;

`ifdef XIL_TIMING
  wire APB3CLK_delay;
  wire APB3PENABLE_delay;
  wire APB3PSEL_delay;
  wire APB3PWRITE_delay;
  wire AXISCLK_delay;
  wire CH0_DMONFIFORESET_delay;
  wire CH0_DMONITORCLK_delay;
  wire CH0_EYESCANTRIGGER_delay;
  wire CH0_RXLATCLK_delay;
  wire CH0_RXUSRCLK_delay;
  wire CH0_TXUSRCLK_delay;
  wire CH1_DMONFIFORESET_delay;
  wire CH1_DMONITORCLK_delay;
  wire CH1_EYESCANTRIGGER_delay;
  wire CH1_RXLATCLK_delay;
  wire CH1_RXUSRCLK_delay;
  wire CH1_TXUSRCLK_delay;
  wire CH2_DMONFIFORESET_delay;
  wire CH2_DMONITORCLK_delay;
  wire CH2_EYESCANTRIGGER_delay;
  wire CH2_RXLATCLK_delay;
  wire CH2_RXUSRCLK_delay;
  wire CH2_TXUSRCLK_delay;
  wire CH3_DMONFIFORESET_delay;
  wire CH3_DMONITORCLK_delay;
  wire CH3_EYESCANTRIGGER_delay;
  wire CH3_RXLATCLK_delay;
  wire CH3_RXUSRCLK_delay;
  wire CH3_TXUSRCLK_delay;
  wire COESTATUSDEBUG_delay;
  wire DEBUGTRACECLK_delay;
  wire DEBUGTRACEREADY_delay;
  wire M0_AXIS_TREADY_delay;
  wire M1_AXIS_TREADY_delay;
  wire M2_AXIS_TREADY_delay;
  wire M3_AXIS_TREADY_delay;
  wire S0_AXIS_TLAST_delay;
  wire S0_AXIS_TVALID_delay;
  wire S1_AXIS_TLAST_delay;
  wire S1_AXIS_TVALID_delay;
  wire S2_AXIS_TLAST_delay;
  wire S2_AXIS_TVALID_delay;
  wire S3_AXIS_TLAST_delay;
  wire S3_AXIS_TVALID_delay;
  wire UBMBRST_delay;
  wire [15:0] APB3PADDR_delay;
  wire [255:0] CH0_TXDATA_delay;
  wire [255:0] CH1_TXDATA_delay;
  wire [255:0] CH2_TXDATA_delay;
  wire [255:0] CH3_TXDATA_delay;
  wire [2:0] CH0_LOOPBACK_delay;
  wire [2:0] CH1_LOOPBACK_delay;
  wire [2:0] CH2_LOOPBACK_delay;
  wire [2:0] CH3_LOOPBACK_delay;
  wire [31:0] APB3PWDATA_delay;
  wire [31:0] S0_AXIS_TDATA_delay;
  wire [31:0] S1_AXIS_TDATA_delay;
  wire [31:0] S2_AXIS_TDATA_delay;
  wire [31:0] S3_AXIS_TDATA_delay;
`endif

  assign APB3PRDATA = APB3PRDATA_out;
  assign APB3PREADY = APB3PREADY_out;
  assign APB3PSLVERR = APB3PSLVERR_out;
  assign CH0_DMONITOROUT = CH0_DMONITOROUT_out;
  assign CH0_DMONITOROUTCLK = CH0_DMONITOROUTCLK_out;
  assign CH0_EYESCANDATAERROR = CH0_EYESCANDATAERROR_out;
  assign CH0_GTMTXN = CH0_GTMTXN_out;
  assign CH0_GTMTXP = CH0_GTMTXP_out;
  assign CH0_ILORESETDONE = CH0_ILORESETDONE_out;
  assign CH0_PCSRSVDOUT = CH0_PCSRSVDOUT_out;
  assign CH0_PINRSVDAS = CH0_PINRSVDAS_out;
  assign CH0_REFDEBUGOUT = CH0_REFDEBUGOUT_out;
  assign CH0_RESETEXCEPTION = CH0_RESETEXCEPTION_out;
  assign CH0_RXBUFSTATUS = CH0_RXBUFSTATUS_out;
  assign CH0_RXCDRLOCK = CH0_RXCDRLOCK_out;
  assign CH0_RXCDRPHDONE = CH0_RXCDRPHDONE_out;
  assign CH0_RXDATA = CH0_RXDATA_out;
  assign CH0_RXDEBUGPCSOUT = CH0_RXDEBUGPCSOUT_out;
  assign CH0_RXOUTCLK = CH0_RXOUTCLK_out;
  assign CH0_RXPMARESETDONE = CH0_RXPMARESETDONE_out;
  assign CH0_RXPRBSERR = CH0_RXPRBSERR_out;
  assign CH0_RXPRBSLOCKED = CH0_RXPRBSLOCKED_out;
  assign CH0_RXPROGDIVRESETDONE = CH0_RXPROGDIVRESETDONE_out;
  assign CH0_RXRESETDONE = CH0_RXRESETDONE_out;
  assign CH0_TXBUFSTATUS = CH0_TXBUFSTATUS_out;
  assign CH0_TXDCCDONE = CH0_TXDCCDONE_out;
  assign CH0_TXDEBUGPCSOUT = CH0_TXDEBUGPCSOUT_out;
  assign CH0_TXOUTCLK = CH0_TXOUTCLK_out;
  assign CH0_TXPMARESETDONE = CH0_TXPMARESETDONE_out;
  assign CH0_TXPROGDIVRESETDONE = CH0_TXPROGDIVRESETDONE_out;
  assign CH0_TXRESETDONE = CH0_TXRESETDONE_out;
  assign CH1_DMONITOROUT = CH1_DMONITOROUT_out;
  assign CH1_DMONITOROUTCLK = CH1_DMONITOROUTCLK_out;
  assign CH1_EYESCANDATAERROR = CH1_EYESCANDATAERROR_out;
  assign CH1_GTMTXN = CH1_GTMTXN_out;
  assign CH1_GTMTXP = CH1_GTMTXP_out;
  assign CH1_ILORESETDONE = CH1_ILORESETDONE_out;
  assign CH1_PCSRSVDOUT = CH1_PCSRSVDOUT_out;
  assign CH1_PINRSVDAS = CH1_PINRSVDAS_out;
  assign CH1_REFDEBUGOUT = CH1_REFDEBUGOUT_out;
  assign CH1_RESETEXCEPTION = CH1_RESETEXCEPTION_out;
  assign CH1_RXBUFSTATUS = CH1_RXBUFSTATUS_out;
  assign CH1_RXCDRLOCK = CH1_RXCDRLOCK_out;
  assign CH1_RXCDRPHDONE = CH1_RXCDRPHDONE_out;
  assign CH1_RXDATA = CH1_RXDATA_out;
  assign CH1_RXDEBUGPCSOUT = CH1_RXDEBUGPCSOUT_out;
  assign CH1_RXOUTCLK = CH1_RXOUTCLK_out;
  assign CH1_RXPMARESETDONE = CH1_RXPMARESETDONE_out;
  assign CH1_RXPRBSERR = CH1_RXPRBSERR_out;
  assign CH1_RXPRBSLOCKED = CH1_RXPRBSLOCKED_out;
  assign CH1_RXPROGDIVRESETDONE = CH1_RXPROGDIVRESETDONE_out;
  assign CH1_RXRESETDONE = CH1_RXRESETDONE_out;
  assign CH1_TXBUFSTATUS = CH1_TXBUFSTATUS_out;
  assign CH1_TXDCCDONE = CH1_TXDCCDONE_out;
  assign CH1_TXDEBUGPCSOUT = CH1_TXDEBUGPCSOUT_out;
  assign CH1_TXOUTCLK = CH1_TXOUTCLK_out;
  assign CH1_TXPMARESETDONE = CH1_TXPMARESETDONE_out;
  assign CH1_TXPROGDIVRESETDONE = CH1_TXPROGDIVRESETDONE_out;
  assign CH1_TXRESETDONE = CH1_TXRESETDONE_out;
  assign CH2_DMONITOROUT = CH2_DMONITOROUT_out;
  assign CH2_DMONITOROUTCLK = CH2_DMONITOROUTCLK_out;
  assign CH2_EYESCANDATAERROR = CH2_EYESCANDATAERROR_out;
  assign CH2_GTMTXN = CH2_GTMTXN_out;
  assign CH2_GTMTXP = CH2_GTMTXP_out;
  assign CH2_ILORESETDONE = CH2_ILORESETDONE_out;
  assign CH2_PCSRSVDOUT = CH2_PCSRSVDOUT_out;
  assign CH2_PINRSVDAS = CH2_PINRSVDAS_out;
  assign CH2_REFDEBUGOUT = CH2_REFDEBUGOUT_out;
  assign CH2_RESETEXCEPTION = CH2_RESETEXCEPTION_out;
  assign CH2_RXBUFSTATUS = CH2_RXBUFSTATUS_out;
  assign CH2_RXCDRLOCK = CH2_RXCDRLOCK_out;
  assign CH2_RXCDRPHDONE = CH2_RXCDRPHDONE_out;
  assign CH2_RXDATA = CH2_RXDATA_out;
  assign CH2_RXDEBUGPCSOUT = CH2_RXDEBUGPCSOUT_out;
  assign CH2_RXOUTCLK = CH2_RXOUTCLK_out;
  assign CH2_RXPMARESETDONE = CH2_RXPMARESETDONE_out;
  assign CH2_RXPRBSERR = CH2_RXPRBSERR_out;
  assign CH2_RXPRBSLOCKED = CH2_RXPRBSLOCKED_out;
  assign CH2_RXPROGDIVRESETDONE = CH2_RXPROGDIVRESETDONE_out;
  assign CH2_RXRESETDONE = CH2_RXRESETDONE_out;
  assign CH2_TXBUFSTATUS = CH2_TXBUFSTATUS_out;
  assign CH2_TXDCCDONE = CH2_TXDCCDONE_out;
  assign CH2_TXDEBUGPCSOUT = CH2_TXDEBUGPCSOUT_out;
  assign CH2_TXOUTCLK = CH2_TXOUTCLK_out;
  assign CH2_TXPMARESETDONE = CH2_TXPMARESETDONE_out;
  assign CH2_TXPROGDIVRESETDONE = CH2_TXPROGDIVRESETDONE_out;
  assign CH2_TXRESETDONE = CH2_TXRESETDONE_out;
  assign CH3_DMONITOROUT = CH3_DMONITOROUT_out;
  assign CH3_DMONITOROUTCLK = CH3_DMONITOROUTCLK_out;
  assign CH3_EYESCANDATAERROR = CH3_EYESCANDATAERROR_out;
  assign CH3_GTMTXN = CH3_GTMTXN_out;
  assign CH3_GTMTXP = CH3_GTMTXP_out;
  assign CH3_ILORESETDONE = CH3_ILORESETDONE_out;
  assign CH3_PCSRSVDOUT = CH3_PCSRSVDOUT_out;
  assign CH3_PINRSVDAS = CH3_PINRSVDAS_out;
  assign CH3_REFDEBUGOUT = CH3_REFDEBUGOUT_out;
  assign CH3_RESETEXCEPTION = CH3_RESETEXCEPTION_out;
  assign CH3_RXBUFSTATUS = CH3_RXBUFSTATUS_out;
  assign CH3_RXCDRLOCK = CH3_RXCDRLOCK_out;
  assign CH3_RXCDRPHDONE = CH3_RXCDRPHDONE_out;
  assign CH3_RXDATA = CH3_RXDATA_out;
  assign CH3_RXDEBUGPCSOUT = CH3_RXDEBUGPCSOUT_out;
  assign CH3_RXOUTCLK = CH3_RXOUTCLK_out;
  assign CH3_RXPMARESETDONE = CH3_RXPMARESETDONE_out;
  assign CH3_RXPRBSERR = CH3_RXPRBSERR_out;
  assign CH3_RXPRBSLOCKED = CH3_RXPRBSLOCKED_out;
  assign CH3_RXPROGDIVRESETDONE = CH3_RXPROGDIVRESETDONE_out;
  assign CH3_RXRESETDONE = CH3_RXRESETDONE_out;
  assign CH3_TXBUFSTATUS = CH3_TXBUFSTATUS_out;
  assign CH3_TXDCCDONE = CH3_TXDCCDONE_out;
  assign CH3_TXDEBUGPCSOUT = CH3_TXDEBUGPCSOUT_out;
  assign CH3_TXOUTCLK = CH3_TXOUTCLK_out;
  assign CH3_TXPMARESETDONE = CH3_TXPMARESETDONE_out;
  assign CH3_TXPROGDIVRESETDONE = CH3_TXPROGDIVRESETDONE_out;
  assign CH3_TXRESETDONE = CH3_TXRESETDONE_out;
  assign CORRECTERR = CORRECTERR_out;
  assign CTRLRSVDOUT = CTRLRSVDOUT_out;
  assign DEBUGTRACETDATA = DEBUGTRACETDATA_out;
  assign DEBUGTRACETVALID = DEBUGTRACETVALID_out;
  assign GPO = GPO_out;
  assign GTPOWERGOOD = GTPOWERGOOD_out;
  assign HSCLK0_LCPLLFBCLKLOST = HSCLK0_LCPLLFBCLKLOST_out;
  assign HSCLK0_LCPLLLOCK = HSCLK0_LCPLLLOCK_out;
  assign HSCLK0_LCPLLREFCLKLOST = HSCLK0_LCPLLREFCLKLOST_out;
  assign HSCLK0_LCPLLREFCLKMONITOR = HSCLK0_LCPLLREFCLKMONITOR_out;
  assign HSCLK0_RXRECCLKOUT0 = HSCLK0_RXRECCLKOUT0_out;
  assign HSCLK0_RXRECCLKOUT1 = HSCLK0_RXRECCLKOUT1_out;
  assign HSCLK0_RXRECCLKSEL = HSCLK0_RXRECCLKSEL_out;
  assign HSCLK1_LCPLLFBCLKLOST = HSCLK1_LCPLLFBCLKLOST_out;
  assign HSCLK1_LCPLLLOCK = HSCLK1_LCPLLLOCK_out;
  assign HSCLK1_LCPLLREFCLKLOST = HSCLK1_LCPLLREFCLKLOST_out;
  assign HSCLK1_LCPLLREFCLKMONITOR = HSCLK1_LCPLLREFCLKMONITOR_out;
  assign HSCLK1_RXRECCLKOUT0 = HSCLK1_RXRECCLKOUT0_out;
  assign HSCLK1_RXRECCLKOUT1 = HSCLK1_RXRECCLKOUT1_out;
  assign HSCLK1_RXRECCLKSEL = HSCLK1_RXRECCLKSEL_out;
  assign M0_AXIS_TDATA = M0_AXIS_TDATA_out;
  assign M0_AXIS_TLAST = M0_AXIS_TLAST_out;
  assign M0_AXIS_TVALID = M0_AXIS_TVALID_out;
  assign M1_AXIS_TDATA = M1_AXIS_TDATA_out;
  assign M1_AXIS_TLAST = M1_AXIS_TLAST_out;
  assign M1_AXIS_TVALID = M1_AXIS_TVALID_out;
  assign M2_AXIS_TDATA = M2_AXIS_TDATA_out;
  assign M2_AXIS_TLAST = M2_AXIS_TLAST_out;
  assign M2_AXIS_TVALID = M2_AXIS_TVALID_out;
  assign M3_AXIS_TDATA = M3_AXIS_TDATA_out;
  assign M3_AXIS_TLAST = M3_AXIS_TLAST_out;
  assign M3_AXIS_TVALID = M3_AXIS_TVALID_out;
  assign MSTRXRESETDONE = MSTRXRESETDONE_out;
  assign MSTTXRESETDONE = MSTTXRESETDONE_out;
  assign REFCLK0_CLKTESTSIGINT = REFCLK0_CLKTESTSIGINT_out;
  assign REFCLK0_GTREFCLKPDINT = REFCLK0_GTREFCLKPDINT_out;
  assign REFCLK1_CLKTESTSIGINT = REFCLK1_CLKTESTSIGINT_out;
  assign REFCLK1_GTREFCLKPDINT = REFCLK1_GTREFCLKPDINT_out;
  assign RESETDONE_NORTHOUT = RESETDONE_NORTHOUT_out;
  assign RESETDONE_SOUTHOUT = RESETDONE_SOUTHOUT_out;
  assign S0_AXIS_TREADY = S0_AXIS_TREADY_out;
  assign S1_AXIS_TREADY = S1_AXIS_TREADY_out;
  assign S2_AXIS_TREADY = S2_AXIS_TREADY_out;
  assign S3_AXIS_TREADY = S3_AXIS_TREADY_out;
  assign TRIGACKIN0 = TRIGACKIN0_out;
  assign TRIGOUT0 = TRIGOUT0_out;
  assign UBINTERRUPT = UBINTERRUPT_out;
  assign UBTXUART = UBTXUART_out;
  assign UNCORRECTERR = UNCORRECTERR_out;

`ifdef XIL_TIMING
  assign APB3CLK_in = (APB3CLK === 1'bz) || APB3CLK_delay; // rv 1
  assign APB3PADDR_in[0] = (APB3PADDR[0] !== 1'bz) && APB3PADDR_delay[0]; // rv MustConnect
  assign APB3PADDR_in[10] = (APB3PADDR[10] !== 1'bz) && APB3PADDR_delay[10]; // rv MustConnect
  assign APB3PADDR_in[11] = (APB3PADDR[11] !== 1'bz) && APB3PADDR_delay[11]; // rv MustConnect
  assign APB3PADDR_in[12] = (APB3PADDR[12] !== 1'bz) && APB3PADDR_delay[12]; // rv MustConnect
  assign APB3PADDR_in[13] = (APB3PADDR[13] !== 1'bz) && APB3PADDR_delay[13]; // rv MustConnect
  assign APB3PADDR_in[14] = (APB3PADDR[14] !== 1'bz) && APB3PADDR_delay[14]; // rv MustConnect
  assign APB3PADDR_in[15] = (APB3PADDR[15] !== 1'bz) && APB3PADDR_delay[15]; // rv MustConnect
  assign APB3PADDR_in[1] = (APB3PADDR[1] !== 1'bz) && APB3PADDR_delay[1]; // rv MustConnect
  assign APB3PADDR_in[2] = (APB3PADDR[2] !== 1'bz) && APB3PADDR_delay[2]; // rv MustConnect
  assign APB3PADDR_in[3] = (APB3PADDR[3] !== 1'bz) && APB3PADDR_delay[3]; // rv MustConnect
  assign APB3PADDR_in[4] = (APB3PADDR[4] !== 1'bz) && APB3PADDR_delay[4]; // rv MustConnect
  assign APB3PADDR_in[5] = (APB3PADDR[5] !== 1'bz) && APB3PADDR_delay[5]; // rv MustConnect
  assign APB3PADDR_in[6] = (APB3PADDR[6] !== 1'bz) && APB3PADDR_delay[6]; // rv MustConnect
  assign APB3PADDR_in[7] = (APB3PADDR[7] !== 1'bz) && APB3PADDR_delay[7]; // rv MustConnect
  assign APB3PADDR_in[8] = (APB3PADDR[8] !== 1'bz) && APB3PADDR_delay[8]; // rv MustConnect
  assign APB3PADDR_in[9] = (APB3PADDR[9] !== 1'bz) && APB3PADDR_delay[9]; // rv MustConnect
  assign APB3PENABLE_in = (APB3PENABLE === 1'bz) || APB3PENABLE_delay; // rv 1
  assign APB3PSEL_in = (APB3PSEL === 1'bz) || APB3PSEL_delay; // rv 1
  assign APB3PWDATA_in[0] = (APB3PWDATA[0] !== 1'bz) && APB3PWDATA_delay[0]; // rv MustConnect
  assign APB3PWDATA_in[10] = (APB3PWDATA[10] !== 1'bz) && APB3PWDATA_delay[10]; // rv MustConnect
  assign APB3PWDATA_in[11] = (APB3PWDATA[11] !== 1'bz) && APB3PWDATA_delay[11]; // rv MustConnect
  assign APB3PWDATA_in[12] = (APB3PWDATA[12] !== 1'bz) && APB3PWDATA_delay[12]; // rv MustConnect
  assign APB3PWDATA_in[13] = (APB3PWDATA[13] !== 1'bz) && APB3PWDATA_delay[13]; // rv MustConnect
  assign APB3PWDATA_in[14] = (APB3PWDATA[14] !== 1'bz) && APB3PWDATA_delay[14]; // rv MustConnect
  assign APB3PWDATA_in[15] = (APB3PWDATA[15] !== 1'bz) && APB3PWDATA_delay[15]; // rv MustConnect
  assign APB3PWDATA_in[16] = (APB3PWDATA[16] !== 1'bz) && APB3PWDATA_delay[16]; // rv MustConnect
  assign APB3PWDATA_in[17] = (APB3PWDATA[17] !== 1'bz) && APB3PWDATA_delay[17]; // rv MustConnect
  assign APB3PWDATA_in[18] = (APB3PWDATA[18] !== 1'bz) && APB3PWDATA_delay[18]; // rv MustConnect
  assign APB3PWDATA_in[19] = (APB3PWDATA[19] !== 1'bz) && APB3PWDATA_delay[19]; // rv MustConnect
  assign APB3PWDATA_in[1] = (APB3PWDATA[1] !== 1'bz) && APB3PWDATA_delay[1]; // rv MustConnect
  assign APB3PWDATA_in[20] = (APB3PWDATA[20] !== 1'bz) && APB3PWDATA_delay[20]; // rv MustConnect
  assign APB3PWDATA_in[21] = (APB3PWDATA[21] !== 1'bz) && APB3PWDATA_delay[21]; // rv MustConnect
  assign APB3PWDATA_in[22] = (APB3PWDATA[22] !== 1'bz) && APB3PWDATA_delay[22]; // rv MustConnect
  assign APB3PWDATA_in[23] = (APB3PWDATA[23] !== 1'bz) && APB3PWDATA_delay[23]; // rv MustConnect
  assign APB3PWDATA_in[24] = (APB3PWDATA[24] !== 1'bz) && APB3PWDATA_delay[24]; // rv MustConnect
  assign APB3PWDATA_in[25] = (APB3PWDATA[25] !== 1'bz) && APB3PWDATA_delay[25]; // rv MustConnect
  assign APB3PWDATA_in[26] = (APB3PWDATA[26] !== 1'bz) && APB3PWDATA_delay[26]; // rv MustConnect
  assign APB3PWDATA_in[27] = (APB3PWDATA[27] !== 1'bz) && APB3PWDATA_delay[27]; // rv MustConnect
  assign APB3PWDATA_in[28] = (APB3PWDATA[28] !== 1'bz) && APB3PWDATA_delay[28]; // rv MustConnect
  assign APB3PWDATA_in[29] = (APB3PWDATA[29] !== 1'bz) && APB3PWDATA_delay[29]; // rv MustConnect
  assign APB3PWDATA_in[2] = (APB3PWDATA[2] !== 1'bz) && APB3PWDATA_delay[2]; // rv MustConnect
  assign APB3PWDATA_in[30] = (APB3PWDATA[30] !== 1'bz) && APB3PWDATA_delay[30]; // rv MustConnect
  assign APB3PWDATA_in[31] = (APB3PWDATA[31] !== 1'bz) && APB3PWDATA_delay[31]; // rv MustConnect
  assign APB3PWDATA_in[3] = (APB3PWDATA[3] !== 1'bz) && APB3PWDATA_delay[3]; // rv MustConnect
  assign APB3PWDATA_in[4] = (APB3PWDATA[4] !== 1'bz) && APB3PWDATA_delay[4]; // rv MustConnect
  assign APB3PWDATA_in[5] = (APB3PWDATA[5] !== 1'bz) && APB3PWDATA_delay[5]; // rv MustConnect
  assign APB3PWDATA_in[6] = (APB3PWDATA[6] !== 1'bz) && APB3PWDATA_delay[6]; // rv MustConnect
  assign APB3PWDATA_in[7] = (APB3PWDATA[7] !== 1'bz) && APB3PWDATA_delay[7]; // rv MustConnect
  assign APB3PWDATA_in[8] = (APB3PWDATA[8] !== 1'bz) && APB3PWDATA_delay[8]; // rv MustConnect
  assign APB3PWDATA_in[9] = (APB3PWDATA[9] !== 1'bz) && APB3PWDATA_delay[9]; // rv MustConnect
  assign APB3PWRITE_in = (APB3PWRITE === 1'bz) || APB3PWRITE_delay; // rv 1
  assign AXISCLK_in = (AXISCLK === 1'bz) || AXISCLK_delay; // rv 1
  assign CH0_DMONFIFORESET_in = (CH0_DMONFIFORESET === 1'bz) || CH0_DMONFIFORESET_delay; // rv 1
  assign CH0_DMONITORCLK_in = (CH0_DMONITORCLK === 1'bz) || CH0_DMONITORCLK_delay; // rv 1
  assign CH0_EYESCANTRIGGER_in = (CH0_EYESCANTRIGGER === 1'bz) || CH0_EYESCANTRIGGER_delay; // rv 1
  assign CH0_LOOPBACK_in[0] = (CH0_LOOPBACK[0] !== 1'bz) && CH0_LOOPBACK_delay[0]; // rv MustConnect
  assign CH0_LOOPBACK_in[1] = (CH0_LOOPBACK[1] !== 1'bz) && CH0_LOOPBACK_delay[1]; // rv MustConnect
  assign CH0_LOOPBACK_in[2] = (CH0_LOOPBACK[2] !== 1'bz) && CH0_LOOPBACK_delay[2]; // rv MustConnect
  assign CH0_RXLATCLK_in = (CH0_RXLATCLK === 1'bz) || CH0_RXLATCLK_delay; // rv 1
  assign CH0_RXUSRCLK_in = (CH0_RXUSRCLK === 1'bz) || CH0_RXUSRCLK_delay; // rv 1
  assign CH0_TXDATA_in[0] = (CH0_TXDATA[0] !== 1'bz) && CH0_TXDATA_delay[0]; // rv MustConnect
  assign CH0_TXDATA_in[100] = (CH0_TXDATA[100] !== 1'bz) && CH0_TXDATA_delay[100]; // rv MustConnect
  assign CH0_TXDATA_in[101] = (CH0_TXDATA[101] !== 1'bz) && CH0_TXDATA_delay[101]; // rv MustConnect
  assign CH0_TXDATA_in[102] = (CH0_TXDATA[102] !== 1'bz) && CH0_TXDATA_delay[102]; // rv MustConnect
  assign CH0_TXDATA_in[103] = (CH0_TXDATA[103] !== 1'bz) && CH0_TXDATA_delay[103]; // rv MustConnect
  assign CH0_TXDATA_in[104] = (CH0_TXDATA[104] !== 1'bz) && CH0_TXDATA_delay[104]; // rv MustConnect
  assign CH0_TXDATA_in[105] = (CH0_TXDATA[105] !== 1'bz) && CH0_TXDATA_delay[105]; // rv MustConnect
  assign CH0_TXDATA_in[106] = (CH0_TXDATA[106] !== 1'bz) && CH0_TXDATA_delay[106]; // rv MustConnect
  assign CH0_TXDATA_in[107] = (CH0_TXDATA[107] !== 1'bz) && CH0_TXDATA_delay[107]; // rv MustConnect
  assign CH0_TXDATA_in[108] = (CH0_TXDATA[108] !== 1'bz) && CH0_TXDATA_delay[108]; // rv MustConnect
  assign CH0_TXDATA_in[109] = (CH0_TXDATA[109] !== 1'bz) && CH0_TXDATA_delay[109]; // rv MustConnect
  assign CH0_TXDATA_in[10] = (CH0_TXDATA[10] !== 1'bz) && CH0_TXDATA_delay[10]; // rv MustConnect
  assign CH0_TXDATA_in[110] = (CH0_TXDATA[110] !== 1'bz) && CH0_TXDATA_delay[110]; // rv MustConnect
  assign CH0_TXDATA_in[111] = (CH0_TXDATA[111] !== 1'bz) && CH0_TXDATA_delay[111]; // rv MustConnect
  assign CH0_TXDATA_in[112] = (CH0_TXDATA[112] !== 1'bz) && CH0_TXDATA_delay[112]; // rv MustConnect
  assign CH0_TXDATA_in[113] = (CH0_TXDATA[113] !== 1'bz) && CH0_TXDATA_delay[113]; // rv MustConnect
  assign CH0_TXDATA_in[114] = (CH0_TXDATA[114] !== 1'bz) && CH0_TXDATA_delay[114]; // rv MustConnect
  assign CH0_TXDATA_in[115] = (CH0_TXDATA[115] !== 1'bz) && CH0_TXDATA_delay[115]; // rv MustConnect
  assign CH0_TXDATA_in[116] = (CH0_TXDATA[116] !== 1'bz) && CH0_TXDATA_delay[116]; // rv MustConnect
  assign CH0_TXDATA_in[117] = (CH0_TXDATA[117] !== 1'bz) && CH0_TXDATA_delay[117]; // rv MustConnect
  assign CH0_TXDATA_in[118] = (CH0_TXDATA[118] !== 1'bz) && CH0_TXDATA_delay[118]; // rv MustConnect
  assign CH0_TXDATA_in[119] = (CH0_TXDATA[119] !== 1'bz) && CH0_TXDATA_delay[119]; // rv MustConnect
  assign CH0_TXDATA_in[11] = (CH0_TXDATA[11] !== 1'bz) && CH0_TXDATA_delay[11]; // rv MustConnect
  assign CH0_TXDATA_in[120] = (CH0_TXDATA[120] !== 1'bz) && CH0_TXDATA_delay[120]; // rv MustConnect
  assign CH0_TXDATA_in[121] = (CH0_TXDATA[121] !== 1'bz) && CH0_TXDATA_delay[121]; // rv MustConnect
  assign CH0_TXDATA_in[122] = (CH0_TXDATA[122] !== 1'bz) && CH0_TXDATA_delay[122]; // rv MustConnect
  assign CH0_TXDATA_in[123] = (CH0_TXDATA[123] !== 1'bz) && CH0_TXDATA_delay[123]; // rv MustConnect
  assign CH0_TXDATA_in[124] = (CH0_TXDATA[124] !== 1'bz) && CH0_TXDATA_delay[124]; // rv MustConnect
  assign CH0_TXDATA_in[125] = (CH0_TXDATA[125] !== 1'bz) && CH0_TXDATA_delay[125]; // rv MustConnect
  assign CH0_TXDATA_in[126] = (CH0_TXDATA[126] !== 1'bz) && CH0_TXDATA_delay[126]; // rv MustConnect
  assign CH0_TXDATA_in[127] = (CH0_TXDATA[127] !== 1'bz) && CH0_TXDATA_delay[127]; // rv MustConnect
  assign CH0_TXDATA_in[128] = (CH0_TXDATA[128] !== 1'bz) && CH0_TXDATA_delay[128]; // rv MustConnect
  assign CH0_TXDATA_in[129] = (CH0_TXDATA[129] !== 1'bz) && CH0_TXDATA_delay[129]; // rv MustConnect
  assign CH0_TXDATA_in[12] = (CH0_TXDATA[12] !== 1'bz) && CH0_TXDATA_delay[12]; // rv MustConnect
  assign CH0_TXDATA_in[130] = (CH0_TXDATA[130] !== 1'bz) && CH0_TXDATA_delay[130]; // rv MustConnect
  assign CH0_TXDATA_in[131] = (CH0_TXDATA[131] !== 1'bz) && CH0_TXDATA_delay[131]; // rv MustConnect
  assign CH0_TXDATA_in[132] = (CH0_TXDATA[132] !== 1'bz) && CH0_TXDATA_delay[132]; // rv MustConnect
  assign CH0_TXDATA_in[133] = (CH0_TXDATA[133] !== 1'bz) && CH0_TXDATA_delay[133]; // rv MustConnect
  assign CH0_TXDATA_in[134] = (CH0_TXDATA[134] !== 1'bz) && CH0_TXDATA_delay[134]; // rv MustConnect
  assign CH0_TXDATA_in[135] = (CH0_TXDATA[135] !== 1'bz) && CH0_TXDATA_delay[135]; // rv MustConnect
  assign CH0_TXDATA_in[136] = (CH0_TXDATA[136] !== 1'bz) && CH0_TXDATA_delay[136]; // rv MustConnect
  assign CH0_TXDATA_in[137] = (CH0_TXDATA[137] !== 1'bz) && CH0_TXDATA_delay[137]; // rv MustConnect
  assign CH0_TXDATA_in[138] = (CH0_TXDATA[138] !== 1'bz) && CH0_TXDATA_delay[138]; // rv MustConnect
  assign CH0_TXDATA_in[139] = (CH0_TXDATA[139] !== 1'bz) && CH0_TXDATA_delay[139]; // rv MustConnect
  assign CH0_TXDATA_in[13] = (CH0_TXDATA[13] !== 1'bz) && CH0_TXDATA_delay[13]; // rv MustConnect
  assign CH0_TXDATA_in[140] = (CH0_TXDATA[140] !== 1'bz) && CH0_TXDATA_delay[140]; // rv MustConnect
  assign CH0_TXDATA_in[141] = (CH0_TXDATA[141] !== 1'bz) && CH0_TXDATA_delay[141]; // rv MustConnect
  assign CH0_TXDATA_in[142] = (CH0_TXDATA[142] !== 1'bz) && CH0_TXDATA_delay[142]; // rv MustConnect
  assign CH0_TXDATA_in[143] = (CH0_TXDATA[143] !== 1'bz) && CH0_TXDATA_delay[143]; // rv MustConnect
  assign CH0_TXDATA_in[144] = (CH0_TXDATA[144] !== 1'bz) && CH0_TXDATA_delay[144]; // rv MustConnect
  assign CH0_TXDATA_in[145] = (CH0_TXDATA[145] !== 1'bz) && CH0_TXDATA_delay[145]; // rv MustConnect
  assign CH0_TXDATA_in[146] = (CH0_TXDATA[146] !== 1'bz) && CH0_TXDATA_delay[146]; // rv MustConnect
  assign CH0_TXDATA_in[147] = (CH0_TXDATA[147] !== 1'bz) && CH0_TXDATA_delay[147]; // rv MustConnect
  assign CH0_TXDATA_in[148] = (CH0_TXDATA[148] !== 1'bz) && CH0_TXDATA_delay[148]; // rv MustConnect
  assign CH0_TXDATA_in[149] = (CH0_TXDATA[149] !== 1'bz) && CH0_TXDATA_delay[149]; // rv MustConnect
  assign CH0_TXDATA_in[14] = (CH0_TXDATA[14] !== 1'bz) && CH0_TXDATA_delay[14]; // rv MustConnect
  assign CH0_TXDATA_in[150] = (CH0_TXDATA[150] !== 1'bz) && CH0_TXDATA_delay[150]; // rv MustConnect
  assign CH0_TXDATA_in[151] = (CH0_TXDATA[151] !== 1'bz) && CH0_TXDATA_delay[151]; // rv MustConnect
  assign CH0_TXDATA_in[152] = (CH0_TXDATA[152] !== 1'bz) && CH0_TXDATA_delay[152]; // rv MustConnect
  assign CH0_TXDATA_in[153] = (CH0_TXDATA[153] !== 1'bz) && CH0_TXDATA_delay[153]; // rv MustConnect
  assign CH0_TXDATA_in[154] = (CH0_TXDATA[154] !== 1'bz) && CH0_TXDATA_delay[154]; // rv MustConnect
  assign CH0_TXDATA_in[155] = (CH0_TXDATA[155] !== 1'bz) && CH0_TXDATA_delay[155]; // rv MustConnect
  assign CH0_TXDATA_in[156] = (CH0_TXDATA[156] !== 1'bz) && CH0_TXDATA_delay[156]; // rv MustConnect
  assign CH0_TXDATA_in[157] = (CH0_TXDATA[157] !== 1'bz) && CH0_TXDATA_delay[157]; // rv MustConnect
  assign CH0_TXDATA_in[158] = (CH0_TXDATA[158] !== 1'bz) && CH0_TXDATA_delay[158]; // rv MustConnect
  assign CH0_TXDATA_in[159] = (CH0_TXDATA[159] !== 1'bz) && CH0_TXDATA_delay[159]; // rv MustConnect
  assign CH0_TXDATA_in[15] = (CH0_TXDATA[15] !== 1'bz) && CH0_TXDATA_delay[15]; // rv MustConnect
  assign CH0_TXDATA_in[160] = (CH0_TXDATA[160] !== 1'bz) && CH0_TXDATA_delay[160]; // rv MustConnect
  assign CH0_TXDATA_in[161] = (CH0_TXDATA[161] !== 1'bz) && CH0_TXDATA_delay[161]; // rv MustConnect
  assign CH0_TXDATA_in[162] = (CH0_TXDATA[162] !== 1'bz) && CH0_TXDATA_delay[162]; // rv MustConnect
  assign CH0_TXDATA_in[163] = (CH0_TXDATA[163] !== 1'bz) && CH0_TXDATA_delay[163]; // rv MustConnect
  assign CH0_TXDATA_in[164] = (CH0_TXDATA[164] !== 1'bz) && CH0_TXDATA_delay[164]; // rv MustConnect
  assign CH0_TXDATA_in[165] = (CH0_TXDATA[165] !== 1'bz) && CH0_TXDATA_delay[165]; // rv MustConnect
  assign CH0_TXDATA_in[166] = (CH0_TXDATA[166] !== 1'bz) && CH0_TXDATA_delay[166]; // rv MustConnect
  assign CH0_TXDATA_in[167] = (CH0_TXDATA[167] !== 1'bz) && CH0_TXDATA_delay[167]; // rv MustConnect
  assign CH0_TXDATA_in[168] = (CH0_TXDATA[168] !== 1'bz) && CH0_TXDATA_delay[168]; // rv MustConnect
  assign CH0_TXDATA_in[169] = (CH0_TXDATA[169] !== 1'bz) && CH0_TXDATA_delay[169]; // rv MustConnect
  assign CH0_TXDATA_in[16] = (CH0_TXDATA[16] !== 1'bz) && CH0_TXDATA_delay[16]; // rv MustConnect
  assign CH0_TXDATA_in[170] = (CH0_TXDATA[170] !== 1'bz) && CH0_TXDATA_delay[170]; // rv MustConnect
  assign CH0_TXDATA_in[171] = (CH0_TXDATA[171] !== 1'bz) && CH0_TXDATA_delay[171]; // rv MustConnect
  assign CH0_TXDATA_in[172] = (CH0_TXDATA[172] !== 1'bz) && CH0_TXDATA_delay[172]; // rv MustConnect
  assign CH0_TXDATA_in[173] = (CH0_TXDATA[173] !== 1'bz) && CH0_TXDATA_delay[173]; // rv MustConnect
  assign CH0_TXDATA_in[174] = (CH0_TXDATA[174] !== 1'bz) && CH0_TXDATA_delay[174]; // rv MustConnect
  assign CH0_TXDATA_in[175] = (CH0_TXDATA[175] !== 1'bz) && CH0_TXDATA_delay[175]; // rv MustConnect
  assign CH0_TXDATA_in[176] = (CH0_TXDATA[176] !== 1'bz) && CH0_TXDATA_delay[176]; // rv MustConnect
  assign CH0_TXDATA_in[177] = (CH0_TXDATA[177] !== 1'bz) && CH0_TXDATA_delay[177]; // rv MustConnect
  assign CH0_TXDATA_in[178] = (CH0_TXDATA[178] !== 1'bz) && CH0_TXDATA_delay[178]; // rv MustConnect
  assign CH0_TXDATA_in[179] = (CH0_TXDATA[179] !== 1'bz) && CH0_TXDATA_delay[179]; // rv MustConnect
  assign CH0_TXDATA_in[17] = (CH0_TXDATA[17] !== 1'bz) && CH0_TXDATA_delay[17]; // rv MustConnect
  assign CH0_TXDATA_in[180] = (CH0_TXDATA[180] !== 1'bz) && CH0_TXDATA_delay[180]; // rv MustConnect
  assign CH0_TXDATA_in[181] = (CH0_TXDATA[181] !== 1'bz) && CH0_TXDATA_delay[181]; // rv MustConnect
  assign CH0_TXDATA_in[182] = (CH0_TXDATA[182] !== 1'bz) && CH0_TXDATA_delay[182]; // rv MustConnect
  assign CH0_TXDATA_in[183] = (CH0_TXDATA[183] !== 1'bz) && CH0_TXDATA_delay[183]; // rv MustConnect
  assign CH0_TXDATA_in[184] = (CH0_TXDATA[184] !== 1'bz) && CH0_TXDATA_delay[184]; // rv MustConnect
  assign CH0_TXDATA_in[185] = (CH0_TXDATA[185] !== 1'bz) && CH0_TXDATA_delay[185]; // rv MustConnect
  assign CH0_TXDATA_in[186] = (CH0_TXDATA[186] !== 1'bz) && CH0_TXDATA_delay[186]; // rv MustConnect
  assign CH0_TXDATA_in[187] = (CH0_TXDATA[187] !== 1'bz) && CH0_TXDATA_delay[187]; // rv MustConnect
  assign CH0_TXDATA_in[188] = (CH0_TXDATA[188] !== 1'bz) && CH0_TXDATA_delay[188]; // rv MustConnect
  assign CH0_TXDATA_in[189] = (CH0_TXDATA[189] !== 1'bz) && CH0_TXDATA_delay[189]; // rv MustConnect
  assign CH0_TXDATA_in[18] = (CH0_TXDATA[18] !== 1'bz) && CH0_TXDATA_delay[18]; // rv MustConnect
  assign CH0_TXDATA_in[190] = (CH0_TXDATA[190] !== 1'bz) && CH0_TXDATA_delay[190]; // rv MustConnect
  assign CH0_TXDATA_in[191] = (CH0_TXDATA[191] !== 1'bz) && CH0_TXDATA_delay[191]; // rv MustConnect
  assign CH0_TXDATA_in[192] = (CH0_TXDATA[192] !== 1'bz) && CH0_TXDATA_delay[192]; // rv MustConnect
  assign CH0_TXDATA_in[193] = (CH0_TXDATA[193] !== 1'bz) && CH0_TXDATA_delay[193]; // rv MustConnect
  assign CH0_TXDATA_in[194] = (CH0_TXDATA[194] !== 1'bz) && CH0_TXDATA_delay[194]; // rv MustConnect
  assign CH0_TXDATA_in[195] = (CH0_TXDATA[195] !== 1'bz) && CH0_TXDATA_delay[195]; // rv MustConnect
  assign CH0_TXDATA_in[196] = (CH0_TXDATA[196] !== 1'bz) && CH0_TXDATA_delay[196]; // rv MustConnect
  assign CH0_TXDATA_in[197] = (CH0_TXDATA[197] !== 1'bz) && CH0_TXDATA_delay[197]; // rv MustConnect
  assign CH0_TXDATA_in[198] = (CH0_TXDATA[198] !== 1'bz) && CH0_TXDATA_delay[198]; // rv MustConnect
  assign CH0_TXDATA_in[199] = (CH0_TXDATA[199] !== 1'bz) && CH0_TXDATA_delay[199]; // rv MustConnect
  assign CH0_TXDATA_in[19] = (CH0_TXDATA[19] !== 1'bz) && CH0_TXDATA_delay[19]; // rv MustConnect
  assign CH0_TXDATA_in[1] = (CH0_TXDATA[1] !== 1'bz) && CH0_TXDATA_delay[1]; // rv MustConnect
  assign CH0_TXDATA_in[200] = (CH0_TXDATA[200] !== 1'bz) && CH0_TXDATA_delay[200]; // rv MustConnect
  assign CH0_TXDATA_in[201] = (CH0_TXDATA[201] !== 1'bz) && CH0_TXDATA_delay[201]; // rv MustConnect
  assign CH0_TXDATA_in[202] = (CH0_TXDATA[202] !== 1'bz) && CH0_TXDATA_delay[202]; // rv MustConnect
  assign CH0_TXDATA_in[203] = (CH0_TXDATA[203] !== 1'bz) && CH0_TXDATA_delay[203]; // rv MustConnect
  assign CH0_TXDATA_in[204] = (CH0_TXDATA[204] !== 1'bz) && CH0_TXDATA_delay[204]; // rv MustConnect
  assign CH0_TXDATA_in[205] = (CH0_TXDATA[205] !== 1'bz) && CH0_TXDATA_delay[205]; // rv MustConnect
  assign CH0_TXDATA_in[206] = (CH0_TXDATA[206] !== 1'bz) && CH0_TXDATA_delay[206]; // rv MustConnect
  assign CH0_TXDATA_in[207] = (CH0_TXDATA[207] !== 1'bz) && CH0_TXDATA_delay[207]; // rv MustConnect
  assign CH0_TXDATA_in[208] = (CH0_TXDATA[208] !== 1'bz) && CH0_TXDATA_delay[208]; // rv MustConnect
  assign CH0_TXDATA_in[209] = (CH0_TXDATA[209] !== 1'bz) && CH0_TXDATA_delay[209]; // rv MustConnect
  assign CH0_TXDATA_in[20] = (CH0_TXDATA[20] !== 1'bz) && CH0_TXDATA_delay[20]; // rv MustConnect
  assign CH0_TXDATA_in[210] = (CH0_TXDATA[210] !== 1'bz) && CH0_TXDATA_delay[210]; // rv MustConnect
  assign CH0_TXDATA_in[211] = (CH0_TXDATA[211] !== 1'bz) && CH0_TXDATA_delay[211]; // rv MustConnect
  assign CH0_TXDATA_in[212] = (CH0_TXDATA[212] !== 1'bz) && CH0_TXDATA_delay[212]; // rv MustConnect
  assign CH0_TXDATA_in[213] = (CH0_TXDATA[213] !== 1'bz) && CH0_TXDATA_delay[213]; // rv MustConnect
  assign CH0_TXDATA_in[214] = (CH0_TXDATA[214] !== 1'bz) && CH0_TXDATA_delay[214]; // rv MustConnect
  assign CH0_TXDATA_in[215] = (CH0_TXDATA[215] !== 1'bz) && CH0_TXDATA_delay[215]; // rv MustConnect
  assign CH0_TXDATA_in[216] = (CH0_TXDATA[216] !== 1'bz) && CH0_TXDATA_delay[216]; // rv MustConnect
  assign CH0_TXDATA_in[217] = (CH0_TXDATA[217] !== 1'bz) && CH0_TXDATA_delay[217]; // rv MustConnect
  assign CH0_TXDATA_in[218] = (CH0_TXDATA[218] !== 1'bz) && CH0_TXDATA_delay[218]; // rv MustConnect
  assign CH0_TXDATA_in[219] = (CH0_TXDATA[219] !== 1'bz) && CH0_TXDATA_delay[219]; // rv MustConnect
  assign CH0_TXDATA_in[21] = (CH0_TXDATA[21] !== 1'bz) && CH0_TXDATA_delay[21]; // rv MustConnect
  assign CH0_TXDATA_in[220] = (CH0_TXDATA[220] !== 1'bz) && CH0_TXDATA_delay[220]; // rv MustConnect
  assign CH0_TXDATA_in[221] = (CH0_TXDATA[221] !== 1'bz) && CH0_TXDATA_delay[221]; // rv MustConnect
  assign CH0_TXDATA_in[222] = (CH0_TXDATA[222] !== 1'bz) && CH0_TXDATA_delay[222]; // rv MustConnect
  assign CH0_TXDATA_in[223] = (CH0_TXDATA[223] !== 1'bz) && CH0_TXDATA_delay[223]; // rv MustConnect
  assign CH0_TXDATA_in[224] = (CH0_TXDATA[224] !== 1'bz) && CH0_TXDATA_delay[224]; // rv MustConnect
  assign CH0_TXDATA_in[225] = (CH0_TXDATA[225] !== 1'bz) && CH0_TXDATA_delay[225]; // rv MustConnect
  assign CH0_TXDATA_in[226] = (CH0_TXDATA[226] !== 1'bz) && CH0_TXDATA_delay[226]; // rv MustConnect
  assign CH0_TXDATA_in[227] = (CH0_TXDATA[227] !== 1'bz) && CH0_TXDATA_delay[227]; // rv MustConnect
  assign CH0_TXDATA_in[228] = (CH0_TXDATA[228] !== 1'bz) && CH0_TXDATA_delay[228]; // rv MustConnect
  assign CH0_TXDATA_in[229] = (CH0_TXDATA[229] !== 1'bz) && CH0_TXDATA_delay[229]; // rv MustConnect
  assign CH0_TXDATA_in[22] = (CH0_TXDATA[22] !== 1'bz) && CH0_TXDATA_delay[22]; // rv MustConnect
  assign CH0_TXDATA_in[230] = (CH0_TXDATA[230] !== 1'bz) && CH0_TXDATA_delay[230]; // rv MustConnect
  assign CH0_TXDATA_in[231] = (CH0_TXDATA[231] !== 1'bz) && CH0_TXDATA_delay[231]; // rv MustConnect
  assign CH0_TXDATA_in[232] = (CH0_TXDATA[232] !== 1'bz) && CH0_TXDATA_delay[232]; // rv MustConnect
  assign CH0_TXDATA_in[233] = (CH0_TXDATA[233] !== 1'bz) && CH0_TXDATA_delay[233]; // rv MustConnect
  assign CH0_TXDATA_in[234] = (CH0_TXDATA[234] !== 1'bz) && CH0_TXDATA_delay[234]; // rv MustConnect
  assign CH0_TXDATA_in[235] = (CH0_TXDATA[235] !== 1'bz) && CH0_TXDATA_delay[235]; // rv MustConnect
  assign CH0_TXDATA_in[236] = (CH0_TXDATA[236] !== 1'bz) && CH0_TXDATA_delay[236]; // rv MustConnect
  assign CH0_TXDATA_in[237] = (CH0_TXDATA[237] !== 1'bz) && CH0_TXDATA_delay[237]; // rv MustConnect
  assign CH0_TXDATA_in[238] = (CH0_TXDATA[238] !== 1'bz) && CH0_TXDATA_delay[238]; // rv MustConnect
  assign CH0_TXDATA_in[239] = (CH0_TXDATA[239] !== 1'bz) && CH0_TXDATA_delay[239]; // rv MustConnect
  assign CH0_TXDATA_in[23] = (CH0_TXDATA[23] !== 1'bz) && CH0_TXDATA_delay[23]; // rv MustConnect
  assign CH0_TXDATA_in[240] = (CH0_TXDATA[240] !== 1'bz) && CH0_TXDATA_delay[240]; // rv MustConnect
  assign CH0_TXDATA_in[241] = (CH0_TXDATA[241] !== 1'bz) && CH0_TXDATA_delay[241]; // rv MustConnect
  assign CH0_TXDATA_in[242] = (CH0_TXDATA[242] !== 1'bz) && CH0_TXDATA_delay[242]; // rv MustConnect
  assign CH0_TXDATA_in[243] = (CH0_TXDATA[243] !== 1'bz) && CH0_TXDATA_delay[243]; // rv MustConnect
  assign CH0_TXDATA_in[244] = (CH0_TXDATA[244] !== 1'bz) && CH0_TXDATA_delay[244]; // rv MustConnect
  assign CH0_TXDATA_in[245] = (CH0_TXDATA[245] !== 1'bz) && CH0_TXDATA_delay[245]; // rv MustConnect
  assign CH0_TXDATA_in[246] = (CH0_TXDATA[246] !== 1'bz) && CH0_TXDATA_delay[246]; // rv MustConnect
  assign CH0_TXDATA_in[247] = (CH0_TXDATA[247] !== 1'bz) && CH0_TXDATA_delay[247]; // rv MustConnect
  assign CH0_TXDATA_in[248] = (CH0_TXDATA[248] !== 1'bz) && CH0_TXDATA_delay[248]; // rv MustConnect
  assign CH0_TXDATA_in[249] = (CH0_TXDATA[249] !== 1'bz) && CH0_TXDATA_delay[249]; // rv MustConnect
  assign CH0_TXDATA_in[24] = (CH0_TXDATA[24] !== 1'bz) && CH0_TXDATA_delay[24]; // rv MustConnect
  assign CH0_TXDATA_in[250] = (CH0_TXDATA[250] !== 1'bz) && CH0_TXDATA_delay[250]; // rv MustConnect
  assign CH0_TXDATA_in[251] = (CH0_TXDATA[251] !== 1'bz) && CH0_TXDATA_delay[251]; // rv MustConnect
  assign CH0_TXDATA_in[252] = (CH0_TXDATA[252] !== 1'bz) && CH0_TXDATA_delay[252]; // rv MustConnect
  assign CH0_TXDATA_in[253] = (CH0_TXDATA[253] !== 1'bz) && CH0_TXDATA_delay[253]; // rv MustConnect
  assign CH0_TXDATA_in[254] = (CH0_TXDATA[254] !== 1'bz) && CH0_TXDATA_delay[254]; // rv MustConnect
  assign CH0_TXDATA_in[255] = (CH0_TXDATA[255] !== 1'bz) && CH0_TXDATA_delay[255]; // rv MustConnect
  assign CH0_TXDATA_in[25] = (CH0_TXDATA[25] !== 1'bz) && CH0_TXDATA_delay[25]; // rv MustConnect
  assign CH0_TXDATA_in[26] = (CH0_TXDATA[26] !== 1'bz) && CH0_TXDATA_delay[26]; // rv MustConnect
  assign CH0_TXDATA_in[27] = (CH0_TXDATA[27] !== 1'bz) && CH0_TXDATA_delay[27]; // rv MustConnect
  assign CH0_TXDATA_in[28] = (CH0_TXDATA[28] !== 1'bz) && CH0_TXDATA_delay[28]; // rv MustConnect
  assign CH0_TXDATA_in[29] = (CH0_TXDATA[29] !== 1'bz) && CH0_TXDATA_delay[29]; // rv MustConnect
  assign CH0_TXDATA_in[2] = (CH0_TXDATA[2] !== 1'bz) && CH0_TXDATA_delay[2]; // rv MustConnect
  assign CH0_TXDATA_in[30] = (CH0_TXDATA[30] !== 1'bz) && CH0_TXDATA_delay[30]; // rv MustConnect
  assign CH0_TXDATA_in[31] = (CH0_TXDATA[31] !== 1'bz) && CH0_TXDATA_delay[31]; // rv MustConnect
  assign CH0_TXDATA_in[32] = (CH0_TXDATA[32] !== 1'bz) && CH0_TXDATA_delay[32]; // rv MustConnect
  assign CH0_TXDATA_in[33] = (CH0_TXDATA[33] !== 1'bz) && CH0_TXDATA_delay[33]; // rv MustConnect
  assign CH0_TXDATA_in[34] = (CH0_TXDATA[34] !== 1'bz) && CH0_TXDATA_delay[34]; // rv MustConnect
  assign CH0_TXDATA_in[35] = (CH0_TXDATA[35] !== 1'bz) && CH0_TXDATA_delay[35]; // rv MustConnect
  assign CH0_TXDATA_in[36] = (CH0_TXDATA[36] !== 1'bz) && CH0_TXDATA_delay[36]; // rv MustConnect
  assign CH0_TXDATA_in[37] = (CH0_TXDATA[37] !== 1'bz) && CH0_TXDATA_delay[37]; // rv MustConnect
  assign CH0_TXDATA_in[38] = (CH0_TXDATA[38] !== 1'bz) && CH0_TXDATA_delay[38]; // rv MustConnect
  assign CH0_TXDATA_in[39] = (CH0_TXDATA[39] !== 1'bz) && CH0_TXDATA_delay[39]; // rv MustConnect
  assign CH0_TXDATA_in[3] = (CH0_TXDATA[3] !== 1'bz) && CH0_TXDATA_delay[3]; // rv MustConnect
  assign CH0_TXDATA_in[40] = (CH0_TXDATA[40] !== 1'bz) && CH0_TXDATA_delay[40]; // rv MustConnect
  assign CH0_TXDATA_in[41] = (CH0_TXDATA[41] !== 1'bz) && CH0_TXDATA_delay[41]; // rv MustConnect
  assign CH0_TXDATA_in[42] = (CH0_TXDATA[42] !== 1'bz) && CH0_TXDATA_delay[42]; // rv MustConnect
  assign CH0_TXDATA_in[43] = (CH0_TXDATA[43] !== 1'bz) && CH0_TXDATA_delay[43]; // rv MustConnect
  assign CH0_TXDATA_in[44] = (CH0_TXDATA[44] !== 1'bz) && CH0_TXDATA_delay[44]; // rv MustConnect
  assign CH0_TXDATA_in[45] = (CH0_TXDATA[45] !== 1'bz) && CH0_TXDATA_delay[45]; // rv MustConnect
  assign CH0_TXDATA_in[46] = (CH0_TXDATA[46] !== 1'bz) && CH0_TXDATA_delay[46]; // rv MustConnect
  assign CH0_TXDATA_in[47] = (CH0_TXDATA[47] !== 1'bz) && CH0_TXDATA_delay[47]; // rv MustConnect
  assign CH0_TXDATA_in[48] = (CH0_TXDATA[48] !== 1'bz) && CH0_TXDATA_delay[48]; // rv MustConnect
  assign CH0_TXDATA_in[49] = (CH0_TXDATA[49] !== 1'bz) && CH0_TXDATA_delay[49]; // rv MustConnect
  assign CH0_TXDATA_in[4] = (CH0_TXDATA[4] !== 1'bz) && CH0_TXDATA_delay[4]; // rv MustConnect
  assign CH0_TXDATA_in[50] = (CH0_TXDATA[50] !== 1'bz) && CH0_TXDATA_delay[50]; // rv MustConnect
  assign CH0_TXDATA_in[51] = (CH0_TXDATA[51] !== 1'bz) && CH0_TXDATA_delay[51]; // rv MustConnect
  assign CH0_TXDATA_in[52] = (CH0_TXDATA[52] !== 1'bz) && CH0_TXDATA_delay[52]; // rv MustConnect
  assign CH0_TXDATA_in[53] = (CH0_TXDATA[53] !== 1'bz) && CH0_TXDATA_delay[53]; // rv MustConnect
  assign CH0_TXDATA_in[54] = (CH0_TXDATA[54] !== 1'bz) && CH0_TXDATA_delay[54]; // rv MustConnect
  assign CH0_TXDATA_in[55] = (CH0_TXDATA[55] !== 1'bz) && CH0_TXDATA_delay[55]; // rv MustConnect
  assign CH0_TXDATA_in[56] = (CH0_TXDATA[56] !== 1'bz) && CH0_TXDATA_delay[56]; // rv MustConnect
  assign CH0_TXDATA_in[57] = (CH0_TXDATA[57] !== 1'bz) && CH0_TXDATA_delay[57]; // rv MustConnect
  assign CH0_TXDATA_in[58] = (CH0_TXDATA[58] !== 1'bz) && CH0_TXDATA_delay[58]; // rv MustConnect
  assign CH0_TXDATA_in[59] = (CH0_TXDATA[59] !== 1'bz) && CH0_TXDATA_delay[59]; // rv MustConnect
  assign CH0_TXDATA_in[5] = (CH0_TXDATA[5] !== 1'bz) && CH0_TXDATA_delay[5]; // rv MustConnect
  assign CH0_TXDATA_in[60] = (CH0_TXDATA[60] !== 1'bz) && CH0_TXDATA_delay[60]; // rv MustConnect
  assign CH0_TXDATA_in[61] = (CH0_TXDATA[61] !== 1'bz) && CH0_TXDATA_delay[61]; // rv MustConnect
  assign CH0_TXDATA_in[62] = (CH0_TXDATA[62] !== 1'bz) && CH0_TXDATA_delay[62]; // rv MustConnect
  assign CH0_TXDATA_in[63] = (CH0_TXDATA[63] !== 1'bz) && CH0_TXDATA_delay[63]; // rv MustConnect
  assign CH0_TXDATA_in[64] = (CH0_TXDATA[64] !== 1'bz) && CH0_TXDATA_delay[64]; // rv MustConnect
  assign CH0_TXDATA_in[65] = (CH0_TXDATA[65] !== 1'bz) && CH0_TXDATA_delay[65]; // rv MustConnect
  assign CH0_TXDATA_in[66] = (CH0_TXDATA[66] !== 1'bz) && CH0_TXDATA_delay[66]; // rv MustConnect
  assign CH0_TXDATA_in[67] = (CH0_TXDATA[67] !== 1'bz) && CH0_TXDATA_delay[67]; // rv MustConnect
  assign CH0_TXDATA_in[68] = (CH0_TXDATA[68] !== 1'bz) && CH0_TXDATA_delay[68]; // rv MustConnect
  assign CH0_TXDATA_in[69] = (CH0_TXDATA[69] !== 1'bz) && CH0_TXDATA_delay[69]; // rv MustConnect
  assign CH0_TXDATA_in[6] = (CH0_TXDATA[6] !== 1'bz) && CH0_TXDATA_delay[6]; // rv MustConnect
  assign CH0_TXDATA_in[70] = (CH0_TXDATA[70] !== 1'bz) && CH0_TXDATA_delay[70]; // rv MustConnect
  assign CH0_TXDATA_in[71] = (CH0_TXDATA[71] !== 1'bz) && CH0_TXDATA_delay[71]; // rv MustConnect
  assign CH0_TXDATA_in[72] = (CH0_TXDATA[72] !== 1'bz) && CH0_TXDATA_delay[72]; // rv MustConnect
  assign CH0_TXDATA_in[73] = (CH0_TXDATA[73] !== 1'bz) && CH0_TXDATA_delay[73]; // rv MustConnect
  assign CH0_TXDATA_in[74] = (CH0_TXDATA[74] !== 1'bz) && CH0_TXDATA_delay[74]; // rv MustConnect
  assign CH0_TXDATA_in[75] = (CH0_TXDATA[75] !== 1'bz) && CH0_TXDATA_delay[75]; // rv MustConnect
  assign CH0_TXDATA_in[76] = (CH0_TXDATA[76] !== 1'bz) && CH0_TXDATA_delay[76]; // rv MustConnect
  assign CH0_TXDATA_in[77] = (CH0_TXDATA[77] !== 1'bz) && CH0_TXDATA_delay[77]; // rv MustConnect
  assign CH0_TXDATA_in[78] = (CH0_TXDATA[78] !== 1'bz) && CH0_TXDATA_delay[78]; // rv MustConnect
  assign CH0_TXDATA_in[79] = (CH0_TXDATA[79] !== 1'bz) && CH0_TXDATA_delay[79]; // rv MustConnect
  assign CH0_TXDATA_in[7] = (CH0_TXDATA[7] !== 1'bz) && CH0_TXDATA_delay[7]; // rv MustConnect
  assign CH0_TXDATA_in[80] = (CH0_TXDATA[80] !== 1'bz) && CH0_TXDATA_delay[80]; // rv MustConnect
  assign CH0_TXDATA_in[81] = (CH0_TXDATA[81] !== 1'bz) && CH0_TXDATA_delay[81]; // rv MustConnect
  assign CH0_TXDATA_in[82] = (CH0_TXDATA[82] !== 1'bz) && CH0_TXDATA_delay[82]; // rv MustConnect
  assign CH0_TXDATA_in[83] = (CH0_TXDATA[83] !== 1'bz) && CH0_TXDATA_delay[83]; // rv MustConnect
  assign CH0_TXDATA_in[84] = (CH0_TXDATA[84] !== 1'bz) && CH0_TXDATA_delay[84]; // rv MustConnect
  assign CH0_TXDATA_in[85] = (CH0_TXDATA[85] !== 1'bz) && CH0_TXDATA_delay[85]; // rv MustConnect
  assign CH0_TXDATA_in[86] = (CH0_TXDATA[86] !== 1'bz) && CH0_TXDATA_delay[86]; // rv MustConnect
  assign CH0_TXDATA_in[87] = (CH0_TXDATA[87] !== 1'bz) && CH0_TXDATA_delay[87]; // rv MustConnect
  assign CH0_TXDATA_in[88] = (CH0_TXDATA[88] !== 1'bz) && CH0_TXDATA_delay[88]; // rv MustConnect
  assign CH0_TXDATA_in[89] = (CH0_TXDATA[89] !== 1'bz) && CH0_TXDATA_delay[89]; // rv MustConnect
  assign CH0_TXDATA_in[8] = (CH0_TXDATA[8] !== 1'bz) && CH0_TXDATA_delay[8]; // rv MustConnect
  assign CH0_TXDATA_in[90] = (CH0_TXDATA[90] !== 1'bz) && CH0_TXDATA_delay[90]; // rv MustConnect
  assign CH0_TXDATA_in[91] = (CH0_TXDATA[91] !== 1'bz) && CH0_TXDATA_delay[91]; // rv MustConnect
  assign CH0_TXDATA_in[92] = (CH0_TXDATA[92] !== 1'bz) && CH0_TXDATA_delay[92]; // rv MustConnect
  assign CH0_TXDATA_in[93] = (CH0_TXDATA[93] !== 1'bz) && CH0_TXDATA_delay[93]; // rv MustConnect
  assign CH0_TXDATA_in[94] = (CH0_TXDATA[94] !== 1'bz) && CH0_TXDATA_delay[94]; // rv MustConnect
  assign CH0_TXDATA_in[95] = (CH0_TXDATA[95] !== 1'bz) && CH0_TXDATA_delay[95]; // rv MustConnect
  assign CH0_TXDATA_in[96] = (CH0_TXDATA[96] !== 1'bz) && CH0_TXDATA_delay[96]; // rv MustConnect
  assign CH0_TXDATA_in[97] = (CH0_TXDATA[97] !== 1'bz) && CH0_TXDATA_delay[97]; // rv MustConnect
  assign CH0_TXDATA_in[98] = (CH0_TXDATA[98] !== 1'bz) && CH0_TXDATA_delay[98]; // rv MustConnect
  assign CH0_TXDATA_in[99] = (CH0_TXDATA[99] !== 1'bz) && CH0_TXDATA_delay[99]; // rv MustConnect
  assign CH0_TXDATA_in[9] = (CH0_TXDATA[9] !== 1'bz) && CH0_TXDATA_delay[9]; // rv MustConnect
  assign CH0_TXUSRCLK_in = (CH0_TXUSRCLK === 1'bz) || CH0_TXUSRCLK_delay; // rv 1
  assign CH1_DMONFIFORESET_in = (CH1_DMONFIFORESET === 1'bz) || CH1_DMONFIFORESET_delay; // rv 1
  assign CH1_DMONITORCLK_in = (CH1_DMONITORCLK === 1'bz) || CH1_DMONITORCLK_delay; // rv 1
  assign CH1_EYESCANTRIGGER_in = (CH1_EYESCANTRIGGER === 1'bz) || CH1_EYESCANTRIGGER_delay; // rv 1
  assign CH1_LOOPBACK_in[0] = (CH1_LOOPBACK[0] !== 1'bz) && CH1_LOOPBACK_delay[0]; // rv MustConnect
  assign CH1_LOOPBACK_in[1] = (CH1_LOOPBACK[1] !== 1'bz) && CH1_LOOPBACK_delay[1]; // rv MustConnect
  assign CH1_LOOPBACK_in[2] = (CH1_LOOPBACK[2] !== 1'bz) && CH1_LOOPBACK_delay[2]; // rv MustConnect
  assign CH1_RXLATCLK_in = (CH1_RXLATCLK === 1'bz) || CH1_RXLATCLK_delay; // rv 1
  assign CH1_RXUSRCLK_in = (CH1_RXUSRCLK === 1'bz) || CH1_RXUSRCLK_delay; // rv 1
  assign CH1_TXDATA_in[0] = (CH1_TXDATA[0] !== 1'bz) && CH1_TXDATA_delay[0]; // rv MustConnect
  assign CH1_TXDATA_in[100] = (CH1_TXDATA[100] !== 1'bz) && CH1_TXDATA_delay[100]; // rv MustConnect
  assign CH1_TXDATA_in[101] = (CH1_TXDATA[101] !== 1'bz) && CH1_TXDATA_delay[101]; // rv MustConnect
  assign CH1_TXDATA_in[102] = (CH1_TXDATA[102] !== 1'bz) && CH1_TXDATA_delay[102]; // rv MustConnect
  assign CH1_TXDATA_in[103] = (CH1_TXDATA[103] !== 1'bz) && CH1_TXDATA_delay[103]; // rv MustConnect
  assign CH1_TXDATA_in[104] = (CH1_TXDATA[104] !== 1'bz) && CH1_TXDATA_delay[104]; // rv MustConnect
  assign CH1_TXDATA_in[105] = (CH1_TXDATA[105] !== 1'bz) && CH1_TXDATA_delay[105]; // rv MustConnect
  assign CH1_TXDATA_in[106] = (CH1_TXDATA[106] !== 1'bz) && CH1_TXDATA_delay[106]; // rv MustConnect
  assign CH1_TXDATA_in[107] = (CH1_TXDATA[107] !== 1'bz) && CH1_TXDATA_delay[107]; // rv MustConnect
  assign CH1_TXDATA_in[108] = (CH1_TXDATA[108] !== 1'bz) && CH1_TXDATA_delay[108]; // rv MustConnect
  assign CH1_TXDATA_in[109] = (CH1_TXDATA[109] !== 1'bz) && CH1_TXDATA_delay[109]; // rv MustConnect
  assign CH1_TXDATA_in[10] = (CH1_TXDATA[10] !== 1'bz) && CH1_TXDATA_delay[10]; // rv MustConnect
  assign CH1_TXDATA_in[110] = (CH1_TXDATA[110] !== 1'bz) && CH1_TXDATA_delay[110]; // rv MustConnect
  assign CH1_TXDATA_in[111] = (CH1_TXDATA[111] !== 1'bz) && CH1_TXDATA_delay[111]; // rv MustConnect
  assign CH1_TXDATA_in[112] = (CH1_TXDATA[112] !== 1'bz) && CH1_TXDATA_delay[112]; // rv MustConnect
  assign CH1_TXDATA_in[113] = (CH1_TXDATA[113] !== 1'bz) && CH1_TXDATA_delay[113]; // rv MustConnect
  assign CH1_TXDATA_in[114] = (CH1_TXDATA[114] !== 1'bz) && CH1_TXDATA_delay[114]; // rv MustConnect
  assign CH1_TXDATA_in[115] = (CH1_TXDATA[115] !== 1'bz) && CH1_TXDATA_delay[115]; // rv MustConnect
  assign CH1_TXDATA_in[116] = (CH1_TXDATA[116] !== 1'bz) && CH1_TXDATA_delay[116]; // rv MustConnect
  assign CH1_TXDATA_in[117] = (CH1_TXDATA[117] !== 1'bz) && CH1_TXDATA_delay[117]; // rv MustConnect
  assign CH1_TXDATA_in[118] = (CH1_TXDATA[118] !== 1'bz) && CH1_TXDATA_delay[118]; // rv MustConnect
  assign CH1_TXDATA_in[119] = (CH1_TXDATA[119] !== 1'bz) && CH1_TXDATA_delay[119]; // rv MustConnect
  assign CH1_TXDATA_in[11] = (CH1_TXDATA[11] !== 1'bz) && CH1_TXDATA_delay[11]; // rv MustConnect
  assign CH1_TXDATA_in[120] = (CH1_TXDATA[120] !== 1'bz) && CH1_TXDATA_delay[120]; // rv MustConnect
  assign CH1_TXDATA_in[121] = (CH1_TXDATA[121] !== 1'bz) && CH1_TXDATA_delay[121]; // rv MustConnect
  assign CH1_TXDATA_in[122] = (CH1_TXDATA[122] !== 1'bz) && CH1_TXDATA_delay[122]; // rv MustConnect
  assign CH1_TXDATA_in[123] = (CH1_TXDATA[123] !== 1'bz) && CH1_TXDATA_delay[123]; // rv MustConnect
  assign CH1_TXDATA_in[124] = (CH1_TXDATA[124] !== 1'bz) && CH1_TXDATA_delay[124]; // rv MustConnect
  assign CH1_TXDATA_in[125] = (CH1_TXDATA[125] !== 1'bz) && CH1_TXDATA_delay[125]; // rv MustConnect
  assign CH1_TXDATA_in[126] = (CH1_TXDATA[126] !== 1'bz) && CH1_TXDATA_delay[126]; // rv MustConnect
  assign CH1_TXDATA_in[127] = (CH1_TXDATA[127] !== 1'bz) && CH1_TXDATA_delay[127]; // rv MustConnect
  assign CH1_TXDATA_in[128] = (CH1_TXDATA[128] !== 1'bz) && CH1_TXDATA_delay[128]; // rv MustConnect
  assign CH1_TXDATA_in[129] = (CH1_TXDATA[129] !== 1'bz) && CH1_TXDATA_delay[129]; // rv MustConnect
  assign CH1_TXDATA_in[12] = (CH1_TXDATA[12] !== 1'bz) && CH1_TXDATA_delay[12]; // rv MustConnect
  assign CH1_TXDATA_in[130] = (CH1_TXDATA[130] !== 1'bz) && CH1_TXDATA_delay[130]; // rv MustConnect
  assign CH1_TXDATA_in[131] = (CH1_TXDATA[131] !== 1'bz) && CH1_TXDATA_delay[131]; // rv MustConnect
  assign CH1_TXDATA_in[132] = (CH1_TXDATA[132] !== 1'bz) && CH1_TXDATA_delay[132]; // rv MustConnect
  assign CH1_TXDATA_in[133] = (CH1_TXDATA[133] !== 1'bz) && CH1_TXDATA_delay[133]; // rv MustConnect
  assign CH1_TXDATA_in[134] = (CH1_TXDATA[134] !== 1'bz) && CH1_TXDATA_delay[134]; // rv MustConnect
  assign CH1_TXDATA_in[135] = (CH1_TXDATA[135] !== 1'bz) && CH1_TXDATA_delay[135]; // rv MustConnect
  assign CH1_TXDATA_in[136] = (CH1_TXDATA[136] !== 1'bz) && CH1_TXDATA_delay[136]; // rv MustConnect
  assign CH1_TXDATA_in[137] = (CH1_TXDATA[137] !== 1'bz) && CH1_TXDATA_delay[137]; // rv MustConnect
  assign CH1_TXDATA_in[138] = (CH1_TXDATA[138] !== 1'bz) && CH1_TXDATA_delay[138]; // rv MustConnect
  assign CH1_TXDATA_in[139] = (CH1_TXDATA[139] !== 1'bz) && CH1_TXDATA_delay[139]; // rv MustConnect
  assign CH1_TXDATA_in[13] = (CH1_TXDATA[13] !== 1'bz) && CH1_TXDATA_delay[13]; // rv MustConnect
  assign CH1_TXDATA_in[140] = (CH1_TXDATA[140] !== 1'bz) && CH1_TXDATA_delay[140]; // rv MustConnect
  assign CH1_TXDATA_in[141] = (CH1_TXDATA[141] !== 1'bz) && CH1_TXDATA_delay[141]; // rv MustConnect
  assign CH1_TXDATA_in[142] = (CH1_TXDATA[142] !== 1'bz) && CH1_TXDATA_delay[142]; // rv MustConnect
  assign CH1_TXDATA_in[143] = (CH1_TXDATA[143] !== 1'bz) && CH1_TXDATA_delay[143]; // rv MustConnect
  assign CH1_TXDATA_in[144] = (CH1_TXDATA[144] !== 1'bz) && CH1_TXDATA_delay[144]; // rv MustConnect
  assign CH1_TXDATA_in[145] = (CH1_TXDATA[145] !== 1'bz) && CH1_TXDATA_delay[145]; // rv MustConnect
  assign CH1_TXDATA_in[146] = (CH1_TXDATA[146] !== 1'bz) && CH1_TXDATA_delay[146]; // rv MustConnect
  assign CH1_TXDATA_in[147] = (CH1_TXDATA[147] !== 1'bz) && CH1_TXDATA_delay[147]; // rv MustConnect
  assign CH1_TXDATA_in[148] = (CH1_TXDATA[148] !== 1'bz) && CH1_TXDATA_delay[148]; // rv MustConnect
  assign CH1_TXDATA_in[149] = (CH1_TXDATA[149] !== 1'bz) && CH1_TXDATA_delay[149]; // rv MustConnect
  assign CH1_TXDATA_in[14] = (CH1_TXDATA[14] !== 1'bz) && CH1_TXDATA_delay[14]; // rv MustConnect
  assign CH1_TXDATA_in[150] = (CH1_TXDATA[150] !== 1'bz) && CH1_TXDATA_delay[150]; // rv MustConnect
  assign CH1_TXDATA_in[151] = (CH1_TXDATA[151] !== 1'bz) && CH1_TXDATA_delay[151]; // rv MustConnect
  assign CH1_TXDATA_in[152] = (CH1_TXDATA[152] !== 1'bz) && CH1_TXDATA_delay[152]; // rv MustConnect
  assign CH1_TXDATA_in[153] = (CH1_TXDATA[153] !== 1'bz) && CH1_TXDATA_delay[153]; // rv MustConnect
  assign CH1_TXDATA_in[154] = (CH1_TXDATA[154] !== 1'bz) && CH1_TXDATA_delay[154]; // rv MustConnect
  assign CH1_TXDATA_in[155] = (CH1_TXDATA[155] !== 1'bz) && CH1_TXDATA_delay[155]; // rv MustConnect
  assign CH1_TXDATA_in[156] = (CH1_TXDATA[156] !== 1'bz) && CH1_TXDATA_delay[156]; // rv MustConnect
  assign CH1_TXDATA_in[157] = (CH1_TXDATA[157] !== 1'bz) && CH1_TXDATA_delay[157]; // rv MustConnect
  assign CH1_TXDATA_in[158] = (CH1_TXDATA[158] !== 1'bz) && CH1_TXDATA_delay[158]; // rv MustConnect
  assign CH1_TXDATA_in[159] = (CH1_TXDATA[159] !== 1'bz) && CH1_TXDATA_delay[159]; // rv MustConnect
  assign CH1_TXDATA_in[15] = (CH1_TXDATA[15] !== 1'bz) && CH1_TXDATA_delay[15]; // rv MustConnect
  assign CH1_TXDATA_in[160] = (CH1_TXDATA[160] !== 1'bz) && CH1_TXDATA_delay[160]; // rv MustConnect
  assign CH1_TXDATA_in[161] = (CH1_TXDATA[161] !== 1'bz) && CH1_TXDATA_delay[161]; // rv MustConnect
  assign CH1_TXDATA_in[162] = (CH1_TXDATA[162] !== 1'bz) && CH1_TXDATA_delay[162]; // rv MustConnect
  assign CH1_TXDATA_in[163] = (CH1_TXDATA[163] !== 1'bz) && CH1_TXDATA_delay[163]; // rv MustConnect
  assign CH1_TXDATA_in[164] = (CH1_TXDATA[164] !== 1'bz) && CH1_TXDATA_delay[164]; // rv MustConnect
  assign CH1_TXDATA_in[165] = (CH1_TXDATA[165] !== 1'bz) && CH1_TXDATA_delay[165]; // rv MustConnect
  assign CH1_TXDATA_in[166] = (CH1_TXDATA[166] !== 1'bz) && CH1_TXDATA_delay[166]; // rv MustConnect
  assign CH1_TXDATA_in[167] = (CH1_TXDATA[167] !== 1'bz) && CH1_TXDATA_delay[167]; // rv MustConnect
  assign CH1_TXDATA_in[168] = (CH1_TXDATA[168] !== 1'bz) && CH1_TXDATA_delay[168]; // rv MustConnect
  assign CH1_TXDATA_in[169] = (CH1_TXDATA[169] !== 1'bz) && CH1_TXDATA_delay[169]; // rv MustConnect
  assign CH1_TXDATA_in[16] = (CH1_TXDATA[16] !== 1'bz) && CH1_TXDATA_delay[16]; // rv MustConnect
  assign CH1_TXDATA_in[170] = (CH1_TXDATA[170] !== 1'bz) && CH1_TXDATA_delay[170]; // rv MustConnect
  assign CH1_TXDATA_in[171] = (CH1_TXDATA[171] !== 1'bz) && CH1_TXDATA_delay[171]; // rv MustConnect
  assign CH1_TXDATA_in[172] = (CH1_TXDATA[172] !== 1'bz) && CH1_TXDATA_delay[172]; // rv MustConnect
  assign CH1_TXDATA_in[173] = (CH1_TXDATA[173] !== 1'bz) && CH1_TXDATA_delay[173]; // rv MustConnect
  assign CH1_TXDATA_in[174] = (CH1_TXDATA[174] !== 1'bz) && CH1_TXDATA_delay[174]; // rv MustConnect
  assign CH1_TXDATA_in[175] = (CH1_TXDATA[175] !== 1'bz) && CH1_TXDATA_delay[175]; // rv MustConnect
  assign CH1_TXDATA_in[176] = (CH1_TXDATA[176] !== 1'bz) && CH1_TXDATA_delay[176]; // rv MustConnect
  assign CH1_TXDATA_in[177] = (CH1_TXDATA[177] !== 1'bz) && CH1_TXDATA_delay[177]; // rv MustConnect
  assign CH1_TXDATA_in[178] = (CH1_TXDATA[178] !== 1'bz) && CH1_TXDATA_delay[178]; // rv MustConnect
  assign CH1_TXDATA_in[179] = (CH1_TXDATA[179] !== 1'bz) && CH1_TXDATA_delay[179]; // rv MustConnect
  assign CH1_TXDATA_in[17] = (CH1_TXDATA[17] !== 1'bz) && CH1_TXDATA_delay[17]; // rv MustConnect
  assign CH1_TXDATA_in[180] = (CH1_TXDATA[180] !== 1'bz) && CH1_TXDATA_delay[180]; // rv MustConnect
  assign CH1_TXDATA_in[181] = (CH1_TXDATA[181] !== 1'bz) && CH1_TXDATA_delay[181]; // rv MustConnect
  assign CH1_TXDATA_in[182] = (CH1_TXDATA[182] !== 1'bz) && CH1_TXDATA_delay[182]; // rv MustConnect
  assign CH1_TXDATA_in[183] = (CH1_TXDATA[183] !== 1'bz) && CH1_TXDATA_delay[183]; // rv MustConnect
  assign CH1_TXDATA_in[184] = (CH1_TXDATA[184] !== 1'bz) && CH1_TXDATA_delay[184]; // rv MustConnect
  assign CH1_TXDATA_in[185] = (CH1_TXDATA[185] !== 1'bz) && CH1_TXDATA_delay[185]; // rv MustConnect
  assign CH1_TXDATA_in[186] = (CH1_TXDATA[186] !== 1'bz) && CH1_TXDATA_delay[186]; // rv MustConnect
  assign CH1_TXDATA_in[187] = (CH1_TXDATA[187] !== 1'bz) && CH1_TXDATA_delay[187]; // rv MustConnect
  assign CH1_TXDATA_in[188] = (CH1_TXDATA[188] !== 1'bz) && CH1_TXDATA_delay[188]; // rv MustConnect
  assign CH1_TXDATA_in[189] = (CH1_TXDATA[189] !== 1'bz) && CH1_TXDATA_delay[189]; // rv MustConnect
  assign CH1_TXDATA_in[18] = (CH1_TXDATA[18] !== 1'bz) && CH1_TXDATA_delay[18]; // rv MustConnect
  assign CH1_TXDATA_in[190] = (CH1_TXDATA[190] !== 1'bz) && CH1_TXDATA_delay[190]; // rv MustConnect
  assign CH1_TXDATA_in[191] = (CH1_TXDATA[191] !== 1'bz) && CH1_TXDATA_delay[191]; // rv MustConnect
  assign CH1_TXDATA_in[192] = (CH1_TXDATA[192] !== 1'bz) && CH1_TXDATA_delay[192]; // rv MustConnect
  assign CH1_TXDATA_in[193] = (CH1_TXDATA[193] !== 1'bz) && CH1_TXDATA_delay[193]; // rv MustConnect
  assign CH1_TXDATA_in[194] = (CH1_TXDATA[194] !== 1'bz) && CH1_TXDATA_delay[194]; // rv MustConnect
  assign CH1_TXDATA_in[195] = (CH1_TXDATA[195] !== 1'bz) && CH1_TXDATA_delay[195]; // rv MustConnect
  assign CH1_TXDATA_in[196] = (CH1_TXDATA[196] !== 1'bz) && CH1_TXDATA_delay[196]; // rv MustConnect
  assign CH1_TXDATA_in[197] = (CH1_TXDATA[197] !== 1'bz) && CH1_TXDATA_delay[197]; // rv MustConnect
  assign CH1_TXDATA_in[198] = (CH1_TXDATA[198] !== 1'bz) && CH1_TXDATA_delay[198]; // rv MustConnect
  assign CH1_TXDATA_in[199] = (CH1_TXDATA[199] !== 1'bz) && CH1_TXDATA_delay[199]; // rv MustConnect
  assign CH1_TXDATA_in[19] = (CH1_TXDATA[19] !== 1'bz) && CH1_TXDATA_delay[19]; // rv MustConnect
  assign CH1_TXDATA_in[1] = (CH1_TXDATA[1] !== 1'bz) && CH1_TXDATA_delay[1]; // rv MustConnect
  assign CH1_TXDATA_in[200] = (CH1_TXDATA[200] !== 1'bz) && CH1_TXDATA_delay[200]; // rv MustConnect
  assign CH1_TXDATA_in[201] = (CH1_TXDATA[201] !== 1'bz) && CH1_TXDATA_delay[201]; // rv MustConnect
  assign CH1_TXDATA_in[202] = (CH1_TXDATA[202] !== 1'bz) && CH1_TXDATA_delay[202]; // rv MustConnect
  assign CH1_TXDATA_in[203] = (CH1_TXDATA[203] !== 1'bz) && CH1_TXDATA_delay[203]; // rv MustConnect
  assign CH1_TXDATA_in[204] = (CH1_TXDATA[204] !== 1'bz) && CH1_TXDATA_delay[204]; // rv MustConnect
  assign CH1_TXDATA_in[205] = (CH1_TXDATA[205] !== 1'bz) && CH1_TXDATA_delay[205]; // rv MustConnect
  assign CH1_TXDATA_in[206] = (CH1_TXDATA[206] !== 1'bz) && CH1_TXDATA_delay[206]; // rv MustConnect
  assign CH1_TXDATA_in[207] = (CH1_TXDATA[207] !== 1'bz) && CH1_TXDATA_delay[207]; // rv MustConnect
  assign CH1_TXDATA_in[208] = (CH1_TXDATA[208] !== 1'bz) && CH1_TXDATA_delay[208]; // rv MustConnect
  assign CH1_TXDATA_in[209] = (CH1_TXDATA[209] !== 1'bz) && CH1_TXDATA_delay[209]; // rv MustConnect
  assign CH1_TXDATA_in[20] = (CH1_TXDATA[20] !== 1'bz) && CH1_TXDATA_delay[20]; // rv MustConnect
  assign CH1_TXDATA_in[210] = (CH1_TXDATA[210] !== 1'bz) && CH1_TXDATA_delay[210]; // rv MustConnect
  assign CH1_TXDATA_in[211] = (CH1_TXDATA[211] !== 1'bz) && CH1_TXDATA_delay[211]; // rv MustConnect
  assign CH1_TXDATA_in[212] = (CH1_TXDATA[212] !== 1'bz) && CH1_TXDATA_delay[212]; // rv MustConnect
  assign CH1_TXDATA_in[213] = (CH1_TXDATA[213] !== 1'bz) && CH1_TXDATA_delay[213]; // rv MustConnect
  assign CH1_TXDATA_in[214] = (CH1_TXDATA[214] !== 1'bz) && CH1_TXDATA_delay[214]; // rv MustConnect
  assign CH1_TXDATA_in[215] = (CH1_TXDATA[215] !== 1'bz) && CH1_TXDATA_delay[215]; // rv MustConnect
  assign CH1_TXDATA_in[216] = (CH1_TXDATA[216] !== 1'bz) && CH1_TXDATA_delay[216]; // rv MustConnect
  assign CH1_TXDATA_in[217] = (CH1_TXDATA[217] !== 1'bz) && CH1_TXDATA_delay[217]; // rv MustConnect
  assign CH1_TXDATA_in[218] = (CH1_TXDATA[218] !== 1'bz) && CH1_TXDATA_delay[218]; // rv MustConnect
  assign CH1_TXDATA_in[219] = (CH1_TXDATA[219] !== 1'bz) && CH1_TXDATA_delay[219]; // rv MustConnect
  assign CH1_TXDATA_in[21] = (CH1_TXDATA[21] !== 1'bz) && CH1_TXDATA_delay[21]; // rv MustConnect
  assign CH1_TXDATA_in[220] = (CH1_TXDATA[220] !== 1'bz) && CH1_TXDATA_delay[220]; // rv MustConnect
  assign CH1_TXDATA_in[221] = (CH1_TXDATA[221] !== 1'bz) && CH1_TXDATA_delay[221]; // rv MustConnect
  assign CH1_TXDATA_in[222] = (CH1_TXDATA[222] !== 1'bz) && CH1_TXDATA_delay[222]; // rv MustConnect
  assign CH1_TXDATA_in[223] = (CH1_TXDATA[223] !== 1'bz) && CH1_TXDATA_delay[223]; // rv MustConnect
  assign CH1_TXDATA_in[224] = (CH1_TXDATA[224] !== 1'bz) && CH1_TXDATA_delay[224]; // rv MustConnect
  assign CH1_TXDATA_in[225] = (CH1_TXDATA[225] !== 1'bz) && CH1_TXDATA_delay[225]; // rv MustConnect
  assign CH1_TXDATA_in[226] = (CH1_TXDATA[226] !== 1'bz) && CH1_TXDATA_delay[226]; // rv MustConnect
  assign CH1_TXDATA_in[227] = (CH1_TXDATA[227] !== 1'bz) && CH1_TXDATA_delay[227]; // rv MustConnect
  assign CH1_TXDATA_in[228] = (CH1_TXDATA[228] !== 1'bz) && CH1_TXDATA_delay[228]; // rv MustConnect
  assign CH1_TXDATA_in[229] = (CH1_TXDATA[229] !== 1'bz) && CH1_TXDATA_delay[229]; // rv MustConnect
  assign CH1_TXDATA_in[22] = (CH1_TXDATA[22] !== 1'bz) && CH1_TXDATA_delay[22]; // rv MustConnect
  assign CH1_TXDATA_in[230] = (CH1_TXDATA[230] !== 1'bz) && CH1_TXDATA_delay[230]; // rv MustConnect
  assign CH1_TXDATA_in[231] = (CH1_TXDATA[231] !== 1'bz) && CH1_TXDATA_delay[231]; // rv MustConnect
  assign CH1_TXDATA_in[232] = (CH1_TXDATA[232] !== 1'bz) && CH1_TXDATA_delay[232]; // rv MustConnect
  assign CH1_TXDATA_in[233] = (CH1_TXDATA[233] !== 1'bz) && CH1_TXDATA_delay[233]; // rv MustConnect
  assign CH1_TXDATA_in[234] = (CH1_TXDATA[234] !== 1'bz) && CH1_TXDATA_delay[234]; // rv MustConnect
  assign CH1_TXDATA_in[235] = (CH1_TXDATA[235] !== 1'bz) && CH1_TXDATA_delay[235]; // rv MustConnect
  assign CH1_TXDATA_in[236] = (CH1_TXDATA[236] !== 1'bz) && CH1_TXDATA_delay[236]; // rv MustConnect
  assign CH1_TXDATA_in[237] = (CH1_TXDATA[237] !== 1'bz) && CH1_TXDATA_delay[237]; // rv MustConnect
  assign CH1_TXDATA_in[238] = (CH1_TXDATA[238] !== 1'bz) && CH1_TXDATA_delay[238]; // rv MustConnect
  assign CH1_TXDATA_in[239] = (CH1_TXDATA[239] !== 1'bz) && CH1_TXDATA_delay[239]; // rv MustConnect
  assign CH1_TXDATA_in[23] = (CH1_TXDATA[23] !== 1'bz) && CH1_TXDATA_delay[23]; // rv MustConnect
  assign CH1_TXDATA_in[240] = (CH1_TXDATA[240] !== 1'bz) && CH1_TXDATA_delay[240]; // rv MustConnect
  assign CH1_TXDATA_in[241] = (CH1_TXDATA[241] !== 1'bz) && CH1_TXDATA_delay[241]; // rv MustConnect
  assign CH1_TXDATA_in[242] = (CH1_TXDATA[242] !== 1'bz) && CH1_TXDATA_delay[242]; // rv MustConnect
  assign CH1_TXDATA_in[243] = (CH1_TXDATA[243] !== 1'bz) && CH1_TXDATA_delay[243]; // rv MustConnect
  assign CH1_TXDATA_in[244] = (CH1_TXDATA[244] !== 1'bz) && CH1_TXDATA_delay[244]; // rv MustConnect
  assign CH1_TXDATA_in[245] = (CH1_TXDATA[245] !== 1'bz) && CH1_TXDATA_delay[245]; // rv MustConnect
  assign CH1_TXDATA_in[246] = (CH1_TXDATA[246] !== 1'bz) && CH1_TXDATA_delay[246]; // rv MustConnect
  assign CH1_TXDATA_in[247] = (CH1_TXDATA[247] !== 1'bz) && CH1_TXDATA_delay[247]; // rv MustConnect
  assign CH1_TXDATA_in[248] = (CH1_TXDATA[248] !== 1'bz) && CH1_TXDATA_delay[248]; // rv MustConnect
  assign CH1_TXDATA_in[249] = (CH1_TXDATA[249] !== 1'bz) && CH1_TXDATA_delay[249]; // rv MustConnect
  assign CH1_TXDATA_in[24] = (CH1_TXDATA[24] !== 1'bz) && CH1_TXDATA_delay[24]; // rv MustConnect
  assign CH1_TXDATA_in[250] = (CH1_TXDATA[250] !== 1'bz) && CH1_TXDATA_delay[250]; // rv MustConnect
  assign CH1_TXDATA_in[251] = (CH1_TXDATA[251] !== 1'bz) && CH1_TXDATA_delay[251]; // rv MustConnect
  assign CH1_TXDATA_in[252] = (CH1_TXDATA[252] !== 1'bz) && CH1_TXDATA_delay[252]; // rv MustConnect
  assign CH1_TXDATA_in[253] = (CH1_TXDATA[253] !== 1'bz) && CH1_TXDATA_delay[253]; // rv MustConnect
  assign CH1_TXDATA_in[254] = (CH1_TXDATA[254] !== 1'bz) && CH1_TXDATA_delay[254]; // rv MustConnect
  assign CH1_TXDATA_in[255] = (CH1_TXDATA[255] !== 1'bz) && CH1_TXDATA_delay[255]; // rv MustConnect
  assign CH1_TXDATA_in[25] = (CH1_TXDATA[25] !== 1'bz) && CH1_TXDATA_delay[25]; // rv MustConnect
  assign CH1_TXDATA_in[26] = (CH1_TXDATA[26] !== 1'bz) && CH1_TXDATA_delay[26]; // rv MustConnect
  assign CH1_TXDATA_in[27] = (CH1_TXDATA[27] !== 1'bz) && CH1_TXDATA_delay[27]; // rv MustConnect
  assign CH1_TXDATA_in[28] = (CH1_TXDATA[28] !== 1'bz) && CH1_TXDATA_delay[28]; // rv MustConnect
  assign CH1_TXDATA_in[29] = (CH1_TXDATA[29] !== 1'bz) && CH1_TXDATA_delay[29]; // rv MustConnect
  assign CH1_TXDATA_in[2] = (CH1_TXDATA[2] !== 1'bz) && CH1_TXDATA_delay[2]; // rv MustConnect
  assign CH1_TXDATA_in[30] = (CH1_TXDATA[30] !== 1'bz) && CH1_TXDATA_delay[30]; // rv MustConnect
  assign CH1_TXDATA_in[31] = (CH1_TXDATA[31] !== 1'bz) && CH1_TXDATA_delay[31]; // rv MustConnect
  assign CH1_TXDATA_in[32] = (CH1_TXDATA[32] !== 1'bz) && CH1_TXDATA_delay[32]; // rv MustConnect
  assign CH1_TXDATA_in[33] = (CH1_TXDATA[33] !== 1'bz) && CH1_TXDATA_delay[33]; // rv MustConnect
  assign CH1_TXDATA_in[34] = (CH1_TXDATA[34] !== 1'bz) && CH1_TXDATA_delay[34]; // rv MustConnect
  assign CH1_TXDATA_in[35] = (CH1_TXDATA[35] !== 1'bz) && CH1_TXDATA_delay[35]; // rv MustConnect
  assign CH1_TXDATA_in[36] = (CH1_TXDATA[36] !== 1'bz) && CH1_TXDATA_delay[36]; // rv MustConnect
  assign CH1_TXDATA_in[37] = (CH1_TXDATA[37] !== 1'bz) && CH1_TXDATA_delay[37]; // rv MustConnect
  assign CH1_TXDATA_in[38] = (CH1_TXDATA[38] !== 1'bz) && CH1_TXDATA_delay[38]; // rv MustConnect
  assign CH1_TXDATA_in[39] = (CH1_TXDATA[39] !== 1'bz) && CH1_TXDATA_delay[39]; // rv MustConnect
  assign CH1_TXDATA_in[3] = (CH1_TXDATA[3] !== 1'bz) && CH1_TXDATA_delay[3]; // rv MustConnect
  assign CH1_TXDATA_in[40] = (CH1_TXDATA[40] !== 1'bz) && CH1_TXDATA_delay[40]; // rv MustConnect
  assign CH1_TXDATA_in[41] = (CH1_TXDATA[41] !== 1'bz) && CH1_TXDATA_delay[41]; // rv MustConnect
  assign CH1_TXDATA_in[42] = (CH1_TXDATA[42] !== 1'bz) && CH1_TXDATA_delay[42]; // rv MustConnect
  assign CH1_TXDATA_in[43] = (CH1_TXDATA[43] !== 1'bz) && CH1_TXDATA_delay[43]; // rv MustConnect
  assign CH1_TXDATA_in[44] = (CH1_TXDATA[44] !== 1'bz) && CH1_TXDATA_delay[44]; // rv MustConnect
  assign CH1_TXDATA_in[45] = (CH1_TXDATA[45] !== 1'bz) && CH1_TXDATA_delay[45]; // rv MustConnect
  assign CH1_TXDATA_in[46] = (CH1_TXDATA[46] !== 1'bz) && CH1_TXDATA_delay[46]; // rv MustConnect
  assign CH1_TXDATA_in[47] = (CH1_TXDATA[47] !== 1'bz) && CH1_TXDATA_delay[47]; // rv MustConnect
  assign CH1_TXDATA_in[48] = (CH1_TXDATA[48] !== 1'bz) && CH1_TXDATA_delay[48]; // rv MustConnect
  assign CH1_TXDATA_in[49] = (CH1_TXDATA[49] !== 1'bz) && CH1_TXDATA_delay[49]; // rv MustConnect
  assign CH1_TXDATA_in[4] = (CH1_TXDATA[4] !== 1'bz) && CH1_TXDATA_delay[4]; // rv MustConnect
  assign CH1_TXDATA_in[50] = (CH1_TXDATA[50] !== 1'bz) && CH1_TXDATA_delay[50]; // rv MustConnect
  assign CH1_TXDATA_in[51] = (CH1_TXDATA[51] !== 1'bz) && CH1_TXDATA_delay[51]; // rv MustConnect
  assign CH1_TXDATA_in[52] = (CH1_TXDATA[52] !== 1'bz) && CH1_TXDATA_delay[52]; // rv MustConnect
  assign CH1_TXDATA_in[53] = (CH1_TXDATA[53] !== 1'bz) && CH1_TXDATA_delay[53]; // rv MustConnect
  assign CH1_TXDATA_in[54] = (CH1_TXDATA[54] !== 1'bz) && CH1_TXDATA_delay[54]; // rv MustConnect
  assign CH1_TXDATA_in[55] = (CH1_TXDATA[55] !== 1'bz) && CH1_TXDATA_delay[55]; // rv MustConnect
  assign CH1_TXDATA_in[56] = (CH1_TXDATA[56] !== 1'bz) && CH1_TXDATA_delay[56]; // rv MustConnect
  assign CH1_TXDATA_in[57] = (CH1_TXDATA[57] !== 1'bz) && CH1_TXDATA_delay[57]; // rv MustConnect
  assign CH1_TXDATA_in[58] = (CH1_TXDATA[58] !== 1'bz) && CH1_TXDATA_delay[58]; // rv MustConnect
  assign CH1_TXDATA_in[59] = (CH1_TXDATA[59] !== 1'bz) && CH1_TXDATA_delay[59]; // rv MustConnect
  assign CH1_TXDATA_in[5] = (CH1_TXDATA[5] !== 1'bz) && CH1_TXDATA_delay[5]; // rv MustConnect
  assign CH1_TXDATA_in[60] = (CH1_TXDATA[60] !== 1'bz) && CH1_TXDATA_delay[60]; // rv MustConnect
  assign CH1_TXDATA_in[61] = (CH1_TXDATA[61] !== 1'bz) && CH1_TXDATA_delay[61]; // rv MustConnect
  assign CH1_TXDATA_in[62] = (CH1_TXDATA[62] !== 1'bz) && CH1_TXDATA_delay[62]; // rv MustConnect
  assign CH1_TXDATA_in[63] = (CH1_TXDATA[63] !== 1'bz) && CH1_TXDATA_delay[63]; // rv MustConnect
  assign CH1_TXDATA_in[64] = (CH1_TXDATA[64] !== 1'bz) && CH1_TXDATA_delay[64]; // rv MustConnect
  assign CH1_TXDATA_in[65] = (CH1_TXDATA[65] !== 1'bz) && CH1_TXDATA_delay[65]; // rv MustConnect
  assign CH1_TXDATA_in[66] = (CH1_TXDATA[66] !== 1'bz) && CH1_TXDATA_delay[66]; // rv MustConnect
  assign CH1_TXDATA_in[67] = (CH1_TXDATA[67] !== 1'bz) && CH1_TXDATA_delay[67]; // rv MustConnect
  assign CH1_TXDATA_in[68] = (CH1_TXDATA[68] !== 1'bz) && CH1_TXDATA_delay[68]; // rv MustConnect
  assign CH1_TXDATA_in[69] = (CH1_TXDATA[69] !== 1'bz) && CH1_TXDATA_delay[69]; // rv MustConnect
  assign CH1_TXDATA_in[6] = (CH1_TXDATA[6] !== 1'bz) && CH1_TXDATA_delay[6]; // rv MustConnect
  assign CH1_TXDATA_in[70] = (CH1_TXDATA[70] !== 1'bz) && CH1_TXDATA_delay[70]; // rv MustConnect
  assign CH1_TXDATA_in[71] = (CH1_TXDATA[71] !== 1'bz) && CH1_TXDATA_delay[71]; // rv MustConnect
  assign CH1_TXDATA_in[72] = (CH1_TXDATA[72] !== 1'bz) && CH1_TXDATA_delay[72]; // rv MustConnect
  assign CH1_TXDATA_in[73] = (CH1_TXDATA[73] !== 1'bz) && CH1_TXDATA_delay[73]; // rv MustConnect
  assign CH1_TXDATA_in[74] = (CH1_TXDATA[74] !== 1'bz) && CH1_TXDATA_delay[74]; // rv MustConnect
  assign CH1_TXDATA_in[75] = (CH1_TXDATA[75] !== 1'bz) && CH1_TXDATA_delay[75]; // rv MustConnect
  assign CH1_TXDATA_in[76] = (CH1_TXDATA[76] !== 1'bz) && CH1_TXDATA_delay[76]; // rv MustConnect
  assign CH1_TXDATA_in[77] = (CH1_TXDATA[77] !== 1'bz) && CH1_TXDATA_delay[77]; // rv MustConnect
  assign CH1_TXDATA_in[78] = (CH1_TXDATA[78] !== 1'bz) && CH1_TXDATA_delay[78]; // rv MustConnect
  assign CH1_TXDATA_in[79] = (CH1_TXDATA[79] !== 1'bz) && CH1_TXDATA_delay[79]; // rv MustConnect
  assign CH1_TXDATA_in[7] = (CH1_TXDATA[7] !== 1'bz) && CH1_TXDATA_delay[7]; // rv MustConnect
  assign CH1_TXDATA_in[80] = (CH1_TXDATA[80] !== 1'bz) && CH1_TXDATA_delay[80]; // rv MustConnect
  assign CH1_TXDATA_in[81] = (CH1_TXDATA[81] !== 1'bz) && CH1_TXDATA_delay[81]; // rv MustConnect
  assign CH1_TXDATA_in[82] = (CH1_TXDATA[82] !== 1'bz) && CH1_TXDATA_delay[82]; // rv MustConnect
  assign CH1_TXDATA_in[83] = (CH1_TXDATA[83] !== 1'bz) && CH1_TXDATA_delay[83]; // rv MustConnect
  assign CH1_TXDATA_in[84] = (CH1_TXDATA[84] !== 1'bz) && CH1_TXDATA_delay[84]; // rv MustConnect
  assign CH1_TXDATA_in[85] = (CH1_TXDATA[85] !== 1'bz) && CH1_TXDATA_delay[85]; // rv MustConnect
  assign CH1_TXDATA_in[86] = (CH1_TXDATA[86] !== 1'bz) && CH1_TXDATA_delay[86]; // rv MustConnect
  assign CH1_TXDATA_in[87] = (CH1_TXDATA[87] !== 1'bz) && CH1_TXDATA_delay[87]; // rv MustConnect
  assign CH1_TXDATA_in[88] = (CH1_TXDATA[88] !== 1'bz) && CH1_TXDATA_delay[88]; // rv MustConnect
  assign CH1_TXDATA_in[89] = (CH1_TXDATA[89] !== 1'bz) && CH1_TXDATA_delay[89]; // rv MustConnect
  assign CH1_TXDATA_in[8] = (CH1_TXDATA[8] !== 1'bz) && CH1_TXDATA_delay[8]; // rv MustConnect
  assign CH1_TXDATA_in[90] = (CH1_TXDATA[90] !== 1'bz) && CH1_TXDATA_delay[90]; // rv MustConnect
  assign CH1_TXDATA_in[91] = (CH1_TXDATA[91] !== 1'bz) && CH1_TXDATA_delay[91]; // rv MustConnect
  assign CH1_TXDATA_in[92] = (CH1_TXDATA[92] !== 1'bz) && CH1_TXDATA_delay[92]; // rv MustConnect
  assign CH1_TXDATA_in[93] = (CH1_TXDATA[93] !== 1'bz) && CH1_TXDATA_delay[93]; // rv MustConnect
  assign CH1_TXDATA_in[94] = (CH1_TXDATA[94] !== 1'bz) && CH1_TXDATA_delay[94]; // rv MustConnect
  assign CH1_TXDATA_in[95] = (CH1_TXDATA[95] !== 1'bz) && CH1_TXDATA_delay[95]; // rv MustConnect
  assign CH1_TXDATA_in[96] = (CH1_TXDATA[96] !== 1'bz) && CH1_TXDATA_delay[96]; // rv MustConnect
  assign CH1_TXDATA_in[97] = (CH1_TXDATA[97] !== 1'bz) && CH1_TXDATA_delay[97]; // rv MustConnect
  assign CH1_TXDATA_in[98] = (CH1_TXDATA[98] !== 1'bz) && CH1_TXDATA_delay[98]; // rv MustConnect
  assign CH1_TXDATA_in[99] = (CH1_TXDATA[99] !== 1'bz) && CH1_TXDATA_delay[99]; // rv MustConnect
  assign CH1_TXDATA_in[9] = (CH1_TXDATA[9] !== 1'bz) && CH1_TXDATA_delay[9]; // rv MustConnect
  assign CH1_TXUSRCLK_in = (CH1_TXUSRCLK === 1'bz) || CH1_TXUSRCLK_delay; // rv 1
  assign CH2_DMONFIFORESET_in = (CH2_DMONFIFORESET === 1'bz) || CH2_DMONFIFORESET_delay; // rv 1
  assign CH2_DMONITORCLK_in = (CH2_DMONITORCLK === 1'bz) || CH2_DMONITORCLK_delay; // rv 1
  assign CH2_EYESCANTRIGGER_in = (CH2_EYESCANTRIGGER === 1'bz) || CH2_EYESCANTRIGGER_delay; // rv 1
  assign CH2_LOOPBACK_in[0] = (CH2_LOOPBACK[0] !== 1'bz) && CH2_LOOPBACK_delay[0]; // rv MustConnect
  assign CH2_LOOPBACK_in[1] = (CH2_LOOPBACK[1] !== 1'bz) && CH2_LOOPBACK_delay[1]; // rv MustConnect
  assign CH2_LOOPBACK_in[2] = (CH2_LOOPBACK[2] !== 1'bz) && CH2_LOOPBACK_delay[2]; // rv MustConnect
  assign CH2_RXLATCLK_in = (CH2_RXLATCLK === 1'bz) || CH2_RXLATCLK_delay; // rv 1
  assign CH2_RXUSRCLK_in = (CH2_RXUSRCLK === 1'bz) || CH2_RXUSRCLK_delay; // rv 1
  assign CH2_TXDATA_in[0] = (CH2_TXDATA[0] !== 1'bz) && CH2_TXDATA_delay[0]; // rv MustConnect
  assign CH2_TXDATA_in[100] = (CH2_TXDATA[100] !== 1'bz) && CH2_TXDATA_delay[100]; // rv MustConnect
  assign CH2_TXDATA_in[101] = (CH2_TXDATA[101] !== 1'bz) && CH2_TXDATA_delay[101]; // rv MustConnect
  assign CH2_TXDATA_in[102] = (CH2_TXDATA[102] !== 1'bz) && CH2_TXDATA_delay[102]; // rv MustConnect
  assign CH2_TXDATA_in[103] = (CH2_TXDATA[103] !== 1'bz) && CH2_TXDATA_delay[103]; // rv MustConnect
  assign CH2_TXDATA_in[104] = (CH2_TXDATA[104] !== 1'bz) && CH2_TXDATA_delay[104]; // rv MustConnect
  assign CH2_TXDATA_in[105] = (CH2_TXDATA[105] !== 1'bz) && CH2_TXDATA_delay[105]; // rv MustConnect
  assign CH2_TXDATA_in[106] = (CH2_TXDATA[106] !== 1'bz) && CH2_TXDATA_delay[106]; // rv MustConnect
  assign CH2_TXDATA_in[107] = (CH2_TXDATA[107] !== 1'bz) && CH2_TXDATA_delay[107]; // rv MustConnect
  assign CH2_TXDATA_in[108] = (CH2_TXDATA[108] !== 1'bz) && CH2_TXDATA_delay[108]; // rv MustConnect
  assign CH2_TXDATA_in[109] = (CH2_TXDATA[109] !== 1'bz) && CH2_TXDATA_delay[109]; // rv MustConnect
  assign CH2_TXDATA_in[10] = (CH2_TXDATA[10] !== 1'bz) && CH2_TXDATA_delay[10]; // rv MustConnect
  assign CH2_TXDATA_in[110] = (CH2_TXDATA[110] !== 1'bz) && CH2_TXDATA_delay[110]; // rv MustConnect
  assign CH2_TXDATA_in[111] = (CH2_TXDATA[111] !== 1'bz) && CH2_TXDATA_delay[111]; // rv MustConnect
  assign CH2_TXDATA_in[112] = (CH2_TXDATA[112] !== 1'bz) && CH2_TXDATA_delay[112]; // rv MustConnect
  assign CH2_TXDATA_in[113] = (CH2_TXDATA[113] !== 1'bz) && CH2_TXDATA_delay[113]; // rv MustConnect
  assign CH2_TXDATA_in[114] = (CH2_TXDATA[114] !== 1'bz) && CH2_TXDATA_delay[114]; // rv MustConnect
  assign CH2_TXDATA_in[115] = (CH2_TXDATA[115] !== 1'bz) && CH2_TXDATA_delay[115]; // rv MustConnect
  assign CH2_TXDATA_in[116] = (CH2_TXDATA[116] !== 1'bz) && CH2_TXDATA_delay[116]; // rv MustConnect
  assign CH2_TXDATA_in[117] = (CH2_TXDATA[117] !== 1'bz) && CH2_TXDATA_delay[117]; // rv MustConnect
  assign CH2_TXDATA_in[118] = (CH2_TXDATA[118] !== 1'bz) && CH2_TXDATA_delay[118]; // rv MustConnect
  assign CH2_TXDATA_in[119] = (CH2_TXDATA[119] !== 1'bz) && CH2_TXDATA_delay[119]; // rv MustConnect
  assign CH2_TXDATA_in[11] = (CH2_TXDATA[11] !== 1'bz) && CH2_TXDATA_delay[11]; // rv MustConnect
  assign CH2_TXDATA_in[120] = (CH2_TXDATA[120] !== 1'bz) && CH2_TXDATA_delay[120]; // rv MustConnect
  assign CH2_TXDATA_in[121] = (CH2_TXDATA[121] !== 1'bz) && CH2_TXDATA_delay[121]; // rv MustConnect
  assign CH2_TXDATA_in[122] = (CH2_TXDATA[122] !== 1'bz) && CH2_TXDATA_delay[122]; // rv MustConnect
  assign CH2_TXDATA_in[123] = (CH2_TXDATA[123] !== 1'bz) && CH2_TXDATA_delay[123]; // rv MustConnect
  assign CH2_TXDATA_in[124] = (CH2_TXDATA[124] !== 1'bz) && CH2_TXDATA_delay[124]; // rv MustConnect
  assign CH2_TXDATA_in[125] = (CH2_TXDATA[125] !== 1'bz) && CH2_TXDATA_delay[125]; // rv MustConnect
  assign CH2_TXDATA_in[126] = (CH2_TXDATA[126] !== 1'bz) && CH2_TXDATA_delay[126]; // rv MustConnect
  assign CH2_TXDATA_in[127] = (CH2_TXDATA[127] !== 1'bz) && CH2_TXDATA_delay[127]; // rv MustConnect
  assign CH2_TXDATA_in[128] = (CH2_TXDATA[128] !== 1'bz) && CH2_TXDATA_delay[128]; // rv MustConnect
  assign CH2_TXDATA_in[129] = (CH2_TXDATA[129] !== 1'bz) && CH2_TXDATA_delay[129]; // rv MustConnect
  assign CH2_TXDATA_in[12] = (CH2_TXDATA[12] !== 1'bz) && CH2_TXDATA_delay[12]; // rv MustConnect
  assign CH2_TXDATA_in[130] = (CH2_TXDATA[130] !== 1'bz) && CH2_TXDATA_delay[130]; // rv MustConnect
  assign CH2_TXDATA_in[131] = (CH2_TXDATA[131] !== 1'bz) && CH2_TXDATA_delay[131]; // rv MustConnect
  assign CH2_TXDATA_in[132] = (CH2_TXDATA[132] !== 1'bz) && CH2_TXDATA_delay[132]; // rv MustConnect
  assign CH2_TXDATA_in[133] = (CH2_TXDATA[133] !== 1'bz) && CH2_TXDATA_delay[133]; // rv MustConnect
  assign CH2_TXDATA_in[134] = (CH2_TXDATA[134] !== 1'bz) && CH2_TXDATA_delay[134]; // rv MustConnect
  assign CH2_TXDATA_in[135] = (CH2_TXDATA[135] !== 1'bz) && CH2_TXDATA_delay[135]; // rv MustConnect
  assign CH2_TXDATA_in[136] = (CH2_TXDATA[136] !== 1'bz) && CH2_TXDATA_delay[136]; // rv MustConnect
  assign CH2_TXDATA_in[137] = (CH2_TXDATA[137] !== 1'bz) && CH2_TXDATA_delay[137]; // rv MustConnect
  assign CH2_TXDATA_in[138] = (CH2_TXDATA[138] !== 1'bz) && CH2_TXDATA_delay[138]; // rv MustConnect
  assign CH2_TXDATA_in[139] = (CH2_TXDATA[139] !== 1'bz) && CH2_TXDATA_delay[139]; // rv MustConnect
  assign CH2_TXDATA_in[13] = (CH2_TXDATA[13] !== 1'bz) && CH2_TXDATA_delay[13]; // rv MustConnect
  assign CH2_TXDATA_in[140] = (CH2_TXDATA[140] !== 1'bz) && CH2_TXDATA_delay[140]; // rv MustConnect
  assign CH2_TXDATA_in[141] = (CH2_TXDATA[141] !== 1'bz) && CH2_TXDATA_delay[141]; // rv MustConnect
  assign CH2_TXDATA_in[142] = (CH2_TXDATA[142] !== 1'bz) && CH2_TXDATA_delay[142]; // rv MustConnect
  assign CH2_TXDATA_in[143] = (CH2_TXDATA[143] !== 1'bz) && CH2_TXDATA_delay[143]; // rv MustConnect
  assign CH2_TXDATA_in[144] = (CH2_TXDATA[144] !== 1'bz) && CH2_TXDATA_delay[144]; // rv MustConnect
  assign CH2_TXDATA_in[145] = (CH2_TXDATA[145] !== 1'bz) && CH2_TXDATA_delay[145]; // rv MustConnect
  assign CH2_TXDATA_in[146] = (CH2_TXDATA[146] !== 1'bz) && CH2_TXDATA_delay[146]; // rv MustConnect
  assign CH2_TXDATA_in[147] = (CH2_TXDATA[147] !== 1'bz) && CH2_TXDATA_delay[147]; // rv MustConnect
  assign CH2_TXDATA_in[148] = (CH2_TXDATA[148] !== 1'bz) && CH2_TXDATA_delay[148]; // rv MustConnect
  assign CH2_TXDATA_in[149] = (CH2_TXDATA[149] !== 1'bz) && CH2_TXDATA_delay[149]; // rv MustConnect
  assign CH2_TXDATA_in[14] = (CH2_TXDATA[14] !== 1'bz) && CH2_TXDATA_delay[14]; // rv MustConnect
  assign CH2_TXDATA_in[150] = (CH2_TXDATA[150] !== 1'bz) && CH2_TXDATA_delay[150]; // rv MustConnect
  assign CH2_TXDATA_in[151] = (CH2_TXDATA[151] !== 1'bz) && CH2_TXDATA_delay[151]; // rv MustConnect
  assign CH2_TXDATA_in[152] = (CH2_TXDATA[152] !== 1'bz) && CH2_TXDATA_delay[152]; // rv MustConnect
  assign CH2_TXDATA_in[153] = (CH2_TXDATA[153] !== 1'bz) && CH2_TXDATA_delay[153]; // rv MustConnect
  assign CH2_TXDATA_in[154] = (CH2_TXDATA[154] !== 1'bz) && CH2_TXDATA_delay[154]; // rv MustConnect
  assign CH2_TXDATA_in[155] = (CH2_TXDATA[155] !== 1'bz) && CH2_TXDATA_delay[155]; // rv MustConnect
  assign CH2_TXDATA_in[156] = (CH2_TXDATA[156] !== 1'bz) && CH2_TXDATA_delay[156]; // rv MustConnect
  assign CH2_TXDATA_in[157] = (CH2_TXDATA[157] !== 1'bz) && CH2_TXDATA_delay[157]; // rv MustConnect
  assign CH2_TXDATA_in[158] = (CH2_TXDATA[158] !== 1'bz) && CH2_TXDATA_delay[158]; // rv MustConnect
  assign CH2_TXDATA_in[159] = (CH2_TXDATA[159] !== 1'bz) && CH2_TXDATA_delay[159]; // rv MustConnect
  assign CH2_TXDATA_in[15] = (CH2_TXDATA[15] !== 1'bz) && CH2_TXDATA_delay[15]; // rv MustConnect
  assign CH2_TXDATA_in[160] = (CH2_TXDATA[160] !== 1'bz) && CH2_TXDATA_delay[160]; // rv MustConnect
  assign CH2_TXDATA_in[161] = (CH2_TXDATA[161] !== 1'bz) && CH2_TXDATA_delay[161]; // rv MustConnect
  assign CH2_TXDATA_in[162] = (CH2_TXDATA[162] !== 1'bz) && CH2_TXDATA_delay[162]; // rv MustConnect
  assign CH2_TXDATA_in[163] = (CH2_TXDATA[163] !== 1'bz) && CH2_TXDATA_delay[163]; // rv MustConnect
  assign CH2_TXDATA_in[164] = (CH2_TXDATA[164] !== 1'bz) && CH2_TXDATA_delay[164]; // rv MustConnect
  assign CH2_TXDATA_in[165] = (CH2_TXDATA[165] !== 1'bz) && CH2_TXDATA_delay[165]; // rv MustConnect
  assign CH2_TXDATA_in[166] = (CH2_TXDATA[166] !== 1'bz) && CH2_TXDATA_delay[166]; // rv MustConnect
  assign CH2_TXDATA_in[167] = (CH2_TXDATA[167] !== 1'bz) && CH2_TXDATA_delay[167]; // rv MustConnect
  assign CH2_TXDATA_in[168] = (CH2_TXDATA[168] !== 1'bz) && CH2_TXDATA_delay[168]; // rv MustConnect
  assign CH2_TXDATA_in[169] = (CH2_TXDATA[169] !== 1'bz) && CH2_TXDATA_delay[169]; // rv MustConnect
  assign CH2_TXDATA_in[16] = (CH2_TXDATA[16] !== 1'bz) && CH2_TXDATA_delay[16]; // rv MustConnect
  assign CH2_TXDATA_in[170] = (CH2_TXDATA[170] !== 1'bz) && CH2_TXDATA_delay[170]; // rv MustConnect
  assign CH2_TXDATA_in[171] = (CH2_TXDATA[171] !== 1'bz) && CH2_TXDATA_delay[171]; // rv MustConnect
  assign CH2_TXDATA_in[172] = (CH2_TXDATA[172] !== 1'bz) && CH2_TXDATA_delay[172]; // rv MustConnect
  assign CH2_TXDATA_in[173] = (CH2_TXDATA[173] !== 1'bz) && CH2_TXDATA_delay[173]; // rv MustConnect
  assign CH2_TXDATA_in[174] = (CH2_TXDATA[174] !== 1'bz) && CH2_TXDATA_delay[174]; // rv MustConnect
  assign CH2_TXDATA_in[175] = (CH2_TXDATA[175] !== 1'bz) && CH2_TXDATA_delay[175]; // rv MustConnect
  assign CH2_TXDATA_in[176] = (CH2_TXDATA[176] !== 1'bz) && CH2_TXDATA_delay[176]; // rv MustConnect
  assign CH2_TXDATA_in[177] = (CH2_TXDATA[177] !== 1'bz) && CH2_TXDATA_delay[177]; // rv MustConnect
  assign CH2_TXDATA_in[178] = (CH2_TXDATA[178] !== 1'bz) && CH2_TXDATA_delay[178]; // rv MustConnect
  assign CH2_TXDATA_in[179] = (CH2_TXDATA[179] !== 1'bz) && CH2_TXDATA_delay[179]; // rv MustConnect
  assign CH2_TXDATA_in[17] = (CH2_TXDATA[17] !== 1'bz) && CH2_TXDATA_delay[17]; // rv MustConnect
  assign CH2_TXDATA_in[180] = (CH2_TXDATA[180] !== 1'bz) && CH2_TXDATA_delay[180]; // rv MustConnect
  assign CH2_TXDATA_in[181] = (CH2_TXDATA[181] !== 1'bz) && CH2_TXDATA_delay[181]; // rv MustConnect
  assign CH2_TXDATA_in[182] = (CH2_TXDATA[182] !== 1'bz) && CH2_TXDATA_delay[182]; // rv MustConnect
  assign CH2_TXDATA_in[183] = (CH2_TXDATA[183] !== 1'bz) && CH2_TXDATA_delay[183]; // rv MustConnect
  assign CH2_TXDATA_in[184] = (CH2_TXDATA[184] !== 1'bz) && CH2_TXDATA_delay[184]; // rv MustConnect
  assign CH2_TXDATA_in[185] = (CH2_TXDATA[185] !== 1'bz) && CH2_TXDATA_delay[185]; // rv MustConnect
  assign CH2_TXDATA_in[186] = (CH2_TXDATA[186] !== 1'bz) && CH2_TXDATA_delay[186]; // rv MustConnect
  assign CH2_TXDATA_in[187] = (CH2_TXDATA[187] !== 1'bz) && CH2_TXDATA_delay[187]; // rv MustConnect
  assign CH2_TXDATA_in[188] = (CH2_TXDATA[188] !== 1'bz) && CH2_TXDATA_delay[188]; // rv MustConnect
  assign CH2_TXDATA_in[189] = (CH2_TXDATA[189] !== 1'bz) && CH2_TXDATA_delay[189]; // rv MustConnect
  assign CH2_TXDATA_in[18] = (CH2_TXDATA[18] !== 1'bz) && CH2_TXDATA_delay[18]; // rv MustConnect
  assign CH2_TXDATA_in[190] = (CH2_TXDATA[190] !== 1'bz) && CH2_TXDATA_delay[190]; // rv MustConnect
  assign CH2_TXDATA_in[191] = (CH2_TXDATA[191] !== 1'bz) && CH2_TXDATA_delay[191]; // rv MustConnect
  assign CH2_TXDATA_in[192] = (CH2_TXDATA[192] !== 1'bz) && CH2_TXDATA_delay[192]; // rv MustConnect
  assign CH2_TXDATA_in[193] = (CH2_TXDATA[193] !== 1'bz) && CH2_TXDATA_delay[193]; // rv MustConnect
  assign CH2_TXDATA_in[194] = (CH2_TXDATA[194] !== 1'bz) && CH2_TXDATA_delay[194]; // rv MustConnect
  assign CH2_TXDATA_in[195] = (CH2_TXDATA[195] !== 1'bz) && CH2_TXDATA_delay[195]; // rv MustConnect
  assign CH2_TXDATA_in[196] = (CH2_TXDATA[196] !== 1'bz) && CH2_TXDATA_delay[196]; // rv MustConnect
  assign CH2_TXDATA_in[197] = (CH2_TXDATA[197] !== 1'bz) && CH2_TXDATA_delay[197]; // rv MustConnect
  assign CH2_TXDATA_in[198] = (CH2_TXDATA[198] !== 1'bz) && CH2_TXDATA_delay[198]; // rv MustConnect
  assign CH2_TXDATA_in[199] = (CH2_TXDATA[199] !== 1'bz) && CH2_TXDATA_delay[199]; // rv MustConnect
  assign CH2_TXDATA_in[19] = (CH2_TXDATA[19] !== 1'bz) && CH2_TXDATA_delay[19]; // rv MustConnect
  assign CH2_TXDATA_in[1] = (CH2_TXDATA[1] !== 1'bz) && CH2_TXDATA_delay[1]; // rv MustConnect
  assign CH2_TXDATA_in[200] = (CH2_TXDATA[200] !== 1'bz) && CH2_TXDATA_delay[200]; // rv MustConnect
  assign CH2_TXDATA_in[201] = (CH2_TXDATA[201] !== 1'bz) && CH2_TXDATA_delay[201]; // rv MustConnect
  assign CH2_TXDATA_in[202] = (CH2_TXDATA[202] !== 1'bz) && CH2_TXDATA_delay[202]; // rv MustConnect
  assign CH2_TXDATA_in[203] = (CH2_TXDATA[203] !== 1'bz) && CH2_TXDATA_delay[203]; // rv MustConnect
  assign CH2_TXDATA_in[204] = (CH2_TXDATA[204] !== 1'bz) && CH2_TXDATA_delay[204]; // rv MustConnect
  assign CH2_TXDATA_in[205] = (CH2_TXDATA[205] !== 1'bz) && CH2_TXDATA_delay[205]; // rv MustConnect
  assign CH2_TXDATA_in[206] = (CH2_TXDATA[206] !== 1'bz) && CH2_TXDATA_delay[206]; // rv MustConnect
  assign CH2_TXDATA_in[207] = (CH2_TXDATA[207] !== 1'bz) && CH2_TXDATA_delay[207]; // rv MustConnect
  assign CH2_TXDATA_in[208] = (CH2_TXDATA[208] !== 1'bz) && CH2_TXDATA_delay[208]; // rv MustConnect
  assign CH2_TXDATA_in[209] = (CH2_TXDATA[209] !== 1'bz) && CH2_TXDATA_delay[209]; // rv MustConnect
  assign CH2_TXDATA_in[20] = (CH2_TXDATA[20] !== 1'bz) && CH2_TXDATA_delay[20]; // rv MustConnect
  assign CH2_TXDATA_in[210] = (CH2_TXDATA[210] !== 1'bz) && CH2_TXDATA_delay[210]; // rv MustConnect
  assign CH2_TXDATA_in[211] = (CH2_TXDATA[211] !== 1'bz) && CH2_TXDATA_delay[211]; // rv MustConnect
  assign CH2_TXDATA_in[212] = (CH2_TXDATA[212] !== 1'bz) && CH2_TXDATA_delay[212]; // rv MustConnect
  assign CH2_TXDATA_in[213] = (CH2_TXDATA[213] !== 1'bz) && CH2_TXDATA_delay[213]; // rv MustConnect
  assign CH2_TXDATA_in[214] = (CH2_TXDATA[214] !== 1'bz) && CH2_TXDATA_delay[214]; // rv MustConnect
  assign CH2_TXDATA_in[215] = (CH2_TXDATA[215] !== 1'bz) && CH2_TXDATA_delay[215]; // rv MustConnect
  assign CH2_TXDATA_in[216] = (CH2_TXDATA[216] !== 1'bz) && CH2_TXDATA_delay[216]; // rv MustConnect
  assign CH2_TXDATA_in[217] = (CH2_TXDATA[217] !== 1'bz) && CH2_TXDATA_delay[217]; // rv MustConnect
  assign CH2_TXDATA_in[218] = (CH2_TXDATA[218] !== 1'bz) && CH2_TXDATA_delay[218]; // rv MustConnect
  assign CH2_TXDATA_in[219] = (CH2_TXDATA[219] !== 1'bz) && CH2_TXDATA_delay[219]; // rv MustConnect
  assign CH2_TXDATA_in[21] = (CH2_TXDATA[21] !== 1'bz) && CH2_TXDATA_delay[21]; // rv MustConnect
  assign CH2_TXDATA_in[220] = (CH2_TXDATA[220] !== 1'bz) && CH2_TXDATA_delay[220]; // rv MustConnect
  assign CH2_TXDATA_in[221] = (CH2_TXDATA[221] !== 1'bz) && CH2_TXDATA_delay[221]; // rv MustConnect
  assign CH2_TXDATA_in[222] = (CH2_TXDATA[222] !== 1'bz) && CH2_TXDATA_delay[222]; // rv MustConnect
  assign CH2_TXDATA_in[223] = (CH2_TXDATA[223] !== 1'bz) && CH2_TXDATA_delay[223]; // rv MustConnect
  assign CH2_TXDATA_in[224] = (CH2_TXDATA[224] !== 1'bz) && CH2_TXDATA_delay[224]; // rv MustConnect
  assign CH2_TXDATA_in[225] = (CH2_TXDATA[225] !== 1'bz) && CH2_TXDATA_delay[225]; // rv MustConnect
  assign CH2_TXDATA_in[226] = (CH2_TXDATA[226] !== 1'bz) && CH2_TXDATA_delay[226]; // rv MustConnect
  assign CH2_TXDATA_in[227] = (CH2_TXDATA[227] !== 1'bz) && CH2_TXDATA_delay[227]; // rv MustConnect
  assign CH2_TXDATA_in[228] = (CH2_TXDATA[228] !== 1'bz) && CH2_TXDATA_delay[228]; // rv MustConnect
  assign CH2_TXDATA_in[229] = (CH2_TXDATA[229] !== 1'bz) && CH2_TXDATA_delay[229]; // rv MustConnect
  assign CH2_TXDATA_in[22] = (CH2_TXDATA[22] !== 1'bz) && CH2_TXDATA_delay[22]; // rv MustConnect
  assign CH2_TXDATA_in[230] = (CH2_TXDATA[230] !== 1'bz) && CH2_TXDATA_delay[230]; // rv MustConnect
  assign CH2_TXDATA_in[231] = (CH2_TXDATA[231] !== 1'bz) && CH2_TXDATA_delay[231]; // rv MustConnect
  assign CH2_TXDATA_in[232] = (CH2_TXDATA[232] !== 1'bz) && CH2_TXDATA_delay[232]; // rv MustConnect
  assign CH2_TXDATA_in[233] = (CH2_TXDATA[233] !== 1'bz) && CH2_TXDATA_delay[233]; // rv MustConnect
  assign CH2_TXDATA_in[234] = (CH2_TXDATA[234] !== 1'bz) && CH2_TXDATA_delay[234]; // rv MustConnect
  assign CH2_TXDATA_in[235] = (CH2_TXDATA[235] !== 1'bz) && CH2_TXDATA_delay[235]; // rv MustConnect
  assign CH2_TXDATA_in[236] = (CH2_TXDATA[236] !== 1'bz) && CH2_TXDATA_delay[236]; // rv MustConnect
  assign CH2_TXDATA_in[237] = (CH2_TXDATA[237] !== 1'bz) && CH2_TXDATA_delay[237]; // rv MustConnect
  assign CH2_TXDATA_in[238] = (CH2_TXDATA[238] !== 1'bz) && CH2_TXDATA_delay[238]; // rv MustConnect
  assign CH2_TXDATA_in[239] = (CH2_TXDATA[239] !== 1'bz) && CH2_TXDATA_delay[239]; // rv MustConnect
  assign CH2_TXDATA_in[23] = (CH2_TXDATA[23] !== 1'bz) && CH2_TXDATA_delay[23]; // rv MustConnect
  assign CH2_TXDATA_in[240] = (CH2_TXDATA[240] !== 1'bz) && CH2_TXDATA_delay[240]; // rv MustConnect
  assign CH2_TXDATA_in[241] = (CH2_TXDATA[241] !== 1'bz) && CH2_TXDATA_delay[241]; // rv MustConnect
  assign CH2_TXDATA_in[242] = (CH2_TXDATA[242] !== 1'bz) && CH2_TXDATA_delay[242]; // rv MustConnect
  assign CH2_TXDATA_in[243] = (CH2_TXDATA[243] !== 1'bz) && CH2_TXDATA_delay[243]; // rv MustConnect
  assign CH2_TXDATA_in[244] = (CH2_TXDATA[244] !== 1'bz) && CH2_TXDATA_delay[244]; // rv MustConnect
  assign CH2_TXDATA_in[245] = (CH2_TXDATA[245] !== 1'bz) && CH2_TXDATA_delay[245]; // rv MustConnect
  assign CH2_TXDATA_in[246] = (CH2_TXDATA[246] !== 1'bz) && CH2_TXDATA_delay[246]; // rv MustConnect
  assign CH2_TXDATA_in[247] = (CH2_TXDATA[247] !== 1'bz) && CH2_TXDATA_delay[247]; // rv MustConnect
  assign CH2_TXDATA_in[248] = (CH2_TXDATA[248] !== 1'bz) && CH2_TXDATA_delay[248]; // rv MustConnect
  assign CH2_TXDATA_in[249] = (CH2_TXDATA[249] !== 1'bz) && CH2_TXDATA_delay[249]; // rv MustConnect
  assign CH2_TXDATA_in[24] = (CH2_TXDATA[24] !== 1'bz) && CH2_TXDATA_delay[24]; // rv MustConnect
  assign CH2_TXDATA_in[250] = (CH2_TXDATA[250] !== 1'bz) && CH2_TXDATA_delay[250]; // rv MustConnect
  assign CH2_TXDATA_in[251] = (CH2_TXDATA[251] !== 1'bz) && CH2_TXDATA_delay[251]; // rv MustConnect
  assign CH2_TXDATA_in[252] = (CH2_TXDATA[252] !== 1'bz) && CH2_TXDATA_delay[252]; // rv MustConnect
  assign CH2_TXDATA_in[253] = (CH2_TXDATA[253] !== 1'bz) && CH2_TXDATA_delay[253]; // rv MustConnect
  assign CH2_TXDATA_in[254] = (CH2_TXDATA[254] !== 1'bz) && CH2_TXDATA_delay[254]; // rv MustConnect
  assign CH2_TXDATA_in[255] = (CH2_TXDATA[255] !== 1'bz) && CH2_TXDATA_delay[255]; // rv MustConnect
  assign CH2_TXDATA_in[25] = (CH2_TXDATA[25] !== 1'bz) && CH2_TXDATA_delay[25]; // rv MustConnect
  assign CH2_TXDATA_in[26] = (CH2_TXDATA[26] !== 1'bz) && CH2_TXDATA_delay[26]; // rv MustConnect
  assign CH2_TXDATA_in[27] = (CH2_TXDATA[27] !== 1'bz) && CH2_TXDATA_delay[27]; // rv MustConnect
  assign CH2_TXDATA_in[28] = (CH2_TXDATA[28] !== 1'bz) && CH2_TXDATA_delay[28]; // rv MustConnect
  assign CH2_TXDATA_in[29] = (CH2_TXDATA[29] !== 1'bz) && CH2_TXDATA_delay[29]; // rv MustConnect
  assign CH2_TXDATA_in[2] = (CH2_TXDATA[2] !== 1'bz) && CH2_TXDATA_delay[2]; // rv MustConnect
  assign CH2_TXDATA_in[30] = (CH2_TXDATA[30] !== 1'bz) && CH2_TXDATA_delay[30]; // rv MustConnect
  assign CH2_TXDATA_in[31] = (CH2_TXDATA[31] !== 1'bz) && CH2_TXDATA_delay[31]; // rv MustConnect
  assign CH2_TXDATA_in[32] = (CH2_TXDATA[32] !== 1'bz) && CH2_TXDATA_delay[32]; // rv MustConnect
  assign CH2_TXDATA_in[33] = (CH2_TXDATA[33] !== 1'bz) && CH2_TXDATA_delay[33]; // rv MustConnect
  assign CH2_TXDATA_in[34] = (CH2_TXDATA[34] !== 1'bz) && CH2_TXDATA_delay[34]; // rv MustConnect
  assign CH2_TXDATA_in[35] = (CH2_TXDATA[35] !== 1'bz) && CH2_TXDATA_delay[35]; // rv MustConnect
  assign CH2_TXDATA_in[36] = (CH2_TXDATA[36] !== 1'bz) && CH2_TXDATA_delay[36]; // rv MustConnect
  assign CH2_TXDATA_in[37] = (CH2_TXDATA[37] !== 1'bz) && CH2_TXDATA_delay[37]; // rv MustConnect
  assign CH2_TXDATA_in[38] = (CH2_TXDATA[38] !== 1'bz) && CH2_TXDATA_delay[38]; // rv MustConnect
  assign CH2_TXDATA_in[39] = (CH2_TXDATA[39] !== 1'bz) && CH2_TXDATA_delay[39]; // rv MustConnect
  assign CH2_TXDATA_in[3] = (CH2_TXDATA[3] !== 1'bz) && CH2_TXDATA_delay[3]; // rv MustConnect
  assign CH2_TXDATA_in[40] = (CH2_TXDATA[40] !== 1'bz) && CH2_TXDATA_delay[40]; // rv MustConnect
  assign CH2_TXDATA_in[41] = (CH2_TXDATA[41] !== 1'bz) && CH2_TXDATA_delay[41]; // rv MustConnect
  assign CH2_TXDATA_in[42] = (CH2_TXDATA[42] !== 1'bz) && CH2_TXDATA_delay[42]; // rv MustConnect
  assign CH2_TXDATA_in[43] = (CH2_TXDATA[43] !== 1'bz) && CH2_TXDATA_delay[43]; // rv MustConnect
  assign CH2_TXDATA_in[44] = (CH2_TXDATA[44] !== 1'bz) && CH2_TXDATA_delay[44]; // rv MustConnect
  assign CH2_TXDATA_in[45] = (CH2_TXDATA[45] !== 1'bz) && CH2_TXDATA_delay[45]; // rv MustConnect
  assign CH2_TXDATA_in[46] = (CH2_TXDATA[46] !== 1'bz) && CH2_TXDATA_delay[46]; // rv MustConnect
  assign CH2_TXDATA_in[47] = (CH2_TXDATA[47] !== 1'bz) && CH2_TXDATA_delay[47]; // rv MustConnect
  assign CH2_TXDATA_in[48] = (CH2_TXDATA[48] !== 1'bz) && CH2_TXDATA_delay[48]; // rv MustConnect
  assign CH2_TXDATA_in[49] = (CH2_TXDATA[49] !== 1'bz) && CH2_TXDATA_delay[49]; // rv MustConnect
  assign CH2_TXDATA_in[4] = (CH2_TXDATA[4] !== 1'bz) && CH2_TXDATA_delay[4]; // rv MustConnect
  assign CH2_TXDATA_in[50] = (CH2_TXDATA[50] !== 1'bz) && CH2_TXDATA_delay[50]; // rv MustConnect
  assign CH2_TXDATA_in[51] = (CH2_TXDATA[51] !== 1'bz) && CH2_TXDATA_delay[51]; // rv MustConnect
  assign CH2_TXDATA_in[52] = (CH2_TXDATA[52] !== 1'bz) && CH2_TXDATA_delay[52]; // rv MustConnect
  assign CH2_TXDATA_in[53] = (CH2_TXDATA[53] !== 1'bz) && CH2_TXDATA_delay[53]; // rv MustConnect
  assign CH2_TXDATA_in[54] = (CH2_TXDATA[54] !== 1'bz) && CH2_TXDATA_delay[54]; // rv MustConnect
  assign CH2_TXDATA_in[55] = (CH2_TXDATA[55] !== 1'bz) && CH2_TXDATA_delay[55]; // rv MustConnect
  assign CH2_TXDATA_in[56] = (CH2_TXDATA[56] !== 1'bz) && CH2_TXDATA_delay[56]; // rv MustConnect
  assign CH2_TXDATA_in[57] = (CH2_TXDATA[57] !== 1'bz) && CH2_TXDATA_delay[57]; // rv MustConnect
  assign CH2_TXDATA_in[58] = (CH2_TXDATA[58] !== 1'bz) && CH2_TXDATA_delay[58]; // rv MustConnect
  assign CH2_TXDATA_in[59] = (CH2_TXDATA[59] !== 1'bz) && CH2_TXDATA_delay[59]; // rv MustConnect
  assign CH2_TXDATA_in[5] = (CH2_TXDATA[5] !== 1'bz) && CH2_TXDATA_delay[5]; // rv MustConnect
  assign CH2_TXDATA_in[60] = (CH2_TXDATA[60] !== 1'bz) && CH2_TXDATA_delay[60]; // rv MustConnect
  assign CH2_TXDATA_in[61] = (CH2_TXDATA[61] !== 1'bz) && CH2_TXDATA_delay[61]; // rv MustConnect
  assign CH2_TXDATA_in[62] = (CH2_TXDATA[62] !== 1'bz) && CH2_TXDATA_delay[62]; // rv MustConnect
  assign CH2_TXDATA_in[63] = (CH2_TXDATA[63] !== 1'bz) && CH2_TXDATA_delay[63]; // rv MustConnect
  assign CH2_TXDATA_in[64] = (CH2_TXDATA[64] !== 1'bz) && CH2_TXDATA_delay[64]; // rv MustConnect
  assign CH2_TXDATA_in[65] = (CH2_TXDATA[65] !== 1'bz) && CH2_TXDATA_delay[65]; // rv MustConnect
  assign CH2_TXDATA_in[66] = (CH2_TXDATA[66] !== 1'bz) && CH2_TXDATA_delay[66]; // rv MustConnect
  assign CH2_TXDATA_in[67] = (CH2_TXDATA[67] !== 1'bz) && CH2_TXDATA_delay[67]; // rv MustConnect
  assign CH2_TXDATA_in[68] = (CH2_TXDATA[68] !== 1'bz) && CH2_TXDATA_delay[68]; // rv MustConnect
  assign CH2_TXDATA_in[69] = (CH2_TXDATA[69] !== 1'bz) && CH2_TXDATA_delay[69]; // rv MustConnect
  assign CH2_TXDATA_in[6] = (CH2_TXDATA[6] !== 1'bz) && CH2_TXDATA_delay[6]; // rv MustConnect
  assign CH2_TXDATA_in[70] = (CH2_TXDATA[70] !== 1'bz) && CH2_TXDATA_delay[70]; // rv MustConnect
  assign CH2_TXDATA_in[71] = (CH2_TXDATA[71] !== 1'bz) && CH2_TXDATA_delay[71]; // rv MustConnect
  assign CH2_TXDATA_in[72] = (CH2_TXDATA[72] !== 1'bz) && CH2_TXDATA_delay[72]; // rv MustConnect
  assign CH2_TXDATA_in[73] = (CH2_TXDATA[73] !== 1'bz) && CH2_TXDATA_delay[73]; // rv MustConnect
  assign CH2_TXDATA_in[74] = (CH2_TXDATA[74] !== 1'bz) && CH2_TXDATA_delay[74]; // rv MustConnect
  assign CH2_TXDATA_in[75] = (CH2_TXDATA[75] !== 1'bz) && CH2_TXDATA_delay[75]; // rv MustConnect
  assign CH2_TXDATA_in[76] = (CH2_TXDATA[76] !== 1'bz) && CH2_TXDATA_delay[76]; // rv MustConnect
  assign CH2_TXDATA_in[77] = (CH2_TXDATA[77] !== 1'bz) && CH2_TXDATA_delay[77]; // rv MustConnect
  assign CH2_TXDATA_in[78] = (CH2_TXDATA[78] !== 1'bz) && CH2_TXDATA_delay[78]; // rv MustConnect
  assign CH2_TXDATA_in[79] = (CH2_TXDATA[79] !== 1'bz) && CH2_TXDATA_delay[79]; // rv MustConnect
  assign CH2_TXDATA_in[7] = (CH2_TXDATA[7] !== 1'bz) && CH2_TXDATA_delay[7]; // rv MustConnect
  assign CH2_TXDATA_in[80] = (CH2_TXDATA[80] !== 1'bz) && CH2_TXDATA_delay[80]; // rv MustConnect
  assign CH2_TXDATA_in[81] = (CH2_TXDATA[81] !== 1'bz) && CH2_TXDATA_delay[81]; // rv MustConnect
  assign CH2_TXDATA_in[82] = (CH2_TXDATA[82] !== 1'bz) && CH2_TXDATA_delay[82]; // rv MustConnect
  assign CH2_TXDATA_in[83] = (CH2_TXDATA[83] !== 1'bz) && CH2_TXDATA_delay[83]; // rv MustConnect
  assign CH2_TXDATA_in[84] = (CH2_TXDATA[84] !== 1'bz) && CH2_TXDATA_delay[84]; // rv MustConnect
  assign CH2_TXDATA_in[85] = (CH2_TXDATA[85] !== 1'bz) && CH2_TXDATA_delay[85]; // rv MustConnect
  assign CH2_TXDATA_in[86] = (CH2_TXDATA[86] !== 1'bz) && CH2_TXDATA_delay[86]; // rv MustConnect
  assign CH2_TXDATA_in[87] = (CH2_TXDATA[87] !== 1'bz) && CH2_TXDATA_delay[87]; // rv MustConnect
  assign CH2_TXDATA_in[88] = (CH2_TXDATA[88] !== 1'bz) && CH2_TXDATA_delay[88]; // rv MustConnect
  assign CH2_TXDATA_in[89] = (CH2_TXDATA[89] !== 1'bz) && CH2_TXDATA_delay[89]; // rv MustConnect
  assign CH2_TXDATA_in[8] = (CH2_TXDATA[8] !== 1'bz) && CH2_TXDATA_delay[8]; // rv MustConnect
  assign CH2_TXDATA_in[90] = (CH2_TXDATA[90] !== 1'bz) && CH2_TXDATA_delay[90]; // rv MustConnect
  assign CH2_TXDATA_in[91] = (CH2_TXDATA[91] !== 1'bz) && CH2_TXDATA_delay[91]; // rv MustConnect
  assign CH2_TXDATA_in[92] = (CH2_TXDATA[92] !== 1'bz) && CH2_TXDATA_delay[92]; // rv MustConnect
  assign CH2_TXDATA_in[93] = (CH2_TXDATA[93] !== 1'bz) && CH2_TXDATA_delay[93]; // rv MustConnect
  assign CH2_TXDATA_in[94] = (CH2_TXDATA[94] !== 1'bz) && CH2_TXDATA_delay[94]; // rv MustConnect
  assign CH2_TXDATA_in[95] = (CH2_TXDATA[95] !== 1'bz) && CH2_TXDATA_delay[95]; // rv MustConnect
  assign CH2_TXDATA_in[96] = (CH2_TXDATA[96] !== 1'bz) && CH2_TXDATA_delay[96]; // rv MustConnect
  assign CH2_TXDATA_in[97] = (CH2_TXDATA[97] !== 1'bz) && CH2_TXDATA_delay[97]; // rv MustConnect
  assign CH2_TXDATA_in[98] = (CH2_TXDATA[98] !== 1'bz) && CH2_TXDATA_delay[98]; // rv MustConnect
  assign CH2_TXDATA_in[99] = (CH2_TXDATA[99] !== 1'bz) && CH2_TXDATA_delay[99]; // rv MustConnect
  assign CH2_TXDATA_in[9] = (CH2_TXDATA[9] !== 1'bz) && CH2_TXDATA_delay[9]; // rv MustConnect
  assign CH2_TXUSRCLK_in = (CH2_TXUSRCLK === 1'bz) || CH2_TXUSRCLK_delay; // rv 1
  assign CH3_DMONFIFORESET_in = (CH3_DMONFIFORESET === 1'bz) || CH3_DMONFIFORESET_delay; // rv 1
  assign CH3_DMONITORCLK_in = (CH3_DMONITORCLK === 1'bz) || CH3_DMONITORCLK_delay; // rv 1
  assign CH3_EYESCANTRIGGER_in = (CH3_EYESCANTRIGGER === 1'bz) || CH3_EYESCANTRIGGER_delay; // rv 1
  assign CH3_LOOPBACK_in[0] = (CH3_LOOPBACK[0] !== 1'bz) && CH3_LOOPBACK_delay[0]; // rv MustConnect
  assign CH3_LOOPBACK_in[1] = (CH3_LOOPBACK[1] !== 1'bz) && CH3_LOOPBACK_delay[1]; // rv MustConnect
  assign CH3_LOOPBACK_in[2] = (CH3_LOOPBACK[2] !== 1'bz) && CH3_LOOPBACK_delay[2]; // rv MustConnect
  assign CH3_RXLATCLK_in = (CH3_RXLATCLK === 1'bz) || CH3_RXLATCLK_delay; // rv 1
  assign CH3_RXUSRCLK_in = (CH3_RXUSRCLK === 1'bz) || CH3_RXUSRCLK_delay; // rv 1
  assign CH3_TXDATA_in[0] = (CH3_TXDATA[0] !== 1'bz) && CH3_TXDATA_delay[0]; // rv MustConnect
  assign CH3_TXDATA_in[100] = (CH3_TXDATA[100] !== 1'bz) && CH3_TXDATA_delay[100]; // rv MustConnect
  assign CH3_TXDATA_in[101] = (CH3_TXDATA[101] !== 1'bz) && CH3_TXDATA_delay[101]; // rv MustConnect
  assign CH3_TXDATA_in[102] = (CH3_TXDATA[102] !== 1'bz) && CH3_TXDATA_delay[102]; // rv MustConnect
  assign CH3_TXDATA_in[103] = (CH3_TXDATA[103] !== 1'bz) && CH3_TXDATA_delay[103]; // rv MustConnect
  assign CH3_TXDATA_in[104] = (CH3_TXDATA[104] !== 1'bz) && CH3_TXDATA_delay[104]; // rv MustConnect
  assign CH3_TXDATA_in[105] = (CH3_TXDATA[105] !== 1'bz) && CH3_TXDATA_delay[105]; // rv MustConnect
  assign CH3_TXDATA_in[106] = (CH3_TXDATA[106] !== 1'bz) && CH3_TXDATA_delay[106]; // rv MustConnect
  assign CH3_TXDATA_in[107] = (CH3_TXDATA[107] !== 1'bz) && CH3_TXDATA_delay[107]; // rv MustConnect
  assign CH3_TXDATA_in[108] = (CH3_TXDATA[108] !== 1'bz) && CH3_TXDATA_delay[108]; // rv MustConnect
  assign CH3_TXDATA_in[109] = (CH3_TXDATA[109] !== 1'bz) && CH3_TXDATA_delay[109]; // rv MustConnect
  assign CH3_TXDATA_in[10] = (CH3_TXDATA[10] !== 1'bz) && CH3_TXDATA_delay[10]; // rv MustConnect
  assign CH3_TXDATA_in[110] = (CH3_TXDATA[110] !== 1'bz) && CH3_TXDATA_delay[110]; // rv MustConnect
  assign CH3_TXDATA_in[111] = (CH3_TXDATA[111] !== 1'bz) && CH3_TXDATA_delay[111]; // rv MustConnect
  assign CH3_TXDATA_in[112] = (CH3_TXDATA[112] !== 1'bz) && CH3_TXDATA_delay[112]; // rv MustConnect
  assign CH3_TXDATA_in[113] = (CH3_TXDATA[113] !== 1'bz) && CH3_TXDATA_delay[113]; // rv MustConnect
  assign CH3_TXDATA_in[114] = (CH3_TXDATA[114] !== 1'bz) && CH3_TXDATA_delay[114]; // rv MustConnect
  assign CH3_TXDATA_in[115] = (CH3_TXDATA[115] !== 1'bz) && CH3_TXDATA_delay[115]; // rv MustConnect
  assign CH3_TXDATA_in[116] = (CH3_TXDATA[116] !== 1'bz) && CH3_TXDATA_delay[116]; // rv MustConnect
  assign CH3_TXDATA_in[117] = (CH3_TXDATA[117] !== 1'bz) && CH3_TXDATA_delay[117]; // rv MustConnect
  assign CH3_TXDATA_in[118] = (CH3_TXDATA[118] !== 1'bz) && CH3_TXDATA_delay[118]; // rv MustConnect
  assign CH3_TXDATA_in[119] = (CH3_TXDATA[119] !== 1'bz) && CH3_TXDATA_delay[119]; // rv MustConnect
  assign CH3_TXDATA_in[11] = (CH3_TXDATA[11] !== 1'bz) && CH3_TXDATA_delay[11]; // rv MustConnect
  assign CH3_TXDATA_in[120] = (CH3_TXDATA[120] !== 1'bz) && CH3_TXDATA_delay[120]; // rv MustConnect
  assign CH3_TXDATA_in[121] = (CH3_TXDATA[121] !== 1'bz) && CH3_TXDATA_delay[121]; // rv MustConnect
  assign CH3_TXDATA_in[122] = (CH3_TXDATA[122] !== 1'bz) && CH3_TXDATA_delay[122]; // rv MustConnect
  assign CH3_TXDATA_in[123] = (CH3_TXDATA[123] !== 1'bz) && CH3_TXDATA_delay[123]; // rv MustConnect
  assign CH3_TXDATA_in[124] = (CH3_TXDATA[124] !== 1'bz) && CH3_TXDATA_delay[124]; // rv MustConnect
  assign CH3_TXDATA_in[125] = (CH3_TXDATA[125] !== 1'bz) && CH3_TXDATA_delay[125]; // rv MustConnect
  assign CH3_TXDATA_in[126] = (CH3_TXDATA[126] !== 1'bz) && CH3_TXDATA_delay[126]; // rv MustConnect
  assign CH3_TXDATA_in[127] = (CH3_TXDATA[127] !== 1'bz) && CH3_TXDATA_delay[127]; // rv MustConnect
  assign CH3_TXDATA_in[128] = (CH3_TXDATA[128] !== 1'bz) && CH3_TXDATA_delay[128]; // rv MustConnect
  assign CH3_TXDATA_in[129] = (CH3_TXDATA[129] !== 1'bz) && CH3_TXDATA_delay[129]; // rv MustConnect
  assign CH3_TXDATA_in[12] = (CH3_TXDATA[12] !== 1'bz) && CH3_TXDATA_delay[12]; // rv MustConnect
  assign CH3_TXDATA_in[130] = (CH3_TXDATA[130] !== 1'bz) && CH3_TXDATA_delay[130]; // rv MustConnect
  assign CH3_TXDATA_in[131] = (CH3_TXDATA[131] !== 1'bz) && CH3_TXDATA_delay[131]; // rv MustConnect
  assign CH3_TXDATA_in[132] = (CH3_TXDATA[132] !== 1'bz) && CH3_TXDATA_delay[132]; // rv MustConnect
  assign CH3_TXDATA_in[133] = (CH3_TXDATA[133] !== 1'bz) && CH3_TXDATA_delay[133]; // rv MustConnect
  assign CH3_TXDATA_in[134] = (CH3_TXDATA[134] !== 1'bz) && CH3_TXDATA_delay[134]; // rv MustConnect
  assign CH3_TXDATA_in[135] = (CH3_TXDATA[135] !== 1'bz) && CH3_TXDATA_delay[135]; // rv MustConnect
  assign CH3_TXDATA_in[136] = (CH3_TXDATA[136] !== 1'bz) && CH3_TXDATA_delay[136]; // rv MustConnect
  assign CH3_TXDATA_in[137] = (CH3_TXDATA[137] !== 1'bz) && CH3_TXDATA_delay[137]; // rv MustConnect
  assign CH3_TXDATA_in[138] = (CH3_TXDATA[138] !== 1'bz) && CH3_TXDATA_delay[138]; // rv MustConnect
  assign CH3_TXDATA_in[139] = (CH3_TXDATA[139] !== 1'bz) && CH3_TXDATA_delay[139]; // rv MustConnect
  assign CH3_TXDATA_in[13] = (CH3_TXDATA[13] !== 1'bz) && CH3_TXDATA_delay[13]; // rv MustConnect
  assign CH3_TXDATA_in[140] = (CH3_TXDATA[140] !== 1'bz) && CH3_TXDATA_delay[140]; // rv MustConnect
  assign CH3_TXDATA_in[141] = (CH3_TXDATA[141] !== 1'bz) && CH3_TXDATA_delay[141]; // rv MustConnect
  assign CH3_TXDATA_in[142] = (CH3_TXDATA[142] !== 1'bz) && CH3_TXDATA_delay[142]; // rv MustConnect
  assign CH3_TXDATA_in[143] = (CH3_TXDATA[143] !== 1'bz) && CH3_TXDATA_delay[143]; // rv MustConnect
  assign CH3_TXDATA_in[144] = (CH3_TXDATA[144] !== 1'bz) && CH3_TXDATA_delay[144]; // rv MustConnect
  assign CH3_TXDATA_in[145] = (CH3_TXDATA[145] !== 1'bz) && CH3_TXDATA_delay[145]; // rv MustConnect
  assign CH3_TXDATA_in[146] = (CH3_TXDATA[146] !== 1'bz) && CH3_TXDATA_delay[146]; // rv MustConnect
  assign CH3_TXDATA_in[147] = (CH3_TXDATA[147] !== 1'bz) && CH3_TXDATA_delay[147]; // rv MustConnect
  assign CH3_TXDATA_in[148] = (CH3_TXDATA[148] !== 1'bz) && CH3_TXDATA_delay[148]; // rv MustConnect
  assign CH3_TXDATA_in[149] = (CH3_TXDATA[149] !== 1'bz) && CH3_TXDATA_delay[149]; // rv MustConnect
  assign CH3_TXDATA_in[14] = (CH3_TXDATA[14] !== 1'bz) && CH3_TXDATA_delay[14]; // rv MustConnect
  assign CH3_TXDATA_in[150] = (CH3_TXDATA[150] !== 1'bz) && CH3_TXDATA_delay[150]; // rv MustConnect
  assign CH3_TXDATA_in[151] = (CH3_TXDATA[151] !== 1'bz) && CH3_TXDATA_delay[151]; // rv MustConnect
  assign CH3_TXDATA_in[152] = (CH3_TXDATA[152] !== 1'bz) && CH3_TXDATA_delay[152]; // rv MustConnect
  assign CH3_TXDATA_in[153] = (CH3_TXDATA[153] !== 1'bz) && CH3_TXDATA_delay[153]; // rv MustConnect
  assign CH3_TXDATA_in[154] = (CH3_TXDATA[154] !== 1'bz) && CH3_TXDATA_delay[154]; // rv MustConnect
  assign CH3_TXDATA_in[155] = (CH3_TXDATA[155] !== 1'bz) && CH3_TXDATA_delay[155]; // rv MustConnect
  assign CH3_TXDATA_in[156] = (CH3_TXDATA[156] !== 1'bz) && CH3_TXDATA_delay[156]; // rv MustConnect
  assign CH3_TXDATA_in[157] = (CH3_TXDATA[157] !== 1'bz) && CH3_TXDATA_delay[157]; // rv MustConnect
  assign CH3_TXDATA_in[158] = (CH3_TXDATA[158] !== 1'bz) && CH3_TXDATA_delay[158]; // rv MustConnect
  assign CH3_TXDATA_in[159] = (CH3_TXDATA[159] !== 1'bz) && CH3_TXDATA_delay[159]; // rv MustConnect
  assign CH3_TXDATA_in[15] = (CH3_TXDATA[15] !== 1'bz) && CH3_TXDATA_delay[15]; // rv MustConnect
  assign CH3_TXDATA_in[160] = (CH3_TXDATA[160] !== 1'bz) && CH3_TXDATA_delay[160]; // rv MustConnect
  assign CH3_TXDATA_in[161] = (CH3_TXDATA[161] !== 1'bz) && CH3_TXDATA_delay[161]; // rv MustConnect
  assign CH3_TXDATA_in[162] = (CH3_TXDATA[162] !== 1'bz) && CH3_TXDATA_delay[162]; // rv MustConnect
  assign CH3_TXDATA_in[163] = (CH3_TXDATA[163] !== 1'bz) && CH3_TXDATA_delay[163]; // rv MustConnect
  assign CH3_TXDATA_in[164] = (CH3_TXDATA[164] !== 1'bz) && CH3_TXDATA_delay[164]; // rv MustConnect
  assign CH3_TXDATA_in[165] = (CH3_TXDATA[165] !== 1'bz) && CH3_TXDATA_delay[165]; // rv MustConnect
  assign CH3_TXDATA_in[166] = (CH3_TXDATA[166] !== 1'bz) && CH3_TXDATA_delay[166]; // rv MustConnect
  assign CH3_TXDATA_in[167] = (CH3_TXDATA[167] !== 1'bz) && CH3_TXDATA_delay[167]; // rv MustConnect
  assign CH3_TXDATA_in[168] = (CH3_TXDATA[168] !== 1'bz) && CH3_TXDATA_delay[168]; // rv MustConnect
  assign CH3_TXDATA_in[169] = (CH3_TXDATA[169] !== 1'bz) && CH3_TXDATA_delay[169]; // rv MustConnect
  assign CH3_TXDATA_in[16] = (CH3_TXDATA[16] !== 1'bz) && CH3_TXDATA_delay[16]; // rv MustConnect
  assign CH3_TXDATA_in[170] = (CH3_TXDATA[170] !== 1'bz) && CH3_TXDATA_delay[170]; // rv MustConnect
  assign CH3_TXDATA_in[171] = (CH3_TXDATA[171] !== 1'bz) && CH3_TXDATA_delay[171]; // rv MustConnect
  assign CH3_TXDATA_in[172] = (CH3_TXDATA[172] !== 1'bz) && CH3_TXDATA_delay[172]; // rv MustConnect
  assign CH3_TXDATA_in[173] = (CH3_TXDATA[173] !== 1'bz) && CH3_TXDATA_delay[173]; // rv MustConnect
  assign CH3_TXDATA_in[174] = (CH3_TXDATA[174] !== 1'bz) && CH3_TXDATA_delay[174]; // rv MustConnect
  assign CH3_TXDATA_in[175] = (CH3_TXDATA[175] !== 1'bz) && CH3_TXDATA_delay[175]; // rv MustConnect
  assign CH3_TXDATA_in[176] = (CH3_TXDATA[176] !== 1'bz) && CH3_TXDATA_delay[176]; // rv MustConnect
  assign CH3_TXDATA_in[177] = (CH3_TXDATA[177] !== 1'bz) && CH3_TXDATA_delay[177]; // rv MustConnect
  assign CH3_TXDATA_in[178] = (CH3_TXDATA[178] !== 1'bz) && CH3_TXDATA_delay[178]; // rv MustConnect
  assign CH3_TXDATA_in[179] = (CH3_TXDATA[179] !== 1'bz) && CH3_TXDATA_delay[179]; // rv MustConnect
  assign CH3_TXDATA_in[17] = (CH3_TXDATA[17] !== 1'bz) && CH3_TXDATA_delay[17]; // rv MustConnect
  assign CH3_TXDATA_in[180] = (CH3_TXDATA[180] !== 1'bz) && CH3_TXDATA_delay[180]; // rv MustConnect
  assign CH3_TXDATA_in[181] = (CH3_TXDATA[181] !== 1'bz) && CH3_TXDATA_delay[181]; // rv MustConnect
  assign CH3_TXDATA_in[182] = (CH3_TXDATA[182] !== 1'bz) && CH3_TXDATA_delay[182]; // rv MustConnect
  assign CH3_TXDATA_in[183] = (CH3_TXDATA[183] !== 1'bz) && CH3_TXDATA_delay[183]; // rv MustConnect
  assign CH3_TXDATA_in[184] = (CH3_TXDATA[184] !== 1'bz) && CH3_TXDATA_delay[184]; // rv MustConnect
  assign CH3_TXDATA_in[185] = (CH3_TXDATA[185] !== 1'bz) && CH3_TXDATA_delay[185]; // rv MustConnect
  assign CH3_TXDATA_in[186] = (CH3_TXDATA[186] !== 1'bz) && CH3_TXDATA_delay[186]; // rv MustConnect
  assign CH3_TXDATA_in[187] = (CH3_TXDATA[187] !== 1'bz) && CH3_TXDATA_delay[187]; // rv MustConnect
  assign CH3_TXDATA_in[188] = (CH3_TXDATA[188] !== 1'bz) && CH3_TXDATA_delay[188]; // rv MustConnect
  assign CH3_TXDATA_in[189] = (CH3_TXDATA[189] !== 1'bz) && CH3_TXDATA_delay[189]; // rv MustConnect
  assign CH3_TXDATA_in[18] = (CH3_TXDATA[18] !== 1'bz) && CH3_TXDATA_delay[18]; // rv MustConnect
  assign CH3_TXDATA_in[190] = (CH3_TXDATA[190] !== 1'bz) && CH3_TXDATA_delay[190]; // rv MustConnect
  assign CH3_TXDATA_in[191] = (CH3_TXDATA[191] !== 1'bz) && CH3_TXDATA_delay[191]; // rv MustConnect
  assign CH3_TXDATA_in[192] = (CH3_TXDATA[192] !== 1'bz) && CH3_TXDATA_delay[192]; // rv MustConnect
  assign CH3_TXDATA_in[193] = (CH3_TXDATA[193] !== 1'bz) && CH3_TXDATA_delay[193]; // rv MustConnect
  assign CH3_TXDATA_in[194] = (CH3_TXDATA[194] !== 1'bz) && CH3_TXDATA_delay[194]; // rv MustConnect
  assign CH3_TXDATA_in[195] = (CH3_TXDATA[195] !== 1'bz) && CH3_TXDATA_delay[195]; // rv MustConnect
  assign CH3_TXDATA_in[196] = (CH3_TXDATA[196] !== 1'bz) && CH3_TXDATA_delay[196]; // rv MustConnect
  assign CH3_TXDATA_in[197] = (CH3_TXDATA[197] !== 1'bz) && CH3_TXDATA_delay[197]; // rv MustConnect
  assign CH3_TXDATA_in[198] = (CH3_TXDATA[198] !== 1'bz) && CH3_TXDATA_delay[198]; // rv MustConnect
  assign CH3_TXDATA_in[199] = (CH3_TXDATA[199] !== 1'bz) && CH3_TXDATA_delay[199]; // rv MustConnect
  assign CH3_TXDATA_in[19] = (CH3_TXDATA[19] !== 1'bz) && CH3_TXDATA_delay[19]; // rv MustConnect
  assign CH3_TXDATA_in[1] = (CH3_TXDATA[1] !== 1'bz) && CH3_TXDATA_delay[1]; // rv MustConnect
  assign CH3_TXDATA_in[200] = (CH3_TXDATA[200] !== 1'bz) && CH3_TXDATA_delay[200]; // rv MustConnect
  assign CH3_TXDATA_in[201] = (CH3_TXDATA[201] !== 1'bz) && CH3_TXDATA_delay[201]; // rv MustConnect
  assign CH3_TXDATA_in[202] = (CH3_TXDATA[202] !== 1'bz) && CH3_TXDATA_delay[202]; // rv MustConnect
  assign CH3_TXDATA_in[203] = (CH3_TXDATA[203] !== 1'bz) && CH3_TXDATA_delay[203]; // rv MustConnect
  assign CH3_TXDATA_in[204] = (CH3_TXDATA[204] !== 1'bz) && CH3_TXDATA_delay[204]; // rv MustConnect
  assign CH3_TXDATA_in[205] = (CH3_TXDATA[205] !== 1'bz) && CH3_TXDATA_delay[205]; // rv MustConnect
  assign CH3_TXDATA_in[206] = (CH3_TXDATA[206] !== 1'bz) && CH3_TXDATA_delay[206]; // rv MustConnect
  assign CH3_TXDATA_in[207] = (CH3_TXDATA[207] !== 1'bz) && CH3_TXDATA_delay[207]; // rv MustConnect
  assign CH3_TXDATA_in[208] = (CH3_TXDATA[208] !== 1'bz) && CH3_TXDATA_delay[208]; // rv MustConnect
  assign CH3_TXDATA_in[209] = (CH3_TXDATA[209] !== 1'bz) && CH3_TXDATA_delay[209]; // rv MustConnect
  assign CH3_TXDATA_in[20] = (CH3_TXDATA[20] !== 1'bz) && CH3_TXDATA_delay[20]; // rv MustConnect
  assign CH3_TXDATA_in[210] = (CH3_TXDATA[210] !== 1'bz) && CH3_TXDATA_delay[210]; // rv MustConnect
  assign CH3_TXDATA_in[211] = (CH3_TXDATA[211] !== 1'bz) && CH3_TXDATA_delay[211]; // rv MustConnect
  assign CH3_TXDATA_in[212] = (CH3_TXDATA[212] !== 1'bz) && CH3_TXDATA_delay[212]; // rv MustConnect
  assign CH3_TXDATA_in[213] = (CH3_TXDATA[213] !== 1'bz) && CH3_TXDATA_delay[213]; // rv MustConnect
  assign CH3_TXDATA_in[214] = (CH3_TXDATA[214] !== 1'bz) && CH3_TXDATA_delay[214]; // rv MustConnect
  assign CH3_TXDATA_in[215] = (CH3_TXDATA[215] !== 1'bz) && CH3_TXDATA_delay[215]; // rv MustConnect
  assign CH3_TXDATA_in[216] = (CH3_TXDATA[216] !== 1'bz) && CH3_TXDATA_delay[216]; // rv MustConnect
  assign CH3_TXDATA_in[217] = (CH3_TXDATA[217] !== 1'bz) && CH3_TXDATA_delay[217]; // rv MustConnect
  assign CH3_TXDATA_in[218] = (CH3_TXDATA[218] !== 1'bz) && CH3_TXDATA_delay[218]; // rv MustConnect
  assign CH3_TXDATA_in[219] = (CH3_TXDATA[219] !== 1'bz) && CH3_TXDATA_delay[219]; // rv MustConnect
  assign CH3_TXDATA_in[21] = (CH3_TXDATA[21] !== 1'bz) && CH3_TXDATA_delay[21]; // rv MustConnect
  assign CH3_TXDATA_in[220] = (CH3_TXDATA[220] !== 1'bz) && CH3_TXDATA_delay[220]; // rv MustConnect
  assign CH3_TXDATA_in[221] = (CH3_TXDATA[221] !== 1'bz) && CH3_TXDATA_delay[221]; // rv MustConnect
  assign CH3_TXDATA_in[222] = (CH3_TXDATA[222] !== 1'bz) && CH3_TXDATA_delay[222]; // rv MustConnect
  assign CH3_TXDATA_in[223] = (CH3_TXDATA[223] !== 1'bz) && CH3_TXDATA_delay[223]; // rv MustConnect
  assign CH3_TXDATA_in[224] = (CH3_TXDATA[224] !== 1'bz) && CH3_TXDATA_delay[224]; // rv MustConnect
  assign CH3_TXDATA_in[225] = (CH3_TXDATA[225] !== 1'bz) && CH3_TXDATA_delay[225]; // rv MustConnect
  assign CH3_TXDATA_in[226] = (CH3_TXDATA[226] !== 1'bz) && CH3_TXDATA_delay[226]; // rv MustConnect
  assign CH3_TXDATA_in[227] = (CH3_TXDATA[227] !== 1'bz) && CH3_TXDATA_delay[227]; // rv MustConnect
  assign CH3_TXDATA_in[228] = (CH3_TXDATA[228] !== 1'bz) && CH3_TXDATA_delay[228]; // rv MustConnect
  assign CH3_TXDATA_in[229] = (CH3_TXDATA[229] !== 1'bz) && CH3_TXDATA_delay[229]; // rv MustConnect
  assign CH3_TXDATA_in[22] = (CH3_TXDATA[22] !== 1'bz) && CH3_TXDATA_delay[22]; // rv MustConnect
  assign CH3_TXDATA_in[230] = (CH3_TXDATA[230] !== 1'bz) && CH3_TXDATA_delay[230]; // rv MustConnect
  assign CH3_TXDATA_in[231] = (CH3_TXDATA[231] !== 1'bz) && CH3_TXDATA_delay[231]; // rv MustConnect
  assign CH3_TXDATA_in[232] = (CH3_TXDATA[232] !== 1'bz) && CH3_TXDATA_delay[232]; // rv MustConnect
  assign CH3_TXDATA_in[233] = (CH3_TXDATA[233] !== 1'bz) && CH3_TXDATA_delay[233]; // rv MustConnect
  assign CH3_TXDATA_in[234] = (CH3_TXDATA[234] !== 1'bz) && CH3_TXDATA_delay[234]; // rv MustConnect
  assign CH3_TXDATA_in[235] = (CH3_TXDATA[235] !== 1'bz) && CH3_TXDATA_delay[235]; // rv MustConnect
  assign CH3_TXDATA_in[236] = (CH3_TXDATA[236] !== 1'bz) && CH3_TXDATA_delay[236]; // rv MustConnect
  assign CH3_TXDATA_in[237] = (CH3_TXDATA[237] !== 1'bz) && CH3_TXDATA_delay[237]; // rv MustConnect
  assign CH3_TXDATA_in[238] = (CH3_TXDATA[238] !== 1'bz) && CH3_TXDATA_delay[238]; // rv MustConnect
  assign CH3_TXDATA_in[239] = (CH3_TXDATA[239] !== 1'bz) && CH3_TXDATA_delay[239]; // rv MustConnect
  assign CH3_TXDATA_in[23] = (CH3_TXDATA[23] !== 1'bz) && CH3_TXDATA_delay[23]; // rv MustConnect
  assign CH3_TXDATA_in[240] = (CH3_TXDATA[240] !== 1'bz) && CH3_TXDATA_delay[240]; // rv MustConnect
  assign CH3_TXDATA_in[241] = (CH3_TXDATA[241] !== 1'bz) && CH3_TXDATA_delay[241]; // rv MustConnect
  assign CH3_TXDATA_in[242] = (CH3_TXDATA[242] !== 1'bz) && CH3_TXDATA_delay[242]; // rv MustConnect
  assign CH3_TXDATA_in[243] = (CH3_TXDATA[243] !== 1'bz) && CH3_TXDATA_delay[243]; // rv MustConnect
  assign CH3_TXDATA_in[244] = (CH3_TXDATA[244] !== 1'bz) && CH3_TXDATA_delay[244]; // rv MustConnect
  assign CH3_TXDATA_in[245] = (CH3_TXDATA[245] !== 1'bz) && CH3_TXDATA_delay[245]; // rv MustConnect
  assign CH3_TXDATA_in[246] = (CH3_TXDATA[246] !== 1'bz) && CH3_TXDATA_delay[246]; // rv MustConnect
  assign CH3_TXDATA_in[247] = (CH3_TXDATA[247] !== 1'bz) && CH3_TXDATA_delay[247]; // rv MustConnect
  assign CH3_TXDATA_in[248] = (CH3_TXDATA[248] !== 1'bz) && CH3_TXDATA_delay[248]; // rv MustConnect
  assign CH3_TXDATA_in[249] = (CH3_TXDATA[249] !== 1'bz) && CH3_TXDATA_delay[249]; // rv MustConnect
  assign CH3_TXDATA_in[24] = (CH3_TXDATA[24] !== 1'bz) && CH3_TXDATA_delay[24]; // rv MustConnect
  assign CH3_TXDATA_in[250] = (CH3_TXDATA[250] !== 1'bz) && CH3_TXDATA_delay[250]; // rv MustConnect
  assign CH3_TXDATA_in[251] = (CH3_TXDATA[251] !== 1'bz) && CH3_TXDATA_delay[251]; // rv MustConnect
  assign CH3_TXDATA_in[252] = (CH3_TXDATA[252] !== 1'bz) && CH3_TXDATA_delay[252]; // rv MustConnect
  assign CH3_TXDATA_in[253] = (CH3_TXDATA[253] !== 1'bz) && CH3_TXDATA_delay[253]; // rv MustConnect
  assign CH3_TXDATA_in[254] = (CH3_TXDATA[254] !== 1'bz) && CH3_TXDATA_delay[254]; // rv MustConnect
  assign CH3_TXDATA_in[255] = (CH3_TXDATA[255] !== 1'bz) && CH3_TXDATA_delay[255]; // rv MustConnect
  assign CH3_TXDATA_in[25] = (CH3_TXDATA[25] !== 1'bz) && CH3_TXDATA_delay[25]; // rv MustConnect
  assign CH3_TXDATA_in[26] = (CH3_TXDATA[26] !== 1'bz) && CH3_TXDATA_delay[26]; // rv MustConnect
  assign CH3_TXDATA_in[27] = (CH3_TXDATA[27] !== 1'bz) && CH3_TXDATA_delay[27]; // rv MustConnect
  assign CH3_TXDATA_in[28] = (CH3_TXDATA[28] !== 1'bz) && CH3_TXDATA_delay[28]; // rv MustConnect
  assign CH3_TXDATA_in[29] = (CH3_TXDATA[29] !== 1'bz) && CH3_TXDATA_delay[29]; // rv MustConnect
  assign CH3_TXDATA_in[2] = (CH3_TXDATA[2] !== 1'bz) && CH3_TXDATA_delay[2]; // rv MustConnect
  assign CH3_TXDATA_in[30] = (CH3_TXDATA[30] !== 1'bz) && CH3_TXDATA_delay[30]; // rv MustConnect
  assign CH3_TXDATA_in[31] = (CH3_TXDATA[31] !== 1'bz) && CH3_TXDATA_delay[31]; // rv MustConnect
  assign CH3_TXDATA_in[32] = (CH3_TXDATA[32] !== 1'bz) && CH3_TXDATA_delay[32]; // rv MustConnect
  assign CH3_TXDATA_in[33] = (CH3_TXDATA[33] !== 1'bz) && CH3_TXDATA_delay[33]; // rv MustConnect
  assign CH3_TXDATA_in[34] = (CH3_TXDATA[34] !== 1'bz) && CH3_TXDATA_delay[34]; // rv MustConnect
  assign CH3_TXDATA_in[35] = (CH3_TXDATA[35] !== 1'bz) && CH3_TXDATA_delay[35]; // rv MustConnect
  assign CH3_TXDATA_in[36] = (CH3_TXDATA[36] !== 1'bz) && CH3_TXDATA_delay[36]; // rv MustConnect
  assign CH3_TXDATA_in[37] = (CH3_TXDATA[37] !== 1'bz) && CH3_TXDATA_delay[37]; // rv MustConnect
  assign CH3_TXDATA_in[38] = (CH3_TXDATA[38] !== 1'bz) && CH3_TXDATA_delay[38]; // rv MustConnect
  assign CH3_TXDATA_in[39] = (CH3_TXDATA[39] !== 1'bz) && CH3_TXDATA_delay[39]; // rv MustConnect
  assign CH3_TXDATA_in[3] = (CH3_TXDATA[3] !== 1'bz) && CH3_TXDATA_delay[3]; // rv MustConnect
  assign CH3_TXDATA_in[40] = (CH3_TXDATA[40] !== 1'bz) && CH3_TXDATA_delay[40]; // rv MustConnect
  assign CH3_TXDATA_in[41] = (CH3_TXDATA[41] !== 1'bz) && CH3_TXDATA_delay[41]; // rv MustConnect
  assign CH3_TXDATA_in[42] = (CH3_TXDATA[42] !== 1'bz) && CH3_TXDATA_delay[42]; // rv MustConnect
  assign CH3_TXDATA_in[43] = (CH3_TXDATA[43] !== 1'bz) && CH3_TXDATA_delay[43]; // rv MustConnect
  assign CH3_TXDATA_in[44] = (CH3_TXDATA[44] !== 1'bz) && CH3_TXDATA_delay[44]; // rv MustConnect
  assign CH3_TXDATA_in[45] = (CH3_TXDATA[45] !== 1'bz) && CH3_TXDATA_delay[45]; // rv MustConnect
  assign CH3_TXDATA_in[46] = (CH3_TXDATA[46] !== 1'bz) && CH3_TXDATA_delay[46]; // rv MustConnect
  assign CH3_TXDATA_in[47] = (CH3_TXDATA[47] !== 1'bz) && CH3_TXDATA_delay[47]; // rv MustConnect
  assign CH3_TXDATA_in[48] = (CH3_TXDATA[48] !== 1'bz) && CH3_TXDATA_delay[48]; // rv MustConnect
  assign CH3_TXDATA_in[49] = (CH3_TXDATA[49] !== 1'bz) && CH3_TXDATA_delay[49]; // rv MustConnect
  assign CH3_TXDATA_in[4] = (CH3_TXDATA[4] !== 1'bz) && CH3_TXDATA_delay[4]; // rv MustConnect
  assign CH3_TXDATA_in[50] = (CH3_TXDATA[50] !== 1'bz) && CH3_TXDATA_delay[50]; // rv MustConnect
  assign CH3_TXDATA_in[51] = (CH3_TXDATA[51] !== 1'bz) && CH3_TXDATA_delay[51]; // rv MustConnect
  assign CH3_TXDATA_in[52] = (CH3_TXDATA[52] !== 1'bz) && CH3_TXDATA_delay[52]; // rv MustConnect
  assign CH3_TXDATA_in[53] = (CH3_TXDATA[53] !== 1'bz) && CH3_TXDATA_delay[53]; // rv MustConnect
  assign CH3_TXDATA_in[54] = (CH3_TXDATA[54] !== 1'bz) && CH3_TXDATA_delay[54]; // rv MustConnect
  assign CH3_TXDATA_in[55] = (CH3_TXDATA[55] !== 1'bz) && CH3_TXDATA_delay[55]; // rv MustConnect
  assign CH3_TXDATA_in[56] = (CH3_TXDATA[56] !== 1'bz) && CH3_TXDATA_delay[56]; // rv MustConnect
  assign CH3_TXDATA_in[57] = (CH3_TXDATA[57] !== 1'bz) && CH3_TXDATA_delay[57]; // rv MustConnect
  assign CH3_TXDATA_in[58] = (CH3_TXDATA[58] !== 1'bz) && CH3_TXDATA_delay[58]; // rv MustConnect
  assign CH3_TXDATA_in[59] = (CH3_TXDATA[59] !== 1'bz) && CH3_TXDATA_delay[59]; // rv MustConnect
  assign CH3_TXDATA_in[5] = (CH3_TXDATA[5] !== 1'bz) && CH3_TXDATA_delay[5]; // rv MustConnect
  assign CH3_TXDATA_in[60] = (CH3_TXDATA[60] !== 1'bz) && CH3_TXDATA_delay[60]; // rv MustConnect
  assign CH3_TXDATA_in[61] = (CH3_TXDATA[61] !== 1'bz) && CH3_TXDATA_delay[61]; // rv MustConnect
  assign CH3_TXDATA_in[62] = (CH3_TXDATA[62] !== 1'bz) && CH3_TXDATA_delay[62]; // rv MustConnect
  assign CH3_TXDATA_in[63] = (CH3_TXDATA[63] !== 1'bz) && CH3_TXDATA_delay[63]; // rv MustConnect
  assign CH3_TXDATA_in[64] = (CH3_TXDATA[64] !== 1'bz) && CH3_TXDATA_delay[64]; // rv MustConnect
  assign CH3_TXDATA_in[65] = (CH3_TXDATA[65] !== 1'bz) && CH3_TXDATA_delay[65]; // rv MustConnect
  assign CH3_TXDATA_in[66] = (CH3_TXDATA[66] !== 1'bz) && CH3_TXDATA_delay[66]; // rv MustConnect
  assign CH3_TXDATA_in[67] = (CH3_TXDATA[67] !== 1'bz) && CH3_TXDATA_delay[67]; // rv MustConnect
  assign CH3_TXDATA_in[68] = (CH3_TXDATA[68] !== 1'bz) && CH3_TXDATA_delay[68]; // rv MustConnect
  assign CH3_TXDATA_in[69] = (CH3_TXDATA[69] !== 1'bz) && CH3_TXDATA_delay[69]; // rv MustConnect
  assign CH3_TXDATA_in[6] = (CH3_TXDATA[6] !== 1'bz) && CH3_TXDATA_delay[6]; // rv MustConnect
  assign CH3_TXDATA_in[70] = (CH3_TXDATA[70] !== 1'bz) && CH3_TXDATA_delay[70]; // rv MustConnect
  assign CH3_TXDATA_in[71] = (CH3_TXDATA[71] !== 1'bz) && CH3_TXDATA_delay[71]; // rv MustConnect
  assign CH3_TXDATA_in[72] = (CH3_TXDATA[72] !== 1'bz) && CH3_TXDATA_delay[72]; // rv MustConnect
  assign CH3_TXDATA_in[73] = (CH3_TXDATA[73] !== 1'bz) && CH3_TXDATA_delay[73]; // rv MustConnect
  assign CH3_TXDATA_in[74] = (CH3_TXDATA[74] !== 1'bz) && CH3_TXDATA_delay[74]; // rv MustConnect
  assign CH3_TXDATA_in[75] = (CH3_TXDATA[75] !== 1'bz) && CH3_TXDATA_delay[75]; // rv MustConnect
  assign CH3_TXDATA_in[76] = (CH3_TXDATA[76] !== 1'bz) && CH3_TXDATA_delay[76]; // rv MustConnect
  assign CH3_TXDATA_in[77] = (CH3_TXDATA[77] !== 1'bz) && CH3_TXDATA_delay[77]; // rv MustConnect
  assign CH3_TXDATA_in[78] = (CH3_TXDATA[78] !== 1'bz) && CH3_TXDATA_delay[78]; // rv MustConnect
  assign CH3_TXDATA_in[79] = (CH3_TXDATA[79] !== 1'bz) && CH3_TXDATA_delay[79]; // rv MustConnect
  assign CH3_TXDATA_in[7] = (CH3_TXDATA[7] !== 1'bz) && CH3_TXDATA_delay[7]; // rv MustConnect
  assign CH3_TXDATA_in[80] = (CH3_TXDATA[80] !== 1'bz) && CH3_TXDATA_delay[80]; // rv MustConnect
  assign CH3_TXDATA_in[81] = (CH3_TXDATA[81] !== 1'bz) && CH3_TXDATA_delay[81]; // rv MustConnect
  assign CH3_TXDATA_in[82] = (CH3_TXDATA[82] !== 1'bz) && CH3_TXDATA_delay[82]; // rv MustConnect
  assign CH3_TXDATA_in[83] = (CH3_TXDATA[83] !== 1'bz) && CH3_TXDATA_delay[83]; // rv MustConnect
  assign CH3_TXDATA_in[84] = (CH3_TXDATA[84] !== 1'bz) && CH3_TXDATA_delay[84]; // rv MustConnect
  assign CH3_TXDATA_in[85] = (CH3_TXDATA[85] !== 1'bz) && CH3_TXDATA_delay[85]; // rv MustConnect
  assign CH3_TXDATA_in[86] = (CH3_TXDATA[86] !== 1'bz) && CH3_TXDATA_delay[86]; // rv MustConnect
  assign CH3_TXDATA_in[87] = (CH3_TXDATA[87] !== 1'bz) && CH3_TXDATA_delay[87]; // rv MustConnect
  assign CH3_TXDATA_in[88] = (CH3_TXDATA[88] !== 1'bz) && CH3_TXDATA_delay[88]; // rv MustConnect
  assign CH3_TXDATA_in[89] = (CH3_TXDATA[89] !== 1'bz) && CH3_TXDATA_delay[89]; // rv MustConnect
  assign CH3_TXDATA_in[8] = (CH3_TXDATA[8] !== 1'bz) && CH3_TXDATA_delay[8]; // rv MustConnect
  assign CH3_TXDATA_in[90] = (CH3_TXDATA[90] !== 1'bz) && CH3_TXDATA_delay[90]; // rv MustConnect
  assign CH3_TXDATA_in[91] = (CH3_TXDATA[91] !== 1'bz) && CH3_TXDATA_delay[91]; // rv MustConnect
  assign CH3_TXDATA_in[92] = (CH3_TXDATA[92] !== 1'bz) && CH3_TXDATA_delay[92]; // rv MustConnect
  assign CH3_TXDATA_in[93] = (CH3_TXDATA[93] !== 1'bz) && CH3_TXDATA_delay[93]; // rv MustConnect
  assign CH3_TXDATA_in[94] = (CH3_TXDATA[94] !== 1'bz) && CH3_TXDATA_delay[94]; // rv MustConnect
  assign CH3_TXDATA_in[95] = (CH3_TXDATA[95] !== 1'bz) && CH3_TXDATA_delay[95]; // rv MustConnect
  assign CH3_TXDATA_in[96] = (CH3_TXDATA[96] !== 1'bz) && CH3_TXDATA_delay[96]; // rv MustConnect
  assign CH3_TXDATA_in[97] = (CH3_TXDATA[97] !== 1'bz) && CH3_TXDATA_delay[97]; // rv MustConnect
  assign CH3_TXDATA_in[98] = (CH3_TXDATA[98] !== 1'bz) && CH3_TXDATA_delay[98]; // rv MustConnect
  assign CH3_TXDATA_in[99] = (CH3_TXDATA[99] !== 1'bz) && CH3_TXDATA_delay[99]; // rv MustConnect
  assign CH3_TXDATA_in[9] = (CH3_TXDATA[9] !== 1'bz) && CH3_TXDATA_delay[9]; // rv MustConnect
  assign CH3_TXUSRCLK_in = (CH3_TXUSRCLK === 1'bz) || CH3_TXUSRCLK_delay; // rv 1
  assign COESTATUSDEBUG_in = (COESTATUSDEBUG === 1'bz) || COESTATUSDEBUG_delay; // rv 1
  assign DEBUGTRACECLK_in = (DEBUGTRACECLK === 1'bz) || DEBUGTRACECLK_delay; // rv 1
  assign DEBUGTRACEREADY_in = (DEBUGTRACEREADY === 1'bz) || DEBUGTRACEREADY_delay; // rv 1
  assign M0_AXIS_TREADY_in = (M0_AXIS_TREADY === 1'bz) || M0_AXIS_TREADY_delay; // rv 1
  assign M1_AXIS_TREADY_in = (M1_AXIS_TREADY === 1'bz) || M1_AXIS_TREADY_delay; // rv 1
  assign M2_AXIS_TREADY_in = (M2_AXIS_TREADY === 1'bz) || M2_AXIS_TREADY_delay; // rv 1
  assign M3_AXIS_TREADY_in = (M3_AXIS_TREADY === 1'bz) || M3_AXIS_TREADY_delay; // rv 1
  assign S0_AXIS_TDATA_in[0] = (S0_AXIS_TDATA[0] !== 1'bz) && S0_AXIS_TDATA_delay[0]; // rv MustConnect
  assign S0_AXIS_TDATA_in[10] = (S0_AXIS_TDATA[10] !== 1'bz) && S0_AXIS_TDATA_delay[10]; // rv MustConnect
  assign S0_AXIS_TDATA_in[11] = (S0_AXIS_TDATA[11] !== 1'bz) && S0_AXIS_TDATA_delay[11]; // rv MustConnect
  assign S0_AXIS_TDATA_in[12] = (S0_AXIS_TDATA[12] !== 1'bz) && S0_AXIS_TDATA_delay[12]; // rv MustConnect
  assign S0_AXIS_TDATA_in[13] = (S0_AXIS_TDATA[13] !== 1'bz) && S0_AXIS_TDATA_delay[13]; // rv MustConnect
  assign S0_AXIS_TDATA_in[14] = (S0_AXIS_TDATA[14] !== 1'bz) && S0_AXIS_TDATA_delay[14]; // rv MustConnect
  assign S0_AXIS_TDATA_in[15] = (S0_AXIS_TDATA[15] !== 1'bz) && S0_AXIS_TDATA_delay[15]; // rv MustConnect
  assign S0_AXIS_TDATA_in[16] = (S0_AXIS_TDATA[16] !== 1'bz) && S0_AXIS_TDATA_delay[16]; // rv MustConnect
  assign S0_AXIS_TDATA_in[17] = (S0_AXIS_TDATA[17] !== 1'bz) && S0_AXIS_TDATA_delay[17]; // rv MustConnect
  assign S0_AXIS_TDATA_in[18] = (S0_AXIS_TDATA[18] !== 1'bz) && S0_AXIS_TDATA_delay[18]; // rv MustConnect
  assign S0_AXIS_TDATA_in[19] = (S0_AXIS_TDATA[19] !== 1'bz) && S0_AXIS_TDATA_delay[19]; // rv MustConnect
  assign S0_AXIS_TDATA_in[1] = (S0_AXIS_TDATA[1] !== 1'bz) && S0_AXIS_TDATA_delay[1]; // rv MustConnect
  assign S0_AXIS_TDATA_in[20] = (S0_AXIS_TDATA[20] !== 1'bz) && S0_AXIS_TDATA_delay[20]; // rv MustConnect
  assign S0_AXIS_TDATA_in[21] = (S0_AXIS_TDATA[21] !== 1'bz) && S0_AXIS_TDATA_delay[21]; // rv MustConnect
  assign S0_AXIS_TDATA_in[22] = (S0_AXIS_TDATA[22] !== 1'bz) && S0_AXIS_TDATA_delay[22]; // rv MustConnect
  assign S0_AXIS_TDATA_in[23] = (S0_AXIS_TDATA[23] !== 1'bz) && S0_AXIS_TDATA_delay[23]; // rv MustConnect
  assign S0_AXIS_TDATA_in[24] = (S0_AXIS_TDATA[24] !== 1'bz) && S0_AXIS_TDATA_delay[24]; // rv MustConnect
  assign S0_AXIS_TDATA_in[25] = (S0_AXIS_TDATA[25] !== 1'bz) && S0_AXIS_TDATA_delay[25]; // rv MustConnect
  assign S0_AXIS_TDATA_in[26] = (S0_AXIS_TDATA[26] !== 1'bz) && S0_AXIS_TDATA_delay[26]; // rv MustConnect
  assign S0_AXIS_TDATA_in[27] = (S0_AXIS_TDATA[27] !== 1'bz) && S0_AXIS_TDATA_delay[27]; // rv MustConnect
  assign S0_AXIS_TDATA_in[28] = (S0_AXIS_TDATA[28] !== 1'bz) && S0_AXIS_TDATA_delay[28]; // rv MustConnect
  assign S0_AXIS_TDATA_in[29] = (S0_AXIS_TDATA[29] !== 1'bz) && S0_AXIS_TDATA_delay[29]; // rv MustConnect
  assign S0_AXIS_TDATA_in[2] = (S0_AXIS_TDATA[2] !== 1'bz) && S0_AXIS_TDATA_delay[2]; // rv MustConnect
  assign S0_AXIS_TDATA_in[30] = (S0_AXIS_TDATA[30] !== 1'bz) && S0_AXIS_TDATA_delay[30]; // rv MustConnect
  assign S0_AXIS_TDATA_in[31] = (S0_AXIS_TDATA[31] !== 1'bz) && S0_AXIS_TDATA_delay[31]; // rv MustConnect
  assign S0_AXIS_TDATA_in[3] = (S0_AXIS_TDATA[3] !== 1'bz) && S0_AXIS_TDATA_delay[3]; // rv MustConnect
  assign S0_AXIS_TDATA_in[4] = (S0_AXIS_TDATA[4] !== 1'bz) && S0_AXIS_TDATA_delay[4]; // rv MustConnect
  assign S0_AXIS_TDATA_in[5] = (S0_AXIS_TDATA[5] !== 1'bz) && S0_AXIS_TDATA_delay[5]; // rv MustConnect
  assign S0_AXIS_TDATA_in[6] = (S0_AXIS_TDATA[6] !== 1'bz) && S0_AXIS_TDATA_delay[6]; // rv MustConnect
  assign S0_AXIS_TDATA_in[7] = (S0_AXIS_TDATA[7] !== 1'bz) && S0_AXIS_TDATA_delay[7]; // rv MustConnect
  assign S0_AXIS_TDATA_in[8] = (S0_AXIS_TDATA[8] !== 1'bz) && S0_AXIS_TDATA_delay[8]; // rv MustConnect
  assign S0_AXIS_TDATA_in[9] = (S0_AXIS_TDATA[9] !== 1'bz) && S0_AXIS_TDATA_delay[9]; // rv MustConnect
  assign S0_AXIS_TLAST_in = (S0_AXIS_TLAST === 1'bz) || S0_AXIS_TLAST_delay; // rv 1
  assign S0_AXIS_TVALID_in = (S0_AXIS_TVALID === 1'bz) || S0_AXIS_TVALID_delay; // rv 1
  assign S1_AXIS_TDATA_in[0] = (S1_AXIS_TDATA[0] !== 1'bz) && S1_AXIS_TDATA_delay[0]; // rv MustConnect
  assign S1_AXIS_TDATA_in[10] = (S1_AXIS_TDATA[10] !== 1'bz) && S1_AXIS_TDATA_delay[10]; // rv MustConnect
  assign S1_AXIS_TDATA_in[11] = (S1_AXIS_TDATA[11] !== 1'bz) && S1_AXIS_TDATA_delay[11]; // rv MustConnect
  assign S1_AXIS_TDATA_in[12] = (S1_AXIS_TDATA[12] !== 1'bz) && S1_AXIS_TDATA_delay[12]; // rv MustConnect
  assign S1_AXIS_TDATA_in[13] = (S1_AXIS_TDATA[13] !== 1'bz) && S1_AXIS_TDATA_delay[13]; // rv MustConnect
  assign S1_AXIS_TDATA_in[14] = (S1_AXIS_TDATA[14] !== 1'bz) && S1_AXIS_TDATA_delay[14]; // rv MustConnect
  assign S1_AXIS_TDATA_in[15] = (S1_AXIS_TDATA[15] !== 1'bz) && S1_AXIS_TDATA_delay[15]; // rv MustConnect
  assign S1_AXIS_TDATA_in[16] = (S1_AXIS_TDATA[16] !== 1'bz) && S1_AXIS_TDATA_delay[16]; // rv MustConnect
  assign S1_AXIS_TDATA_in[17] = (S1_AXIS_TDATA[17] !== 1'bz) && S1_AXIS_TDATA_delay[17]; // rv MustConnect
  assign S1_AXIS_TDATA_in[18] = (S1_AXIS_TDATA[18] !== 1'bz) && S1_AXIS_TDATA_delay[18]; // rv MustConnect
  assign S1_AXIS_TDATA_in[19] = (S1_AXIS_TDATA[19] !== 1'bz) && S1_AXIS_TDATA_delay[19]; // rv MustConnect
  assign S1_AXIS_TDATA_in[1] = (S1_AXIS_TDATA[1] !== 1'bz) && S1_AXIS_TDATA_delay[1]; // rv MustConnect
  assign S1_AXIS_TDATA_in[20] = (S1_AXIS_TDATA[20] !== 1'bz) && S1_AXIS_TDATA_delay[20]; // rv MustConnect
  assign S1_AXIS_TDATA_in[21] = (S1_AXIS_TDATA[21] !== 1'bz) && S1_AXIS_TDATA_delay[21]; // rv MustConnect
  assign S1_AXIS_TDATA_in[22] = (S1_AXIS_TDATA[22] !== 1'bz) && S1_AXIS_TDATA_delay[22]; // rv MustConnect
  assign S1_AXIS_TDATA_in[23] = (S1_AXIS_TDATA[23] !== 1'bz) && S1_AXIS_TDATA_delay[23]; // rv MustConnect
  assign S1_AXIS_TDATA_in[24] = (S1_AXIS_TDATA[24] !== 1'bz) && S1_AXIS_TDATA_delay[24]; // rv MustConnect
  assign S1_AXIS_TDATA_in[25] = (S1_AXIS_TDATA[25] !== 1'bz) && S1_AXIS_TDATA_delay[25]; // rv MustConnect
  assign S1_AXIS_TDATA_in[26] = (S1_AXIS_TDATA[26] !== 1'bz) && S1_AXIS_TDATA_delay[26]; // rv MustConnect
  assign S1_AXIS_TDATA_in[27] = (S1_AXIS_TDATA[27] !== 1'bz) && S1_AXIS_TDATA_delay[27]; // rv MustConnect
  assign S1_AXIS_TDATA_in[28] = (S1_AXIS_TDATA[28] !== 1'bz) && S1_AXIS_TDATA_delay[28]; // rv MustConnect
  assign S1_AXIS_TDATA_in[29] = (S1_AXIS_TDATA[29] !== 1'bz) && S1_AXIS_TDATA_delay[29]; // rv MustConnect
  assign S1_AXIS_TDATA_in[2] = (S1_AXIS_TDATA[2] !== 1'bz) && S1_AXIS_TDATA_delay[2]; // rv MustConnect
  assign S1_AXIS_TDATA_in[30] = (S1_AXIS_TDATA[30] !== 1'bz) && S1_AXIS_TDATA_delay[30]; // rv MustConnect
  assign S1_AXIS_TDATA_in[31] = (S1_AXIS_TDATA[31] !== 1'bz) && S1_AXIS_TDATA_delay[31]; // rv MustConnect
  assign S1_AXIS_TDATA_in[3] = (S1_AXIS_TDATA[3] !== 1'bz) && S1_AXIS_TDATA_delay[3]; // rv MustConnect
  assign S1_AXIS_TDATA_in[4] = (S1_AXIS_TDATA[4] !== 1'bz) && S1_AXIS_TDATA_delay[4]; // rv MustConnect
  assign S1_AXIS_TDATA_in[5] = (S1_AXIS_TDATA[5] !== 1'bz) && S1_AXIS_TDATA_delay[5]; // rv MustConnect
  assign S1_AXIS_TDATA_in[6] = (S1_AXIS_TDATA[6] !== 1'bz) && S1_AXIS_TDATA_delay[6]; // rv MustConnect
  assign S1_AXIS_TDATA_in[7] = (S1_AXIS_TDATA[7] !== 1'bz) && S1_AXIS_TDATA_delay[7]; // rv MustConnect
  assign S1_AXIS_TDATA_in[8] = (S1_AXIS_TDATA[8] !== 1'bz) && S1_AXIS_TDATA_delay[8]; // rv MustConnect
  assign S1_AXIS_TDATA_in[9] = (S1_AXIS_TDATA[9] !== 1'bz) && S1_AXIS_TDATA_delay[9]; // rv MustConnect
  assign S1_AXIS_TLAST_in = (S1_AXIS_TLAST === 1'bz) || S1_AXIS_TLAST_delay; // rv 1
  assign S1_AXIS_TVALID_in = (S1_AXIS_TVALID === 1'bz) || S1_AXIS_TVALID_delay; // rv 1
  assign S2_AXIS_TDATA_in[0] = (S2_AXIS_TDATA[0] !== 1'bz) && S2_AXIS_TDATA_delay[0]; // rv MustConnect
  assign S2_AXIS_TDATA_in[10] = (S2_AXIS_TDATA[10] !== 1'bz) && S2_AXIS_TDATA_delay[10]; // rv MustConnect
  assign S2_AXIS_TDATA_in[11] = (S2_AXIS_TDATA[11] !== 1'bz) && S2_AXIS_TDATA_delay[11]; // rv MustConnect
  assign S2_AXIS_TDATA_in[12] = (S2_AXIS_TDATA[12] !== 1'bz) && S2_AXIS_TDATA_delay[12]; // rv MustConnect
  assign S2_AXIS_TDATA_in[13] = (S2_AXIS_TDATA[13] !== 1'bz) && S2_AXIS_TDATA_delay[13]; // rv MustConnect
  assign S2_AXIS_TDATA_in[14] = (S2_AXIS_TDATA[14] !== 1'bz) && S2_AXIS_TDATA_delay[14]; // rv MustConnect
  assign S2_AXIS_TDATA_in[15] = (S2_AXIS_TDATA[15] !== 1'bz) && S2_AXIS_TDATA_delay[15]; // rv MustConnect
  assign S2_AXIS_TDATA_in[16] = (S2_AXIS_TDATA[16] !== 1'bz) && S2_AXIS_TDATA_delay[16]; // rv MustConnect
  assign S2_AXIS_TDATA_in[17] = (S2_AXIS_TDATA[17] !== 1'bz) && S2_AXIS_TDATA_delay[17]; // rv MustConnect
  assign S2_AXIS_TDATA_in[18] = (S2_AXIS_TDATA[18] !== 1'bz) && S2_AXIS_TDATA_delay[18]; // rv MustConnect
  assign S2_AXIS_TDATA_in[19] = (S2_AXIS_TDATA[19] !== 1'bz) && S2_AXIS_TDATA_delay[19]; // rv MustConnect
  assign S2_AXIS_TDATA_in[1] = (S2_AXIS_TDATA[1] !== 1'bz) && S2_AXIS_TDATA_delay[1]; // rv MustConnect
  assign S2_AXIS_TDATA_in[20] = (S2_AXIS_TDATA[20] !== 1'bz) && S2_AXIS_TDATA_delay[20]; // rv MustConnect
  assign S2_AXIS_TDATA_in[21] = (S2_AXIS_TDATA[21] !== 1'bz) && S2_AXIS_TDATA_delay[21]; // rv MustConnect
  assign S2_AXIS_TDATA_in[22] = (S2_AXIS_TDATA[22] !== 1'bz) && S2_AXIS_TDATA_delay[22]; // rv MustConnect
  assign S2_AXIS_TDATA_in[23] = (S2_AXIS_TDATA[23] !== 1'bz) && S2_AXIS_TDATA_delay[23]; // rv MustConnect
  assign S2_AXIS_TDATA_in[24] = (S2_AXIS_TDATA[24] !== 1'bz) && S2_AXIS_TDATA_delay[24]; // rv MustConnect
  assign S2_AXIS_TDATA_in[25] = (S2_AXIS_TDATA[25] !== 1'bz) && S2_AXIS_TDATA_delay[25]; // rv MustConnect
  assign S2_AXIS_TDATA_in[26] = (S2_AXIS_TDATA[26] !== 1'bz) && S2_AXIS_TDATA_delay[26]; // rv MustConnect
  assign S2_AXIS_TDATA_in[27] = (S2_AXIS_TDATA[27] !== 1'bz) && S2_AXIS_TDATA_delay[27]; // rv MustConnect
  assign S2_AXIS_TDATA_in[28] = (S2_AXIS_TDATA[28] !== 1'bz) && S2_AXIS_TDATA_delay[28]; // rv MustConnect
  assign S2_AXIS_TDATA_in[29] = (S2_AXIS_TDATA[29] !== 1'bz) && S2_AXIS_TDATA_delay[29]; // rv MustConnect
  assign S2_AXIS_TDATA_in[2] = (S2_AXIS_TDATA[2] !== 1'bz) && S2_AXIS_TDATA_delay[2]; // rv MustConnect
  assign S2_AXIS_TDATA_in[30] = (S2_AXIS_TDATA[30] !== 1'bz) && S2_AXIS_TDATA_delay[30]; // rv MustConnect
  assign S2_AXIS_TDATA_in[31] = (S2_AXIS_TDATA[31] !== 1'bz) && S2_AXIS_TDATA_delay[31]; // rv MustConnect
  assign S2_AXIS_TDATA_in[3] = (S2_AXIS_TDATA[3] !== 1'bz) && S2_AXIS_TDATA_delay[3]; // rv MustConnect
  assign S2_AXIS_TDATA_in[4] = (S2_AXIS_TDATA[4] !== 1'bz) && S2_AXIS_TDATA_delay[4]; // rv MustConnect
  assign S2_AXIS_TDATA_in[5] = (S2_AXIS_TDATA[5] !== 1'bz) && S2_AXIS_TDATA_delay[5]; // rv MustConnect
  assign S2_AXIS_TDATA_in[6] = (S2_AXIS_TDATA[6] !== 1'bz) && S2_AXIS_TDATA_delay[6]; // rv MustConnect
  assign S2_AXIS_TDATA_in[7] = (S2_AXIS_TDATA[7] !== 1'bz) && S2_AXIS_TDATA_delay[7]; // rv MustConnect
  assign S2_AXIS_TDATA_in[8] = (S2_AXIS_TDATA[8] !== 1'bz) && S2_AXIS_TDATA_delay[8]; // rv MustConnect
  assign S2_AXIS_TDATA_in[9] = (S2_AXIS_TDATA[9] !== 1'bz) && S2_AXIS_TDATA_delay[9]; // rv MustConnect
  assign S2_AXIS_TLAST_in = (S2_AXIS_TLAST === 1'bz) || S2_AXIS_TLAST_delay; // rv 1
  assign S2_AXIS_TVALID_in = (S2_AXIS_TVALID === 1'bz) || S2_AXIS_TVALID_delay; // rv 1
  assign S3_AXIS_TDATA_in[0] = (S3_AXIS_TDATA[0] !== 1'bz) && S3_AXIS_TDATA_delay[0]; // rv MustConnect
  assign S3_AXIS_TDATA_in[10] = (S3_AXIS_TDATA[10] !== 1'bz) && S3_AXIS_TDATA_delay[10]; // rv MustConnect
  assign S3_AXIS_TDATA_in[11] = (S3_AXIS_TDATA[11] !== 1'bz) && S3_AXIS_TDATA_delay[11]; // rv MustConnect
  assign S3_AXIS_TDATA_in[12] = (S3_AXIS_TDATA[12] !== 1'bz) && S3_AXIS_TDATA_delay[12]; // rv MustConnect
  assign S3_AXIS_TDATA_in[13] = (S3_AXIS_TDATA[13] !== 1'bz) && S3_AXIS_TDATA_delay[13]; // rv MustConnect
  assign S3_AXIS_TDATA_in[14] = (S3_AXIS_TDATA[14] !== 1'bz) && S3_AXIS_TDATA_delay[14]; // rv MustConnect
  assign S3_AXIS_TDATA_in[15] = (S3_AXIS_TDATA[15] !== 1'bz) && S3_AXIS_TDATA_delay[15]; // rv MustConnect
  assign S3_AXIS_TDATA_in[16] = (S3_AXIS_TDATA[16] !== 1'bz) && S3_AXIS_TDATA_delay[16]; // rv MustConnect
  assign S3_AXIS_TDATA_in[17] = (S3_AXIS_TDATA[17] !== 1'bz) && S3_AXIS_TDATA_delay[17]; // rv MustConnect
  assign S3_AXIS_TDATA_in[18] = (S3_AXIS_TDATA[18] !== 1'bz) && S3_AXIS_TDATA_delay[18]; // rv MustConnect
  assign S3_AXIS_TDATA_in[19] = (S3_AXIS_TDATA[19] !== 1'bz) && S3_AXIS_TDATA_delay[19]; // rv MustConnect
  assign S3_AXIS_TDATA_in[1] = (S3_AXIS_TDATA[1] !== 1'bz) && S3_AXIS_TDATA_delay[1]; // rv MustConnect
  assign S3_AXIS_TDATA_in[20] = (S3_AXIS_TDATA[20] !== 1'bz) && S3_AXIS_TDATA_delay[20]; // rv MustConnect
  assign S3_AXIS_TDATA_in[21] = (S3_AXIS_TDATA[21] !== 1'bz) && S3_AXIS_TDATA_delay[21]; // rv MustConnect
  assign S3_AXIS_TDATA_in[22] = (S3_AXIS_TDATA[22] !== 1'bz) && S3_AXIS_TDATA_delay[22]; // rv MustConnect
  assign S3_AXIS_TDATA_in[23] = (S3_AXIS_TDATA[23] !== 1'bz) && S3_AXIS_TDATA_delay[23]; // rv MustConnect
  assign S3_AXIS_TDATA_in[24] = (S3_AXIS_TDATA[24] !== 1'bz) && S3_AXIS_TDATA_delay[24]; // rv MustConnect
  assign S3_AXIS_TDATA_in[25] = (S3_AXIS_TDATA[25] !== 1'bz) && S3_AXIS_TDATA_delay[25]; // rv MustConnect
  assign S3_AXIS_TDATA_in[26] = (S3_AXIS_TDATA[26] !== 1'bz) && S3_AXIS_TDATA_delay[26]; // rv MustConnect
  assign S3_AXIS_TDATA_in[27] = (S3_AXIS_TDATA[27] !== 1'bz) && S3_AXIS_TDATA_delay[27]; // rv MustConnect
  assign S3_AXIS_TDATA_in[28] = (S3_AXIS_TDATA[28] !== 1'bz) && S3_AXIS_TDATA_delay[28]; // rv MustConnect
  assign S3_AXIS_TDATA_in[29] = (S3_AXIS_TDATA[29] !== 1'bz) && S3_AXIS_TDATA_delay[29]; // rv MustConnect
  assign S3_AXIS_TDATA_in[2] = (S3_AXIS_TDATA[2] !== 1'bz) && S3_AXIS_TDATA_delay[2]; // rv MustConnect
  assign S3_AXIS_TDATA_in[30] = (S3_AXIS_TDATA[30] !== 1'bz) && S3_AXIS_TDATA_delay[30]; // rv MustConnect
  assign S3_AXIS_TDATA_in[31] = (S3_AXIS_TDATA[31] !== 1'bz) && S3_AXIS_TDATA_delay[31]; // rv MustConnect
  assign S3_AXIS_TDATA_in[3] = (S3_AXIS_TDATA[3] !== 1'bz) && S3_AXIS_TDATA_delay[3]; // rv MustConnect
  assign S3_AXIS_TDATA_in[4] = (S3_AXIS_TDATA[4] !== 1'bz) && S3_AXIS_TDATA_delay[4]; // rv MustConnect
  assign S3_AXIS_TDATA_in[5] = (S3_AXIS_TDATA[5] !== 1'bz) && S3_AXIS_TDATA_delay[5]; // rv MustConnect
  assign S3_AXIS_TDATA_in[6] = (S3_AXIS_TDATA[6] !== 1'bz) && S3_AXIS_TDATA_delay[6]; // rv MustConnect
  assign S3_AXIS_TDATA_in[7] = (S3_AXIS_TDATA[7] !== 1'bz) && S3_AXIS_TDATA_delay[7]; // rv MustConnect
  assign S3_AXIS_TDATA_in[8] = (S3_AXIS_TDATA[8] !== 1'bz) && S3_AXIS_TDATA_delay[8]; // rv MustConnect
  assign S3_AXIS_TDATA_in[9] = (S3_AXIS_TDATA[9] !== 1'bz) && S3_AXIS_TDATA_delay[9]; // rv MustConnect
  assign S3_AXIS_TLAST_in = (S3_AXIS_TLAST === 1'bz) || S3_AXIS_TLAST_delay; // rv 1
  assign S3_AXIS_TVALID_in = (S3_AXIS_TVALID === 1'bz) || S3_AXIS_TVALID_delay; // rv 1
  assign UBMBRST_in = (UBMBRST === 1'bz) || UBMBRST_delay; // rv 1
`else
  assign APB3CLK_in = (APB3CLK === 1'bz) || APB3CLK; // rv 1
  assign APB3PADDR_in[0] = (APB3PADDR[0] !== 1'bz) && APB3PADDR[0]; // rv MustConnect
  assign APB3PADDR_in[10] = (APB3PADDR[10] !== 1'bz) && APB3PADDR[10]; // rv MustConnect
  assign APB3PADDR_in[11] = (APB3PADDR[11] !== 1'bz) && APB3PADDR[11]; // rv MustConnect
  assign APB3PADDR_in[12] = (APB3PADDR[12] !== 1'bz) && APB3PADDR[12]; // rv MustConnect
  assign APB3PADDR_in[13] = (APB3PADDR[13] !== 1'bz) && APB3PADDR[13]; // rv MustConnect
  assign APB3PADDR_in[14] = (APB3PADDR[14] !== 1'bz) && APB3PADDR[14]; // rv MustConnect
  assign APB3PADDR_in[15] = (APB3PADDR[15] !== 1'bz) && APB3PADDR[15]; // rv MustConnect
  assign APB3PADDR_in[1] = (APB3PADDR[1] !== 1'bz) && APB3PADDR[1]; // rv MustConnect
  assign APB3PADDR_in[2] = (APB3PADDR[2] !== 1'bz) && APB3PADDR[2]; // rv MustConnect
  assign APB3PADDR_in[3] = (APB3PADDR[3] !== 1'bz) && APB3PADDR[3]; // rv MustConnect
  assign APB3PADDR_in[4] = (APB3PADDR[4] !== 1'bz) && APB3PADDR[4]; // rv MustConnect
  assign APB3PADDR_in[5] = (APB3PADDR[5] !== 1'bz) && APB3PADDR[5]; // rv MustConnect
  assign APB3PADDR_in[6] = (APB3PADDR[6] !== 1'bz) && APB3PADDR[6]; // rv MustConnect
  assign APB3PADDR_in[7] = (APB3PADDR[7] !== 1'bz) && APB3PADDR[7]; // rv MustConnect
  assign APB3PADDR_in[8] = (APB3PADDR[8] !== 1'bz) && APB3PADDR[8]; // rv MustConnect
  assign APB3PADDR_in[9] = (APB3PADDR[9] !== 1'bz) && APB3PADDR[9]; // rv MustConnect
  assign APB3PENABLE_in = (APB3PENABLE === 1'bz) || APB3PENABLE; // rv 1
  assign APB3PSEL_in = (APB3PSEL === 1'bz) || APB3PSEL; // rv 1
  assign APB3PWDATA_in[0] = (APB3PWDATA[0] !== 1'bz) && APB3PWDATA[0]; // rv MustConnect
  assign APB3PWDATA_in[10] = (APB3PWDATA[10] !== 1'bz) && APB3PWDATA[10]; // rv MustConnect
  assign APB3PWDATA_in[11] = (APB3PWDATA[11] !== 1'bz) && APB3PWDATA[11]; // rv MustConnect
  assign APB3PWDATA_in[12] = (APB3PWDATA[12] !== 1'bz) && APB3PWDATA[12]; // rv MustConnect
  assign APB3PWDATA_in[13] = (APB3PWDATA[13] !== 1'bz) && APB3PWDATA[13]; // rv MustConnect
  assign APB3PWDATA_in[14] = (APB3PWDATA[14] !== 1'bz) && APB3PWDATA[14]; // rv MustConnect
  assign APB3PWDATA_in[15] = (APB3PWDATA[15] !== 1'bz) && APB3PWDATA[15]; // rv MustConnect
  assign APB3PWDATA_in[16] = (APB3PWDATA[16] !== 1'bz) && APB3PWDATA[16]; // rv MustConnect
  assign APB3PWDATA_in[17] = (APB3PWDATA[17] !== 1'bz) && APB3PWDATA[17]; // rv MustConnect
  assign APB3PWDATA_in[18] = (APB3PWDATA[18] !== 1'bz) && APB3PWDATA[18]; // rv MustConnect
  assign APB3PWDATA_in[19] = (APB3PWDATA[19] !== 1'bz) && APB3PWDATA[19]; // rv MustConnect
  assign APB3PWDATA_in[1] = (APB3PWDATA[1] !== 1'bz) && APB3PWDATA[1]; // rv MustConnect
  assign APB3PWDATA_in[20] = (APB3PWDATA[20] !== 1'bz) && APB3PWDATA[20]; // rv MustConnect
  assign APB3PWDATA_in[21] = (APB3PWDATA[21] !== 1'bz) && APB3PWDATA[21]; // rv MustConnect
  assign APB3PWDATA_in[22] = (APB3PWDATA[22] !== 1'bz) && APB3PWDATA[22]; // rv MustConnect
  assign APB3PWDATA_in[23] = (APB3PWDATA[23] !== 1'bz) && APB3PWDATA[23]; // rv MustConnect
  assign APB3PWDATA_in[24] = (APB3PWDATA[24] !== 1'bz) && APB3PWDATA[24]; // rv MustConnect
  assign APB3PWDATA_in[25] = (APB3PWDATA[25] !== 1'bz) && APB3PWDATA[25]; // rv MustConnect
  assign APB3PWDATA_in[26] = (APB3PWDATA[26] !== 1'bz) && APB3PWDATA[26]; // rv MustConnect
  assign APB3PWDATA_in[27] = (APB3PWDATA[27] !== 1'bz) && APB3PWDATA[27]; // rv MustConnect
  assign APB3PWDATA_in[28] = (APB3PWDATA[28] !== 1'bz) && APB3PWDATA[28]; // rv MustConnect
  assign APB3PWDATA_in[29] = (APB3PWDATA[29] !== 1'bz) && APB3PWDATA[29]; // rv MustConnect
  assign APB3PWDATA_in[2] = (APB3PWDATA[2] !== 1'bz) && APB3PWDATA[2]; // rv MustConnect
  assign APB3PWDATA_in[30] = (APB3PWDATA[30] !== 1'bz) && APB3PWDATA[30]; // rv MustConnect
  assign APB3PWDATA_in[31] = (APB3PWDATA[31] !== 1'bz) && APB3PWDATA[31]; // rv MustConnect
  assign APB3PWDATA_in[3] = (APB3PWDATA[3] !== 1'bz) && APB3PWDATA[3]; // rv MustConnect
  assign APB3PWDATA_in[4] = (APB3PWDATA[4] !== 1'bz) && APB3PWDATA[4]; // rv MustConnect
  assign APB3PWDATA_in[5] = (APB3PWDATA[5] !== 1'bz) && APB3PWDATA[5]; // rv MustConnect
  assign APB3PWDATA_in[6] = (APB3PWDATA[6] !== 1'bz) && APB3PWDATA[6]; // rv MustConnect
  assign APB3PWDATA_in[7] = (APB3PWDATA[7] !== 1'bz) && APB3PWDATA[7]; // rv MustConnect
  assign APB3PWDATA_in[8] = (APB3PWDATA[8] !== 1'bz) && APB3PWDATA[8]; // rv MustConnect
  assign APB3PWDATA_in[9] = (APB3PWDATA[9] !== 1'bz) && APB3PWDATA[9]; // rv MustConnect
  assign APB3PWRITE_in = (APB3PWRITE === 1'bz) || APB3PWRITE; // rv 1
  assign AXISCLK_in = (AXISCLK === 1'bz) || AXISCLK; // rv 1
  assign CH0_DMONFIFORESET_in = (CH0_DMONFIFORESET === 1'bz) || CH0_DMONFIFORESET; // rv 1
  assign CH0_DMONITORCLK_in = (CH0_DMONITORCLK === 1'bz) || CH0_DMONITORCLK; // rv 1
  assign CH0_EYESCANTRIGGER_in = (CH0_EYESCANTRIGGER === 1'bz) || CH0_EYESCANTRIGGER; // rv 1
  assign CH0_LOOPBACK_in[0] = (CH0_LOOPBACK[0] !== 1'bz) && CH0_LOOPBACK[0]; // rv MustConnect
  assign CH0_LOOPBACK_in[1] = (CH0_LOOPBACK[1] !== 1'bz) && CH0_LOOPBACK[1]; // rv MustConnect
  assign CH0_LOOPBACK_in[2] = (CH0_LOOPBACK[2] !== 1'bz) && CH0_LOOPBACK[2]; // rv MustConnect
  assign CH0_RXLATCLK_in = (CH0_RXLATCLK === 1'bz) || CH0_RXLATCLK; // rv 1
  assign CH0_RXUSRCLK_in = (CH0_RXUSRCLK === 1'bz) || CH0_RXUSRCLK; // rv 1
  assign CH0_TXDATA_in[0] = (CH0_TXDATA[0] !== 1'bz) && CH0_TXDATA[0]; // rv MustConnect
  assign CH0_TXDATA_in[100] = (CH0_TXDATA[100] !== 1'bz) && CH0_TXDATA[100]; // rv MustConnect
  assign CH0_TXDATA_in[101] = (CH0_TXDATA[101] !== 1'bz) && CH0_TXDATA[101]; // rv MustConnect
  assign CH0_TXDATA_in[102] = (CH0_TXDATA[102] !== 1'bz) && CH0_TXDATA[102]; // rv MustConnect
  assign CH0_TXDATA_in[103] = (CH0_TXDATA[103] !== 1'bz) && CH0_TXDATA[103]; // rv MustConnect
  assign CH0_TXDATA_in[104] = (CH0_TXDATA[104] !== 1'bz) && CH0_TXDATA[104]; // rv MustConnect
  assign CH0_TXDATA_in[105] = (CH0_TXDATA[105] !== 1'bz) && CH0_TXDATA[105]; // rv MustConnect
  assign CH0_TXDATA_in[106] = (CH0_TXDATA[106] !== 1'bz) && CH0_TXDATA[106]; // rv MustConnect
  assign CH0_TXDATA_in[107] = (CH0_TXDATA[107] !== 1'bz) && CH0_TXDATA[107]; // rv MustConnect
  assign CH0_TXDATA_in[108] = (CH0_TXDATA[108] !== 1'bz) && CH0_TXDATA[108]; // rv MustConnect
  assign CH0_TXDATA_in[109] = (CH0_TXDATA[109] !== 1'bz) && CH0_TXDATA[109]; // rv MustConnect
  assign CH0_TXDATA_in[10] = (CH0_TXDATA[10] !== 1'bz) && CH0_TXDATA[10]; // rv MustConnect
  assign CH0_TXDATA_in[110] = (CH0_TXDATA[110] !== 1'bz) && CH0_TXDATA[110]; // rv MustConnect
  assign CH0_TXDATA_in[111] = (CH0_TXDATA[111] !== 1'bz) && CH0_TXDATA[111]; // rv MustConnect
  assign CH0_TXDATA_in[112] = (CH0_TXDATA[112] !== 1'bz) && CH0_TXDATA[112]; // rv MustConnect
  assign CH0_TXDATA_in[113] = (CH0_TXDATA[113] !== 1'bz) && CH0_TXDATA[113]; // rv MustConnect
  assign CH0_TXDATA_in[114] = (CH0_TXDATA[114] !== 1'bz) && CH0_TXDATA[114]; // rv MustConnect
  assign CH0_TXDATA_in[115] = (CH0_TXDATA[115] !== 1'bz) && CH0_TXDATA[115]; // rv MustConnect
  assign CH0_TXDATA_in[116] = (CH0_TXDATA[116] !== 1'bz) && CH0_TXDATA[116]; // rv MustConnect
  assign CH0_TXDATA_in[117] = (CH0_TXDATA[117] !== 1'bz) && CH0_TXDATA[117]; // rv MustConnect
  assign CH0_TXDATA_in[118] = (CH0_TXDATA[118] !== 1'bz) && CH0_TXDATA[118]; // rv MustConnect
  assign CH0_TXDATA_in[119] = (CH0_TXDATA[119] !== 1'bz) && CH0_TXDATA[119]; // rv MustConnect
  assign CH0_TXDATA_in[11] = (CH0_TXDATA[11] !== 1'bz) && CH0_TXDATA[11]; // rv MustConnect
  assign CH0_TXDATA_in[120] = (CH0_TXDATA[120] !== 1'bz) && CH0_TXDATA[120]; // rv MustConnect
  assign CH0_TXDATA_in[121] = (CH0_TXDATA[121] !== 1'bz) && CH0_TXDATA[121]; // rv MustConnect
  assign CH0_TXDATA_in[122] = (CH0_TXDATA[122] !== 1'bz) && CH0_TXDATA[122]; // rv MustConnect
  assign CH0_TXDATA_in[123] = (CH0_TXDATA[123] !== 1'bz) && CH0_TXDATA[123]; // rv MustConnect
  assign CH0_TXDATA_in[124] = (CH0_TXDATA[124] !== 1'bz) && CH0_TXDATA[124]; // rv MustConnect
  assign CH0_TXDATA_in[125] = (CH0_TXDATA[125] !== 1'bz) && CH0_TXDATA[125]; // rv MustConnect
  assign CH0_TXDATA_in[126] = (CH0_TXDATA[126] !== 1'bz) && CH0_TXDATA[126]; // rv MustConnect
  assign CH0_TXDATA_in[127] = (CH0_TXDATA[127] !== 1'bz) && CH0_TXDATA[127]; // rv MustConnect
  assign CH0_TXDATA_in[128] = (CH0_TXDATA[128] !== 1'bz) && CH0_TXDATA[128]; // rv MustConnect
  assign CH0_TXDATA_in[129] = (CH0_TXDATA[129] !== 1'bz) && CH0_TXDATA[129]; // rv MustConnect
  assign CH0_TXDATA_in[12] = (CH0_TXDATA[12] !== 1'bz) && CH0_TXDATA[12]; // rv MustConnect
  assign CH0_TXDATA_in[130] = (CH0_TXDATA[130] !== 1'bz) && CH0_TXDATA[130]; // rv MustConnect
  assign CH0_TXDATA_in[131] = (CH0_TXDATA[131] !== 1'bz) && CH0_TXDATA[131]; // rv MustConnect
  assign CH0_TXDATA_in[132] = (CH0_TXDATA[132] !== 1'bz) && CH0_TXDATA[132]; // rv MustConnect
  assign CH0_TXDATA_in[133] = (CH0_TXDATA[133] !== 1'bz) && CH0_TXDATA[133]; // rv MustConnect
  assign CH0_TXDATA_in[134] = (CH0_TXDATA[134] !== 1'bz) && CH0_TXDATA[134]; // rv MustConnect
  assign CH0_TXDATA_in[135] = (CH0_TXDATA[135] !== 1'bz) && CH0_TXDATA[135]; // rv MustConnect
  assign CH0_TXDATA_in[136] = (CH0_TXDATA[136] !== 1'bz) && CH0_TXDATA[136]; // rv MustConnect
  assign CH0_TXDATA_in[137] = (CH0_TXDATA[137] !== 1'bz) && CH0_TXDATA[137]; // rv MustConnect
  assign CH0_TXDATA_in[138] = (CH0_TXDATA[138] !== 1'bz) && CH0_TXDATA[138]; // rv MustConnect
  assign CH0_TXDATA_in[139] = (CH0_TXDATA[139] !== 1'bz) && CH0_TXDATA[139]; // rv MustConnect
  assign CH0_TXDATA_in[13] = (CH0_TXDATA[13] !== 1'bz) && CH0_TXDATA[13]; // rv MustConnect
  assign CH0_TXDATA_in[140] = (CH0_TXDATA[140] !== 1'bz) && CH0_TXDATA[140]; // rv MustConnect
  assign CH0_TXDATA_in[141] = (CH0_TXDATA[141] !== 1'bz) && CH0_TXDATA[141]; // rv MustConnect
  assign CH0_TXDATA_in[142] = (CH0_TXDATA[142] !== 1'bz) && CH0_TXDATA[142]; // rv MustConnect
  assign CH0_TXDATA_in[143] = (CH0_TXDATA[143] !== 1'bz) && CH0_TXDATA[143]; // rv MustConnect
  assign CH0_TXDATA_in[144] = (CH0_TXDATA[144] !== 1'bz) && CH0_TXDATA[144]; // rv MustConnect
  assign CH0_TXDATA_in[145] = (CH0_TXDATA[145] !== 1'bz) && CH0_TXDATA[145]; // rv MustConnect
  assign CH0_TXDATA_in[146] = (CH0_TXDATA[146] !== 1'bz) && CH0_TXDATA[146]; // rv MustConnect
  assign CH0_TXDATA_in[147] = (CH0_TXDATA[147] !== 1'bz) && CH0_TXDATA[147]; // rv MustConnect
  assign CH0_TXDATA_in[148] = (CH0_TXDATA[148] !== 1'bz) && CH0_TXDATA[148]; // rv MustConnect
  assign CH0_TXDATA_in[149] = (CH0_TXDATA[149] !== 1'bz) && CH0_TXDATA[149]; // rv MustConnect
  assign CH0_TXDATA_in[14] = (CH0_TXDATA[14] !== 1'bz) && CH0_TXDATA[14]; // rv MustConnect
  assign CH0_TXDATA_in[150] = (CH0_TXDATA[150] !== 1'bz) && CH0_TXDATA[150]; // rv MustConnect
  assign CH0_TXDATA_in[151] = (CH0_TXDATA[151] !== 1'bz) && CH0_TXDATA[151]; // rv MustConnect
  assign CH0_TXDATA_in[152] = (CH0_TXDATA[152] !== 1'bz) && CH0_TXDATA[152]; // rv MustConnect
  assign CH0_TXDATA_in[153] = (CH0_TXDATA[153] !== 1'bz) && CH0_TXDATA[153]; // rv MustConnect
  assign CH0_TXDATA_in[154] = (CH0_TXDATA[154] !== 1'bz) && CH0_TXDATA[154]; // rv MustConnect
  assign CH0_TXDATA_in[155] = (CH0_TXDATA[155] !== 1'bz) && CH0_TXDATA[155]; // rv MustConnect
  assign CH0_TXDATA_in[156] = (CH0_TXDATA[156] !== 1'bz) && CH0_TXDATA[156]; // rv MustConnect
  assign CH0_TXDATA_in[157] = (CH0_TXDATA[157] !== 1'bz) && CH0_TXDATA[157]; // rv MustConnect
  assign CH0_TXDATA_in[158] = (CH0_TXDATA[158] !== 1'bz) && CH0_TXDATA[158]; // rv MustConnect
  assign CH0_TXDATA_in[159] = (CH0_TXDATA[159] !== 1'bz) && CH0_TXDATA[159]; // rv MustConnect
  assign CH0_TXDATA_in[15] = (CH0_TXDATA[15] !== 1'bz) && CH0_TXDATA[15]; // rv MustConnect
  assign CH0_TXDATA_in[160] = (CH0_TXDATA[160] !== 1'bz) && CH0_TXDATA[160]; // rv MustConnect
  assign CH0_TXDATA_in[161] = (CH0_TXDATA[161] !== 1'bz) && CH0_TXDATA[161]; // rv MustConnect
  assign CH0_TXDATA_in[162] = (CH0_TXDATA[162] !== 1'bz) && CH0_TXDATA[162]; // rv MustConnect
  assign CH0_TXDATA_in[163] = (CH0_TXDATA[163] !== 1'bz) && CH0_TXDATA[163]; // rv MustConnect
  assign CH0_TXDATA_in[164] = (CH0_TXDATA[164] !== 1'bz) && CH0_TXDATA[164]; // rv MustConnect
  assign CH0_TXDATA_in[165] = (CH0_TXDATA[165] !== 1'bz) && CH0_TXDATA[165]; // rv MustConnect
  assign CH0_TXDATA_in[166] = (CH0_TXDATA[166] !== 1'bz) && CH0_TXDATA[166]; // rv MustConnect
  assign CH0_TXDATA_in[167] = (CH0_TXDATA[167] !== 1'bz) && CH0_TXDATA[167]; // rv MustConnect
  assign CH0_TXDATA_in[168] = (CH0_TXDATA[168] !== 1'bz) && CH0_TXDATA[168]; // rv MustConnect
  assign CH0_TXDATA_in[169] = (CH0_TXDATA[169] !== 1'bz) && CH0_TXDATA[169]; // rv MustConnect
  assign CH0_TXDATA_in[16] = (CH0_TXDATA[16] !== 1'bz) && CH0_TXDATA[16]; // rv MustConnect
  assign CH0_TXDATA_in[170] = (CH0_TXDATA[170] !== 1'bz) && CH0_TXDATA[170]; // rv MustConnect
  assign CH0_TXDATA_in[171] = (CH0_TXDATA[171] !== 1'bz) && CH0_TXDATA[171]; // rv MustConnect
  assign CH0_TXDATA_in[172] = (CH0_TXDATA[172] !== 1'bz) && CH0_TXDATA[172]; // rv MustConnect
  assign CH0_TXDATA_in[173] = (CH0_TXDATA[173] !== 1'bz) && CH0_TXDATA[173]; // rv MustConnect
  assign CH0_TXDATA_in[174] = (CH0_TXDATA[174] !== 1'bz) && CH0_TXDATA[174]; // rv MustConnect
  assign CH0_TXDATA_in[175] = (CH0_TXDATA[175] !== 1'bz) && CH0_TXDATA[175]; // rv MustConnect
  assign CH0_TXDATA_in[176] = (CH0_TXDATA[176] !== 1'bz) && CH0_TXDATA[176]; // rv MustConnect
  assign CH0_TXDATA_in[177] = (CH0_TXDATA[177] !== 1'bz) && CH0_TXDATA[177]; // rv MustConnect
  assign CH0_TXDATA_in[178] = (CH0_TXDATA[178] !== 1'bz) && CH0_TXDATA[178]; // rv MustConnect
  assign CH0_TXDATA_in[179] = (CH0_TXDATA[179] !== 1'bz) && CH0_TXDATA[179]; // rv MustConnect
  assign CH0_TXDATA_in[17] = (CH0_TXDATA[17] !== 1'bz) && CH0_TXDATA[17]; // rv MustConnect
  assign CH0_TXDATA_in[180] = (CH0_TXDATA[180] !== 1'bz) && CH0_TXDATA[180]; // rv MustConnect
  assign CH0_TXDATA_in[181] = (CH0_TXDATA[181] !== 1'bz) && CH0_TXDATA[181]; // rv MustConnect
  assign CH0_TXDATA_in[182] = (CH0_TXDATA[182] !== 1'bz) && CH0_TXDATA[182]; // rv MustConnect
  assign CH0_TXDATA_in[183] = (CH0_TXDATA[183] !== 1'bz) && CH0_TXDATA[183]; // rv MustConnect
  assign CH0_TXDATA_in[184] = (CH0_TXDATA[184] !== 1'bz) && CH0_TXDATA[184]; // rv MustConnect
  assign CH0_TXDATA_in[185] = (CH0_TXDATA[185] !== 1'bz) && CH0_TXDATA[185]; // rv MustConnect
  assign CH0_TXDATA_in[186] = (CH0_TXDATA[186] !== 1'bz) && CH0_TXDATA[186]; // rv MustConnect
  assign CH0_TXDATA_in[187] = (CH0_TXDATA[187] !== 1'bz) && CH0_TXDATA[187]; // rv MustConnect
  assign CH0_TXDATA_in[188] = (CH0_TXDATA[188] !== 1'bz) && CH0_TXDATA[188]; // rv MustConnect
  assign CH0_TXDATA_in[189] = (CH0_TXDATA[189] !== 1'bz) && CH0_TXDATA[189]; // rv MustConnect
  assign CH0_TXDATA_in[18] = (CH0_TXDATA[18] !== 1'bz) && CH0_TXDATA[18]; // rv MustConnect
  assign CH0_TXDATA_in[190] = (CH0_TXDATA[190] !== 1'bz) && CH0_TXDATA[190]; // rv MustConnect
  assign CH0_TXDATA_in[191] = (CH0_TXDATA[191] !== 1'bz) && CH0_TXDATA[191]; // rv MustConnect
  assign CH0_TXDATA_in[192] = (CH0_TXDATA[192] !== 1'bz) && CH0_TXDATA[192]; // rv MustConnect
  assign CH0_TXDATA_in[193] = (CH0_TXDATA[193] !== 1'bz) && CH0_TXDATA[193]; // rv MustConnect
  assign CH0_TXDATA_in[194] = (CH0_TXDATA[194] !== 1'bz) && CH0_TXDATA[194]; // rv MustConnect
  assign CH0_TXDATA_in[195] = (CH0_TXDATA[195] !== 1'bz) && CH0_TXDATA[195]; // rv MustConnect
  assign CH0_TXDATA_in[196] = (CH0_TXDATA[196] !== 1'bz) && CH0_TXDATA[196]; // rv MustConnect
  assign CH0_TXDATA_in[197] = (CH0_TXDATA[197] !== 1'bz) && CH0_TXDATA[197]; // rv MustConnect
  assign CH0_TXDATA_in[198] = (CH0_TXDATA[198] !== 1'bz) && CH0_TXDATA[198]; // rv MustConnect
  assign CH0_TXDATA_in[199] = (CH0_TXDATA[199] !== 1'bz) && CH0_TXDATA[199]; // rv MustConnect
  assign CH0_TXDATA_in[19] = (CH0_TXDATA[19] !== 1'bz) && CH0_TXDATA[19]; // rv MustConnect
  assign CH0_TXDATA_in[1] = (CH0_TXDATA[1] !== 1'bz) && CH0_TXDATA[1]; // rv MustConnect
  assign CH0_TXDATA_in[200] = (CH0_TXDATA[200] !== 1'bz) && CH0_TXDATA[200]; // rv MustConnect
  assign CH0_TXDATA_in[201] = (CH0_TXDATA[201] !== 1'bz) && CH0_TXDATA[201]; // rv MustConnect
  assign CH0_TXDATA_in[202] = (CH0_TXDATA[202] !== 1'bz) && CH0_TXDATA[202]; // rv MustConnect
  assign CH0_TXDATA_in[203] = (CH0_TXDATA[203] !== 1'bz) && CH0_TXDATA[203]; // rv MustConnect
  assign CH0_TXDATA_in[204] = (CH0_TXDATA[204] !== 1'bz) && CH0_TXDATA[204]; // rv MustConnect
  assign CH0_TXDATA_in[205] = (CH0_TXDATA[205] !== 1'bz) && CH0_TXDATA[205]; // rv MustConnect
  assign CH0_TXDATA_in[206] = (CH0_TXDATA[206] !== 1'bz) && CH0_TXDATA[206]; // rv MustConnect
  assign CH0_TXDATA_in[207] = (CH0_TXDATA[207] !== 1'bz) && CH0_TXDATA[207]; // rv MustConnect
  assign CH0_TXDATA_in[208] = (CH0_TXDATA[208] !== 1'bz) && CH0_TXDATA[208]; // rv MustConnect
  assign CH0_TXDATA_in[209] = (CH0_TXDATA[209] !== 1'bz) && CH0_TXDATA[209]; // rv MustConnect
  assign CH0_TXDATA_in[20] = (CH0_TXDATA[20] !== 1'bz) && CH0_TXDATA[20]; // rv MustConnect
  assign CH0_TXDATA_in[210] = (CH0_TXDATA[210] !== 1'bz) && CH0_TXDATA[210]; // rv MustConnect
  assign CH0_TXDATA_in[211] = (CH0_TXDATA[211] !== 1'bz) && CH0_TXDATA[211]; // rv MustConnect
  assign CH0_TXDATA_in[212] = (CH0_TXDATA[212] !== 1'bz) && CH0_TXDATA[212]; // rv MustConnect
  assign CH0_TXDATA_in[213] = (CH0_TXDATA[213] !== 1'bz) && CH0_TXDATA[213]; // rv MustConnect
  assign CH0_TXDATA_in[214] = (CH0_TXDATA[214] !== 1'bz) && CH0_TXDATA[214]; // rv MustConnect
  assign CH0_TXDATA_in[215] = (CH0_TXDATA[215] !== 1'bz) && CH0_TXDATA[215]; // rv MustConnect
  assign CH0_TXDATA_in[216] = (CH0_TXDATA[216] !== 1'bz) && CH0_TXDATA[216]; // rv MustConnect
  assign CH0_TXDATA_in[217] = (CH0_TXDATA[217] !== 1'bz) && CH0_TXDATA[217]; // rv MustConnect
  assign CH0_TXDATA_in[218] = (CH0_TXDATA[218] !== 1'bz) && CH0_TXDATA[218]; // rv MustConnect
  assign CH0_TXDATA_in[219] = (CH0_TXDATA[219] !== 1'bz) && CH0_TXDATA[219]; // rv MustConnect
  assign CH0_TXDATA_in[21] = (CH0_TXDATA[21] !== 1'bz) && CH0_TXDATA[21]; // rv MustConnect
  assign CH0_TXDATA_in[220] = (CH0_TXDATA[220] !== 1'bz) && CH0_TXDATA[220]; // rv MustConnect
  assign CH0_TXDATA_in[221] = (CH0_TXDATA[221] !== 1'bz) && CH0_TXDATA[221]; // rv MustConnect
  assign CH0_TXDATA_in[222] = (CH0_TXDATA[222] !== 1'bz) && CH0_TXDATA[222]; // rv MustConnect
  assign CH0_TXDATA_in[223] = (CH0_TXDATA[223] !== 1'bz) && CH0_TXDATA[223]; // rv MustConnect
  assign CH0_TXDATA_in[224] = (CH0_TXDATA[224] !== 1'bz) && CH0_TXDATA[224]; // rv MustConnect
  assign CH0_TXDATA_in[225] = (CH0_TXDATA[225] !== 1'bz) && CH0_TXDATA[225]; // rv MustConnect
  assign CH0_TXDATA_in[226] = (CH0_TXDATA[226] !== 1'bz) && CH0_TXDATA[226]; // rv MustConnect
  assign CH0_TXDATA_in[227] = (CH0_TXDATA[227] !== 1'bz) && CH0_TXDATA[227]; // rv MustConnect
  assign CH0_TXDATA_in[228] = (CH0_TXDATA[228] !== 1'bz) && CH0_TXDATA[228]; // rv MustConnect
  assign CH0_TXDATA_in[229] = (CH0_TXDATA[229] !== 1'bz) && CH0_TXDATA[229]; // rv MustConnect
  assign CH0_TXDATA_in[22] = (CH0_TXDATA[22] !== 1'bz) && CH0_TXDATA[22]; // rv MustConnect
  assign CH0_TXDATA_in[230] = (CH0_TXDATA[230] !== 1'bz) && CH0_TXDATA[230]; // rv MustConnect
  assign CH0_TXDATA_in[231] = (CH0_TXDATA[231] !== 1'bz) && CH0_TXDATA[231]; // rv MustConnect
  assign CH0_TXDATA_in[232] = (CH0_TXDATA[232] !== 1'bz) && CH0_TXDATA[232]; // rv MustConnect
  assign CH0_TXDATA_in[233] = (CH0_TXDATA[233] !== 1'bz) && CH0_TXDATA[233]; // rv MustConnect
  assign CH0_TXDATA_in[234] = (CH0_TXDATA[234] !== 1'bz) && CH0_TXDATA[234]; // rv MustConnect
  assign CH0_TXDATA_in[235] = (CH0_TXDATA[235] !== 1'bz) && CH0_TXDATA[235]; // rv MustConnect
  assign CH0_TXDATA_in[236] = (CH0_TXDATA[236] !== 1'bz) && CH0_TXDATA[236]; // rv MustConnect
  assign CH0_TXDATA_in[237] = (CH0_TXDATA[237] !== 1'bz) && CH0_TXDATA[237]; // rv MustConnect
  assign CH0_TXDATA_in[238] = (CH0_TXDATA[238] !== 1'bz) && CH0_TXDATA[238]; // rv MustConnect
  assign CH0_TXDATA_in[239] = (CH0_TXDATA[239] !== 1'bz) && CH0_TXDATA[239]; // rv MustConnect
  assign CH0_TXDATA_in[23] = (CH0_TXDATA[23] !== 1'bz) && CH0_TXDATA[23]; // rv MustConnect
  assign CH0_TXDATA_in[240] = (CH0_TXDATA[240] !== 1'bz) && CH0_TXDATA[240]; // rv MustConnect
  assign CH0_TXDATA_in[241] = (CH0_TXDATA[241] !== 1'bz) && CH0_TXDATA[241]; // rv MustConnect
  assign CH0_TXDATA_in[242] = (CH0_TXDATA[242] !== 1'bz) && CH0_TXDATA[242]; // rv MustConnect
  assign CH0_TXDATA_in[243] = (CH0_TXDATA[243] !== 1'bz) && CH0_TXDATA[243]; // rv MustConnect
  assign CH0_TXDATA_in[244] = (CH0_TXDATA[244] !== 1'bz) && CH0_TXDATA[244]; // rv MustConnect
  assign CH0_TXDATA_in[245] = (CH0_TXDATA[245] !== 1'bz) && CH0_TXDATA[245]; // rv MustConnect
  assign CH0_TXDATA_in[246] = (CH0_TXDATA[246] !== 1'bz) && CH0_TXDATA[246]; // rv MustConnect
  assign CH0_TXDATA_in[247] = (CH0_TXDATA[247] !== 1'bz) && CH0_TXDATA[247]; // rv MustConnect
  assign CH0_TXDATA_in[248] = (CH0_TXDATA[248] !== 1'bz) && CH0_TXDATA[248]; // rv MustConnect
  assign CH0_TXDATA_in[249] = (CH0_TXDATA[249] !== 1'bz) && CH0_TXDATA[249]; // rv MustConnect
  assign CH0_TXDATA_in[24] = (CH0_TXDATA[24] !== 1'bz) && CH0_TXDATA[24]; // rv MustConnect
  assign CH0_TXDATA_in[250] = (CH0_TXDATA[250] !== 1'bz) && CH0_TXDATA[250]; // rv MustConnect
  assign CH0_TXDATA_in[251] = (CH0_TXDATA[251] !== 1'bz) && CH0_TXDATA[251]; // rv MustConnect
  assign CH0_TXDATA_in[252] = (CH0_TXDATA[252] !== 1'bz) && CH0_TXDATA[252]; // rv MustConnect
  assign CH0_TXDATA_in[253] = (CH0_TXDATA[253] !== 1'bz) && CH0_TXDATA[253]; // rv MustConnect
  assign CH0_TXDATA_in[254] = (CH0_TXDATA[254] !== 1'bz) && CH0_TXDATA[254]; // rv MustConnect
  assign CH0_TXDATA_in[255] = (CH0_TXDATA[255] !== 1'bz) && CH0_TXDATA[255]; // rv MustConnect
  assign CH0_TXDATA_in[25] = (CH0_TXDATA[25] !== 1'bz) && CH0_TXDATA[25]; // rv MustConnect
  assign CH0_TXDATA_in[26] = (CH0_TXDATA[26] !== 1'bz) && CH0_TXDATA[26]; // rv MustConnect
  assign CH0_TXDATA_in[27] = (CH0_TXDATA[27] !== 1'bz) && CH0_TXDATA[27]; // rv MustConnect
  assign CH0_TXDATA_in[28] = (CH0_TXDATA[28] !== 1'bz) && CH0_TXDATA[28]; // rv MustConnect
  assign CH0_TXDATA_in[29] = (CH0_TXDATA[29] !== 1'bz) && CH0_TXDATA[29]; // rv MustConnect
  assign CH0_TXDATA_in[2] = (CH0_TXDATA[2] !== 1'bz) && CH0_TXDATA[2]; // rv MustConnect
  assign CH0_TXDATA_in[30] = (CH0_TXDATA[30] !== 1'bz) && CH0_TXDATA[30]; // rv MustConnect
  assign CH0_TXDATA_in[31] = (CH0_TXDATA[31] !== 1'bz) && CH0_TXDATA[31]; // rv MustConnect
  assign CH0_TXDATA_in[32] = (CH0_TXDATA[32] !== 1'bz) && CH0_TXDATA[32]; // rv MustConnect
  assign CH0_TXDATA_in[33] = (CH0_TXDATA[33] !== 1'bz) && CH0_TXDATA[33]; // rv MustConnect
  assign CH0_TXDATA_in[34] = (CH0_TXDATA[34] !== 1'bz) && CH0_TXDATA[34]; // rv MustConnect
  assign CH0_TXDATA_in[35] = (CH0_TXDATA[35] !== 1'bz) && CH0_TXDATA[35]; // rv MustConnect
  assign CH0_TXDATA_in[36] = (CH0_TXDATA[36] !== 1'bz) && CH0_TXDATA[36]; // rv MustConnect
  assign CH0_TXDATA_in[37] = (CH0_TXDATA[37] !== 1'bz) && CH0_TXDATA[37]; // rv MustConnect
  assign CH0_TXDATA_in[38] = (CH0_TXDATA[38] !== 1'bz) && CH0_TXDATA[38]; // rv MustConnect
  assign CH0_TXDATA_in[39] = (CH0_TXDATA[39] !== 1'bz) && CH0_TXDATA[39]; // rv MustConnect
  assign CH0_TXDATA_in[3] = (CH0_TXDATA[3] !== 1'bz) && CH0_TXDATA[3]; // rv MustConnect
  assign CH0_TXDATA_in[40] = (CH0_TXDATA[40] !== 1'bz) && CH0_TXDATA[40]; // rv MustConnect
  assign CH0_TXDATA_in[41] = (CH0_TXDATA[41] !== 1'bz) && CH0_TXDATA[41]; // rv MustConnect
  assign CH0_TXDATA_in[42] = (CH0_TXDATA[42] !== 1'bz) && CH0_TXDATA[42]; // rv MustConnect
  assign CH0_TXDATA_in[43] = (CH0_TXDATA[43] !== 1'bz) && CH0_TXDATA[43]; // rv MustConnect
  assign CH0_TXDATA_in[44] = (CH0_TXDATA[44] !== 1'bz) && CH0_TXDATA[44]; // rv MustConnect
  assign CH0_TXDATA_in[45] = (CH0_TXDATA[45] !== 1'bz) && CH0_TXDATA[45]; // rv MustConnect
  assign CH0_TXDATA_in[46] = (CH0_TXDATA[46] !== 1'bz) && CH0_TXDATA[46]; // rv MustConnect
  assign CH0_TXDATA_in[47] = (CH0_TXDATA[47] !== 1'bz) && CH0_TXDATA[47]; // rv MustConnect
  assign CH0_TXDATA_in[48] = (CH0_TXDATA[48] !== 1'bz) && CH0_TXDATA[48]; // rv MustConnect
  assign CH0_TXDATA_in[49] = (CH0_TXDATA[49] !== 1'bz) && CH0_TXDATA[49]; // rv MustConnect
  assign CH0_TXDATA_in[4] = (CH0_TXDATA[4] !== 1'bz) && CH0_TXDATA[4]; // rv MustConnect
  assign CH0_TXDATA_in[50] = (CH0_TXDATA[50] !== 1'bz) && CH0_TXDATA[50]; // rv MustConnect
  assign CH0_TXDATA_in[51] = (CH0_TXDATA[51] !== 1'bz) && CH0_TXDATA[51]; // rv MustConnect
  assign CH0_TXDATA_in[52] = (CH0_TXDATA[52] !== 1'bz) && CH0_TXDATA[52]; // rv MustConnect
  assign CH0_TXDATA_in[53] = (CH0_TXDATA[53] !== 1'bz) && CH0_TXDATA[53]; // rv MustConnect
  assign CH0_TXDATA_in[54] = (CH0_TXDATA[54] !== 1'bz) && CH0_TXDATA[54]; // rv MustConnect
  assign CH0_TXDATA_in[55] = (CH0_TXDATA[55] !== 1'bz) && CH0_TXDATA[55]; // rv MustConnect
  assign CH0_TXDATA_in[56] = (CH0_TXDATA[56] !== 1'bz) && CH0_TXDATA[56]; // rv MustConnect
  assign CH0_TXDATA_in[57] = (CH0_TXDATA[57] !== 1'bz) && CH0_TXDATA[57]; // rv MustConnect
  assign CH0_TXDATA_in[58] = (CH0_TXDATA[58] !== 1'bz) && CH0_TXDATA[58]; // rv MustConnect
  assign CH0_TXDATA_in[59] = (CH0_TXDATA[59] !== 1'bz) && CH0_TXDATA[59]; // rv MustConnect
  assign CH0_TXDATA_in[5] = (CH0_TXDATA[5] !== 1'bz) && CH0_TXDATA[5]; // rv MustConnect
  assign CH0_TXDATA_in[60] = (CH0_TXDATA[60] !== 1'bz) && CH0_TXDATA[60]; // rv MustConnect
  assign CH0_TXDATA_in[61] = (CH0_TXDATA[61] !== 1'bz) && CH0_TXDATA[61]; // rv MustConnect
  assign CH0_TXDATA_in[62] = (CH0_TXDATA[62] !== 1'bz) && CH0_TXDATA[62]; // rv MustConnect
  assign CH0_TXDATA_in[63] = (CH0_TXDATA[63] !== 1'bz) && CH0_TXDATA[63]; // rv MustConnect
  assign CH0_TXDATA_in[64] = (CH0_TXDATA[64] !== 1'bz) && CH0_TXDATA[64]; // rv MustConnect
  assign CH0_TXDATA_in[65] = (CH0_TXDATA[65] !== 1'bz) && CH0_TXDATA[65]; // rv MustConnect
  assign CH0_TXDATA_in[66] = (CH0_TXDATA[66] !== 1'bz) && CH0_TXDATA[66]; // rv MustConnect
  assign CH0_TXDATA_in[67] = (CH0_TXDATA[67] !== 1'bz) && CH0_TXDATA[67]; // rv MustConnect
  assign CH0_TXDATA_in[68] = (CH0_TXDATA[68] !== 1'bz) && CH0_TXDATA[68]; // rv MustConnect
  assign CH0_TXDATA_in[69] = (CH0_TXDATA[69] !== 1'bz) && CH0_TXDATA[69]; // rv MustConnect
  assign CH0_TXDATA_in[6] = (CH0_TXDATA[6] !== 1'bz) && CH0_TXDATA[6]; // rv MustConnect
  assign CH0_TXDATA_in[70] = (CH0_TXDATA[70] !== 1'bz) && CH0_TXDATA[70]; // rv MustConnect
  assign CH0_TXDATA_in[71] = (CH0_TXDATA[71] !== 1'bz) && CH0_TXDATA[71]; // rv MustConnect
  assign CH0_TXDATA_in[72] = (CH0_TXDATA[72] !== 1'bz) && CH0_TXDATA[72]; // rv MustConnect
  assign CH0_TXDATA_in[73] = (CH0_TXDATA[73] !== 1'bz) && CH0_TXDATA[73]; // rv MustConnect
  assign CH0_TXDATA_in[74] = (CH0_TXDATA[74] !== 1'bz) && CH0_TXDATA[74]; // rv MustConnect
  assign CH0_TXDATA_in[75] = (CH0_TXDATA[75] !== 1'bz) && CH0_TXDATA[75]; // rv MustConnect
  assign CH0_TXDATA_in[76] = (CH0_TXDATA[76] !== 1'bz) && CH0_TXDATA[76]; // rv MustConnect
  assign CH0_TXDATA_in[77] = (CH0_TXDATA[77] !== 1'bz) && CH0_TXDATA[77]; // rv MustConnect
  assign CH0_TXDATA_in[78] = (CH0_TXDATA[78] !== 1'bz) && CH0_TXDATA[78]; // rv MustConnect
  assign CH0_TXDATA_in[79] = (CH0_TXDATA[79] !== 1'bz) && CH0_TXDATA[79]; // rv MustConnect
  assign CH0_TXDATA_in[7] = (CH0_TXDATA[7] !== 1'bz) && CH0_TXDATA[7]; // rv MustConnect
  assign CH0_TXDATA_in[80] = (CH0_TXDATA[80] !== 1'bz) && CH0_TXDATA[80]; // rv MustConnect
  assign CH0_TXDATA_in[81] = (CH0_TXDATA[81] !== 1'bz) && CH0_TXDATA[81]; // rv MustConnect
  assign CH0_TXDATA_in[82] = (CH0_TXDATA[82] !== 1'bz) && CH0_TXDATA[82]; // rv MustConnect
  assign CH0_TXDATA_in[83] = (CH0_TXDATA[83] !== 1'bz) && CH0_TXDATA[83]; // rv MustConnect
  assign CH0_TXDATA_in[84] = (CH0_TXDATA[84] !== 1'bz) && CH0_TXDATA[84]; // rv MustConnect
  assign CH0_TXDATA_in[85] = (CH0_TXDATA[85] !== 1'bz) && CH0_TXDATA[85]; // rv MustConnect
  assign CH0_TXDATA_in[86] = (CH0_TXDATA[86] !== 1'bz) && CH0_TXDATA[86]; // rv MustConnect
  assign CH0_TXDATA_in[87] = (CH0_TXDATA[87] !== 1'bz) && CH0_TXDATA[87]; // rv MustConnect
  assign CH0_TXDATA_in[88] = (CH0_TXDATA[88] !== 1'bz) && CH0_TXDATA[88]; // rv MustConnect
  assign CH0_TXDATA_in[89] = (CH0_TXDATA[89] !== 1'bz) && CH0_TXDATA[89]; // rv MustConnect
  assign CH0_TXDATA_in[8] = (CH0_TXDATA[8] !== 1'bz) && CH0_TXDATA[8]; // rv MustConnect
  assign CH0_TXDATA_in[90] = (CH0_TXDATA[90] !== 1'bz) && CH0_TXDATA[90]; // rv MustConnect
  assign CH0_TXDATA_in[91] = (CH0_TXDATA[91] !== 1'bz) && CH0_TXDATA[91]; // rv MustConnect
  assign CH0_TXDATA_in[92] = (CH0_TXDATA[92] !== 1'bz) && CH0_TXDATA[92]; // rv MustConnect
  assign CH0_TXDATA_in[93] = (CH0_TXDATA[93] !== 1'bz) && CH0_TXDATA[93]; // rv MustConnect
  assign CH0_TXDATA_in[94] = (CH0_TXDATA[94] !== 1'bz) && CH0_TXDATA[94]; // rv MustConnect
  assign CH0_TXDATA_in[95] = (CH0_TXDATA[95] !== 1'bz) && CH0_TXDATA[95]; // rv MustConnect
  assign CH0_TXDATA_in[96] = (CH0_TXDATA[96] !== 1'bz) && CH0_TXDATA[96]; // rv MustConnect
  assign CH0_TXDATA_in[97] = (CH0_TXDATA[97] !== 1'bz) && CH0_TXDATA[97]; // rv MustConnect
  assign CH0_TXDATA_in[98] = (CH0_TXDATA[98] !== 1'bz) && CH0_TXDATA[98]; // rv MustConnect
  assign CH0_TXDATA_in[99] = (CH0_TXDATA[99] !== 1'bz) && CH0_TXDATA[99]; // rv MustConnect
  assign CH0_TXDATA_in[9] = (CH0_TXDATA[9] !== 1'bz) && CH0_TXDATA[9]; // rv MustConnect
  assign CH0_TXUSRCLK_in = (CH0_TXUSRCLK === 1'bz) || CH0_TXUSRCLK; // rv 1
  assign CH1_DMONFIFORESET_in = (CH1_DMONFIFORESET === 1'bz) || CH1_DMONFIFORESET; // rv 1
  assign CH1_DMONITORCLK_in = (CH1_DMONITORCLK === 1'bz) || CH1_DMONITORCLK; // rv 1
  assign CH1_EYESCANTRIGGER_in = (CH1_EYESCANTRIGGER === 1'bz) || CH1_EYESCANTRIGGER; // rv 1
  assign CH1_LOOPBACK_in[0] = (CH1_LOOPBACK[0] !== 1'bz) && CH1_LOOPBACK[0]; // rv MustConnect
  assign CH1_LOOPBACK_in[1] = (CH1_LOOPBACK[1] !== 1'bz) && CH1_LOOPBACK[1]; // rv MustConnect
  assign CH1_LOOPBACK_in[2] = (CH1_LOOPBACK[2] !== 1'bz) && CH1_LOOPBACK[2]; // rv MustConnect
  assign CH1_RXLATCLK_in = (CH1_RXLATCLK === 1'bz) || CH1_RXLATCLK; // rv 1
  assign CH1_RXUSRCLK_in = (CH1_RXUSRCLK === 1'bz) || CH1_RXUSRCLK; // rv 1
  assign CH1_TXDATA_in[0] = (CH1_TXDATA[0] !== 1'bz) && CH1_TXDATA[0]; // rv MustConnect
  assign CH1_TXDATA_in[100] = (CH1_TXDATA[100] !== 1'bz) && CH1_TXDATA[100]; // rv MustConnect
  assign CH1_TXDATA_in[101] = (CH1_TXDATA[101] !== 1'bz) && CH1_TXDATA[101]; // rv MustConnect
  assign CH1_TXDATA_in[102] = (CH1_TXDATA[102] !== 1'bz) && CH1_TXDATA[102]; // rv MustConnect
  assign CH1_TXDATA_in[103] = (CH1_TXDATA[103] !== 1'bz) && CH1_TXDATA[103]; // rv MustConnect
  assign CH1_TXDATA_in[104] = (CH1_TXDATA[104] !== 1'bz) && CH1_TXDATA[104]; // rv MustConnect
  assign CH1_TXDATA_in[105] = (CH1_TXDATA[105] !== 1'bz) && CH1_TXDATA[105]; // rv MustConnect
  assign CH1_TXDATA_in[106] = (CH1_TXDATA[106] !== 1'bz) && CH1_TXDATA[106]; // rv MustConnect
  assign CH1_TXDATA_in[107] = (CH1_TXDATA[107] !== 1'bz) && CH1_TXDATA[107]; // rv MustConnect
  assign CH1_TXDATA_in[108] = (CH1_TXDATA[108] !== 1'bz) && CH1_TXDATA[108]; // rv MustConnect
  assign CH1_TXDATA_in[109] = (CH1_TXDATA[109] !== 1'bz) && CH1_TXDATA[109]; // rv MustConnect
  assign CH1_TXDATA_in[10] = (CH1_TXDATA[10] !== 1'bz) && CH1_TXDATA[10]; // rv MustConnect
  assign CH1_TXDATA_in[110] = (CH1_TXDATA[110] !== 1'bz) && CH1_TXDATA[110]; // rv MustConnect
  assign CH1_TXDATA_in[111] = (CH1_TXDATA[111] !== 1'bz) && CH1_TXDATA[111]; // rv MustConnect
  assign CH1_TXDATA_in[112] = (CH1_TXDATA[112] !== 1'bz) && CH1_TXDATA[112]; // rv MustConnect
  assign CH1_TXDATA_in[113] = (CH1_TXDATA[113] !== 1'bz) && CH1_TXDATA[113]; // rv MustConnect
  assign CH1_TXDATA_in[114] = (CH1_TXDATA[114] !== 1'bz) && CH1_TXDATA[114]; // rv MustConnect
  assign CH1_TXDATA_in[115] = (CH1_TXDATA[115] !== 1'bz) && CH1_TXDATA[115]; // rv MustConnect
  assign CH1_TXDATA_in[116] = (CH1_TXDATA[116] !== 1'bz) && CH1_TXDATA[116]; // rv MustConnect
  assign CH1_TXDATA_in[117] = (CH1_TXDATA[117] !== 1'bz) && CH1_TXDATA[117]; // rv MustConnect
  assign CH1_TXDATA_in[118] = (CH1_TXDATA[118] !== 1'bz) && CH1_TXDATA[118]; // rv MustConnect
  assign CH1_TXDATA_in[119] = (CH1_TXDATA[119] !== 1'bz) && CH1_TXDATA[119]; // rv MustConnect
  assign CH1_TXDATA_in[11] = (CH1_TXDATA[11] !== 1'bz) && CH1_TXDATA[11]; // rv MustConnect
  assign CH1_TXDATA_in[120] = (CH1_TXDATA[120] !== 1'bz) && CH1_TXDATA[120]; // rv MustConnect
  assign CH1_TXDATA_in[121] = (CH1_TXDATA[121] !== 1'bz) && CH1_TXDATA[121]; // rv MustConnect
  assign CH1_TXDATA_in[122] = (CH1_TXDATA[122] !== 1'bz) && CH1_TXDATA[122]; // rv MustConnect
  assign CH1_TXDATA_in[123] = (CH1_TXDATA[123] !== 1'bz) && CH1_TXDATA[123]; // rv MustConnect
  assign CH1_TXDATA_in[124] = (CH1_TXDATA[124] !== 1'bz) && CH1_TXDATA[124]; // rv MustConnect
  assign CH1_TXDATA_in[125] = (CH1_TXDATA[125] !== 1'bz) && CH1_TXDATA[125]; // rv MustConnect
  assign CH1_TXDATA_in[126] = (CH1_TXDATA[126] !== 1'bz) && CH1_TXDATA[126]; // rv MustConnect
  assign CH1_TXDATA_in[127] = (CH1_TXDATA[127] !== 1'bz) && CH1_TXDATA[127]; // rv MustConnect
  assign CH1_TXDATA_in[128] = (CH1_TXDATA[128] !== 1'bz) && CH1_TXDATA[128]; // rv MustConnect
  assign CH1_TXDATA_in[129] = (CH1_TXDATA[129] !== 1'bz) && CH1_TXDATA[129]; // rv MustConnect
  assign CH1_TXDATA_in[12] = (CH1_TXDATA[12] !== 1'bz) && CH1_TXDATA[12]; // rv MustConnect
  assign CH1_TXDATA_in[130] = (CH1_TXDATA[130] !== 1'bz) && CH1_TXDATA[130]; // rv MustConnect
  assign CH1_TXDATA_in[131] = (CH1_TXDATA[131] !== 1'bz) && CH1_TXDATA[131]; // rv MustConnect
  assign CH1_TXDATA_in[132] = (CH1_TXDATA[132] !== 1'bz) && CH1_TXDATA[132]; // rv MustConnect
  assign CH1_TXDATA_in[133] = (CH1_TXDATA[133] !== 1'bz) && CH1_TXDATA[133]; // rv MustConnect
  assign CH1_TXDATA_in[134] = (CH1_TXDATA[134] !== 1'bz) && CH1_TXDATA[134]; // rv MustConnect
  assign CH1_TXDATA_in[135] = (CH1_TXDATA[135] !== 1'bz) && CH1_TXDATA[135]; // rv MustConnect
  assign CH1_TXDATA_in[136] = (CH1_TXDATA[136] !== 1'bz) && CH1_TXDATA[136]; // rv MustConnect
  assign CH1_TXDATA_in[137] = (CH1_TXDATA[137] !== 1'bz) && CH1_TXDATA[137]; // rv MustConnect
  assign CH1_TXDATA_in[138] = (CH1_TXDATA[138] !== 1'bz) && CH1_TXDATA[138]; // rv MustConnect
  assign CH1_TXDATA_in[139] = (CH1_TXDATA[139] !== 1'bz) && CH1_TXDATA[139]; // rv MustConnect
  assign CH1_TXDATA_in[13] = (CH1_TXDATA[13] !== 1'bz) && CH1_TXDATA[13]; // rv MustConnect
  assign CH1_TXDATA_in[140] = (CH1_TXDATA[140] !== 1'bz) && CH1_TXDATA[140]; // rv MustConnect
  assign CH1_TXDATA_in[141] = (CH1_TXDATA[141] !== 1'bz) && CH1_TXDATA[141]; // rv MustConnect
  assign CH1_TXDATA_in[142] = (CH1_TXDATA[142] !== 1'bz) && CH1_TXDATA[142]; // rv MustConnect
  assign CH1_TXDATA_in[143] = (CH1_TXDATA[143] !== 1'bz) && CH1_TXDATA[143]; // rv MustConnect
  assign CH1_TXDATA_in[144] = (CH1_TXDATA[144] !== 1'bz) && CH1_TXDATA[144]; // rv MustConnect
  assign CH1_TXDATA_in[145] = (CH1_TXDATA[145] !== 1'bz) && CH1_TXDATA[145]; // rv MustConnect
  assign CH1_TXDATA_in[146] = (CH1_TXDATA[146] !== 1'bz) && CH1_TXDATA[146]; // rv MustConnect
  assign CH1_TXDATA_in[147] = (CH1_TXDATA[147] !== 1'bz) && CH1_TXDATA[147]; // rv MustConnect
  assign CH1_TXDATA_in[148] = (CH1_TXDATA[148] !== 1'bz) && CH1_TXDATA[148]; // rv MustConnect
  assign CH1_TXDATA_in[149] = (CH1_TXDATA[149] !== 1'bz) && CH1_TXDATA[149]; // rv MustConnect
  assign CH1_TXDATA_in[14] = (CH1_TXDATA[14] !== 1'bz) && CH1_TXDATA[14]; // rv MustConnect
  assign CH1_TXDATA_in[150] = (CH1_TXDATA[150] !== 1'bz) && CH1_TXDATA[150]; // rv MustConnect
  assign CH1_TXDATA_in[151] = (CH1_TXDATA[151] !== 1'bz) && CH1_TXDATA[151]; // rv MustConnect
  assign CH1_TXDATA_in[152] = (CH1_TXDATA[152] !== 1'bz) && CH1_TXDATA[152]; // rv MustConnect
  assign CH1_TXDATA_in[153] = (CH1_TXDATA[153] !== 1'bz) && CH1_TXDATA[153]; // rv MustConnect
  assign CH1_TXDATA_in[154] = (CH1_TXDATA[154] !== 1'bz) && CH1_TXDATA[154]; // rv MustConnect
  assign CH1_TXDATA_in[155] = (CH1_TXDATA[155] !== 1'bz) && CH1_TXDATA[155]; // rv MustConnect
  assign CH1_TXDATA_in[156] = (CH1_TXDATA[156] !== 1'bz) && CH1_TXDATA[156]; // rv MustConnect
  assign CH1_TXDATA_in[157] = (CH1_TXDATA[157] !== 1'bz) && CH1_TXDATA[157]; // rv MustConnect
  assign CH1_TXDATA_in[158] = (CH1_TXDATA[158] !== 1'bz) && CH1_TXDATA[158]; // rv MustConnect
  assign CH1_TXDATA_in[159] = (CH1_TXDATA[159] !== 1'bz) && CH1_TXDATA[159]; // rv MustConnect
  assign CH1_TXDATA_in[15] = (CH1_TXDATA[15] !== 1'bz) && CH1_TXDATA[15]; // rv MustConnect
  assign CH1_TXDATA_in[160] = (CH1_TXDATA[160] !== 1'bz) && CH1_TXDATA[160]; // rv MustConnect
  assign CH1_TXDATA_in[161] = (CH1_TXDATA[161] !== 1'bz) && CH1_TXDATA[161]; // rv MustConnect
  assign CH1_TXDATA_in[162] = (CH1_TXDATA[162] !== 1'bz) && CH1_TXDATA[162]; // rv MustConnect
  assign CH1_TXDATA_in[163] = (CH1_TXDATA[163] !== 1'bz) && CH1_TXDATA[163]; // rv MustConnect
  assign CH1_TXDATA_in[164] = (CH1_TXDATA[164] !== 1'bz) && CH1_TXDATA[164]; // rv MustConnect
  assign CH1_TXDATA_in[165] = (CH1_TXDATA[165] !== 1'bz) && CH1_TXDATA[165]; // rv MustConnect
  assign CH1_TXDATA_in[166] = (CH1_TXDATA[166] !== 1'bz) && CH1_TXDATA[166]; // rv MustConnect
  assign CH1_TXDATA_in[167] = (CH1_TXDATA[167] !== 1'bz) && CH1_TXDATA[167]; // rv MustConnect
  assign CH1_TXDATA_in[168] = (CH1_TXDATA[168] !== 1'bz) && CH1_TXDATA[168]; // rv MustConnect
  assign CH1_TXDATA_in[169] = (CH1_TXDATA[169] !== 1'bz) && CH1_TXDATA[169]; // rv MustConnect
  assign CH1_TXDATA_in[16] = (CH1_TXDATA[16] !== 1'bz) && CH1_TXDATA[16]; // rv MustConnect
  assign CH1_TXDATA_in[170] = (CH1_TXDATA[170] !== 1'bz) && CH1_TXDATA[170]; // rv MustConnect
  assign CH1_TXDATA_in[171] = (CH1_TXDATA[171] !== 1'bz) && CH1_TXDATA[171]; // rv MustConnect
  assign CH1_TXDATA_in[172] = (CH1_TXDATA[172] !== 1'bz) && CH1_TXDATA[172]; // rv MustConnect
  assign CH1_TXDATA_in[173] = (CH1_TXDATA[173] !== 1'bz) && CH1_TXDATA[173]; // rv MustConnect
  assign CH1_TXDATA_in[174] = (CH1_TXDATA[174] !== 1'bz) && CH1_TXDATA[174]; // rv MustConnect
  assign CH1_TXDATA_in[175] = (CH1_TXDATA[175] !== 1'bz) && CH1_TXDATA[175]; // rv MustConnect
  assign CH1_TXDATA_in[176] = (CH1_TXDATA[176] !== 1'bz) && CH1_TXDATA[176]; // rv MustConnect
  assign CH1_TXDATA_in[177] = (CH1_TXDATA[177] !== 1'bz) && CH1_TXDATA[177]; // rv MustConnect
  assign CH1_TXDATA_in[178] = (CH1_TXDATA[178] !== 1'bz) && CH1_TXDATA[178]; // rv MustConnect
  assign CH1_TXDATA_in[179] = (CH1_TXDATA[179] !== 1'bz) && CH1_TXDATA[179]; // rv MustConnect
  assign CH1_TXDATA_in[17] = (CH1_TXDATA[17] !== 1'bz) && CH1_TXDATA[17]; // rv MustConnect
  assign CH1_TXDATA_in[180] = (CH1_TXDATA[180] !== 1'bz) && CH1_TXDATA[180]; // rv MustConnect
  assign CH1_TXDATA_in[181] = (CH1_TXDATA[181] !== 1'bz) && CH1_TXDATA[181]; // rv MustConnect
  assign CH1_TXDATA_in[182] = (CH1_TXDATA[182] !== 1'bz) && CH1_TXDATA[182]; // rv MustConnect
  assign CH1_TXDATA_in[183] = (CH1_TXDATA[183] !== 1'bz) && CH1_TXDATA[183]; // rv MustConnect
  assign CH1_TXDATA_in[184] = (CH1_TXDATA[184] !== 1'bz) && CH1_TXDATA[184]; // rv MustConnect
  assign CH1_TXDATA_in[185] = (CH1_TXDATA[185] !== 1'bz) && CH1_TXDATA[185]; // rv MustConnect
  assign CH1_TXDATA_in[186] = (CH1_TXDATA[186] !== 1'bz) && CH1_TXDATA[186]; // rv MustConnect
  assign CH1_TXDATA_in[187] = (CH1_TXDATA[187] !== 1'bz) && CH1_TXDATA[187]; // rv MustConnect
  assign CH1_TXDATA_in[188] = (CH1_TXDATA[188] !== 1'bz) && CH1_TXDATA[188]; // rv MustConnect
  assign CH1_TXDATA_in[189] = (CH1_TXDATA[189] !== 1'bz) && CH1_TXDATA[189]; // rv MustConnect
  assign CH1_TXDATA_in[18] = (CH1_TXDATA[18] !== 1'bz) && CH1_TXDATA[18]; // rv MustConnect
  assign CH1_TXDATA_in[190] = (CH1_TXDATA[190] !== 1'bz) && CH1_TXDATA[190]; // rv MustConnect
  assign CH1_TXDATA_in[191] = (CH1_TXDATA[191] !== 1'bz) && CH1_TXDATA[191]; // rv MustConnect
  assign CH1_TXDATA_in[192] = (CH1_TXDATA[192] !== 1'bz) && CH1_TXDATA[192]; // rv MustConnect
  assign CH1_TXDATA_in[193] = (CH1_TXDATA[193] !== 1'bz) && CH1_TXDATA[193]; // rv MustConnect
  assign CH1_TXDATA_in[194] = (CH1_TXDATA[194] !== 1'bz) && CH1_TXDATA[194]; // rv MustConnect
  assign CH1_TXDATA_in[195] = (CH1_TXDATA[195] !== 1'bz) && CH1_TXDATA[195]; // rv MustConnect
  assign CH1_TXDATA_in[196] = (CH1_TXDATA[196] !== 1'bz) && CH1_TXDATA[196]; // rv MustConnect
  assign CH1_TXDATA_in[197] = (CH1_TXDATA[197] !== 1'bz) && CH1_TXDATA[197]; // rv MustConnect
  assign CH1_TXDATA_in[198] = (CH1_TXDATA[198] !== 1'bz) && CH1_TXDATA[198]; // rv MustConnect
  assign CH1_TXDATA_in[199] = (CH1_TXDATA[199] !== 1'bz) && CH1_TXDATA[199]; // rv MustConnect
  assign CH1_TXDATA_in[19] = (CH1_TXDATA[19] !== 1'bz) && CH1_TXDATA[19]; // rv MustConnect
  assign CH1_TXDATA_in[1] = (CH1_TXDATA[1] !== 1'bz) && CH1_TXDATA[1]; // rv MustConnect
  assign CH1_TXDATA_in[200] = (CH1_TXDATA[200] !== 1'bz) && CH1_TXDATA[200]; // rv MustConnect
  assign CH1_TXDATA_in[201] = (CH1_TXDATA[201] !== 1'bz) && CH1_TXDATA[201]; // rv MustConnect
  assign CH1_TXDATA_in[202] = (CH1_TXDATA[202] !== 1'bz) && CH1_TXDATA[202]; // rv MustConnect
  assign CH1_TXDATA_in[203] = (CH1_TXDATA[203] !== 1'bz) && CH1_TXDATA[203]; // rv MustConnect
  assign CH1_TXDATA_in[204] = (CH1_TXDATA[204] !== 1'bz) && CH1_TXDATA[204]; // rv MustConnect
  assign CH1_TXDATA_in[205] = (CH1_TXDATA[205] !== 1'bz) && CH1_TXDATA[205]; // rv MustConnect
  assign CH1_TXDATA_in[206] = (CH1_TXDATA[206] !== 1'bz) && CH1_TXDATA[206]; // rv MustConnect
  assign CH1_TXDATA_in[207] = (CH1_TXDATA[207] !== 1'bz) && CH1_TXDATA[207]; // rv MustConnect
  assign CH1_TXDATA_in[208] = (CH1_TXDATA[208] !== 1'bz) && CH1_TXDATA[208]; // rv MustConnect
  assign CH1_TXDATA_in[209] = (CH1_TXDATA[209] !== 1'bz) && CH1_TXDATA[209]; // rv MustConnect
  assign CH1_TXDATA_in[20] = (CH1_TXDATA[20] !== 1'bz) && CH1_TXDATA[20]; // rv MustConnect
  assign CH1_TXDATA_in[210] = (CH1_TXDATA[210] !== 1'bz) && CH1_TXDATA[210]; // rv MustConnect
  assign CH1_TXDATA_in[211] = (CH1_TXDATA[211] !== 1'bz) && CH1_TXDATA[211]; // rv MustConnect
  assign CH1_TXDATA_in[212] = (CH1_TXDATA[212] !== 1'bz) && CH1_TXDATA[212]; // rv MustConnect
  assign CH1_TXDATA_in[213] = (CH1_TXDATA[213] !== 1'bz) && CH1_TXDATA[213]; // rv MustConnect
  assign CH1_TXDATA_in[214] = (CH1_TXDATA[214] !== 1'bz) && CH1_TXDATA[214]; // rv MustConnect
  assign CH1_TXDATA_in[215] = (CH1_TXDATA[215] !== 1'bz) && CH1_TXDATA[215]; // rv MustConnect
  assign CH1_TXDATA_in[216] = (CH1_TXDATA[216] !== 1'bz) && CH1_TXDATA[216]; // rv MustConnect
  assign CH1_TXDATA_in[217] = (CH1_TXDATA[217] !== 1'bz) && CH1_TXDATA[217]; // rv MustConnect
  assign CH1_TXDATA_in[218] = (CH1_TXDATA[218] !== 1'bz) && CH1_TXDATA[218]; // rv MustConnect
  assign CH1_TXDATA_in[219] = (CH1_TXDATA[219] !== 1'bz) && CH1_TXDATA[219]; // rv MustConnect
  assign CH1_TXDATA_in[21] = (CH1_TXDATA[21] !== 1'bz) && CH1_TXDATA[21]; // rv MustConnect
  assign CH1_TXDATA_in[220] = (CH1_TXDATA[220] !== 1'bz) && CH1_TXDATA[220]; // rv MustConnect
  assign CH1_TXDATA_in[221] = (CH1_TXDATA[221] !== 1'bz) && CH1_TXDATA[221]; // rv MustConnect
  assign CH1_TXDATA_in[222] = (CH1_TXDATA[222] !== 1'bz) && CH1_TXDATA[222]; // rv MustConnect
  assign CH1_TXDATA_in[223] = (CH1_TXDATA[223] !== 1'bz) && CH1_TXDATA[223]; // rv MustConnect
  assign CH1_TXDATA_in[224] = (CH1_TXDATA[224] !== 1'bz) && CH1_TXDATA[224]; // rv MustConnect
  assign CH1_TXDATA_in[225] = (CH1_TXDATA[225] !== 1'bz) && CH1_TXDATA[225]; // rv MustConnect
  assign CH1_TXDATA_in[226] = (CH1_TXDATA[226] !== 1'bz) && CH1_TXDATA[226]; // rv MustConnect
  assign CH1_TXDATA_in[227] = (CH1_TXDATA[227] !== 1'bz) && CH1_TXDATA[227]; // rv MustConnect
  assign CH1_TXDATA_in[228] = (CH1_TXDATA[228] !== 1'bz) && CH1_TXDATA[228]; // rv MustConnect
  assign CH1_TXDATA_in[229] = (CH1_TXDATA[229] !== 1'bz) && CH1_TXDATA[229]; // rv MustConnect
  assign CH1_TXDATA_in[22] = (CH1_TXDATA[22] !== 1'bz) && CH1_TXDATA[22]; // rv MustConnect
  assign CH1_TXDATA_in[230] = (CH1_TXDATA[230] !== 1'bz) && CH1_TXDATA[230]; // rv MustConnect
  assign CH1_TXDATA_in[231] = (CH1_TXDATA[231] !== 1'bz) && CH1_TXDATA[231]; // rv MustConnect
  assign CH1_TXDATA_in[232] = (CH1_TXDATA[232] !== 1'bz) && CH1_TXDATA[232]; // rv MustConnect
  assign CH1_TXDATA_in[233] = (CH1_TXDATA[233] !== 1'bz) && CH1_TXDATA[233]; // rv MustConnect
  assign CH1_TXDATA_in[234] = (CH1_TXDATA[234] !== 1'bz) && CH1_TXDATA[234]; // rv MustConnect
  assign CH1_TXDATA_in[235] = (CH1_TXDATA[235] !== 1'bz) && CH1_TXDATA[235]; // rv MustConnect
  assign CH1_TXDATA_in[236] = (CH1_TXDATA[236] !== 1'bz) && CH1_TXDATA[236]; // rv MustConnect
  assign CH1_TXDATA_in[237] = (CH1_TXDATA[237] !== 1'bz) && CH1_TXDATA[237]; // rv MustConnect
  assign CH1_TXDATA_in[238] = (CH1_TXDATA[238] !== 1'bz) && CH1_TXDATA[238]; // rv MustConnect
  assign CH1_TXDATA_in[239] = (CH1_TXDATA[239] !== 1'bz) && CH1_TXDATA[239]; // rv MustConnect
  assign CH1_TXDATA_in[23] = (CH1_TXDATA[23] !== 1'bz) && CH1_TXDATA[23]; // rv MustConnect
  assign CH1_TXDATA_in[240] = (CH1_TXDATA[240] !== 1'bz) && CH1_TXDATA[240]; // rv MustConnect
  assign CH1_TXDATA_in[241] = (CH1_TXDATA[241] !== 1'bz) && CH1_TXDATA[241]; // rv MustConnect
  assign CH1_TXDATA_in[242] = (CH1_TXDATA[242] !== 1'bz) && CH1_TXDATA[242]; // rv MustConnect
  assign CH1_TXDATA_in[243] = (CH1_TXDATA[243] !== 1'bz) && CH1_TXDATA[243]; // rv MustConnect
  assign CH1_TXDATA_in[244] = (CH1_TXDATA[244] !== 1'bz) && CH1_TXDATA[244]; // rv MustConnect
  assign CH1_TXDATA_in[245] = (CH1_TXDATA[245] !== 1'bz) && CH1_TXDATA[245]; // rv MustConnect
  assign CH1_TXDATA_in[246] = (CH1_TXDATA[246] !== 1'bz) && CH1_TXDATA[246]; // rv MustConnect
  assign CH1_TXDATA_in[247] = (CH1_TXDATA[247] !== 1'bz) && CH1_TXDATA[247]; // rv MustConnect
  assign CH1_TXDATA_in[248] = (CH1_TXDATA[248] !== 1'bz) && CH1_TXDATA[248]; // rv MustConnect
  assign CH1_TXDATA_in[249] = (CH1_TXDATA[249] !== 1'bz) && CH1_TXDATA[249]; // rv MustConnect
  assign CH1_TXDATA_in[24] = (CH1_TXDATA[24] !== 1'bz) && CH1_TXDATA[24]; // rv MustConnect
  assign CH1_TXDATA_in[250] = (CH1_TXDATA[250] !== 1'bz) && CH1_TXDATA[250]; // rv MustConnect
  assign CH1_TXDATA_in[251] = (CH1_TXDATA[251] !== 1'bz) && CH1_TXDATA[251]; // rv MustConnect
  assign CH1_TXDATA_in[252] = (CH1_TXDATA[252] !== 1'bz) && CH1_TXDATA[252]; // rv MustConnect
  assign CH1_TXDATA_in[253] = (CH1_TXDATA[253] !== 1'bz) && CH1_TXDATA[253]; // rv MustConnect
  assign CH1_TXDATA_in[254] = (CH1_TXDATA[254] !== 1'bz) && CH1_TXDATA[254]; // rv MustConnect
  assign CH1_TXDATA_in[255] = (CH1_TXDATA[255] !== 1'bz) && CH1_TXDATA[255]; // rv MustConnect
  assign CH1_TXDATA_in[25] = (CH1_TXDATA[25] !== 1'bz) && CH1_TXDATA[25]; // rv MustConnect
  assign CH1_TXDATA_in[26] = (CH1_TXDATA[26] !== 1'bz) && CH1_TXDATA[26]; // rv MustConnect
  assign CH1_TXDATA_in[27] = (CH1_TXDATA[27] !== 1'bz) && CH1_TXDATA[27]; // rv MustConnect
  assign CH1_TXDATA_in[28] = (CH1_TXDATA[28] !== 1'bz) && CH1_TXDATA[28]; // rv MustConnect
  assign CH1_TXDATA_in[29] = (CH1_TXDATA[29] !== 1'bz) && CH1_TXDATA[29]; // rv MustConnect
  assign CH1_TXDATA_in[2] = (CH1_TXDATA[2] !== 1'bz) && CH1_TXDATA[2]; // rv MustConnect
  assign CH1_TXDATA_in[30] = (CH1_TXDATA[30] !== 1'bz) && CH1_TXDATA[30]; // rv MustConnect
  assign CH1_TXDATA_in[31] = (CH1_TXDATA[31] !== 1'bz) && CH1_TXDATA[31]; // rv MustConnect
  assign CH1_TXDATA_in[32] = (CH1_TXDATA[32] !== 1'bz) && CH1_TXDATA[32]; // rv MustConnect
  assign CH1_TXDATA_in[33] = (CH1_TXDATA[33] !== 1'bz) && CH1_TXDATA[33]; // rv MustConnect
  assign CH1_TXDATA_in[34] = (CH1_TXDATA[34] !== 1'bz) && CH1_TXDATA[34]; // rv MustConnect
  assign CH1_TXDATA_in[35] = (CH1_TXDATA[35] !== 1'bz) && CH1_TXDATA[35]; // rv MustConnect
  assign CH1_TXDATA_in[36] = (CH1_TXDATA[36] !== 1'bz) && CH1_TXDATA[36]; // rv MustConnect
  assign CH1_TXDATA_in[37] = (CH1_TXDATA[37] !== 1'bz) && CH1_TXDATA[37]; // rv MustConnect
  assign CH1_TXDATA_in[38] = (CH1_TXDATA[38] !== 1'bz) && CH1_TXDATA[38]; // rv MustConnect
  assign CH1_TXDATA_in[39] = (CH1_TXDATA[39] !== 1'bz) && CH1_TXDATA[39]; // rv MustConnect
  assign CH1_TXDATA_in[3] = (CH1_TXDATA[3] !== 1'bz) && CH1_TXDATA[3]; // rv MustConnect
  assign CH1_TXDATA_in[40] = (CH1_TXDATA[40] !== 1'bz) && CH1_TXDATA[40]; // rv MustConnect
  assign CH1_TXDATA_in[41] = (CH1_TXDATA[41] !== 1'bz) && CH1_TXDATA[41]; // rv MustConnect
  assign CH1_TXDATA_in[42] = (CH1_TXDATA[42] !== 1'bz) && CH1_TXDATA[42]; // rv MustConnect
  assign CH1_TXDATA_in[43] = (CH1_TXDATA[43] !== 1'bz) && CH1_TXDATA[43]; // rv MustConnect
  assign CH1_TXDATA_in[44] = (CH1_TXDATA[44] !== 1'bz) && CH1_TXDATA[44]; // rv MustConnect
  assign CH1_TXDATA_in[45] = (CH1_TXDATA[45] !== 1'bz) && CH1_TXDATA[45]; // rv MustConnect
  assign CH1_TXDATA_in[46] = (CH1_TXDATA[46] !== 1'bz) && CH1_TXDATA[46]; // rv MustConnect
  assign CH1_TXDATA_in[47] = (CH1_TXDATA[47] !== 1'bz) && CH1_TXDATA[47]; // rv MustConnect
  assign CH1_TXDATA_in[48] = (CH1_TXDATA[48] !== 1'bz) && CH1_TXDATA[48]; // rv MustConnect
  assign CH1_TXDATA_in[49] = (CH1_TXDATA[49] !== 1'bz) && CH1_TXDATA[49]; // rv MustConnect
  assign CH1_TXDATA_in[4] = (CH1_TXDATA[4] !== 1'bz) && CH1_TXDATA[4]; // rv MustConnect
  assign CH1_TXDATA_in[50] = (CH1_TXDATA[50] !== 1'bz) && CH1_TXDATA[50]; // rv MustConnect
  assign CH1_TXDATA_in[51] = (CH1_TXDATA[51] !== 1'bz) && CH1_TXDATA[51]; // rv MustConnect
  assign CH1_TXDATA_in[52] = (CH1_TXDATA[52] !== 1'bz) && CH1_TXDATA[52]; // rv MustConnect
  assign CH1_TXDATA_in[53] = (CH1_TXDATA[53] !== 1'bz) && CH1_TXDATA[53]; // rv MustConnect
  assign CH1_TXDATA_in[54] = (CH1_TXDATA[54] !== 1'bz) && CH1_TXDATA[54]; // rv MustConnect
  assign CH1_TXDATA_in[55] = (CH1_TXDATA[55] !== 1'bz) && CH1_TXDATA[55]; // rv MustConnect
  assign CH1_TXDATA_in[56] = (CH1_TXDATA[56] !== 1'bz) && CH1_TXDATA[56]; // rv MustConnect
  assign CH1_TXDATA_in[57] = (CH1_TXDATA[57] !== 1'bz) && CH1_TXDATA[57]; // rv MustConnect
  assign CH1_TXDATA_in[58] = (CH1_TXDATA[58] !== 1'bz) && CH1_TXDATA[58]; // rv MustConnect
  assign CH1_TXDATA_in[59] = (CH1_TXDATA[59] !== 1'bz) && CH1_TXDATA[59]; // rv MustConnect
  assign CH1_TXDATA_in[5] = (CH1_TXDATA[5] !== 1'bz) && CH1_TXDATA[5]; // rv MustConnect
  assign CH1_TXDATA_in[60] = (CH1_TXDATA[60] !== 1'bz) && CH1_TXDATA[60]; // rv MustConnect
  assign CH1_TXDATA_in[61] = (CH1_TXDATA[61] !== 1'bz) && CH1_TXDATA[61]; // rv MustConnect
  assign CH1_TXDATA_in[62] = (CH1_TXDATA[62] !== 1'bz) && CH1_TXDATA[62]; // rv MustConnect
  assign CH1_TXDATA_in[63] = (CH1_TXDATA[63] !== 1'bz) && CH1_TXDATA[63]; // rv MustConnect
  assign CH1_TXDATA_in[64] = (CH1_TXDATA[64] !== 1'bz) && CH1_TXDATA[64]; // rv MustConnect
  assign CH1_TXDATA_in[65] = (CH1_TXDATA[65] !== 1'bz) && CH1_TXDATA[65]; // rv MustConnect
  assign CH1_TXDATA_in[66] = (CH1_TXDATA[66] !== 1'bz) && CH1_TXDATA[66]; // rv MustConnect
  assign CH1_TXDATA_in[67] = (CH1_TXDATA[67] !== 1'bz) && CH1_TXDATA[67]; // rv MustConnect
  assign CH1_TXDATA_in[68] = (CH1_TXDATA[68] !== 1'bz) && CH1_TXDATA[68]; // rv MustConnect
  assign CH1_TXDATA_in[69] = (CH1_TXDATA[69] !== 1'bz) && CH1_TXDATA[69]; // rv MustConnect
  assign CH1_TXDATA_in[6] = (CH1_TXDATA[6] !== 1'bz) && CH1_TXDATA[6]; // rv MustConnect
  assign CH1_TXDATA_in[70] = (CH1_TXDATA[70] !== 1'bz) && CH1_TXDATA[70]; // rv MustConnect
  assign CH1_TXDATA_in[71] = (CH1_TXDATA[71] !== 1'bz) && CH1_TXDATA[71]; // rv MustConnect
  assign CH1_TXDATA_in[72] = (CH1_TXDATA[72] !== 1'bz) && CH1_TXDATA[72]; // rv MustConnect
  assign CH1_TXDATA_in[73] = (CH1_TXDATA[73] !== 1'bz) && CH1_TXDATA[73]; // rv MustConnect
  assign CH1_TXDATA_in[74] = (CH1_TXDATA[74] !== 1'bz) && CH1_TXDATA[74]; // rv MustConnect
  assign CH1_TXDATA_in[75] = (CH1_TXDATA[75] !== 1'bz) && CH1_TXDATA[75]; // rv MustConnect
  assign CH1_TXDATA_in[76] = (CH1_TXDATA[76] !== 1'bz) && CH1_TXDATA[76]; // rv MustConnect
  assign CH1_TXDATA_in[77] = (CH1_TXDATA[77] !== 1'bz) && CH1_TXDATA[77]; // rv MustConnect
  assign CH1_TXDATA_in[78] = (CH1_TXDATA[78] !== 1'bz) && CH1_TXDATA[78]; // rv MustConnect
  assign CH1_TXDATA_in[79] = (CH1_TXDATA[79] !== 1'bz) && CH1_TXDATA[79]; // rv MustConnect
  assign CH1_TXDATA_in[7] = (CH1_TXDATA[7] !== 1'bz) && CH1_TXDATA[7]; // rv MustConnect
  assign CH1_TXDATA_in[80] = (CH1_TXDATA[80] !== 1'bz) && CH1_TXDATA[80]; // rv MustConnect
  assign CH1_TXDATA_in[81] = (CH1_TXDATA[81] !== 1'bz) && CH1_TXDATA[81]; // rv MustConnect
  assign CH1_TXDATA_in[82] = (CH1_TXDATA[82] !== 1'bz) && CH1_TXDATA[82]; // rv MustConnect
  assign CH1_TXDATA_in[83] = (CH1_TXDATA[83] !== 1'bz) && CH1_TXDATA[83]; // rv MustConnect
  assign CH1_TXDATA_in[84] = (CH1_TXDATA[84] !== 1'bz) && CH1_TXDATA[84]; // rv MustConnect
  assign CH1_TXDATA_in[85] = (CH1_TXDATA[85] !== 1'bz) && CH1_TXDATA[85]; // rv MustConnect
  assign CH1_TXDATA_in[86] = (CH1_TXDATA[86] !== 1'bz) && CH1_TXDATA[86]; // rv MustConnect
  assign CH1_TXDATA_in[87] = (CH1_TXDATA[87] !== 1'bz) && CH1_TXDATA[87]; // rv MustConnect
  assign CH1_TXDATA_in[88] = (CH1_TXDATA[88] !== 1'bz) && CH1_TXDATA[88]; // rv MustConnect
  assign CH1_TXDATA_in[89] = (CH1_TXDATA[89] !== 1'bz) && CH1_TXDATA[89]; // rv MustConnect
  assign CH1_TXDATA_in[8] = (CH1_TXDATA[8] !== 1'bz) && CH1_TXDATA[8]; // rv MustConnect
  assign CH1_TXDATA_in[90] = (CH1_TXDATA[90] !== 1'bz) && CH1_TXDATA[90]; // rv MustConnect
  assign CH1_TXDATA_in[91] = (CH1_TXDATA[91] !== 1'bz) && CH1_TXDATA[91]; // rv MustConnect
  assign CH1_TXDATA_in[92] = (CH1_TXDATA[92] !== 1'bz) && CH1_TXDATA[92]; // rv MustConnect
  assign CH1_TXDATA_in[93] = (CH1_TXDATA[93] !== 1'bz) && CH1_TXDATA[93]; // rv MustConnect
  assign CH1_TXDATA_in[94] = (CH1_TXDATA[94] !== 1'bz) && CH1_TXDATA[94]; // rv MustConnect
  assign CH1_TXDATA_in[95] = (CH1_TXDATA[95] !== 1'bz) && CH1_TXDATA[95]; // rv MustConnect
  assign CH1_TXDATA_in[96] = (CH1_TXDATA[96] !== 1'bz) && CH1_TXDATA[96]; // rv MustConnect
  assign CH1_TXDATA_in[97] = (CH1_TXDATA[97] !== 1'bz) && CH1_TXDATA[97]; // rv MustConnect
  assign CH1_TXDATA_in[98] = (CH1_TXDATA[98] !== 1'bz) && CH1_TXDATA[98]; // rv MustConnect
  assign CH1_TXDATA_in[99] = (CH1_TXDATA[99] !== 1'bz) && CH1_TXDATA[99]; // rv MustConnect
  assign CH1_TXDATA_in[9] = (CH1_TXDATA[9] !== 1'bz) && CH1_TXDATA[9]; // rv MustConnect
  assign CH1_TXUSRCLK_in = (CH1_TXUSRCLK === 1'bz) || CH1_TXUSRCLK; // rv 1
  assign CH2_DMONFIFORESET_in = (CH2_DMONFIFORESET === 1'bz) || CH2_DMONFIFORESET; // rv 1
  assign CH2_DMONITORCLK_in = (CH2_DMONITORCLK === 1'bz) || CH2_DMONITORCLK; // rv 1
  assign CH2_EYESCANTRIGGER_in = (CH2_EYESCANTRIGGER === 1'bz) || CH2_EYESCANTRIGGER; // rv 1
  assign CH2_LOOPBACK_in[0] = (CH2_LOOPBACK[0] !== 1'bz) && CH2_LOOPBACK[0]; // rv MustConnect
  assign CH2_LOOPBACK_in[1] = (CH2_LOOPBACK[1] !== 1'bz) && CH2_LOOPBACK[1]; // rv MustConnect
  assign CH2_LOOPBACK_in[2] = (CH2_LOOPBACK[2] !== 1'bz) && CH2_LOOPBACK[2]; // rv MustConnect
  assign CH2_RXLATCLK_in = (CH2_RXLATCLK === 1'bz) || CH2_RXLATCLK; // rv 1
  assign CH2_RXUSRCLK_in = (CH2_RXUSRCLK === 1'bz) || CH2_RXUSRCLK; // rv 1
  assign CH2_TXDATA_in[0] = (CH2_TXDATA[0] !== 1'bz) && CH2_TXDATA[0]; // rv MustConnect
  assign CH2_TXDATA_in[100] = (CH2_TXDATA[100] !== 1'bz) && CH2_TXDATA[100]; // rv MustConnect
  assign CH2_TXDATA_in[101] = (CH2_TXDATA[101] !== 1'bz) && CH2_TXDATA[101]; // rv MustConnect
  assign CH2_TXDATA_in[102] = (CH2_TXDATA[102] !== 1'bz) && CH2_TXDATA[102]; // rv MustConnect
  assign CH2_TXDATA_in[103] = (CH2_TXDATA[103] !== 1'bz) && CH2_TXDATA[103]; // rv MustConnect
  assign CH2_TXDATA_in[104] = (CH2_TXDATA[104] !== 1'bz) && CH2_TXDATA[104]; // rv MustConnect
  assign CH2_TXDATA_in[105] = (CH2_TXDATA[105] !== 1'bz) && CH2_TXDATA[105]; // rv MustConnect
  assign CH2_TXDATA_in[106] = (CH2_TXDATA[106] !== 1'bz) && CH2_TXDATA[106]; // rv MustConnect
  assign CH2_TXDATA_in[107] = (CH2_TXDATA[107] !== 1'bz) && CH2_TXDATA[107]; // rv MustConnect
  assign CH2_TXDATA_in[108] = (CH2_TXDATA[108] !== 1'bz) && CH2_TXDATA[108]; // rv MustConnect
  assign CH2_TXDATA_in[109] = (CH2_TXDATA[109] !== 1'bz) && CH2_TXDATA[109]; // rv MustConnect
  assign CH2_TXDATA_in[10] = (CH2_TXDATA[10] !== 1'bz) && CH2_TXDATA[10]; // rv MustConnect
  assign CH2_TXDATA_in[110] = (CH2_TXDATA[110] !== 1'bz) && CH2_TXDATA[110]; // rv MustConnect
  assign CH2_TXDATA_in[111] = (CH2_TXDATA[111] !== 1'bz) && CH2_TXDATA[111]; // rv MustConnect
  assign CH2_TXDATA_in[112] = (CH2_TXDATA[112] !== 1'bz) && CH2_TXDATA[112]; // rv MustConnect
  assign CH2_TXDATA_in[113] = (CH2_TXDATA[113] !== 1'bz) && CH2_TXDATA[113]; // rv MustConnect
  assign CH2_TXDATA_in[114] = (CH2_TXDATA[114] !== 1'bz) && CH2_TXDATA[114]; // rv MustConnect
  assign CH2_TXDATA_in[115] = (CH2_TXDATA[115] !== 1'bz) && CH2_TXDATA[115]; // rv MustConnect
  assign CH2_TXDATA_in[116] = (CH2_TXDATA[116] !== 1'bz) && CH2_TXDATA[116]; // rv MustConnect
  assign CH2_TXDATA_in[117] = (CH2_TXDATA[117] !== 1'bz) && CH2_TXDATA[117]; // rv MustConnect
  assign CH2_TXDATA_in[118] = (CH2_TXDATA[118] !== 1'bz) && CH2_TXDATA[118]; // rv MustConnect
  assign CH2_TXDATA_in[119] = (CH2_TXDATA[119] !== 1'bz) && CH2_TXDATA[119]; // rv MustConnect
  assign CH2_TXDATA_in[11] = (CH2_TXDATA[11] !== 1'bz) && CH2_TXDATA[11]; // rv MustConnect
  assign CH2_TXDATA_in[120] = (CH2_TXDATA[120] !== 1'bz) && CH2_TXDATA[120]; // rv MustConnect
  assign CH2_TXDATA_in[121] = (CH2_TXDATA[121] !== 1'bz) && CH2_TXDATA[121]; // rv MustConnect
  assign CH2_TXDATA_in[122] = (CH2_TXDATA[122] !== 1'bz) && CH2_TXDATA[122]; // rv MustConnect
  assign CH2_TXDATA_in[123] = (CH2_TXDATA[123] !== 1'bz) && CH2_TXDATA[123]; // rv MustConnect
  assign CH2_TXDATA_in[124] = (CH2_TXDATA[124] !== 1'bz) && CH2_TXDATA[124]; // rv MustConnect
  assign CH2_TXDATA_in[125] = (CH2_TXDATA[125] !== 1'bz) && CH2_TXDATA[125]; // rv MustConnect
  assign CH2_TXDATA_in[126] = (CH2_TXDATA[126] !== 1'bz) && CH2_TXDATA[126]; // rv MustConnect
  assign CH2_TXDATA_in[127] = (CH2_TXDATA[127] !== 1'bz) && CH2_TXDATA[127]; // rv MustConnect
  assign CH2_TXDATA_in[128] = (CH2_TXDATA[128] !== 1'bz) && CH2_TXDATA[128]; // rv MustConnect
  assign CH2_TXDATA_in[129] = (CH2_TXDATA[129] !== 1'bz) && CH2_TXDATA[129]; // rv MustConnect
  assign CH2_TXDATA_in[12] = (CH2_TXDATA[12] !== 1'bz) && CH2_TXDATA[12]; // rv MustConnect
  assign CH2_TXDATA_in[130] = (CH2_TXDATA[130] !== 1'bz) && CH2_TXDATA[130]; // rv MustConnect
  assign CH2_TXDATA_in[131] = (CH2_TXDATA[131] !== 1'bz) && CH2_TXDATA[131]; // rv MustConnect
  assign CH2_TXDATA_in[132] = (CH2_TXDATA[132] !== 1'bz) && CH2_TXDATA[132]; // rv MustConnect
  assign CH2_TXDATA_in[133] = (CH2_TXDATA[133] !== 1'bz) && CH2_TXDATA[133]; // rv MustConnect
  assign CH2_TXDATA_in[134] = (CH2_TXDATA[134] !== 1'bz) && CH2_TXDATA[134]; // rv MustConnect
  assign CH2_TXDATA_in[135] = (CH2_TXDATA[135] !== 1'bz) && CH2_TXDATA[135]; // rv MustConnect
  assign CH2_TXDATA_in[136] = (CH2_TXDATA[136] !== 1'bz) && CH2_TXDATA[136]; // rv MustConnect
  assign CH2_TXDATA_in[137] = (CH2_TXDATA[137] !== 1'bz) && CH2_TXDATA[137]; // rv MustConnect
  assign CH2_TXDATA_in[138] = (CH2_TXDATA[138] !== 1'bz) && CH2_TXDATA[138]; // rv MustConnect
  assign CH2_TXDATA_in[139] = (CH2_TXDATA[139] !== 1'bz) && CH2_TXDATA[139]; // rv MustConnect
  assign CH2_TXDATA_in[13] = (CH2_TXDATA[13] !== 1'bz) && CH2_TXDATA[13]; // rv MustConnect
  assign CH2_TXDATA_in[140] = (CH2_TXDATA[140] !== 1'bz) && CH2_TXDATA[140]; // rv MustConnect
  assign CH2_TXDATA_in[141] = (CH2_TXDATA[141] !== 1'bz) && CH2_TXDATA[141]; // rv MustConnect
  assign CH2_TXDATA_in[142] = (CH2_TXDATA[142] !== 1'bz) && CH2_TXDATA[142]; // rv MustConnect
  assign CH2_TXDATA_in[143] = (CH2_TXDATA[143] !== 1'bz) && CH2_TXDATA[143]; // rv MustConnect
  assign CH2_TXDATA_in[144] = (CH2_TXDATA[144] !== 1'bz) && CH2_TXDATA[144]; // rv MustConnect
  assign CH2_TXDATA_in[145] = (CH2_TXDATA[145] !== 1'bz) && CH2_TXDATA[145]; // rv MustConnect
  assign CH2_TXDATA_in[146] = (CH2_TXDATA[146] !== 1'bz) && CH2_TXDATA[146]; // rv MustConnect
  assign CH2_TXDATA_in[147] = (CH2_TXDATA[147] !== 1'bz) && CH2_TXDATA[147]; // rv MustConnect
  assign CH2_TXDATA_in[148] = (CH2_TXDATA[148] !== 1'bz) && CH2_TXDATA[148]; // rv MustConnect
  assign CH2_TXDATA_in[149] = (CH2_TXDATA[149] !== 1'bz) && CH2_TXDATA[149]; // rv MustConnect
  assign CH2_TXDATA_in[14] = (CH2_TXDATA[14] !== 1'bz) && CH2_TXDATA[14]; // rv MustConnect
  assign CH2_TXDATA_in[150] = (CH2_TXDATA[150] !== 1'bz) && CH2_TXDATA[150]; // rv MustConnect
  assign CH2_TXDATA_in[151] = (CH2_TXDATA[151] !== 1'bz) && CH2_TXDATA[151]; // rv MustConnect
  assign CH2_TXDATA_in[152] = (CH2_TXDATA[152] !== 1'bz) && CH2_TXDATA[152]; // rv MustConnect
  assign CH2_TXDATA_in[153] = (CH2_TXDATA[153] !== 1'bz) && CH2_TXDATA[153]; // rv MustConnect
  assign CH2_TXDATA_in[154] = (CH2_TXDATA[154] !== 1'bz) && CH2_TXDATA[154]; // rv MustConnect
  assign CH2_TXDATA_in[155] = (CH2_TXDATA[155] !== 1'bz) && CH2_TXDATA[155]; // rv MustConnect
  assign CH2_TXDATA_in[156] = (CH2_TXDATA[156] !== 1'bz) && CH2_TXDATA[156]; // rv MustConnect
  assign CH2_TXDATA_in[157] = (CH2_TXDATA[157] !== 1'bz) && CH2_TXDATA[157]; // rv MustConnect
  assign CH2_TXDATA_in[158] = (CH2_TXDATA[158] !== 1'bz) && CH2_TXDATA[158]; // rv MustConnect
  assign CH2_TXDATA_in[159] = (CH2_TXDATA[159] !== 1'bz) && CH2_TXDATA[159]; // rv MustConnect
  assign CH2_TXDATA_in[15] = (CH2_TXDATA[15] !== 1'bz) && CH2_TXDATA[15]; // rv MustConnect
  assign CH2_TXDATA_in[160] = (CH2_TXDATA[160] !== 1'bz) && CH2_TXDATA[160]; // rv MustConnect
  assign CH2_TXDATA_in[161] = (CH2_TXDATA[161] !== 1'bz) && CH2_TXDATA[161]; // rv MustConnect
  assign CH2_TXDATA_in[162] = (CH2_TXDATA[162] !== 1'bz) && CH2_TXDATA[162]; // rv MustConnect
  assign CH2_TXDATA_in[163] = (CH2_TXDATA[163] !== 1'bz) && CH2_TXDATA[163]; // rv MustConnect
  assign CH2_TXDATA_in[164] = (CH2_TXDATA[164] !== 1'bz) && CH2_TXDATA[164]; // rv MustConnect
  assign CH2_TXDATA_in[165] = (CH2_TXDATA[165] !== 1'bz) && CH2_TXDATA[165]; // rv MustConnect
  assign CH2_TXDATA_in[166] = (CH2_TXDATA[166] !== 1'bz) && CH2_TXDATA[166]; // rv MustConnect
  assign CH2_TXDATA_in[167] = (CH2_TXDATA[167] !== 1'bz) && CH2_TXDATA[167]; // rv MustConnect
  assign CH2_TXDATA_in[168] = (CH2_TXDATA[168] !== 1'bz) && CH2_TXDATA[168]; // rv MustConnect
  assign CH2_TXDATA_in[169] = (CH2_TXDATA[169] !== 1'bz) && CH2_TXDATA[169]; // rv MustConnect
  assign CH2_TXDATA_in[16] = (CH2_TXDATA[16] !== 1'bz) && CH2_TXDATA[16]; // rv MustConnect
  assign CH2_TXDATA_in[170] = (CH2_TXDATA[170] !== 1'bz) && CH2_TXDATA[170]; // rv MustConnect
  assign CH2_TXDATA_in[171] = (CH2_TXDATA[171] !== 1'bz) && CH2_TXDATA[171]; // rv MustConnect
  assign CH2_TXDATA_in[172] = (CH2_TXDATA[172] !== 1'bz) && CH2_TXDATA[172]; // rv MustConnect
  assign CH2_TXDATA_in[173] = (CH2_TXDATA[173] !== 1'bz) && CH2_TXDATA[173]; // rv MustConnect
  assign CH2_TXDATA_in[174] = (CH2_TXDATA[174] !== 1'bz) && CH2_TXDATA[174]; // rv MustConnect
  assign CH2_TXDATA_in[175] = (CH2_TXDATA[175] !== 1'bz) && CH2_TXDATA[175]; // rv MustConnect
  assign CH2_TXDATA_in[176] = (CH2_TXDATA[176] !== 1'bz) && CH2_TXDATA[176]; // rv MustConnect
  assign CH2_TXDATA_in[177] = (CH2_TXDATA[177] !== 1'bz) && CH2_TXDATA[177]; // rv MustConnect
  assign CH2_TXDATA_in[178] = (CH2_TXDATA[178] !== 1'bz) && CH2_TXDATA[178]; // rv MustConnect
  assign CH2_TXDATA_in[179] = (CH2_TXDATA[179] !== 1'bz) && CH2_TXDATA[179]; // rv MustConnect
  assign CH2_TXDATA_in[17] = (CH2_TXDATA[17] !== 1'bz) && CH2_TXDATA[17]; // rv MustConnect
  assign CH2_TXDATA_in[180] = (CH2_TXDATA[180] !== 1'bz) && CH2_TXDATA[180]; // rv MustConnect
  assign CH2_TXDATA_in[181] = (CH2_TXDATA[181] !== 1'bz) && CH2_TXDATA[181]; // rv MustConnect
  assign CH2_TXDATA_in[182] = (CH2_TXDATA[182] !== 1'bz) && CH2_TXDATA[182]; // rv MustConnect
  assign CH2_TXDATA_in[183] = (CH2_TXDATA[183] !== 1'bz) && CH2_TXDATA[183]; // rv MustConnect
  assign CH2_TXDATA_in[184] = (CH2_TXDATA[184] !== 1'bz) && CH2_TXDATA[184]; // rv MustConnect
  assign CH2_TXDATA_in[185] = (CH2_TXDATA[185] !== 1'bz) && CH2_TXDATA[185]; // rv MustConnect
  assign CH2_TXDATA_in[186] = (CH2_TXDATA[186] !== 1'bz) && CH2_TXDATA[186]; // rv MustConnect
  assign CH2_TXDATA_in[187] = (CH2_TXDATA[187] !== 1'bz) && CH2_TXDATA[187]; // rv MustConnect
  assign CH2_TXDATA_in[188] = (CH2_TXDATA[188] !== 1'bz) && CH2_TXDATA[188]; // rv MustConnect
  assign CH2_TXDATA_in[189] = (CH2_TXDATA[189] !== 1'bz) && CH2_TXDATA[189]; // rv MustConnect
  assign CH2_TXDATA_in[18] = (CH2_TXDATA[18] !== 1'bz) && CH2_TXDATA[18]; // rv MustConnect
  assign CH2_TXDATA_in[190] = (CH2_TXDATA[190] !== 1'bz) && CH2_TXDATA[190]; // rv MustConnect
  assign CH2_TXDATA_in[191] = (CH2_TXDATA[191] !== 1'bz) && CH2_TXDATA[191]; // rv MustConnect
  assign CH2_TXDATA_in[192] = (CH2_TXDATA[192] !== 1'bz) && CH2_TXDATA[192]; // rv MustConnect
  assign CH2_TXDATA_in[193] = (CH2_TXDATA[193] !== 1'bz) && CH2_TXDATA[193]; // rv MustConnect
  assign CH2_TXDATA_in[194] = (CH2_TXDATA[194] !== 1'bz) && CH2_TXDATA[194]; // rv MustConnect
  assign CH2_TXDATA_in[195] = (CH2_TXDATA[195] !== 1'bz) && CH2_TXDATA[195]; // rv MustConnect
  assign CH2_TXDATA_in[196] = (CH2_TXDATA[196] !== 1'bz) && CH2_TXDATA[196]; // rv MustConnect
  assign CH2_TXDATA_in[197] = (CH2_TXDATA[197] !== 1'bz) && CH2_TXDATA[197]; // rv MustConnect
  assign CH2_TXDATA_in[198] = (CH2_TXDATA[198] !== 1'bz) && CH2_TXDATA[198]; // rv MustConnect
  assign CH2_TXDATA_in[199] = (CH2_TXDATA[199] !== 1'bz) && CH2_TXDATA[199]; // rv MustConnect
  assign CH2_TXDATA_in[19] = (CH2_TXDATA[19] !== 1'bz) && CH2_TXDATA[19]; // rv MustConnect
  assign CH2_TXDATA_in[1] = (CH2_TXDATA[1] !== 1'bz) && CH2_TXDATA[1]; // rv MustConnect
  assign CH2_TXDATA_in[200] = (CH2_TXDATA[200] !== 1'bz) && CH2_TXDATA[200]; // rv MustConnect
  assign CH2_TXDATA_in[201] = (CH2_TXDATA[201] !== 1'bz) && CH2_TXDATA[201]; // rv MustConnect
  assign CH2_TXDATA_in[202] = (CH2_TXDATA[202] !== 1'bz) && CH2_TXDATA[202]; // rv MustConnect
  assign CH2_TXDATA_in[203] = (CH2_TXDATA[203] !== 1'bz) && CH2_TXDATA[203]; // rv MustConnect
  assign CH2_TXDATA_in[204] = (CH2_TXDATA[204] !== 1'bz) && CH2_TXDATA[204]; // rv MustConnect
  assign CH2_TXDATA_in[205] = (CH2_TXDATA[205] !== 1'bz) && CH2_TXDATA[205]; // rv MustConnect
  assign CH2_TXDATA_in[206] = (CH2_TXDATA[206] !== 1'bz) && CH2_TXDATA[206]; // rv MustConnect
  assign CH2_TXDATA_in[207] = (CH2_TXDATA[207] !== 1'bz) && CH2_TXDATA[207]; // rv MustConnect
  assign CH2_TXDATA_in[208] = (CH2_TXDATA[208] !== 1'bz) && CH2_TXDATA[208]; // rv MustConnect
  assign CH2_TXDATA_in[209] = (CH2_TXDATA[209] !== 1'bz) && CH2_TXDATA[209]; // rv MustConnect
  assign CH2_TXDATA_in[20] = (CH2_TXDATA[20] !== 1'bz) && CH2_TXDATA[20]; // rv MustConnect
  assign CH2_TXDATA_in[210] = (CH2_TXDATA[210] !== 1'bz) && CH2_TXDATA[210]; // rv MustConnect
  assign CH2_TXDATA_in[211] = (CH2_TXDATA[211] !== 1'bz) && CH2_TXDATA[211]; // rv MustConnect
  assign CH2_TXDATA_in[212] = (CH2_TXDATA[212] !== 1'bz) && CH2_TXDATA[212]; // rv MustConnect
  assign CH2_TXDATA_in[213] = (CH2_TXDATA[213] !== 1'bz) && CH2_TXDATA[213]; // rv MustConnect
  assign CH2_TXDATA_in[214] = (CH2_TXDATA[214] !== 1'bz) && CH2_TXDATA[214]; // rv MustConnect
  assign CH2_TXDATA_in[215] = (CH2_TXDATA[215] !== 1'bz) && CH2_TXDATA[215]; // rv MustConnect
  assign CH2_TXDATA_in[216] = (CH2_TXDATA[216] !== 1'bz) && CH2_TXDATA[216]; // rv MustConnect
  assign CH2_TXDATA_in[217] = (CH2_TXDATA[217] !== 1'bz) && CH2_TXDATA[217]; // rv MustConnect
  assign CH2_TXDATA_in[218] = (CH2_TXDATA[218] !== 1'bz) && CH2_TXDATA[218]; // rv MustConnect
  assign CH2_TXDATA_in[219] = (CH2_TXDATA[219] !== 1'bz) && CH2_TXDATA[219]; // rv MustConnect
  assign CH2_TXDATA_in[21] = (CH2_TXDATA[21] !== 1'bz) && CH2_TXDATA[21]; // rv MustConnect
  assign CH2_TXDATA_in[220] = (CH2_TXDATA[220] !== 1'bz) && CH2_TXDATA[220]; // rv MustConnect
  assign CH2_TXDATA_in[221] = (CH2_TXDATA[221] !== 1'bz) && CH2_TXDATA[221]; // rv MustConnect
  assign CH2_TXDATA_in[222] = (CH2_TXDATA[222] !== 1'bz) && CH2_TXDATA[222]; // rv MustConnect
  assign CH2_TXDATA_in[223] = (CH2_TXDATA[223] !== 1'bz) && CH2_TXDATA[223]; // rv MustConnect
  assign CH2_TXDATA_in[224] = (CH2_TXDATA[224] !== 1'bz) && CH2_TXDATA[224]; // rv MustConnect
  assign CH2_TXDATA_in[225] = (CH2_TXDATA[225] !== 1'bz) && CH2_TXDATA[225]; // rv MustConnect
  assign CH2_TXDATA_in[226] = (CH2_TXDATA[226] !== 1'bz) && CH2_TXDATA[226]; // rv MustConnect
  assign CH2_TXDATA_in[227] = (CH2_TXDATA[227] !== 1'bz) && CH2_TXDATA[227]; // rv MustConnect
  assign CH2_TXDATA_in[228] = (CH2_TXDATA[228] !== 1'bz) && CH2_TXDATA[228]; // rv MustConnect
  assign CH2_TXDATA_in[229] = (CH2_TXDATA[229] !== 1'bz) && CH2_TXDATA[229]; // rv MustConnect
  assign CH2_TXDATA_in[22] = (CH2_TXDATA[22] !== 1'bz) && CH2_TXDATA[22]; // rv MustConnect
  assign CH2_TXDATA_in[230] = (CH2_TXDATA[230] !== 1'bz) && CH2_TXDATA[230]; // rv MustConnect
  assign CH2_TXDATA_in[231] = (CH2_TXDATA[231] !== 1'bz) && CH2_TXDATA[231]; // rv MustConnect
  assign CH2_TXDATA_in[232] = (CH2_TXDATA[232] !== 1'bz) && CH2_TXDATA[232]; // rv MustConnect
  assign CH2_TXDATA_in[233] = (CH2_TXDATA[233] !== 1'bz) && CH2_TXDATA[233]; // rv MustConnect
  assign CH2_TXDATA_in[234] = (CH2_TXDATA[234] !== 1'bz) && CH2_TXDATA[234]; // rv MustConnect
  assign CH2_TXDATA_in[235] = (CH2_TXDATA[235] !== 1'bz) && CH2_TXDATA[235]; // rv MustConnect
  assign CH2_TXDATA_in[236] = (CH2_TXDATA[236] !== 1'bz) && CH2_TXDATA[236]; // rv MustConnect
  assign CH2_TXDATA_in[237] = (CH2_TXDATA[237] !== 1'bz) && CH2_TXDATA[237]; // rv MustConnect
  assign CH2_TXDATA_in[238] = (CH2_TXDATA[238] !== 1'bz) && CH2_TXDATA[238]; // rv MustConnect
  assign CH2_TXDATA_in[239] = (CH2_TXDATA[239] !== 1'bz) && CH2_TXDATA[239]; // rv MustConnect
  assign CH2_TXDATA_in[23] = (CH2_TXDATA[23] !== 1'bz) && CH2_TXDATA[23]; // rv MustConnect
  assign CH2_TXDATA_in[240] = (CH2_TXDATA[240] !== 1'bz) && CH2_TXDATA[240]; // rv MustConnect
  assign CH2_TXDATA_in[241] = (CH2_TXDATA[241] !== 1'bz) && CH2_TXDATA[241]; // rv MustConnect
  assign CH2_TXDATA_in[242] = (CH2_TXDATA[242] !== 1'bz) && CH2_TXDATA[242]; // rv MustConnect
  assign CH2_TXDATA_in[243] = (CH2_TXDATA[243] !== 1'bz) && CH2_TXDATA[243]; // rv MustConnect
  assign CH2_TXDATA_in[244] = (CH2_TXDATA[244] !== 1'bz) && CH2_TXDATA[244]; // rv MustConnect
  assign CH2_TXDATA_in[245] = (CH2_TXDATA[245] !== 1'bz) && CH2_TXDATA[245]; // rv MustConnect
  assign CH2_TXDATA_in[246] = (CH2_TXDATA[246] !== 1'bz) && CH2_TXDATA[246]; // rv MustConnect
  assign CH2_TXDATA_in[247] = (CH2_TXDATA[247] !== 1'bz) && CH2_TXDATA[247]; // rv MustConnect
  assign CH2_TXDATA_in[248] = (CH2_TXDATA[248] !== 1'bz) && CH2_TXDATA[248]; // rv MustConnect
  assign CH2_TXDATA_in[249] = (CH2_TXDATA[249] !== 1'bz) && CH2_TXDATA[249]; // rv MustConnect
  assign CH2_TXDATA_in[24] = (CH2_TXDATA[24] !== 1'bz) && CH2_TXDATA[24]; // rv MustConnect
  assign CH2_TXDATA_in[250] = (CH2_TXDATA[250] !== 1'bz) && CH2_TXDATA[250]; // rv MustConnect
  assign CH2_TXDATA_in[251] = (CH2_TXDATA[251] !== 1'bz) && CH2_TXDATA[251]; // rv MustConnect
  assign CH2_TXDATA_in[252] = (CH2_TXDATA[252] !== 1'bz) && CH2_TXDATA[252]; // rv MustConnect
  assign CH2_TXDATA_in[253] = (CH2_TXDATA[253] !== 1'bz) && CH2_TXDATA[253]; // rv MustConnect
  assign CH2_TXDATA_in[254] = (CH2_TXDATA[254] !== 1'bz) && CH2_TXDATA[254]; // rv MustConnect
  assign CH2_TXDATA_in[255] = (CH2_TXDATA[255] !== 1'bz) && CH2_TXDATA[255]; // rv MustConnect
  assign CH2_TXDATA_in[25] = (CH2_TXDATA[25] !== 1'bz) && CH2_TXDATA[25]; // rv MustConnect
  assign CH2_TXDATA_in[26] = (CH2_TXDATA[26] !== 1'bz) && CH2_TXDATA[26]; // rv MustConnect
  assign CH2_TXDATA_in[27] = (CH2_TXDATA[27] !== 1'bz) && CH2_TXDATA[27]; // rv MustConnect
  assign CH2_TXDATA_in[28] = (CH2_TXDATA[28] !== 1'bz) && CH2_TXDATA[28]; // rv MustConnect
  assign CH2_TXDATA_in[29] = (CH2_TXDATA[29] !== 1'bz) && CH2_TXDATA[29]; // rv MustConnect
  assign CH2_TXDATA_in[2] = (CH2_TXDATA[2] !== 1'bz) && CH2_TXDATA[2]; // rv MustConnect
  assign CH2_TXDATA_in[30] = (CH2_TXDATA[30] !== 1'bz) && CH2_TXDATA[30]; // rv MustConnect
  assign CH2_TXDATA_in[31] = (CH2_TXDATA[31] !== 1'bz) && CH2_TXDATA[31]; // rv MustConnect
  assign CH2_TXDATA_in[32] = (CH2_TXDATA[32] !== 1'bz) && CH2_TXDATA[32]; // rv MustConnect
  assign CH2_TXDATA_in[33] = (CH2_TXDATA[33] !== 1'bz) && CH2_TXDATA[33]; // rv MustConnect
  assign CH2_TXDATA_in[34] = (CH2_TXDATA[34] !== 1'bz) && CH2_TXDATA[34]; // rv MustConnect
  assign CH2_TXDATA_in[35] = (CH2_TXDATA[35] !== 1'bz) && CH2_TXDATA[35]; // rv MustConnect
  assign CH2_TXDATA_in[36] = (CH2_TXDATA[36] !== 1'bz) && CH2_TXDATA[36]; // rv MustConnect
  assign CH2_TXDATA_in[37] = (CH2_TXDATA[37] !== 1'bz) && CH2_TXDATA[37]; // rv MustConnect
  assign CH2_TXDATA_in[38] = (CH2_TXDATA[38] !== 1'bz) && CH2_TXDATA[38]; // rv MustConnect
  assign CH2_TXDATA_in[39] = (CH2_TXDATA[39] !== 1'bz) && CH2_TXDATA[39]; // rv MustConnect
  assign CH2_TXDATA_in[3] = (CH2_TXDATA[3] !== 1'bz) && CH2_TXDATA[3]; // rv MustConnect
  assign CH2_TXDATA_in[40] = (CH2_TXDATA[40] !== 1'bz) && CH2_TXDATA[40]; // rv MustConnect
  assign CH2_TXDATA_in[41] = (CH2_TXDATA[41] !== 1'bz) && CH2_TXDATA[41]; // rv MustConnect
  assign CH2_TXDATA_in[42] = (CH2_TXDATA[42] !== 1'bz) && CH2_TXDATA[42]; // rv MustConnect
  assign CH2_TXDATA_in[43] = (CH2_TXDATA[43] !== 1'bz) && CH2_TXDATA[43]; // rv MustConnect
  assign CH2_TXDATA_in[44] = (CH2_TXDATA[44] !== 1'bz) && CH2_TXDATA[44]; // rv MustConnect
  assign CH2_TXDATA_in[45] = (CH2_TXDATA[45] !== 1'bz) && CH2_TXDATA[45]; // rv MustConnect
  assign CH2_TXDATA_in[46] = (CH2_TXDATA[46] !== 1'bz) && CH2_TXDATA[46]; // rv MustConnect
  assign CH2_TXDATA_in[47] = (CH2_TXDATA[47] !== 1'bz) && CH2_TXDATA[47]; // rv MustConnect
  assign CH2_TXDATA_in[48] = (CH2_TXDATA[48] !== 1'bz) && CH2_TXDATA[48]; // rv MustConnect
  assign CH2_TXDATA_in[49] = (CH2_TXDATA[49] !== 1'bz) && CH2_TXDATA[49]; // rv MustConnect
  assign CH2_TXDATA_in[4] = (CH2_TXDATA[4] !== 1'bz) && CH2_TXDATA[4]; // rv MustConnect
  assign CH2_TXDATA_in[50] = (CH2_TXDATA[50] !== 1'bz) && CH2_TXDATA[50]; // rv MustConnect
  assign CH2_TXDATA_in[51] = (CH2_TXDATA[51] !== 1'bz) && CH2_TXDATA[51]; // rv MustConnect
  assign CH2_TXDATA_in[52] = (CH2_TXDATA[52] !== 1'bz) && CH2_TXDATA[52]; // rv MustConnect
  assign CH2_TXDATA_in[53] = (CH2_TXDATA[53] !== 1'bz) && CH2_TXDATA[53]; // rv MustConnect
  assign CH2_TXDATA_in[54] = (CH2_TXDATA[54] !== 1'bz) && CH2_TXDATA[54]; // rv MustConnect
  assign CH2_TXDATA_in[55] = (CH2_TXDATA[55] !== 1'bz) && CH2_TXDATA[55]; // rv MustConnect
  assign CH2_TXDATA_in[56] = (CH2_TXDATA[56] !== 1'bz) && CH2_TXDATA[56]; // rv MustConnect
  assign CH2_TXDATA_in[57] = (CH2_TXDATA[57] !== 1'bz) && CH2_TXDATA[57]; // rv MustConnect
  assign CH2_TXDATA_in[58] = (CH2_TXDATA[58] !== 1'bz) && CH2_TXDATA[58]; // rv MustConnect
  assign CH2_TXDATA_in[59] = (CH2_TXDATA[59] !== 1'bz) && CH2_TXDATA[59]; // rv MustConnect
  assign CH2_TXDATA_in[5] = (CH2_TXDATA[5] !== 1'bz) && CH2_TXDATA[5]; // rv MustConnect
  assign CH2_TXDATA_in[60] = (CH2_TXDATA[60] !== 1'bz) && CH2_TXDATA[60]; // rv MustConnect
  assign CH2_TXDATA_in[61] = (CH2_TXDATA[61] !== 1'bz) && CH2_TXDATA[61]; // rv MustConnect
  assign CH2_TXDATA_in[62] = (CH2_TXDATA[62] !== 1'bz) && CH2_TXDATA[62]; // rv MustConnect
  assign CH2_TXDATA_in[63] = (CH2_TXDATA[63] !== 1'bz) && CH2_TXDATA[63]; // rv MustConnect
  assign CH2_TXDATA_in[64] = (CH2_TXDATA[64] !== 1'bz) && CH2_TXDATA[64]; // rv MustConnect
  assign CH2_TXDATA_in[65] = (CH2_TXDATA[65] !== 1'bz) && CH2_TXDATA[65]; // rv MustConnect
  assign CH2_TXDATA_in[66] = (CH2_TXDATA[66] !== 1'bz) && CH2_TXDATA[66]; // rv MustConnect
  assign CH2_TXDATA_in[67] = (CH2_TXDATA[67] !== 1'bz) && CH2_TXDATA[67]; // rv MustConnect
  assign CH2_TXDATA_in[68] = (CH2_TXDATA[68] !== 1'bz) && CH2_TXDATA[68]; // rv MustConnect
  assign CH2_TXDATA_in[69] = (CH2_TXDATA[69] !== 1'bz) && CH2_TXDATA[69]; // rv MustConnect
  assign CH2_TXDATA_in[6] = (CH2_TXDATA[6] !== 1'bz) && CH2_TXDATA[6]; // rv MustConnect
  assign CH2_TXDATA_in[70] = (CH2_TXDATA[70] !== 1'bz) && CH2_TXDATA[70]; // rv MustConnect
  assign CH2_TXDATA_in[71] = (CH2_TXDATA[71] !== 1'bz) && CH2_TXDATA[71]; // rv MustConnect
  assign CH2_TXDATA_in[72] = (CH2_TXDATA[72] !== 1'bz) && CH2_TXDATA[72]; // rv MustConnect
  assign CH2_TXDATA_in[73] = (CH2_TXDATA[73] !== 1'bz) && CH2_TXDATA[73]; // rv MustConnect
  assign CH2_TXDATA_in[74] = (CH2_TXDATA[74] !== 1'bz) && CH2_TXDATA[74]; // rv MustConnect
  assign CH2_TXDATA_in[75] = (CH2_TXDATA[75] !== 1'bz) && CH2_TXDATA[75]; // rv MustConnect
  assign CH2_TXDATA_in[76] = (CH2_TXDATA[76] !== 1'bz) && CH2_TXDATA[76]; // rv MustConnect
  assign CH2_TXDATA_in[77] = (CH2_TXDATA[77] !== 1'bz) && CH2_TXDATA[77]; // rv MustConnect
  assign CH2_TXDATA_in[78] = (CH2_TXDATA[78] !== 1'bz) && CH2_TXDATA[78]; // rv MustConnect
  assign CH2_TXDATA_in[79] = (CH2_TXDATA[79] !== 1'bz) && CH2_TXDATA[79]; // rv MustConnect
  assign CH2_TXDATA_in[7] = (CH2_TXDATA[7] !== 1'bz) && CH2_TXDATA[7]; // rv MustConnect
  assign CH2_TXDATA_in[80] = (CH2_TXDATA[80] !== 1'bz) && CH2_TXDATA[80]; // rv MustConnect
  assign CH2_TXDATA_in[81] = (CH2_TXDATA[81] !== 1'bz) && CH2_TXDATA[81]; // rv MustConnect
  assign CH2_TXDATA_in[82] = (CH2_TXDATA[82] !== 1'bz) && CH2_TXDATA[82]; // rv MustConnect
  assign CH2_TXDATA_in[83] = (CH2_TXDATA[83] !== 1'bz) && CH2_TXDATA[83]; // rv MustConnect
  assign CH2_TXDATA_in[84] = (CH2_TXDATA[84] !== 1'bz) && CH2_TXDATA[84]; // rv MustConnect
  assign CH2_TXDATA_in[85] = (CH2_TXDATA[85] !== 1'bz) && CH2_TXDATA[85]; // rv MustConnect
  assign CH2_TXDATA_in[86] = (CH2_TXDATA[86] !== 1'bz) && CH2_TXDATA[86]; // rv MustConnect
  assign CH2_TXDATA_in[87] = (CH2_TXDATA[87] !== 1'bz) && CH2_TXDATA[87]; // rv MustConnect
  assign CH2_TXDATA_in[88] = (CH2_TXDATA[88] !== 1'bz) && CH2_TXDATA[88]; // rv MustConnect
  assign CH2_TXDATA_in[89] = (CH2_TXDATA[89] !== 1'bz) && CH2_TXDATA[89]; // rv MustConnect
  assign CH2_TXDATA_in[8] = (CH2_TXDATA[8] !== 1'bz) && CH2_TXDATA[8]; // rv MustConnect
  assign CH2_TXDATA_in[90] = (CH2_TXDATA[90] !== 1'bz) && CH2_TXDATA[90]; // rv MustConnect
  assign CH2_TXDATA_in[91] = (CH2_TXDATA[91] !== 1'bz) && CH2_TXDATA[91]; // rv MustConnect
  assign CH2_TXDATA_in[92] = (CH2_TXDATA[92] !== 1'bz) && CH2_TXDATA[92]; // rv MustConnect
  assign CH2_TXDATA_in[93] = (CH2_TXDATA[93] !== 1'bz) && CH2_TXDATA[93]; // rv MustConnect
  assign CH2_TXDATA_in[94] = (CH2_TXDATA[94] !== 1'bz) && CH2_TXDATA[94]; // rv MustConnect
  assign CH2_TXDATA_in[95] = (CH2_TXDATA[95] !== 1'bz) && CH2_TXDATA[95]; // rv MustConnect
  assign CH2_TXDATA_in[96] = (CH2_TXDATA[96] !== 1'bz) && CH2_TXDATA[96]; // rv MustConnect
  assign CH2_TXDATA_in[97] = (CH2_TXDATA[97] !== 1'bz) && CH2_TXDATA[97]; // rv MustConnect
  assign CH2_TXDATA_in[98] = (CH2_TXDATA[98] !== 1'bz) && CH2_TXDATA[98]; // rv MustConnect
  assign CH2_TXDATA_in[99] = (CH2_TXDATA[99] !== 1'bz) && CH2_TXDATA[99]; // rv MustConnect
  assign CH2_TXDATA_in[9] = (CH2_TXDATA[9] !== 1'bz) && CH2_TXDATA[9]; // rv MustConnect
  assign CH2_TXUSRCLK_in = (CH2_TXUSRCLK === 1'bz) || CH2_TXUSRCLK; // rv 1
  assign CH3_DMONFIFORESET_in = (CH3_DMONFIFORESET === 1'bz) || CH3_DMONFIFORESET; // rv 1
  assign CH3_DMONITORCLK_in = (CH3_DMONITORCLK === 1'bz) || CH3_DMONITORCLK; // rv 1
  assign CH3_EYESCANTRIGGER_in = (CH3_EYESCANTRIGGER === 1'bz) || CH3_EYESCANTRIGGER; // rv 1
  assign CH3_LOOPBACK_in[0] = (CH3_LOOPBACK[0] !== 1'bz) && CH3_LOOPBACK[0]; // rv MustConnect
  assign CH3_LOOPBACK_in[1] = (CH3_LOOPBACK[1] !== 1'bz) && CH3_LOOPBACK[1]; // rv MustConnect
  assign CH3_LOOPBACK_in[2] = (CH3_LOOPBACK[2] !== 1'bz) && CH3_LOOPBACK[2]; // rv MustConnect
  assign CH3_RXLATCLK_in = (CH3_RXLATCLK === 1'bz) || CH3_RXLATCLK; // rv 1
  assign CH3_RXUSRCLK_in = (CH3_RXUSRCLK === 1'bz) || CH3_RXUSRCLK; // rv 1
  assign CH3_TXDATA_in[0] = (CH3_TXDATA[0] !== 1'bz) && CH3_TXDATA[0]; // rv MustConnect
  assign CH3_TXDATA_in[100] = (CH3_TXDATA[100] !== 1'bz) && CH3_TXDATA[100]; // rv MustConnect
  assign CH3_TXDATA_in[101] = (CH3_TXDATA[101] !== 1'bz) && CH3_TXDATA[101]; // rv MustConnect
  assign CH3_TXDATA_in[102] = (CH3_TXDATA[102] !== 1'bz) && CH3_TXDATA[102]; // rv MustConnect
  assign CH3_TXDATA_in[103] = (CH3_TXDATA[103] !== 1'bz) && CH3_TXDATA[103]; // rv MustConnect
  assign CH3_TXDATA_in[104] = (CH3_TXDATA[104] !== 1'bz) && CH3_TXDATA[104]; // rv MustConnect
  assign CH3_TXDATA_in[105] = (CH3_TXDATA[105] !== 1'bz) && CH3_TXDATA[105]; // rv MustConnect
  assign CH3_TXDATA_in[106] = (CH3_TXDATA[106] !== 1'bz) && CH3_TXDATA[106]; // rv MustConnect
  assign CH3_TXDATA_in[107] = (CH3_TXDATA[107] !== 1'bz) && CH3_TXDATA[107]; // rv MustConnect
  assign CH3_TXDATA_in[108] = (CH3_TXDATA[108] !== 1'bz) && CH3_TXDATA[108]; // rv MustConnect
  assign CH3_TXDATA_in[109] = (CH3_TXDATA[109] !== 1'bz) && CH3_TXDATA[109]; // rv MustConnect
  assign CH3_TXDATA_in[10] = (CH3_TXDATA[10] !== 1'bz) && CH3_TXDATA[10]; // rv MustConnect
  assign CH3_TXDATA_in[110] = (CH3_TXDATA[110] !== 1'bz) && CH3_TXDATA[110]; // rv MustConnect
  assign CH3_TXDATA_in[111] = (CH3_TXDATA[111] !== 1'bz) && CH3_TXDATA[111]; // rv MustConnect
  assign CH3_TXDATA_in[112] = (CH3_TXDATA[112] !== 1'bz) && CH3_TXDATA[112]; // rv MustConnect
  assign CH3_TXDATA_in[113] = (CH3_TXDATA[113] !== 1'bz) && CH3_TXDATA[113]; // rv MustConnect
  assign CH3_TXDATA_in[114] = (CH3_TXDATA[114] !== 1'bz) && CH3_TXDATA[114]; // rv MustConnect
  assign CH3_TXDATA_in[115] = (CH3_TXDATA[115] !== 1'bz) && CH3_TXDATA[115]; // rv MustConnect
  assign CH3_TXDATA_in[116] = (CH3_TXDATA[116] !== 1'bz) && CH3_TXDATA[116]; // rv MustConnect
  assign CH3_TXDATA_in[117] = (CH3_TXDATA[117] !== 1'bz) && CH3_TXDATA[117]; // rv MustConnect
  assign CH3_TXDATA_in[118] = (CH3_TXDATA[118] !== 1'bz) && CH3_TXDATA[118]; // rv MustConnect
  assign CH3_TXDATA_in[119] = (CH3_TXDATA[119] !== 1'bz) && CH3_TXDATA[119]; // rv MustConnect
  assign CH3_TXDATA_in[11] = (CH3_TXDATA[11] !== 1'bz) && CH3_TXDATA[11]; // rv MustConnect
  assign CH3_TXDATA_in[120] = (CH3_TXDATA[120] !== 1'bz) && CH3_TXDATA[120]; // rv MustConnect
  assign CH3_TXDATA_in[121] = (CH3_TXDATA[121] !== 1'bz) && CH3_TXDATA[121]; // rv MustConnect
  assign CH3_TXDATA_in[122] = (CH3_TXDATA[122] !== 1'bz) && CH3_TXDATA[122]; // rv MustConnect
  assign CH3_TXDATA_in[123] = (CH3_TXDATA[123] !== 1'bz) && CH3_TXDATA[123]; // rv MustConnect
  assign CH3_TXDATA_in[124] = (CH3_TXDATA[124] !== 1'bz) && CH3_TXDATA[124]; // rv MustConnect
  assign CH3_TXDATA_in[125] = (CH3_TXDATA[125] !== 1'bz) && CH3_TXDATA[125]; // rv MustConnect
  assign CH3_TXDATA_in[126] = (CH3_TXDATA[126] !== 1'bz) && CH3_TXDATA[126]; // rv MustConnect
  assign CH3_TXDATA_in[127] = (CH3_TXDATA[127] !== 1'bz) && CH3_TXDATA[127]; // rv MustConnect
  assign CH3_TXDATA_in[128] = (CH3_TXDATA[128] !== 1'bz) && CH3_TXDATA[128]; // rv MustConnect
  assign CH3_TXDATA_in[129] = (CH3_TXDATA[129] !== 1'bz) && CH3_TXDATA[129]; // rv MustConnect
  assign CH3_TXDATA_in[12] = (CH3_TXDATA[12] !== 1'bz) && CH3_TXDATA[12]; // rv MustConnect
  assign CH3_TXDATA_in[130] = (CH3_TXDATA[130] !== 1'bz) && CH3_TXDATA[130]; // rv MustConnect
  assign CH3_TXDATA_in[131] = (CH3_TXDATA[131] !== 1'bz) && CH3_TXDATA[131]; // rv MustConnect
  assign CH3_TXDATA_in[132] = (CH3_TXDATA[132] !== 1'bz) && CH3_TXDATA[132]; // rv MustConnect
  assign CH3_TXDATA_in[133] = (CH3_TXDATA[133] !== 1'bz) && CH3_TXDATA[133]; // rv MustConnect
  assign CH3_TXDATA_in[134] = (CH3_TXDATA[134] !== 1'bz) && CH3_TXDATA[134]; // rv MustConnect
  assign CH3_TXDATA_in[135] = (CH3_TXDATA[135] !== 1'bz) && CH3_TXDATA[135]; // rv MustConnect
  assign CH3_TXDATA_in[136] = (CH3_TXDATA[136] !== 1'bz) && CH3_TXDATA[136]; // rv MustConnect
  assign CH3_TXDATA_in[137] = (CH3_TXDATA[137] !== 1'bz) && CH3_TXDATA[137]; // rv MustConnect
  assign CH3_TXDATA_in[138] = (CH3_TXDATA[138] !== 1'bz) && CH3_TXDATA[138]; // rv MustConnect
  assign CH3_TXDATA_in[139] = (CH3_TXDATA[139] !== 1'bz) && CH3_TXDATA[139]; // rv MustConnect
  assign CH3_TXDATA_in[13] = (CH3_TXDATA[13] !== 1'bz) && CH3_TXDATA[13]; // rv MustConnect
  assign CH3_TXDATA_in[140] = (CH3_TXDATA[140] !== 1'bz) && CH3_TXDATA[140]; // rv MustConnect
  assign CH3_TXDATA_in[141] = (CH3_TXDATA[141] !== 1'bz) && CH3_TXDATA[141]; // rv MustConnect
  assign CH3_TXDATA_in[142] = (CH3_TXDATA[142] !== 1'bz) && CH3_TXDATA[142]; // rv MustConnect
  assign CH3_TXDATA_in[143] = (CH3_TXDATA[143] !== 1'bz) && CH3_TXDATA[143]; // rv MustConnect
  assign CH3_TXDATA_in[144] = (CH3_TXDATA[144] !== 1'bz) && CH3_TXDATA[144]; // rv MustConnect
  assign CH3_TXDATA_in[145] = (CH3_TXDATA[145] !== 1'bz) && CH3_TXDATA[145]; // rv MustConnect
  assign CH3_TXDATA_in[146] = (CH3_TXDATA[146] !== 1'bz) && CH3_TXDATA[146]; // rv MustConnect
  assign CH3_TXDATA_in[147] = (CH3_TXDATA[147] !== 1'bz) && CH3_TXDATA[147]; // rv MustConnect
  assign CH3_TXDATA_in[148] = (CH3_TXDATA[148] !== 1'bz) && CH3_TXDATA[148]; // rv MustConnect
  assign CH3_TXDATA_in[149] = (CH3_TXDATA[149] !== 1'bz) && CH3_TXDATA[149]; // rv MustConnect
  assign CH3_TXDATA_in[14] = (CH3_TXDATA[14] !== 1'bz) && CH3_TXDATA[14]; // rv MustConnect
  assign CH3_TXDATA_in[150] = (CH3_TXDATA[150] !== 1'bz) && CH3_TXDATA[150]; // rv MustConnect
  assign CH3_TXDATA_in[151] = (CH3_TXDATA[151] !== 1'bz) && CH3_TXDATA[151]; // rv MustConnect
  assign CH3_TXDATA_in[152] = (CH3_TXDATA[152] !== 1'bz) && CH3_TXDATA[152]; // rv MustConnect
  assign CH3_TXDATA_in[153] = (CH3_TXDATA[153] !== 1'bz) && CH3_TXDATA[153]; // rv MustConnect
  assign CH3_TXDATA_in[154] = (CH3_TXDATA[154] !== 1'bz) && CH3_TXDATA[154]; // rv MustConnect
  assign CH3_TXDATA_in[155] = (CH3_TXDATA[155] !== 1'bz) && CH3_TXDATA[155]; // rv MustConnect
  assign CH3_TXDATA_in[156] = (CH3_TXDATA[156] !== 1'bz) && CH3_TXDATA[156]; // rv MustConnect
  assign CH3_TXDATA_in[157] = (CH3_TXDATA[157] !== 1'bz) && CH3_TXDATA[157]; // rv MustConnect
  assign CH3_TXDATA_in[158] = (CH3_TXDATA[158] !== 1'bz) && CH3_TXDATA[158]; // rv MustConnect
  assign CH3_TXDATA_in[159] = (CH3_TXDATA[159] !== 1'bz) && CH3_TXDATA[159]; // rv MustConnect
  assign CH3_TXDATA_in[15] = (CH3_TXDATA[15] !== 1'bz) && CH3_TXDATA[15]; // rv MustConnect
  assign CH3_TXDATA_in[160] = (CH3_TXDATA[160] !== 1'bz) && CH3_TXDATA[160]; // rv MustConnect
  assign CH3_TXDATA_in[161] = (CH3_TXDATA[161] !== 1'bz) && CH3_TXDATA[161]; // rv MustConnect
  assign CH3_TXDATA_in[162] = (CH3_TXDATA[162] !== 1'bz) && CH3_TXDATA[162]; // rv MustConnect
  assign CH3_TXDATA_in[163] = (CH3_TXDATA[163] !== 1'bz) && CH3_TXDATA[163]; // rv MustConnect
  assign CH3_TXDATA_in[164] = (CH3_TXDATA[164] !== 1'bz) && CH3_TXDATA[164]; // rv MustConnect
  assign CH3_TXDATA_in[165] = (CH3_TXDATA[165] !== 1'bz) && CH3_TXDATA[165]; // rv MustConnect
  assign CH3_TXDATA_in[166] = (CH3_TXDATA[166] !== 1'bz) && CH3_TXDATA[166]; // rv MustConnect
  assign CH3_TXDATA_in[167] = (CH3_TXDATA[167] !== 1'bz) && CH3_TXDATA[167]; // rv MustConnect
  assign CH3_TXDATA_in[168] = (CH3_TXDATA[168] !== 1'bz) && CH3_TXDATA[168]; // rv MustConnect
  assign CH3_TXDATA_in[169] = (CH3_TXDATA[169] !== 1'bz) && CH3_TXDATA[169]; // rv MustConnect
  assign CH3_TXDATA_in[16] = (CH3_TXDATA[16] !== 1'bz) && CH3_TXDATA[16]; // rv MustConnect
  assign CH3_TXDATA_in[170] = (CH3_TXDATA[170] !== 1'bz) && CH3_TXDATA[170]; // rv MustConnect
  assign CH3_TXDATA_in[171] = (CH3_TXDATA[171] !== 1'bz) && CH3_TXDATA[171]; // rv MustConnect
  assign CH3_TXDATA_in[172] = (CH3_TXDATA[172] !== 1'bz) && CH3_TXDATA[172]; // rv MustConnect
  assign CH3_TXDATA_in[173] = (CH3_TXDATA[173] !== 1'bz) && CH3_TXDATA[173]; // rv MustConnect
  assign CH3_TXDATA_in[174] = (CH3_TXDATA[174] !== 1'bz) && CH3_TXDATA[174]; // rv MustConnect
  assign CH3_TXDATA_in[175] = (CH3_TXDATA[175] !== 1'bz) && CH3_TXDATA[175]; // rv MustConnect
  assign CH3_TXDATA_in[176] = (CH3_TXDATA[176] !== 1'bz) && CH3_TXDATA[176]; // rv MustConnect
  assign CH3_TXDATA_in[177] = (CH3_TXDATA[177] !== 1'bz) && CH3_TXDATA[177]; // rv MustConnect
  assign CH3_TXDATA_in[178] = (CH3_TXDATA[178] !== 1'bz) && CH3_TXDATA[178]; // rv MustConnect
  assign CH3_TXDATA_in[179] = (CH3_TXDATA[179] !== 1'bz) && CH3_TXDATA[179]; // rv MustConnect
  assign CH3_TXDATA_in[17] = (CH3_TXDATA[17] !== 1'bz) && CH3_TXDATA[17]; // rv MustConnect
  assign CH3_TXDATA_in[180] = (CH3_TXDATA[180] !== 1'bz) && CH3_TXDATA[180]; // rv MustConnect
  assign CH3_TXDATA_in[181] = (CH3_TXDATA[181] !== 1'bz) && CH3_TXDATA[181]; // rv MustConnect
  assign CH3_TXDATA_in[182] = (CH3_TXDATA[182] !== 1'bz) && CH3_TXDATA[182]; // rv MustConnect
  assign CH3_TXDATA_in[183] = (CH3_TXDATA[183] !== 1'bz) && CH3_TXDATA[183]; // rv MustConnect
  assign CH3_TXDATA_in[184] = (CH3_TXDATA[184] !== 1'bz) && CH3_TXDATA[184]; // rv MustConnect
  assign CH3_TXDATA_in[185] = (CH3_TXDATA[185] !== 1'bz) && CH3_TXDATA[185]; // rv MustConnect
  assign CH3_TXDATA_in[186] = (CH3_TXDATA[186] !== 1'bz) && CH3_TXDATA[186]; // rv MustConnect
  assign CH3_TXDATA_in[187] = (CH3_TXDATA[187] !== 1'bz) && CH3_TXDATA[187]; // rv MustConnect
  assign CH3_TXDATA_in[188] = (CH3_TXDATA[188] !== 1'bz) && CH3_TXDATA[188]; // rv MustConnect
  assign CH3_TXDATA_in[189] = (CH3_TXDATA[189] !== 1'bz) && CH3_TXDATA[189]; // rv MustConnect
  assign CH3_TXDATA_in[18] = (CH3_TXDATA[18] !== 1'bz) && CH3_TXDATA[18]; // rv MustConnect
  assign CH3_TXDATA_in[190] = (CH3_TXDATA[190] !== 1'bz) && CH3_TXDATA[190]; // rv MustConnect
  assign CH3_TXDATA_in[191] = (CH3_TXDATA[191] !== 1'bz) && CH3_TXDATA[191]; // rv MustConnect
  assign CH3_TXDATA_in[192] = (CH3_TXDATA[192] !== 1'bz) && CH3_TXDATA[192]; // rv MustConnect
  assign CH3_TXDATA_in[193] = (CH3_TXDATA[193] !== 1'bz) && CH3_TXDATA[193]; // rv MustConnect
  assign CH3_TXDATA_in[194] = (CH3_TXDATA[194] !== 1'bz) && CH3_TXDATA[194]; // rv MustConnect
  assign CH3_TXDATA_in[195] = (CH3_TXDATA[195] !== 1'bz) && CH3_TXDATA[195]; // rv MustConnect
  assign CH3_TXDATA_in[196] = (CH3_TXDATA[196] !== 1'bz) && CH3_TXDATA[196]; // rv MustConnect
  assign CH3_TXDATA_in[197] = (CH3_TXDATA[197] !== 1'bz) && CH3_TXDATA[197]; // rv MustConnect
  assign CH3_TXDATA_in[198] = (CH3_TXDATA[198] !== 1'bz) && CH3_TXDATA[198]; // rv MustConnect
  assign CH3_TXDATA_in[199] = (CH3_TXDATA[199] !== 1'bz) && CH3_TXDATA[199]; // rv MustConnect
  assign CH3_TXDATA_in[19] = (CH3_TXDATA[19] !== 1'bz) && CH3_TXDATA[19]; // rv MustConnect
  assign CH3_TXDATA_in[1] = (CH3_TXDATA[1] !== 1'bz) && CH3_TXDATA[1]; // rv MustConnect
  assign CH3_TXDATA_in[200] = (CH3_TXDATA[200] !== 1'bz) && CH3_TXDATA[200]; // rv MustConnect
  assign CH3_TXDATA_in[201] = (CH3_TXDATA[201] !== 1'bz) && CH3_TXDATA[201]; // rv MustConnect
  assign CH3_TXDATA_in[202] = (CH3_TXDATA[202] !== 1'bz) && CH3_TXDATA[202]; // rv MustConnect
  assign CH3_TXDATA_in[203] = (CH3_TXDATA[203] !== 1'bz) && CH3_TXDATA[203]; // rv MustConnect
  assign CH3_TXDATA_in[204] = (CH3_TXDATA[204] !== 1'bz) && CH3_TXDATA[204]; // rv MustConnect
  assign CH3_TXDATA_in[205] = (CH3_TXDATA[205] !== 1'bz) && CH3_TXDATA[205]; // rv MustConnect
  assign CH3_TXDATA_in[206] = (CH3_TXDATA[206] !== 1'bz) && CH3_TXDATA[206]; // rv MustConnect
  assign CH3_TXDATA_in[207] = (CH3_TXDATA[207] !== 1'bz) && CH3_TXDATA[207]; // rv MustConnect
  assign CH3_TXDATA_in[208] = (CH3_TXDATA[208] !== 1'bz) && CH3_TXDATA[208]; // rv MustConnect
  assign CH3_TXDATA_in[209] = (CH3_TXDATA[209] !== 1'bz) && CH3_TXDATA[209]; // rv MustConnect
  assign CH3_TXDATA_in[20] = (CH3_TXDATA[20] !== 1'bz) && CH3_TXDATA[20]; // rv MustConnect
  assign CH3_TXDATA_in[210] = (CH3_TXDATA[210] !== 1'bz) && CH3_TXDATA[210]; // rv MustConnect
  assign CH3_TXDATA_in[211] = (CH3_TXDATA[211] !== 1'bz) && CH3_TXDATA[211]; // rv MustConnect
  assign CH3_TXDATA_in[212] = (CH3_TXDATA[212] !== 1'bz) && CH3_TXDATA[212]; // rv MustConnect
  assign CH3_TXDATA_in[213] = (CH3_TXDATA[213] !== 1'bz) && CH3_TXDATA[213]; // rv MustConnect
  assign CH3_TXDATA_in[214] = (CH3_TXDATA[214] !== 1'bz) && CH3_TXDATA[214]; // rv MustConnect
  assign CH3_TXDATA_in[215] = (CH3_TXDATA[215] !== 1'bz) && CH3_TXDATA[215]; // rv MustConnect
  assign CH3_TXDATA_in[216] = (CH3_TXDATA[216] !== 1'bz) && CH3_TXDATA[216]; // rv MustConnect
  assign CH3_TXDATA_in[217] = (CH3_TXDATA[217] !== 1'bz) && CH3_TXDATA[217]; // rv MustConnect
  assign CH3_TXDATA_in[218] = (CH3_TXDATA[218] !== 1'bz) && CH3_TXDATA[218]; // rv MustConnect
  assign CH3_TXDATA_in[219] = (CH3_TXDATA[219] !== 1'bz) && CH3_TXDATA[219]; // rv MustConnect
  assign CH3_TXDATA_in[21] = (CH3_TXDATA[21] !== 1'bz) && CH3_TXDATA[21]; // rv MustConnect
  assign CH3_TXDATA_in[220] = (CH3_TXDATA[220] !== 1'bz) && CH3_TXDATA[220]; // rv MustConnect
  assign CH3_TXDATA_in[221] = (CH3_TXDATA[221] !== 1'bz) && CH3_TXDATA[221]; // rv MustConnect
  assign CH3_TXDATA_in[222] = (CH3_TXDATA[222] !== 1'bz) && CH3_TXDATA[222]; // rv MustConnect
  assign CH3_TXDATA_in[223] = (CH3_TXDATA[223] !== 1'bz) && CH3_TXDATA[223]; // rv MustConnect
  assign CH3_TXDATA_in[224] = (CH3_TXDATA[224] !== 1'bz) && CH3_TXDATA[224]; // rv MustConnect
  assign CH3_TXDATA_in[225] = (CH3_TXDATA[225] !== 1'bz) && CH3_TXDATA[225]; // rv MustConnect
  assign CH3_TXDATA_in[226] = (CH3_TXDATA[226] !== 1'bz) && CH3_TXDATA[226]; // rv MustConnect
  assign CH3_TXDATA_in[227] = (CH3_TXDATA[227] !== 1'bz) && CH3_TXDATA[227]; // rv MustConnect
  assign CH3_TXDATA_in[228] = (CH3_TXDATA[228] !== 1'bz) && CH3_TXDATA[228]; // rv MustConnect
  assign CH3_TXDATA_in[229] = (CH3_TXDATA[229] !== 1'bz) && CH3_TXDATA[229]; // rv MustConnect
  assign CH3_TXDATA_in[22] = (CH3_TXDATA[22] !== 1'bz) && CH3_TXDATA[22]; // rv MustConnect
  assign CH3_TXDATA_in[230] = (CH3_TXDATA[230] !== 1'bz) && CH3_TXDATA[230]; // rv MustConnect
  assign CH3_TXDATA_in[231] = (CH3_TXDATA[231] !== 1'bz) && CH3_TXDATA[231]; // rv MustConnect
  assign CH3_TXDATA_in[232] = (CH3_TXDATA[232] !== 1'bz) && CH3_TXDATA[232]; // rv MustConnect
  assign CH3_TXDATA_in[233] = (CH3_TXDATA[233] !== 1'bz) && CH3_TXDATA[233]; // rv MustConnect
  assign CH3_TXDATA_in[234] = (CH3_TXDATA[234] !== 1'bz) && CH3_TXDATA[234]; // rv MustConnect
  assign CH3_TXDATA_in[235] = (CH3_TXDATA[235] !== 1'bz) && CH3_TXDATA[235]; // rv MustConnect
  assign CH3_TXDATA_in[236] = (CH3_TXDATA[236] !== 1'bz) && CH3_TXDATA[236]; // rv MustConnect
  assign CH3_TXDATA_in[237] = (CH3_TXDATA[237] !== 1'bz) && CH3_TXDATA[237]; // rv MustConnect
  assign CH3_TXDATA_in[238] = (CH3_TXDATA[238] !== 1'bz) && CH3_TXDATA[238]; // rv MustConnect
  assign CH3_TXDATA_in[239] = (CH3_TXDATA[239] !== 1'bz) && CH3_TXDATA[239]; // rv MustConnect
  assign CH3_TXDATA_in[23] = (CH3_TXDATA[23] !== 1'bz) && CH3_TXDATA[23]; // rv MustConnect
  assign CH3_TXDATA_in[240] = (CH3_TXDATA[240] !== 1'bz) && CH3_TXDATA[240]; // rv MustConnect
  assign CH3_TXDATA_in[241] = (CH3_TXDATA[241] !== 1'bz) && CH3_TXDATA[241]; // rv MustConnect
  assign CH3_TXDATA_in[242] = (CH3_TXDATA[242] !== 1'bz) && CH3_TXDATA[242]; // rv MustConnect
  assign CH3_TXDATA_in[243] = (CH3_TXDATA[243] !== 1'bz) && CH3_TXDATA[243]; // rv MustConnect
  assign CH3_TXDATA_in[244] = (CH3_TXDATA[244] !== 1'bz) && CH3_TXDATA[244]; // rv MustConnect
  assign CH3_TXDATA_in[245] = (CH3_TXDATA[245] !== 1'bz) && CH3_TXDATA[245]; // rv MustConnect
  assign CH3_TXDATA_in[246] = (CH3_TXDATA[246] !== 1'bz) && CH3_TXDATA[246]; // rv MustConnect
  assign CH3_TXDATA_in[247] = (CH3_TXDATA[247] !== 1'bz) && CH3_TXDATA[247]; // rv MustConnect
  assign CH3_TXDATA_in[248] = (CH3_TXDATA[248] !== 1'bz) && CH3_TXDATA[248]; // rv MustConnect
  assign CH3_TXDATA_in[249] = (CH3_TXDATA[249] !== 1'bz) && CH3_TXDATA[249]; // rv MustConnect
  assign CH3_TXDATA_in[24] = (CH3_TXDATA[24] !== 1'bz) && CH3_TXDATA[24]; // rv MustConnect
  assign CH3_TXDATA_in[250] = (CH3_TXDATA[250] !== 1'bz) && CH3_TXDATA[250]; // rv MustConnect
  assign CH3_TXDATA_in[251] = (CH3_TXDATA[251] !== 1'bz) && CH3_TXDATA[251]; // rv MustConnect
  assign CH3_TXDATA_in[252] = (CH3_TXDATA[252] !== 1'bz) && CH3_TXDATA[252]; // rv MustConnect
  assign CH3_TXDATA_in[253] = (CH3_TXDATA[253] !== 1'bz) && CH3_TXDATA[253]; // rv MustConnect
  assign CH3_TXDATA_in[254] = (CH3_TXDATA[254] !== 1'bz) && CH3_TXDATA[254]; // rv MustConnect
  assign CH3_TXDATA_in[255] = (CH3_TXDATA[255] !== 1'bz) && CH3_TXDATA[255]; // rv MustConnect
  assign CH3_TXDATA_in[25] = (CH3_TXDATA[25] !== 1'bz) && CH3_TXDATA[25]; // rv MustConnect
  assign CH3_TXDATA_in[26] = (CH3_TXDATA[26] !== 1'bz) && CH3_TXDATA[26]; // rv MustConnect
  assign CH3_TXDATA_in[27] = (CH3_TXDATA[27] !== 1'bz) && CH3_TXDATA[27]; // rv MustConnect
  assign CH3_TXDATA_in[28] = (CH3_TXDATA[28] !== 1'bz) && CH3_TXDATA[28]; // rv MustConnect
  assign CH3_TXDATA_in[29] = (CH3_TXDATA[29] !== 1'bz) && CH3_TXDATA[29]; // rv MustConnect
  assign CH3_TXDATA_in[2] = (CH3_TXDATA[2] !== 1'bz) && CH3_TXDATA[2]; // rv MustConnect
  assign CH3_TXDATA_in[30] = (CH3_TXDATA[30] !== 1'bz) && CH3_TXDATA[30]; // rv MustConnect
  assign CH3_TXDATA_in[31] = (CH3_TXDATA[31] !== 1'bz) && CH3_TXDATA[31]; // rv MustConnect
  assign CH3_TXDATA_in[32] = (CH3_TXDATA[32] !== 1'bz) && CH3_TXDATA[32]; // rv MustConnect
  assign CH3_TXDATA_in[33] = (CH3_TXDATA[33] !== 1'bz) && CH3_TXDATA[33]; // rv MustConnect
  assign CH3_TXDATA_in[34] = (CH3_TXDATA[34] !== 1'bz) && CH3_TXDATA[34]; // rv MustConnect
  assign CH3_TXDATA_in[35] = (CH3_TXDATA[35] !== 1'bz) && CH3_TXDATA[35]; // rv MustConnect
  assign CH3_TXDATA_in[36] = (CH3_TXDATA[36] !== 1'bz) && CH3_TXDATA[36]; // rv MustConnect
  assign CH3_TXDATA_in[37] = (CH3_TXDATA[37] !== 1'bz) && CH3_TXDATA[37]; // rv MustConnect
  assign CH3_TXDATA_in[38] = (CH3_TXDATA[38] !== 1'bz) && CH3_TXDATA[38]; // rv MustConnect
  assign CH3_TXDATA_in[39] = (CH3_TXDATA[39] !== 1'bz) && CH3_TXDATA[39]; // rv MustConnect
  assign CH3_TXDATA_in[3] = (CH3_TXDATA[3] !== 1'bz) && CH3_TXDATA[3]; // rv MustConnect
  assign CH3_TXDATA_in[40] = (CH3_TXDATA[40] !== 1'bz) && CH3_TXDATA[40]; // rv MustConnect
  assign CH3_TXDATA_in[41] = (CH3_TXDATA[41] !== 1'bz) && CH3_TXDATA[41]; // rv MustConnect
  assign CH3_TXDATA_in[42] = (CH3_TXDATA[42] !== 1'bz) && CH3_TXDATA[42]; // rv MustConnect
  assign CH3_TXDATA_in[43] = (CH3_TXDATA[43] !== 1'bz) && CH3_TXDATA[43]; // rv MustConnect
  assign CH3_TXDATA_in[44] = (CH3_TXDATA[44] !== 1'bz) && CH3_TXDATA[44]; // rv MustConnect
  assign CH3_TXDATA_in[45] = (CH3_TXDATA[45] !== 1'bz) && CH3_TXDATA[45]; // rv MustConnect
  assign CH3_TXDATA_in[46] = (CH3_TXDATA[46] !== 1'bz) && CH3_TXDATA[46]; // rv MustConnect
  assign CH3_TXDATA_in[47] = (CH3_TXDATA[47] !== 1'bz) && CH3_TXDATA[47]; // rv MustConnect
  assign CH3_TXDATA_in[48] = (CH3_TXDATA[48] !== 1'bz) && CH3_TXDATA[48]; // rv MustConnect
  assign CH3_TXDATA_in[49] = (CH3_TXDATA[49] !== 1'bz) && CH3_TXDATA[49]; // rv MustConnect
  assign CH3_TXDATA_in[4] = (CH3_TXDATA[4] !== 1'bz) && CH3_TXDATA[4]; // rv MustConnect
  assign CH3_TXDATA_in[50] = (CH3_TXDATA[50] !== 1'bz) && CH3_TXDATA[50]; // rv MustConnect
  assign CH3_TXDATA_in[51] = (CH3_TXDATA[51] !== 1'bz) && CH3_TXDATA[51]; // rv MustConnect
  assign CH3_TXDATA_in[52] = (CH3_TXDATA[52] !== 1'bz) && CH3_TXDATA[52]; // rv MustConnect
  assign CH3_TXDATA_in[53] = (CH3_TXDATA[53] !== 1'bz) && CH3_TXDATA[53]; // rv MustConnect
  assign CH3_TXDATA_in[54] = (CH3_TXDATA[54] !== 1'bz) && CH3_TXDATA[54]; // rv MustConnect
  assign CH3_TXDATA_in[55] = (CH3_TXDATA[55] !== 1'bz) && CH3_TXDATA[55]; // rv MustConnect
  assign CH3_TXDATA_in[56] = (CH3_TXDATA[56] !== 1'bz) && CH3_TXDATA[56]; // rv MustConnect
  assign CH3_TXDATA_in[57] = (CH3_TXDATA[57] !== 1'bz) && CH3_TXDATA[57]; // rv MustConnect
  assign CH3_TXDATA_in[58] = (CH3_TXDATA[58] !== 1'bz) && CH3_TXDATA[58]; // rv MustConnect
  assign CH3_TXDATA_in[59] = (CH3_TXDATA[59] !== 1'bz) && CH3_TXDATA[59]; // rv MustConnect
  assign CH3_TXDATA_in[5] = (CH3_TXDATA[5] !== 1'bz) && CH3_TXDATA[5]; // rv MustConnect
  assign CH3_TXDATA_in[60] = (CH3_TXDATA[60] !== 1'bz) && CH3_TXDATA[60]; // rv MustConnect
  assign CH3_TXDATA_in[61] = (CH3_TXDATA[61] !== 1'bz) && CH3_TXDATA[61]; // rv MustConnect
  assign CH3_TXDATA_in[62] = (CH3_TXDATA[62] !== 1'bz) && CH3_TXDATA[62]; // rv MustConnect
  assign CH3_TXDATA_in[63] = (CH3_TXDATA[63] !== 1'bz) && CH3_TXDATA[63]; // rv MustConnect
  assign CH3_TXDATA_in[64] = (CH3_TXDATA[64] !== 1'bz) && CH3_TXDATA[64]; // rv MustConnect
  assign CH3_TXDATA_in[65] = (CH3_TXDATA[65] !== 1'bz) && CH3_TXDATA[65]; // rv MustConnect
  assign CH3_TXDATA_in[66] = (CH3_TXDATA[66] !== 1'bz) && CH3_TXDATA[66]; // rv MustConnect
  assign CH3_TXDATA_in[67] = (CH3_TXDATA[67] !== 1'bz) && CH3_TXDATA[67]; // rv MustConnect
  assign CH3_TXDATA_in[68] = (CH3_TXDATA[68] !== 1'bz) && CH3_TXDATA[68]; // rv MustConnect
  assign CH3_TXDATA_in[69] = (CH3_TXDATA[69] !== 1'bz) && CH3_TXDATA[69]; // rv MustConnect
  assign CH3_TXDATA_in[6] = (CH3_TXDATA[6] !== 1'bz) && CH3_TXDATA[6]; // rv MustConnect
  assign CH3_TXDATA_in[70] = (CH3_TXDATA[70] !== 1'bz) && CH3_TXDATA[70]; // rv MustConnect
  assign CH3_TXDATA_in[71] = (CH3_TXDATA[71] !== 1'bz) && CH3_TXDATA[71]; // rv MustConnect
  assign CH3_TXDATA_in[72] = (CH3_TXDATA[72] !== 1'bz) && CH3_TXDATA[72]; // rv MustConnect
  assign CH3_TXDATA_in[73] = (CH3_TXDATA[73] !== 1'bz) && CH3_TXDATA[73]; // rv MustConnect
  assign CH3_TXDATA_in[74] = (CH3_TXDATA[74] !== 1'bz) && CH3_TXDATA[74]; // rv MustConnect
  assign CH3_TXDATA_in[75] = (CH3_TXDATA[75] !== 1'bz) && CH3_TXDATA[75]; // rv MustConnect
  assign CH3_TXDATA_in[76] = (CH3_TXDATA[76] !== 1'bz) && CH3_TXDATA[76]; // rv MustConnect
  assign CH3_TXDATA_in[77] = (CH3_TXDATA[77] !== 1'bz) && CH3_TXDATA[77]; // rv MustConnect
  assign CH3_TXDATA_in[78] = (CH3_TXDATA[78] !== 1'bz) && CH3_TXDATA[78]; // rv MustConnect
  assign CH3_TXDATA_in[79] = (CH3_TXDATA[79] !== 1'bz) && CH3_TXDATA[79]; // rv MustConnect
  assign CH3_TXDATA_in[7] = (CH3_TXDATA[7] !== 1'bz) && CH3_TXDATA[7]; // rv MustConnect
  assign CH3_TXDATA_in[80] = (CH3_TXDATA[80] !== 1'bz) && CH3_TXDATA[80]; // rv MustConnect
  assign CH3_TXDATA_in[81] = (CH3_TXDATA[81] !== 1'bz) && CH3_TXDATA[81]; // rv MustConnect
  assign CH3_TXDATA_in[82] = (CH3_TXDATA[82] !== 1'bz) && CH3_TXDATA[82]; // rv MustConnect
  assign CH3_TXDATA_in[83] = (CH3_TXDATA[83] !== 1'bz) && CH3_TXDATA[83]; // rv MustConnect
  assign CH3_TXDATA_in[84] = (CH3_TXDATA[84] !== 1'bz) && CH3_TXDATA[84]; // rv MustConnect
  assign CH3_TXDATA_in[85] = (CH3_TXDATA[85] !== 1'bz) && CH3_TXDATA[85]; // rv MustConnect
  assign CH3_TXDATA_in[86] = (CH3_TXDATA[86] !== 1'bz) && CH3_TXDATA[86]; // rv MustConnect
  assign CH3_TXDATA_in[87] = (CH3_TXDATA[87] !== 1'bz) && CH3_TXDATA[87]; // rv MustConnect
  assign CH3_TXDATA_in[88] = (CH3_TXDATA[88] !== 1'bz) && CH3_TXDATA[88]; // rv MustConnect
  assign CH3_TXDATA_in[89] = (CH3_TXDATA[89] !== 1'bz) && CH3_TXDATA[89]; // rv MustConnect
  assign CH3_TXDATA_in[8] = (CH3_TXDATA[8] !== 1'bz) && CH3_TXDATA[8]; // rv MustConnect
  assign CH3_TXDATA_in[90] = (CH3_TXDATA[90] !== 1'bz) && CH3_TXDATA[90]; // rv MustConnect
  assign CH3_TXDATA_in[91] = (CH3_TXDATA[91] !== 1'bz) && CH3_TXDATA[91]; // rv MustConnect
  assign CH3_TXDATA_in[92] = (CH3_TXDATA[92] !== 1'bz) && CH3_TXDATA[92]; // rv MustConnect
  assign CH3_TXDATA_in[93] = (CH3_TXDATA[93] !== 1'bz) && CH3_TXDATA[93]; // rv MustConnect
  assign CH3_TXDATA_in[94] = (CH3_TXDATA[94] !== 1'bz) && CH3_TXDATA[94]; // rv MustConnect
  assign CH3_TXDATA_in[95] = (CH3_TXDATA[95] !== 1'bz) && CH3_TXDATA[95]; // rv MustConnect
  assign CH3_TXDATA_in[96] = (CH3_TXDATA[96] !== 1'bz) && CH3_TXDATA[96]; // rv MustConnect
  assign CH3_TXDATA_in[97] = (CH3_TXDATA[97] !== 1'bz) && CH3_TXDATA[97]; // rv MustConnect
  assign CH3_TXDATA_in[98] = (CH3_TXDATA[98] !== 1'bz) && CH3_TXDATA[98]; // rv MustConnect
  assign CH3_TXDATA_in[99] = (CH3_TXDATA[99] !== 1'bz) && CH3_TXDATA[99]; // rv MustConnect
  assign CH3_TXDATA_in[9] = (CH3_TXDATA[9] !== 1'bz) && CH3_TXDATA[9]; // rv MustConnect
  assign CH3_TXUSRCLK_in = (CH3_TXUSRCLK === 1'bz) || CH3_TXUSRCLK; // rv 1
  assign COESTATUSDEBUG_in = (COESTATUSDEBUG === 1'bz) || COESTATUSDEBUG; // rv 1
  assign DEBUGTRACECLK_in = (DEBUGTRACECLK === 1'bz) || DEBUGTRACECLK; // rv 1
  assign DEBUGTRACEREADY_in = (DEBUGTRACEREADY === 1'bz) || DEBUGTRACEREADY; // rv 1
  assign M0_AXIS_TREADY_in = (M0_AXIS_TREADY === 1'bz) || M0_AXIS_TREADY; // rv 1
  assign M1_AXIS_TREADY_in = (M1_AXIS_TREADY === 1'bz) || M1_AXIS_TREADY; // rv 1
  assign M2_AXIS_TREADY_in = (M2_AXIS_TREADY === 1'bz) || M2_AXIS_TREADY; // rv 1
  assign M3_AXIS_TREADY_in = (M3_AXIS_TREADY === 1'bz) || M3_AXIS_TREADY; // rv 1
  assign S0_AXIS_TDATA_in[0] = (S0_AXIS_TDATA[0] !== 1'bz) && S0_AXIS_TDATA[0]; // rv MustConnect
  assign S0_AXIS_TDATA_in[10] = (S0_AXIS_TDATA[10] !== 1'bz) && S0_AXIS_TDATA[10]; // rv MustConnect
  assign S0_AXIS_TDATA_in[11] = (S0_AXIS_TDATA[11] !== 1'bz) && S0_AXIS_TDATA[11]; // rv MustConnect
  assign S0_AXIS_TDATA_in[12] = (S0_AXIS_TDATA[12] !== 1'bz) && S0_AXIS_TDATA[12]; // rv MustConnect
  assign S0_AXIS_TDATA_in[13] = (S0_AXIS_TDATA[13] !== 1'bz) && S0_AXIS_TDATA[13]; // rv MustConnect
  assign S0_AXIS_TDATA_in[14] = (S0_AXIS_TDATA[14] !== 1'bz) && S0_AXIS_TDATA[14]; // rv MustConnect
  assign S0_AXIS_TDATA_in[15] = (S0_AXIS_TDATA[15] !== 1'bz) && S0_AXIS_TDATA[15]; // rv MustConnect
  assign S0_AXIS_TDATA_in[16] = (S0_AXIS_TDATA[16] !== 1'bz) && S0_AXIS_TDATA[16]; // rv MustConnect
  assign S0_AXIS_TDATA_in[17] = (S0_AXIS_TDATA[17] !== 1'bz) && S0_AXIS_TDATA[17]; // rv MustConnect
  assign S0_AXIS_TDATA_in[18] = (S0_AXIS_TDATA[18] !== 1'bz) && S0_AXIS_TDATA[18]; // rv MustConnect
  assign S0_AXIS_TDATA_in[19] = (S0_AXIS_TDATA[19] !== 1'bz) && S0_AXIS_TDATA[19]; // rv MustConnect
  assign S0_AXIS_TDATA_in[1] = (S0_AXIS_TDATA[1] !== 1'bz) && S0_AXIS_TDATA[1]; // rv MustConnect
  assign S0_AXIS_TDATA_in[20] = (S0_AXIS_TDATA[20] !== 1'bz) && S0_AXIS_TDATA[20]; // rv MustConnect
  assign S0_AXIS_TDATA_in[21] = (S0_AXIS_TDATA[21] !== 1'bz) && S0_AXIS_TDATA[21]; // rv MustConnect
  assign S0_AXIS_TDATA_in[22] = (S0_AXIS_TDATA[22] !== 1'bz) && S0_AXIS_TDATA[22]; // rv MustConnect
  assign S0_AXIS_TDATA_in[23] = (S0_AXIS_TDATA[23] !== 1'bz) && S0_AXIS_TDATA[23]; // rv MustConnect
  assign S0_AXIS_TDATA_in[24] = (S0_AXIS_TDATA[24] !== 1'bz) && S0_AXIS_TDATA[24]; // rv MustConnect
  assign S0_AXIS_TDATA_in[25] = (S0_AXIS_TDATA[25] !== 1'bz) && S0_AXIS_TDATA[25]; // rv MustConnect
  assign S0_AXIS_TDATA_in[26] = (S0_AXIS_TDATA[26] !== 1'bz) && S0_AXIS_TDATA[26]; // rv MustConnect
  assign S0_AXIS_TDATA_in[27] = (S0_AXIS_TDATA[27] !== 1'bz) && S0_AXIS_TDATA[27]; // rv MustConnect
  assign S0_AXIS_TDATA_in[28] = (S0_AXIS_TDATA[28] !== 1'bz) && S0_AXIS_TDATA[28]; // rv MustConnect
  assign S0_AXIS_TDATA_in[29] = (S0_AXIS_TDATA[29] !== 1'bz) && S0_AXIS_TDATA[29]; // rv MustConnect
  assign S0_AXIS_TDATA_in[2] = (S0_AXIS_TDATA[2] !== 1'bz) && S0_AXIS_TDATA[2]; // rv MustConnect
  assign S0_AXIS_TDATA_in[30] = (S0_AXIS_TDATA[30] !== 1'bz) && S0_AXIS_TDATA[30]; // rv MustConnect
  assign S0_AXIS_TDATA_in[31] = (S0_AXIS_TDATA[31] !== 1'bz) && S0_AXIS_TDATA[31]; // rv MustConnect
  assign S0_AXIS_TDATA_in[3] = (S0_AXIS_TDATA[3] !== 1'bz) && S0_AXIS_TDATA[3]; // rv MustConnect
  assign S0_AXIS_TDATA_in[4] = (S0_AXIS_TDATA[4] !== 1'bz) && S0_AXIS_TDATA[4]; // rv MustConnect
  assign S0_AXIS_TDATA_in[5] = (S0_AXIS_TDATA[5] !== 1'bz) && S0_AXIS_TDATA[5]; // rv MustConnect
  assign S0_AXIS_TDATA_in[6] = (S0_AXIS_TDATA[6] !== 1'bz) && S0_AXIS_TDATA[6]; // rv MustConnect
  assign S0_AXIS_TDATA_in[7] = (S0_AXIS_TDATA[7] !== 1'bz) && S0_AXIS_TDATA[7]; // rv MustConnect
  assign S0_AXIS_TDATA_in[8] = (S0_AXIS_TDATA[8] !== 1'bz) && S0_AXIS_TDATA[8]; // rv MustConnect
  assign S0_AXIS_TDATA_in[9] = (S0_AXIS_TDATA[9] !== 1'bz) && S0_AXIS_TDATA[9]; // rv MustConnect
  assign S0_AXIS_TLAST_in = (S0_AXIS_TLAST === 1'bz) || S0_AXIS_TLAST; // rv 1
  assign S0_AXIS_TVALID_in = (S0_AXIS_TVALID === 1'bz) || S0_AXIS_TVALID; // rv 1
  assign S1_AXIS_TDATA_in[0] = (S1_AXIS_TDATA[0] !== 1'bz) && S1_AXIS_TDATA[0]; // rv MustConnect
  assign S1_AXIS_TDATA_in[10] = (S1_AXIS_TDATA[10] !== 1'bz) && S1_AXIS_TDATA[10]; // rv MustConnect
  assign S1_AXIS_TDATA_in[11] = (S1_AXIS_TDATA[11] !== 1'bz) && S1_AXIS_TDATA[11]; // rv MustConnect
  assign S1_AXIS_TDATA_in[12] = (S1_AXIS_TDATA[12] !== 1'bz) && S1_AXIS_TDATA[12]; // rv MustConnect
  assign S1_AXIS_TDATA_in[13] = (S1_AXIS_TDATA[13] !== 1'bz) && S1_AXIS_TDATA[13]; // rv MustConnect
  assign S1_AXIS_TDATA_in[14] = (S1_AXIS_TDATA[14] !== 1'bz) && S1_AXIS_TDATA[14]; // rv MustConnect
  assign S1_AXIS_TDATA_in[15] = (S1_AXIS_TDATA[15] !== 1'bz) && S1_AXIS_TDATA[15]; // rv MustConnect
  assign S1_AXIS_TDATA_in[16] = (S1_AXIS_TDATA[16] !== 1'bz) && S1_AXIS_TDATA[16]; // rv MustConnect
  assign S1_AXIS_TDATA_in[17] = (S1_AXIS_TDATA[17] !== 1'bz) && S1_AXIS_TDATA[17]; // rv MustConnect
  assign S1_AXIS_TDATA_in[18] = (S1_AXIS_TDATA[18] !== 1'bz) && S1_AXIS_TDATA[18]; // rv MustConnect
  assign S1_AXIS_TDATA_in[19] = (S1_AXIS_TDATA[19] !== 1'bz) && S1_AXIS_TDATA[19]; // rv MustConnect
  assign S1_AXIS_TDATA_in[1] = (S1_AXIS_TDATA[1] !== 1'bz) && S1_AXIS_TDATA[1]; // rv MustConnect
  assign S1_AXIS_TDATA_in[20] = (S1_AXIS_TDATA[20] !== 1'bz) && S1_AXIS_TDATA[20]; // rv MustConnect
  assign S1_AXIS_TDATA_in[21] = (S1_AXIS_TDATA[21] !== 1'bz) && S1_AXIS_TDATA[21]; // rv MustConnect
  assign S1_AXIS_TDATA_in[22] = (S1_AXIS_TDATA[22] !== 1'bz) && S1_AXIS_TDATA[22]; // rv MustConnect
  assign S1_AXIS_TDATA_in[23] = (S1_AXIS_TDATA[23] !== 1'bz) && S1_AXIS_TDATA[23]; // rv MustConnect
  assign S1_AXIS_TDATA_in[24] = (S1_AXIS_TDATA[24] !== 1'bz) && S1_AXIS_TDATA[24]; // rv MustConnect
  assign S1_AXIS_TDATA_in[25] = (S1_AXIS_TDATA[25] !== 1'bz) && S1_AXIS_TDATA[25]; // rv MustConnect
  assign S1_AXIS_TDATA_in[26] = (S1_AXIS_TDATA[26] !== 1'bz) && S1_AXIS_TDATA[26]; // rv MustConnect
  assign S1_AXIS_TDATA_in[27] = (S1_AXIS_TDATA[27] !== 1'bz) && S1_AXIS_TDATA[27]; // rv MustConnect
  assign S1_AXIS_TDATA_in[28] = (S1_AXIS_TDATA[28] !== 1'bz) && S1_AXIS_TDATA[28]; // rv MustConnect
  assign S1_AXIS_TDATA_in[29] = (S1_AXIS_TDATA[29] !== 1'bz) && S1_AXIS_TDATA[29]; // rv MustConnect
  assign S1_AXIS_TDATA_in[2] = (S1_AXIS_TDATA[2] !== 1'bz) && S1_AXIS_TDATA[2]; // rv MustConnect
  assign S1_AXIS_TDATA_in[30] = (S1_AXIS_TDATA[30] !== 1'bz) && S1_AXIS_TDATA[30]; // rv MustConnect
  assign S1_AXIS_TDATA_in[31] = (S1_AXIS_TDATA[31] !== 1'bz) && S1_AXIS_TDATA[31]; // rv MustConnect
  assign S1_AXIS_TDATA_in[3] = (S1_AXIS_TDATA[3] !== 1'bz) && S1_AXIS_TDATA[3]; // rv MustConnect
  assign S1_AXIS_TDATA_in[4] = (S1_AXIS_TDATA[4] !== 1'bz) && S1_AXIS_TDATA[4]; // rv MustConnect
  assign S1_AXIS_TDATA_in[5] = (S1_AXIS_TDATA[5] !== 1'bz) && S1_AXIS_TDATA[5]; // rv MustConnect
  assign S1_AXIS_TDATA_in[6] = (S1_AXIS_TDATA[6] !== 1'bz) && S1_AXIS_TDATA[6]; // rv MustConnect
  assign S1_AXIS_TDATA_in[7] = (S1_AXIS_TDATA[7] !== 1'bz) && S1_AXIS_TDATA[7]; // rv MustConnect
  assign S1_AXIS_TDATA_in[8] = (S1_AXIS_TDATA[8] !== 1'bz) && S1_AXIS_TDATA[8]; // rv MustConnect
  assign S1_AXIS_TDATA_in[9] = (S1_AXIS_TDATA[9] !== 1'bz) && S1_AXIS_TDATA[9]; // rv MustConnect
  assign S1_AXIS_TLAST_in = (S1_AXIS_TLAST === 1'bz) || S1_AXIS_TLAST; // rv 1
  assign S1_AXIS_TVALID_in = (S1_AXIS_TVALID === 1'bz) || S1_AXIS_TVALID; // rv 1
  assign S2_AXIS_TDATA_in[0] = (S2_AXIS_TDATA[0] !== 1'bz) && S2_AXIS_TDATA[0]; // rv MustConnect
  assign S2_AXIS_TDATA_in[10] = (S2_AXIS_TDATA[10] !== 1'bz) && S2_AXIS_TDATA[10]; // rv MustConnect
  assign S2_AXIS_TDATA_in[11] = (S2_AXIS_TDATA[11] !== 1'bz) && S2_AXIS_TDATA[11]; // rv MustConnect
  assign S2_AXIS_TDATA_in[12] = (S2_AXIS_TDATA[12] !== 1'bz) && S2_AXIS_TDATA[12]; // rv MustConnect
  assign S2_AXIS_TDATA_in[13] = (S2_AXIS_TDATA[13] !== 1'bz) && S2_AXIS_TDATA[13]; // rv MustConnect
  assign S2_AXIS_TDATA_in[14] = (S2_AXIS_TDATA[14] !== 1'bz) && S2_AXIS_TDATA[14]; // rv MustConnect
  assign S2_AXIS_TDATA_in[15] = (S2_AXIS_TDATA[15] !== 1'bz) && S2_AXIS_TDATA[15]; // rv MustConnect
  assign S2_AXIS_TDATA_in[16] = (S2_AXIS_TDATA[16] !== 1'bz) && S2_AXIS_TDATA[16]; // rv MustConnect
  assign S2_AXIS_TDATA_in[17] = (S2_AXIS_TDATA[17] !== 1'bz) && S2_AXIS_TDATA[17]; // rv MustConnect
  assign S2_AXIS_TDATA_in[18] = (S2_AXIS_TDATA[18] !== 1'bz) && S2_AXIS_TDATA[18]; // rv MustConnect
  assign S2_AXIS_TDATA_in[19] = (S2_AXIS_TDATA[19] !== 1'bz) && S2_AXIS_TDATA[19]; // rv MustConnect
  assign S2_AXIS_TDATA_in[1] = (S2_AXIS_TDATA[1] !== 1'bz) && S2_AXIS_TDATA[1]; // rv MustConnect
  assign S2_AXIS_TDATA_in[20] = (S2_AXIS_TDATA[20] !== 1'bz) && S2_AXIS_TDATA[20]; // rv MustConnect
  assign S2_AXIS_TDATA_in[21] = (S2_AXIS_TDATA[21] !== 1'bz) && S2_AXIS_TDATA[21]; // rv MustConnect
  assign S2_AXIS_TDATA_in[22] = (S2_AXIS_TDATA[22] !== 1'bz) && S2_AXIS_TDATA[22]; // rv MustConnect
  assign S2_AXIS_TDATA_in[23] = (S2_AXIS_TDATA[23] !== 1'bz) && S2_AXIS_TDATA[23]; // rv MustConnect
  assign S2_AXIS_TDATA_in[24] = (S2_AXIS_TDATA[24] !== 1'bz) && S2_AXIS_TDATA[24]; // rv MustConnect
  assign S2_AXIS_TDATA_in[25] = (S2_AXIS_TDATA[25] !== 1'bz) && S2_AXIS_TDATA[25]; // rv MustConnect
  assign S2_AXIS_TDATA_in[26] = (S2_AXIS_TDATA[26] !== 1'bz) && S2_AXIS_TDATA[26]; // rv MustConnect
  assign S2_AXIS_TDATA_in[27] = (S2_AXIS_TDATA[27] !== 1'bz) && S2_AXIS_TDATA[27]; // rv MustConnect
  assign S2_AXIS_TDATA_in[28] = (S2_AXIS_TDATA[28] !== 1'bz) && S2_AXIS_TDATA[28]; // rv MustConnect
  assign S2_AXIS_TDATA_in[29] = (S2_AXIS_TDATA[29] !== 1'bz) && S2_AXIS_TDATA[29]; // rv MustConnect
  assign S2_AXIS_TDATA_in[2] = (S2_AXIS_TDATA[2] !== 1'bz) && S2_AXIS_TDATA[2]; // rv MustConnect
  assign S2_AXIS_TDATA_in[30] = (S2_AXIS_TDATA[30] !== 1'bz) && S2_AXIS_TDATA[30]; // rv MustConnect
  assign S2_AXIS_TDATA_in[31] = (S2_AXIS_TDATA[31] !== 1'bz) && S2_AXIS_TDATA[31]; // rv MustConnect
  assign S2_AXIS_TDATA_in[3] = (S2_AXIS_TDATA[3] !== 1'bz) && S2_AXIS_TDATA[3]; // rv MustConnect
  assign S2_AXIS_TDATA_in[4] = (S2_AXIS_TDATA[4] !== 1'bz) && S2_AXIS_TDATA[4]; // rv MustConnect
  assign S2_AXIS_TDATA_in[5] = (S2_AXIS_TDATA[5] !== 1'bz) && S2_AXIS_TDATA[5]; // rv MustConnect
  assign S2_AXIS_TDATA_in[6] = (S2_AXIS_TDATA[6] !== 1'bz) && S2_AXIS_TDATA[6]; // rv MustConnect
  assign S2_AXIS_TDATA_in[7] = (S2_AXIS_TDATA[7] !== 1'bz) && S2_AXIS_TDATA[7]; // rv MustConnect
  assign S2_AXIS_TDATA_in[8] = (S2_AXIS_TDATA[8] !== 1'bz) && S2_AXIS_TDATA[8]; // rv MustConnect
  assign S2_AXIS_TDATA_in[9] = (S2_AXIS_TDATA[9] !== 1'bz) && S2_AXIS_TDATA[9]; // rv MustConnect
  assign S2_AXIS_TLAST_in = (S2_AXIS_TLAST === 1'bz) || S2_AXIS_TLAST; // rv 1
  assign S2_AXIS_TVALID_in = (S2_AXIS_TVALID === 1'bz) || S2_AXIS_TVALID; // rv 1
  assign S3_AXIS_TDATA_in[0] = (S3_AXIS_TDATA[0] !== 1'bz) && S3_AXIS_TDATA[0]; // rv MustConnect
  assign S3_AXIS_TDATA_in[10] = (S3_AXIS_TDATA[10] !== 1'bz) && S3_AXIS_TDATA[10]; // rv MustConnect
  assign S3_AXIS_TDATA_in[11] = (S3_AXIS_TDATA[11] !== 1'bz) && S3_AXIS_TDATA[11]; // rv MustConnect
  assign S3_AXIS_TDATA_in[12] = (S3_AXIS_TDATA[12] !== 1'bz) && S3_AXIS_TDATA[12]; // rv MustConnect
  assign S3_AXIS_TDATA_in[13] = (S3_AXIS_TDATA[13] !== 1'bz) && S3_AXIS_TDATA[13]; // rv MustConnect
  assign S3_AXIS_TDATA_in[14] = (S3_AXIS_TDATA[14] !== 1'bz) && S3_AXIS_TDATA[14]; // rv MustConnect
  assign S3_AXIS_TDATA_in[15] = (S3_AXIS_TDATA[15] !== 1'bz) && S3_AXIS_TDATA[15]; // rv MustConnect
  assign S3_AXIS_TDATA_in[16] = (S3_AXIS_TDATA[16] !== 1'bz) && S3_AXIS_TDATA[16]; // rv MustConnect
  assign S3_AXIS_TDATA_in[17] = (S3_AXIS_TDATA[17] !== 1'bz) && S3_AXIS_TDATA[17]; // rv MustConnect
  assign S3_AXIS_TDATA_in[18] = (S3_AXIS_TDATA[18] !== 1'bz) && S3_AXIS_TDATA[18]; // rv MustConnect
  assign S3_AXIS_TDATA_in[19] = (S3_AXIS_TDATA[19] !== 1'bz) && S3_AXIS_TDATA[19]; // rv MustConnect
  assign S3_AXIS_TDATA_in[1] = (S3_AXIS_TDATA[1] !== 1'bz) && S3_AXIS_TDATA[1]; // rv MustConnect
  assign S3_AXIS_TDATA_in[20] = (S3_AXIS_TDATA[20] !== 1'bz) && S3_AXIS_TDATA[20]; // rv MustConnect
  assign S3_AXIS_TDATA_in[21] = (S3_AXIS_TDATA[21] !== 1'bz) && S3_AXIS_TDATA[21]; // rv MustConnect
  assign S3_AXIS_TDATA_in[22] = (S3_AXIS_TDATA[22] !== 1'bz) && S3_AXIS_TDATA[22]; // rv MustConnect
  assign S3_AXIS_TDATA_in[23] = (S3_AXIS_TDATA[23] !== 1'bz) && S3_AXIS_TDATA[23]; // rv MustConnect
  assign S3_AXIS_TDATA_in[24] = (S3_AXIS_TDATA[24] !== 1'bz) && S3_AXIS_TDATA[24]; // rv MustConnect
  assign S3_AXIS_TDATA_in[25] = (S3_AXIS_TDATA[25] !== 1'bz) && S3_AXIS_TDATA[25]; // rv MustConnect
  assign S3_AXIS_TDATA_in[26] = (S3_AXIS_TDATA[26] !== 1'bz) && S3_AXIS_TDATA[26]; // rv MustConnect
  assign S3_AXIS_TDATA_in[27] = (S3_AXIS_TDATA[27] !== 1'bz) && S3_AXIS_TDATA[27]; // rv MustConnect
  assign S3_AXIS_TDATA_in[28] = (S3_AXIS_TDATA[28] !== 1'bz) && S3_AXIS_TDATA[28]; // rv MustConnect
  assign S3_AXIS_TDATA_in[29] = (S3_AXIS_TDATA[29] !== 1'bz) && S3_AXIS_TDATA[29]; // rv MustConnect
  assign S3_AXIS_TDATA_in[2] = (S3_AXIS_TDATA[2] !== 1'bz) && S3_AXIS_TDATA[2]; // rv MustConnect
  assign S3_AXIS_TDATA_in[30] = (S3_AXIS_TDATA[30] !== 1'bz) && S3_AXIS_TDATA[30]; // rv MustConnect
  assign S3_AXIS_TDATA_in[31] = (S3_AXIS_TDATA[31] !== 1'bz) && S3_AXIS_TDATA[31]; // rv MustConnect
  assign S3_AXIS_TDATA_in[3] = (S3_AXIS_TDATA[3] !== 1'bz) && S3_AXIS_TDATA[3]; // rv MustConnect
  assign S3_AXIS_TDATA_in[4] = (S3_AXIS_TDATA[4] !== 1'bz) && S3_AXIS_TDATA[4]; // rv MustConnect
  assign S3_AXIS_TDATA_in[5] = (S3_AXIS_TDATA[5] !== 1'bz) && S3_AXIS_TDATA[5]; // rv MustConnect
  assign S3_AXIS_TDATA_in[6] = (S3_AXIS_TDATA[6] !== 1'bz) && S3_AXIS_TDATA[6]; // rv MustConnect
  assign S3_AXIS_TDATA_in[7] = (S3_AXIS_TDATA[7] !== 1'bz) && S3_AXIS_TDATA[7]; // rv MustConnect
  assign S3_AXIS_TDATA_in[8] = (S3_AXIS_TDATA[8] !== 1'bz) && S3_AXIS_TDATA[8]; // rv MustConnect
  assign S3_AXIS_TDATA_in[9] = (S3_AXIS_TDATA[9] !== 1'bz) && S3_AXIS_TDATA[9]; // rv MustConnect
  assign S3_AXIS_TLAST_in = (S3_AXIS_TLAST === 1'bz) || S3_AXIS_TLAST; // rv 1
  assign S3_AXIS_TVALID_in = (S3_AXIS_TVALID === 1'bz) || S3_AXIS_TVALID; // rv 1
  assign UBMBRST_in = (UBMBRST === 1'bz) || UBMBRST; // rv 1
`endif

  assign APB3PRESETN_in = (APB3PRESETN === 1'bz) || APB3PRESETN; // rv 1
  assign BGBYPASSB_in = BGBYPASSB;
  assign BGMONITORENB_in = (BGMONITORENB === 1'bz) || BGMONITORENB; // rv 1
  assign BGPDB_in = BGPDB;
  assign BGRCALOVRDENB_in = BGRCALOVRDENB;
  assign BGRCALOVRD_in[0] = (BGRCALOVRD[0] !== 1'bz) && BGRCALOVRD[0]; // rv MustConnect
  assign BGRCALOVRD_in[1] = (BGRCALOVRD[1] !== 1'bz) && BGRCALOVRD[1]; // rv MustConnect
  assign BGRCALOVRD_in[2] = (BGRCALOVRD[2] !== 1'bz) && BGRCALOVRD[2]; // rv MustConnect
  assign BGRCALOVRD_in[3] = (BGRCALOVRD[3] !== 1'bz) && BGRCALOVRD[3]; // rv MustConnect
  assign BGRCALOVRD_in[4] = (BGRCALOVRD[4] !== 1'bz) && BGRCALOVRD[4]; // rv MustConnect
  assign CH0_CDRFREQOS_in = (CH0_CDRFREQOS === 1'bz) || CH0_CDRFREQOS; // rv 1
  assign CH0_CDRINCPCTRL_in = (CH0_CDRINCPCTRL === 1'bz) || CH0_CDRINCPCTRL; // rv 1
  assign CH0_CDRSTEPDIR_in = (CH0_CDRSTEPDIR === 1'bz) || CH0_CDRSTEPDIR; // rv 1
  assign CH0_CDRSTEPSQ_in = (CH0_CDRSTEPSQ === 1'bz) || CH0_CDRSTEPSQ; // rv 1
  assign CH0_CDRSTEPSX_in = (CH0_CDRSTEPSX === 1'bz) || CH0_CDRSTEPSX; // rv 1
  assign CH0_CLKRSVD0_in = (CH0_CLKRSVD0 === 1'bz) || CH0_CLKRSVD0; // rv 1
  assign CH0_CLKRSVD1_in = (CH0_CLKRSVD1 === 1'bz) || CH0_CLKRSVD1; // rv 1
  assign CH0_EYESCANRESET_in = (CH0_EYESCANRESET === 1'bz) || CH0_EYESCANRESET; // rv 1
  assign CH0_GTMRXN_in = CH0_GTMRXN;
  assign CH0_GTMRXP_in = CH0_GTMRXP;
  assign CH0_GTRSVD_in[0] = (CH0_GTRSVD[0] !== 1'bz) && CH0_GTRSVD[0]; // rv MustConnect
  assign CH0_GTRSVD_in[10] = (CH0_GTRSVD[10] !== 1'bz) && CH0_GTRSVD[10]; // rv MustConnect
  assign CH0_GTRSVD_in[11] = (CH0_GTRSVD[11] !== 1'bz) && CH0_GTRSVD[11]; // rv MustConnect
  assign CH0_GTRSVD_in[12] = (CH0_GTRSVD[12] !== 1'bz) && CH0_GTRSVD[12]; // rv MustConnect
  assign CH0_GTRSVD_in[13] = (CH0_GTRSVD[13] !== 1'bz) && CH0_GTRSVD[13]; // rv MustConnect
  assign CH0_GTRSVD_in[14] = (CH0_GTRSVD[14] !== 1'bz) && CH0_GTRSVD[14]; // rv MustConnect
  assign CH0_GTRSVD_in[15] = (CH0_GTRSVD[15] !== 1'bz) && CH0_GTRSVD[15]; // rv MustConnect
  assign CH0_GTRSVD_in[1] = (CH0_GTRSVD[1] !== 1'bz) && CH0_GTRSVD[1]; // rv MustConnect
  assign CH0_GTRSVD_in[2] = (CH0_GTRSVD[2] !== 1'bz) && CH0_GTRSVD[2]; // rv MustConnect
  assign CH0_GTRSVD_in[3] = (CH0_GTRSVD[3] !== 1'bz) && CH0_GTRSVD[3]; // rv MustConnect
  assign CH0_GTRSVD_in[4] = (CH0_GTRSVD[4] !== 1'bz) && CH0_GTRSVD[4]; // rv MustConnect
  assign CH0_GTRSVD_in[5] = (CH0_GTRSVD[5] !== 1'bz) && CH0_GTRSVD[5]; // rv MustConnect
  assign CH0_GTRSVD_in[6] = (CH0_GTRSVD[6] !== 1'bz) && CH0_GTRSVD[6]; // rv MustConnect
  assign CH0_GTRSVD_in[7] = (CH0_GTRSVD[7] !== 1'bz) && CH0_GTRSVD[7]; // rv MustConnect
  assign CH0_GTRSVD_in[8] = (CH0_GTRSVD[8] !== 1'bz) && CH0_GTRSVD[8]; // rv MustConnect
  assign CH0_GTRSVD_in[9] = (CH0_GTRSVD[9] !== 1'bz) && CH0_GTRSVD[9]; // rv MustConnect
  assign CH0_GTRXRESET_in = (CH0_GTRXRESET === 1'bz) || CH0_GTRXRESET; // rv 1
  assign CH0_GTTXRESET_in = (CH0_GTTXRESET === 1'bz) || CH0_GTTXRESET; // rv 1
  assign CH0_ILORESETMASK_in = (CH0_ILORESETMASK === 1'bz) || CH0_ILORESETMASK; // rv 1
  assign CH0_ILORESET_in = (CH0_ILORESET === 1'bz) || CH0_ILORESET; // rv 1
  assign CH0_PCSRSVDIN_in[0] = (CH0_PCSRSVDIN[0] !== 1'bz) && CH0_PCSRSVDIN[0]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[10] = (CH0_PCSRSVDIN[10] !== 1'bz) && CH0_PCSRSVDIN[10]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[11] = (CH0_PCSRSVDIN[11] !== 1'bz) && CH0_PCSRSVDIN[11]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[12] = (CH0_PCSRSVDIN[12] !== 1'bz) && CH0_PCSRSVDIN[12]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[13] = (CH0_PCSRSVDIN[13] !== 1'bz) && CH0_PCSRSVDIN[13]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[14] = (CH0_PCSRSVDIN[14] !== 1'bz) && CH0_PCSRSVDIN[14]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[15] = (CH0_PCSRSVDIN[15] !== 1'bz) && CH0_PCSRSVDIN[15]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[1] = (CH0_PCSRSVDIN[1] !== 1'bz) && CH0_PCSRSVDIN[1]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[2] = (CH0_PCSRSVDIN[2] !== 1'bz) && CH0_PCSRSVDIN[2]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[3] = (CH0_PCSRSVDIN[3] !== 1'bz) && CH0_PCSRSVDIN[3]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[4] = (CH0_PCSRSVDIN[4] !== 1'bz) && CH0_PCSRSVDIN[4]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[5] = (CH0_PCSRSVDIN[5] !== 1'bz) && CH0_PCSRSVDIN[5]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[6] = (CH0_PCSRSVDIN[6] !== 1'bz) && CH0_PCSRSVDIN[6]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[7] = (CH0_PCSRSVDIN[7] !== 1'bz) && CH0_PCSRSVDIN[7]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[8] = (CH0_PCSRSVDIN[8] !== 1'bz) && CH0_PCSRSVDIN[8]; // rv MustConnect
  assign CH0_PCSRSVDIN_in[9] = (CH0_PCSRSVDIN[9] !== 1'bz) && CH0_PCSRSVDIN[9]; // rv MustConnect
  assign CH0_RXCDRHOLD_in = (CH0_RXCDRHOLD === 1'bz) || CH0_RXCDRHOLD; // rv 1
  assign CH0_RXCDROVRDEN_in = (CH0_RXCDROVRDEN === 1'bz) || CH0_RXCDROVRDEN; // rv 1
  assign CH0_RXCDRRESET_in = (CH0_RXCDRRESET === 1'bz) || CH0_RXCDRRESET; // rv 1
  assign CH0_RXPCSRESETMASK_in[0] = (CH0_RXPCSRESETMASK[0] !== 1'bz) && CH0_RXPCSRESETMASK[0]; // rv MustConnect
  assign CH0_RXPCSRESETMASK_in[1] = (CH0_RXPCSRESETMASK[1] !== 1'bz) && CH0_RXPCSRESETMASK[1]; // rv MustConnect
  assign CH0_RXPCSRESETMASK_in[2] = (CH0_RXPCSRESETMASK[2] !== 1'bz) && CH0_RXPCSRESETMASK[2]; // rv MustConnect
  assign CH0_RXPD_in[0] = (CH0_RXPD[0] !== 1'bz) && CH0_RXPD[0]; // rv MustConnect
  assign CH0_RXPD_in[1] = (CH0_RXPD[1] !== 1'bz) && CH0_RXPD[1]; // rv MustConnect
  assign CH0_RXPERST_in = (CH0_RXPERST === 1'bz) || CH0_RXPERST; // rv 1
  assign CH0_RXPMARESETMASK_in[0] = (CH0_RXPMARESETMASK[0] !== 1'bz) && CH0_RXPMARESETMASK[0]; // rv MustConnect
  assign CH0_RXPMARESETMASK_in[1] = (CH0_RXPMARESETMASK[1] !== 1'bz) && CH0_RXPMARESETMASK[1]; // rv MustConnect
  assign CH0_RXPMARESETMASK_in[2] = (CH0_RXPMARESETMASK[2] !== 1'bz) && CH0_RXPMARESETMASK[2]; // rv MustConnect
  assign CH0_RXPMARESETMASK_in[3] = (CH0_RXPMARESETMASK[3] !== 1'bz) && CH0_RXPMARESETMASK[3]; // rv MustConnect
  assign CH0_RXPMARESETMASK_in[4] = (CH0_RXPMARESETMASK[4] !== 1'bz) && CH0_RXPMARESETMASK[4]; // rv MustConnect
  assign CH0_RXPMARESETMASK_in[5] = (CH0_RXPMARESETMASK[5] !== 1'bz) && CH0_RXPMARESETMASK[5]; // rv MustConnect
  assign CH0_RXPMARESETMASK_in[6] = (CH0_RXPMARESETMASK[6] !== 1'bz) && CH0_RXPMARESETMASK[6]; // rv MustConnect
  assign CH0_RXPMARESETMASK_in[7] = (CH0_RXPMARESETMASK[7] !== 1'bz) && CH0_RXPMARESETMASK[7]; // rv MustConnect
  assign CH0_RXPOLARITY_in = (CH0_RXPOLARITY === 1'bz) || CH0_RXPOLARITY; // rv 1
  assign CH0_RXPRBSCNTRESET_in = (CH0_RXPRBSCNTRESET === 1'bz) || CH0_RXPRBSCNTRESET; // rv 1
  assign CH0_RXPRBSCNTSTOP_in = (CH0_RXPRBSCNTSTOP === 1'bz) || CH0_RXPRBSCNTSTOP; // rv 1
  assign CH0_RXPRBSSEL_in[0] = (CH0_RXPRBSSEL[0] !== 1'bz) && CH0_RXPRBSSEL[0]; // rv MustConnect
  assign CH0_RXPRBSSEL_in[1] = (CH0_RXPRBSSEL[1] !== 1'bz) && CH0_RXPRBSSEL[1]; // rv MustConnect
  assign CH0_RXPRBSSEL_in[2] = (CH0_RXPRBSSEL[2] !== 1'bz) && CH0_RXPRBSSEL[2]; // rv MustConnect
  assign CH0_RXPRBSSEL_in[3] = (CH0_RXPRBSSEL[3] !== 1'bz) && CH0_RXPRBSSEL[3]; // rv MustConnect
  assign CH0_RXPROGDIVRESET_in = (CH0_RXPROGDIVRESET === 1'bz) || CH0_RXPROGDIVRESET; // rv 1
  assign CH0_RXQPRBSEN_in = (CH0_RXQPRBSEN === 1'bz) || CH0_RXQPRBSEN; // rv 1
  assign CH0_RXRATE_in[0] = (CH0_RXRATE[0] !== 1'bz) && CH0_RXRATE[0]; // rv MustConnect
  assign CH0_RXRATE_in[1] = (CH0_RXRATE[1] !== 1'bz) && CH0_RXRATE[1]; // rv MustConnect
  assign CH0_RXRATE_in[2] = (CH0_RXRATE[2] !== 1'bz) && CH0_RXRATE[2]; // rv MustConnect
  assign CH0_RXRATE_in[3] = (CH0_RXRATE[3] !== 1'bz) && CH0_RXRATE[3]; // rv MustConnect
  assign CH0_RXRATE_in[4] = (CH0_RXRATE[4] !== 1'bz) && CH0_RXRATE[4]; // rv MustConnect
  assign CH0_RXRATE_in[5] = (CH0_RXRATE[5] !== 1'bz) && CH0_RXRATE[5]; // rv MustConnect
  assign CH0_RXRATE_in[6] = (CH0_RXRATE[6] !== 1'bz) && CH0_RXRATE[6]; // rv MustConnect
  assign CH0_RXRATE_in[7] = (CH0_RXRATE[7] !== 1'bz) && CH0_RXRATE[7]; // rv MustConnect
  assign CH0_RXRESETMODE_in[0] = (CH0_RXRESETMODE[0] !== 1'bz) && CH0_RXRESETMODE[0]; // rv MustConnect
  assign CH0_RXRESETMODE_in[1] = (CH0_RXRESETMODE[1] !== 1'bz) && CH0_RXRESETMODE[1]; // rv MustConnect
  assign CH0_RXRSV0_in = (CH0_RXRSV0 === 1'bz) || CH0_RXRSV0; // rv 1
  assign CH0_RXRSV1_in = (CH0_RXRSV1 === 1'bz) || CH0_RXRSV1; // rv 1
  assign CH0_RXRSV2_in = (CH0_RXRSV2 === 1'bz) || CH0_RXRSV2; // rv 1
  assign CH0_RXUSERRDY_in = (CH0_RXUSERRDY === 1'bz) || CH0_RXUSERRDY; // rv 1
  assign CH0_TSTCLK0_in = CH0_TSTCLK0;
  assign CH0_TSTCLK1_in = CH0_TSTCLK1;
  assign CH0_TXINHIBIT_in = (CH0_TXINHIBIT === 1'bz) || CH0_TXINHIBIT; // rv 1
  assign CH0_TXLATCLK_in = (CH0_TXLATCLK === 1'bz) || CH0_TXLATCLK; // rv 1
  assign CH0_TXMAINCURSOR_in[0] = (CH0_TXMAINCURSOR[0] !== 1'bz) && CH0_TXMAINCURSOR[0]; // rv MustConnect
  assign CH0_TXMAINCURSOR_in[1] = (CH0_TXMAINCURSOR[1] !== 1'bz) && CH0_TXMAINCURSOR[1]; // rv MustConnect
  assign CH0_TXMAINCURSOR_in[2] = (CH0_TXMAINCURSOR[2] !== 1'bz) && CH0_TXMAINCURSOR[2]; // rv MustConnect
  assign CH0_TXMAINCURSOR_in[3] = (CH0_TXMAINCURSOR[3] !== 1'bz) && CH0_TXMAINCURSOR[3]; // rv MustConnect
  assign CH0_TXMAINCURSOR_in[4] = (CH0_TXMAINCURSOR[4] !== 1'bz) && CH0_TXMAINCURSOR[4]; // rv MustConnect
  assign CH0_TXMAINCURSOR_in[5] = (CH0_TXMAINCURSOR[5] !== 1'bz) && CH0_TXMAINCURSOR[5]; // rv MustConnect
  assign CH0_TXMAINCURSOR_in[6] = (CH0_TXMAINCURSOR[6] !== 1'bz) && CH0_TXMAINCURSOR[6]; // rv MustConnect
  assign CH0_TXPCSRESETMASK_in = (CH0_TXPCSRESETMASK === 1'bz) || CH0_TXPCSRESETMASK; // rv 1
  assign CH0_TXPD_in[0] = (CH0_TXPD[0] !== 1'bz) && CH0_TXPD[0]; // rv MustConnect
  assign CH0_TXPD_in[1] = (CH0_TXPD[1] !== 1'bz) && CH0_TXPD[1]; // rv MustConnect
  assign CH0_TXPERST_in = (CH0_TXPERST === 1'bz) || CH0_TXPERST; // rv 1
  assign CH0_TXPISOPD_in = (CH0_TXPISOPD === 1'bz) || CH0_TXPISOPD; // rv 1
  assign CH0_TXPMARESETMASK_in[0] = (CH0_TXPMARESETMASK[0] !== 1'bz) && CH0_TXPMARESETMASK[0]; // rv MustConnect
  assign CH0_TXPMARESETMASK_in[1] = (CH0_TXPMARESETMASK[1] !== 1'bz) && CH0_TXPMARESETMASK[1]; // rv MustConnect
  assign CH0_TXPOLARITY_in = (CH0_TXPOLARITY === 1'bz) || CH0_TXPOLARITY; // rv 1
  assign CH0_TXPOSTCURSOR_in[0] = (CH0_TXPOSTCURSOR[0] !== 1'bz) && CH0_TXPOSTCURSOR[0]; // rv MustConnect
  assign CH0_TXPOSTCURSOR_in[1] = (CH0_TXPOSTCURSOR[1] !== 1'bz) && CH0_TXPOSTCURSOR[1]; // rv MustConnect
  assign CH0_TXPOSTCURSOR_in[2] = (CH0_TXPOSTCURSOR[2] !== 1'bz) && CH0_TXPOSTCURSOR[2]; // rv MustConnect
  assign CH0_TXPOSTCURSOR_in[3] = (CH0_TXPOSTCURSOR[3] !== 1'bz) && CH0_TXPOSTCURSOR[3]; // rv MustConnect
  assign CH0_TXPOSTCURSOR_in[4] = (CH0_TXPOSTCURSOR[4] !== 1'bz) && CH0_TXPOSTCURSOR[4]; // rv MustConnect
  assign CH0_TXPOSTCURSOR_in[5] = (CH0_TXPOSTCURSOR[5] !== 1'bz) && CH0_TXPOSTCURSOR[5]; // rv MustConnect
  assign CH0_TXPRBSFORCEERR_in = (CH0_TXPRBSFORCEERR === 1'bz) || CH0_TXPRBSFORCEERR; // rv 1
  assign CH0_TXPRBSSEL_in[0] = (CH0_TXPRBSSEL[0] !== 1'bz) && CH0_TXPRBSSEL[0]; // rv MustConnect
  assign CH0_TXPRBSSEL_in[1] = (CH0_TXPRBSSEL[1] !== 1'bz) && CH0_TXPRBSSEL[1]; // rv MustConnect
  assign CH0_TXPRBSSEL_in[2] = (CH0_TXPRBSSEL[2] !== 1'bz) && CH0_TXPRBSSEL[2]; // rv MustConnect
  assign CH0_TXPRBSSEL_in[3] = (CH0_TXPRBSSEL[3] !== 1'bz) && CH0_TXPRBSSEL[3]; // rv MustConnect
  assign CH0_TXPRECURSOR2_in[0] = (CH0_TXPRECURSOR2[0] !== 1'bz) && CH0_TXPRECURSOR2[0]; // rv MustConnect
  assign CH0_TXPRECURSOR2_in[1] = (CH0_TXPRECURSOR2[1] !== 1'bz) && CH0_TXPRECURSOR2[1]; // rv MustConnect
  assign CH0_TXPRECURSOR2_in[2] = (CH0_TXPRECURSOR2[2] !== 1'bz) && CH0_TXPRECURSOR2[2]; // rv MustConnect
  assign CH0_TXPRECURSOR2_in[3] = (CH0_TXPRECURSOR2[3] !== 1'bz) && CH0_TXPRECURSOR2[3]; // rv MustConnect
  assign CH0_TXPRECURSOR2_in[4] = (CH0_TXPRECURSOR2[4] !== 1'bz) && CH0_TXPRECURSOR2[4]; // rv MustConnect
  assign CH0_TXPRECURSOR2_in[5] = (CH0_TXPRECURSOR2[5] !== 1'bz) && CH0_TXPRECURSOR2[5]; // rv MustConnect
  assign CH0_TXPRECURSOR3_in[0] = (CH0_TXPRECURSOR3[0] !== 1'bz) && CH0_TXPRECURSOR3[0]; // rv MustConnect
  assign CH0_TXPRECURSOR3_in[1] = (CH0_TXPRECURSOR3[1] !== 1'bz) && CH0_TXPRECURSOR3[1]; // rv MustConnect
  assign CH0_TXPRECURSOR3_in[2] = (CH0_TXPRECURSOR3[2] !== 1'bz) && CH0_TXPRECURSOR3[2]; // rv MustConnect
  assign CH0_TXPRECURSOR3_in[3] = (CH0_TXPRECURSOR3[3] !== 1'bz) && CH0_TXPRECURSOR3[3]; // rv MustConnect
  assign CH0_TXPRECURSOR3_in[4] = (CH0_TXPRECURSOR3[4] !== 1'bz) && CH0_TXPRECURSOR3[4]; // rv MustConnect
  assign CH0_TXPRECURSOR3_in[5] = (CH0_TXPRECURSOR3[5] !== 1'bz) && CH0_TXPRECURSOR3[5]; // rv MustConnect
  assign CH0_TXPRECURSOR_in[0] = (CH0_TXPRECURSOR[0] !== 1'bz) && CH0_TXPRECURSOR[0]; // rv MustConnect
  assign CH0_TXPRECURSOR_in[1] = (CH0_TXPRECURSOR[1] !== 1'bz) && CH0_TXPRECURSOR[1]; // rv MustConnect
  assign CH0_TXPRECURSOR_in[2] = (CH0_TXPRECURSOR[2] !== 1'bz) && CH0_TXPRECURSOR[2]; // rv MustConnect
  assign CH0_TXPRECURSOR_in[3] = (CH0_TXPRECURSOR[3] !== 1'bz) && CH0_TXPRECURSOR[3]; // rv MustConnect
  assign CH0_TXPRECURSOR_in[4] = (CH0_TXPRECURSOR[4] !== 1'bz) && CH0_TXPRECURSOR[4]; // rv MustConnect
  assign CH0_TXPRECURSOR_in[5] = (CH0_TXPRECURSOR[5] !== 1'bz) && CH0_TXPRECURSOR[5]; // rv MustConnect
  assign CH0_TXPROGDIVRESET_in = (CH0_TXPROGDIVRESET === 1'bz) || CH0_TXPROGDIVRESET; // rv 1
  assign CH0_TXQPRBSEN_in = (CH0_TXQPRBSEN === 1'bz) || CH0_TXQPRBSEN; // rv 1
  assign CH0_TXRATE_in[0] = (CH0_TXRATE[0] !== 1'bz) && CH0_TXRATE[0]; // rv MustConnect
  assign CH0_TXRATE_in[1] = (CH0_TXRATE[1] !== 1'bz) && CH0_TXRATE[1]; // rv MustConnect
  assign CH0_TXRATE_in[2] = (CH0_TXRATE[2] !== 1'bz) && CH0_TXRATE[2]; // rv MustConnect
  assign CH0_TXRATE_in[3] = (CH0_TXRATE[3] !== 1'bz) && CH0_TXRATE[3]; // rv MustConnect
  assign CH0_TXRATE_in[4] = (CH0_TXRATE[4] !== 1'bz) && CH0_TXRATE[4]; // rv MustConnect
  assign CH0_TXRATE_in[5] = (CH0_TXRATE[5] !== 1'bz) && CH0_TXRATE[5]; // rv MustConnect
  assign CH0_TXRATE_in[6] = (CH0_TXRATE[6] !== 1'bz) && CH0_TXRATE[6]; // rv MustConnect
  assign CH0_TXRATE_in[7] = (CH0_TXRATE[7] !== 1'bz) && CH0_TXRATE[7]; // rv MustConnect
  assign CH0_TXRESETMODE_in[0] = (CH0_TXRESETMODE[0] !== 1'bz) && CH0_TXRESETMODE[0]; // rv MustConnect
  assign CH0_TXRESETMODE_in[1] = (CH0_TXRESETMODE[1] !== 1'bz) && CH0_TXRESETMODE[1]; // rv MustConnect
  assign CH0_TXRSV0_in[0] = (CH0_TXRSV0[0] !== 1'bz) && CH0_TXRSV0[0]; // rv MustConnect
  assign CH0_TXRSV0_in[1] = (CH0_TXRSV0[1] !== 1'bz) && CH0_TXRSV0[1]; // rv MustConnect
  assign CH0_TXRSV0_in[2] = (CH0_TXRSV0[2] !== 1'bz) && CH0_TXRSV0[2]; // rv MustConnect
  assign CH0_TXRSV0_in[3] = (CH0_TXRSV0[3] !== 1'bz) && CH0_TXRSV0[3]; // rv MustConnect
  assign CH0_TXRSV0_in[4] = (CH0_TXRSV0[4] !== 1'bz) && CH0_TXRSV0[4]; // rv MustConnect
  assign CH0_TXRSV1_in[0] = (CH0_TXRSV1[0] !== 1'bz) && CH0_TXRSV1[0]; // rv MustConnect
  assign CH0_TXRSV1_in[1] = (CH0_TXRSV1[1] !== 1'bz) && CH0_TXRSV1[1]; // rv MustConnect
  assign CH0_TXRSV1_in[2] = (CH0_TXRSV1[2] !== 1'bz) && CH0_TXRSV1[2]; // rv MustConnect
  assign CH0_TXRSV1_in[3] = (CH0_TXRSV1[3] !== 1'bz) && CH0_TXRSV1[3]; // rv MustConnect
  assign CH0_TXUSERRDY_in = (CH0_TXUSERRDY === 1'bz) || CH0_TXUSERRDY; // rv 1
  assign CH1_CDRFREQOS_in = (CH1_CDRFREQOS === 1'bz) || CH1_CDRFREQOS; // rv 1
  assign CH1_CDRINCPCTRL_in = (CH1_CDRINCPCTRL === 1'bz) || CH1_CDRINCPCTRL; // rv 1
  assign CH1_CDRSTEPDIR_in = (CH1_CDRSTEPDIR === 1'bz) || CH1_CDRSTEPDIR; // rv 1
  assign CH1_CDRSTEPSQ_in = (CH1_CDRSTEPSQ === 1'bz) || CH1_CDRSTEPSQ; // rv 1
  assign CH1_CDRSTEPSX_in = (CH1_CDRSTEPSX === 1'bz) || CH1_CDRSTEPSX; // rv 1
  assign CH1_CLKRSVD0_in = (CH1_CLKRSVD0 === 1'bz) || CH1_CLKRSVD0; // rv 1
  assign CH1_CLKRSVD1_in = (CH1_CLKRSVD1 === 1'bz) || CH1_CLKRSVD1; // rv 1
  assign CH1_EYESCANRESET_in = (CH1_EYESCANRESET === 1'bz) || CH1_EYESCANRESET; // rv 1
  assign CH1_GTMRXN_in = CH1_GTMRXN;
  assign CH1_GTMRXP_in = CH1_GTMRXP;
  assign CH1_GTRSVD_in[0] = (CH1_GTRSVD[0] !== 1'bz) && CH1_GTRSVD[0]; // rv MustConnect
  assign CH1_GTRSVD_in[10] = (CH1_GTRSVD[10] !== 1'bz) && CH1_GTRSVD[10]; // rv MustConnect
  assign CH1_GTRSVD_in[11] = (CH1_GTRSVD[11] !== 1'bz) && CH1_GTRSVD[11]; // rv MustConnect
  assign CH1_GTRSVD_in[12] = (CH1_GTRSVD[12] !== 1'bz) && CH1_GTRSVD[12]; // rv MustConnect
  assign CH1_GTRSVD_in[13] = (CH1_GTRSVD[13] !== 1'bz) && CH1_GTRSVD[13]; // rv MustConnect
  assign CH1_GTRSVD_in[14] = (CH1_GTRSVD[14] !== 1'bz) && CH1_GTRSVD[14]; // rv MustConnect
  assign CH1_GTRSVD_in[15] = (CH1_GTRSVD[15] !== 1'bz) && CH1_GTRSVD[15]; // rv MustConnect
  assign CH1_GTRSVD_in[1] = (CH1_GTRSVD[1] !== 1'bz) && CH1_GTRSVD[1]; // rv MustConnect
  assign CH1_GTRSVD_in[2] = (CH1_GTRSVD[2] !== 1'bz) && CH1_GTRSVD[2]; // rv MustConnect
  assign CH1_GTRSVD_in[3] = (CH1_GTRSVD[3] !== 1'bz) && CH1_GTRSVD[3]; // rv MustConnect
  assign CH1_GTRSVD_in[4] = (CH1_GTRSVD[4] !== 1'bz) && CH1_GTRSVD[4]; // rv MustConnect
  assign CH1_GTRSVD_in[5] = (CH1_GTRSVD[5] !== 1'bz) && CH1_GTRSVD[5]; // rv MustConnect
  assign CH1_GTRSVD_in[6] = (CH1_GTRSVD[6] !== 1'bz) && CH1_GTRSVD[6]; // rv MustConnect
  assign CH1_GTRSVD_in[7] = (CH1_GTRSVD[7] !== 1'bz) && CH1_GTRSVD[7]; // rv MustConnect
  assign CH1_GTRSVD_in[8] = (CH1_GTRSVD[8] !== 1'bz) && CH1_GTRSVD[8]; // rv MustConnect
  assign CH1_GTRSVD_in[9] = (CH1_GTRSVD[9] !== 1'bz) && CH1_GTRSVD[9]; // rv MustConnect
  assign CH1_GTRXRESET_in = (CH1_GTRXRESET === 1'bz) || CH1_GTRXRESET; // rv 1
  assign CH1_GTTXRESET_in = (CH1_GTTXRESET === 1'bz) || CH1_GTTXRESET; // rv 1
  assign CH1_ILORESETMASK_in = (CH1_ILORESETMASK === 1'bz) || CH1_ILORESETMASK; // rv 1
  assign CH1_ILORESET_in = (CH1_ILORESET === 1'bz) || CH1_ILORESET; // rv 1
  assign CH1_PCSRSVDIN_in[0] = (CH1_PCSRSVDIN[0] !== 1'bz) && CH1_PCSRSVDIN[0]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[10] = (CH1_PCSRSVDIN[10] !== 1'bz) && CH1_PCSRSVDIN[10]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[11] = (CH1_PCSRSVDIN[11] !== 1'bz) && CH1_PCSRSVDIN[11]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[12] = (CH1_PCSRSVDIN[12] !== 1'bz) && CH1_PCSRSVDIN[12]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[13] = (CH1_PCSRSVDIN[13] !== 1'bz) && CH1_PCSRSVDIN[13]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[14] = (CH1_PCSRSVDIN[14] !== 1'bz) && CH1_PCSRSVDIN[14]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[15] = (CH1_PCSRSVDIN[15] !== 1'bz) && CH1_PCSRSVDIN[15]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[1] = (CH1_PCSRSVDIN[1] !== 1'bz) && CH1_PCSRSVDIN[1]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[2] = (CH1_PCSRSVDIN[2] !== 1'bz) && CH1_PCSRSVDIN[2]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[3] = (CH1_PCSRSVDIN[3] !== 1'bz) && CH1_PCSRSVDIN[3]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[4] = (CH1_PCSRSVDIN[4] !== 1'bz) && CH1_PCSRSVDIN[4]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[5] = (CH1_PCSRSVDIN[5] !== 1'bz) && CH1_PCSRSVDIN[5]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[6] = (CH1_PCSRSVDIN[6] !== 1'bz) && CH1_PCSRSVDIN[6]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[7] = (CH1_PCSRSVDIN[7] !== 1'bz) && CH1_PCSRSVDIN[7]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[8] = (CH1_PCSRSVDIN[8] !== 1'bz) && CH1_PCSRSVDIN[8]; // rv MustConnect
  assign CH1_PCSRSVDIN_in[9] = (CH1_PCSRSVDIN[9] !== 1'bz) && CH1_PCSRSVDIN[9]; // rv MustConnect
  assign CH1_RXCDRHOLD_in = (CH1_RXCDRHOLD === 1'bz) || CH1_RXCDRHOLD; // rv 1
  assign CH1_RXCDROVRDEN_in = (CH1_RXCDROVRDEN === 1'bz) || CH1_RXCDROVRDEN; // rv 1
  assign CH1_RXCDRRESET_in = (CH1_RXCDRRESET === 1'bz) || CH1_RXCDRRESET; // rv 1
  assign CH1_RXPCSRESETMASK_in[0] = (CH1_RXPCSRESETMASK[0] !== 1'bz) && CH1_RXPCSRESETMASK[0]; // rv MustConnect
  assign CH1_RXPCSRESETMASK_in[1] = (CH1_RXPCSRESETMASK[1] !== 1'bz) && CH1_RXPCSRESETMASK[1]; // rv MustConnect
  assign CH1_RXPCSRESETMASK_in[2] = (CH1_RXPCSRESETMASK[2] !== 1'bz) && CH1_RXPCSRESETMASK[2]; // rv MustConnect
  assign CH1_RXPD_in[0] = (CH1_RXPD[0] !== 1'bz) && CH1_RXPD[0]; // rv MustConnect
  assign CH1_RXPD_in[1] = (CH1_RXPD[1] !== 1'bz) && CH1_RXPD[1]; // rv MustConnect
  assign CH1_RXPERST_in = (CH1_RXPERST === 1'bz) || CH1_RXPERST; // rv 1
  assign CH1_RXPMARESETMASK_in[0] = (CH1_RXPMARESETMASK[0] !== 1'bz) && CH1_RXPMARESETMASK[0]; // rv MustConnect
  assign CH1_RXPMARESETMASK_in[1] = (CH1_RXPMARESETMASK[1] !== 1'bz) && CH1_RXPMARESETMASK[1]; // rv MustConnect
  assign CH1_RXPMARESETMASK_in[2] = (CH1_RXPMARESETMASK[2] !== 1'bz) && CH1_RXPMARESETMASK[2]; // rv MustConnect
  assign CH1_RXPMARESETMASK_in[3] = (CH1_RXPMARESETMASK[3] !== 1'bz) && CH1_RXPMARESETMASK[3]; // rv MustConnect
  assign CH1_RXPMARESETMASK_in[4] = (CH1_RXPMARESETMASK[4] !== 1'bz) && CH1_RXPMARESETMASK[4]; // rv MustConnect
  assign CH1_RXPMARESETMASK_in[5] = (CH1_RXPMARESETMASK[5] !== 1'bz) && CH1_RXPMARESETMASK[5]; // rv MustConnect
  assign CH1_RXPMARESETMASK_in[6] = (CH1_RXPMARESETMASK[6] !== 1'bz) && CH1_RXPMARESETMASK[6]; // rv MustConnect
  assign CH1_RXPMARESETMASK_in[7] = (CH1_RXPMARESETMASK[7] !== 1'bz) && CH1_RXPMARESETMASK[7]; // rv MustConnect
  assign CH1_RXPOLARITY_in = (CH1_RXPOLARITY === 1'bz) || CH1_RXPOLARITY; // rv 1
  assign CH1_RXPRBSCNTRESET_in = (CH1_RXPRBSCNTRESET === 1'bz) || CH1_RXPRBSCNTRESET; // rv 1
  assign CH1_RXPRBSCNTSTOP_in = (CH1_RXPRBSCNTSTOP === 1'bz) || CH1_RXPRBSCNTSTOP; // rv 1
  assign CH1_RXPRBSSEL_in[0] = (CH1_RXPRBSSEL[0] !== 1'bz) && CH1_RXPRBSSEL[0]; // rv MustConnect
  assign CH1_RXPRBSSEL_in[1] = (CH1_RXPRBSSEL[1] !== 1'bz) && CH1_RXPRBSSEL[1]; // rv MustConnect
  assign CH1_RXPRBSSEL_in[2] = (CH1_RXPRBSSEL[2] !== 1'bz) && CH1_RXPRBSSEL[2]; // rv MustConnect
  assign CH1_RXPRBSSEL_in[3] = (CH1_RXPRBSSEL[3] !== 1'bz) && CH1_RXPRBSSEL[3]; // rv MustConnect
  assign CH1_RXPROGDIVRESET_in = (CH1_RXPROGDIVRESET === 1'bz) || CH1_RXPROGDIVRESET; // rv 1
  assign CH1_RXQPRBSEN_in = (CH1_RXQPRBSEN === 1'bz) || CH1_RXQPRBSEN; // rv 1
  assign CH1_RXRATE_in[0] = (CH1_RXRATE[0] !== 1'bz) && CH1_RXRATE[0]; // rv MustConnect
  assign CH1_RXRATE_in[1] = (CH1_RXRATE[1] !== 1'bz) && CH1_RXRATE[1]; // rv MustConnect
  assign CH1_RXRATE_in[2] = (CH1_RXRATE[2] !== 1'bz) && CH1_RXRATE[2]; // rv MustConnect
  assign CH1_RXRATE_in[3] = (CH1_RXRATE[3] !== 1'bz) && CH1_RXRATE[3]; // rv MustConnect
  assign CH1_RXRATE_in[4] = (CH1_RXRATE[4] !== 1'bz) && CH1_RXRATE[4]; // rv MustConnect
  assign CH1_RXRATE_in[5] = (CH1_RXRATE[5] !== 1'bz) && CH1_RXRATE[5]; // rv MustConnect
  assign CH1_RXRATE_in[6] = (CH1_RXRATE[6] !== 1'bz) && CH1_RXRATE[6]; // rv MustConnect
  assign CH1_RXRATE_in[7] = (CH1_RXRATE[7] !== 1'bz) && CH1_RXRATE[7]; // rv MustConnect
  assign CH1_RXRESETMODE_in[0] = (CH1_RXRESETMODE[0] !== 1'bz) && CH1_RXRESETMODE[0]; // rv MustConnect
  assign CH1_RXRESETMODE_in[1] = (CH1_RXRESETMODE[1] !== 1'bz) && CH1_RXRESETMODE[1]; // rv MustConnect
  assign CH1_RXRSV0_in = (CH1_RXRSV0 === 1'bz) || CH1_RXRSV0; // rv 1
  assign CH1_RXRSV1_in = (CH1_RXRSV1 === 1'bz) || CH1_RXRSV1; // rv 1
  assign CH1_RXRSV2_in = (CH1_RXRSV2 === 1'bz) || CH1_RXRSV2; // rv 1
  assign CH1_RXUSERRDY_in = (CH1_RXUSERRDY === 1'bz) || CH1_RXUSERRDY; // rv 1
  assign CH1_TSTCLK0_in = CH1_TSTCLK0;
  assign CH1_TSTCLK1_in = CH1_TSTCLK1;
  assign CH1_TXINHIBIT_in = (CH1_TXINHIBIT === 1'bz) || CH1_TXINHIBIT; // rv 1
  assign CH1_TXLATCLK_in = (CH1_TXLATCLK === 1'bz) || CH1_TXLATCLK; // rv 1
  assign CH1_TXMAINCURSOR_in[0] = (CH1_TXMAINCURSOR[0] !== 1'bz) && CH1_TXMAINCURSOR[0]; // rv MustConnect
  assign CH1_TXMAINCURSOR_in[1] = (CH1_TXMAINCURSOR[1] !== 1'bz) && CH1_TXMAINCURSOR[1]; // rv MustConnect
  assign CH1_TXMAINCURSOR_in[2] = (CH1_TXMAINCURSOR[2] !== 1'bz) && CH1_TXMAINCURSOR[2]; // rv MustConnect
  assign CH1_TXMAINCURSOR_in[3] = (CH1_TXMAINCURSOR[3] !== 1'bz) && CH1_TXMAINCURSOR[3]; // rv MustConnect
  assign CH1_TXMAINCURSOR_in[4] = (CH1_TXMAINCURSOR[4] !== 1'bz) && CH1_TXMAINCURSOR[4]; // rv MustConnect
  assign CH1_TXMAINCURSOR_in[5] = (CH1_TXMAINCURSOR[5] !== 1'bz) && CH1_TXMAINCURSOR[5]; // rv MustConnect
  assign CH1_TXMAINCURSOR_in[6] = (CH1_TXMAINCURSOR[6] !== 1'bz) && CH1_TXMAINCURSOR[6]; // rv MustConnect
  assign CH1_TXPCSRESETMASK_in = (CH1_TXPCSRESETMASK === 1'bz) || CH1_TXPCSRESETMASK; // rv 1
  assign CH1_TXPD_in[0] = (CH1_TXPD[0] !== 1'bz) && CH1_TXPD[0]; // rv MustConnect
  assign CH1_TXPD_in[1] = (CH1_TXPD[1] !== 1'bz) && CH1_TXPD[1]; // rv MustConnect
  assign CH1_TXPERST_in = (CH1_TXPERST === 1'bz) || CH1_TXPERST; // rv 1
  assign CH1_TXPISOPD_in = (CH1_TXPISOPD === 1'bz) || CH1_TXPISOPD; // rv 1
  assign CH1_TXPMARESETMASK_in[0] = (CH1_TXPMARESETMASK[0] !== 1'bz) && CH1_TXPMARESETMASK[0]; // rv MustConnect
  assign CH1_TXPMARESETMASK_in[1] = (CH1_TXPMARESETMASK[1] !== 1'bz) && CH1_TXPMARESETMASK[1]; // rv MustConnect
  assign CH1_TXPOLARITY_in = (CH1_TXPOLARITY === 1'bz) || CH1_TXPOLARITY; // rv 1
  assign CH1_TXPOSTCURSOR_in[0] = (CH1_TXPOSTCURSOR[0] !== 1'bz) && CH1_TXPOSTCURSOR[0]; // rv MustConnect
  assign CH1_TXPOSTCURSOR_in[1] = (CH1_TXPOSTCURSOR[1] !== 1'bz) && CH1_TXPOSTCURSOR[1]; // rv MustConnect
  assign CH1_TXPOSTCURSOR_in[2] = (CH1_TXPOSTCURSOR[2] !== 1'bz) && CH1_TXPOSTCURSOR[2]; // rv MustConnect
  assign CH1_TXPOSTCURSOR_in[3] = (CH1_TXPOSTCURSOR[3] !== 1'bz) && CH1_TXPOSTCURSOR[3]; // rv MustConnect
  assign CH1_TXPOSTCURSOR_in[4] = (CH1_TXPOSTCURSOR[4] !== 1'bz) && CH1_TXPOSTCURSOR[4]; // rv MustConnect
  assign CH1_TXPOSTCURSOR_in[5] = (CH1_TXPOSTCURSOR[5] !== 1'bz) && CH1_TXPOSTCURSOR[5]; // rv MustConnect
  assign CH1_TXPRBSFORCEERR_in = (CH1_TXPRBSFORCEERR === 1'bz) || CH1_TXPRBSFORCEERR; // rv 1
  assign CH1_TXPRBSSEL_in[0] = (CH1_TXPRBSSEL[0] !== 1'bz) && CH1_TXPRBSSEL[0]; // rv MustConnect
  assign CH1_TXPRBSSEL_in[1] = (CH1_TXPRBSSEL[1] !== 1'bz) && CH1_TXPRBSSEL[1]; // rv MustConnect
  assign CH1_TXPRBSSEL_in[2] = (CH1_TXPRBSSEL[2] !== 1'bz) && CH1_TXPRBSSEL[2]; // rv MustConnect
  assign CH1_TXPRBSSEL_in[3] = (CH1_TXPRBSSEL[3] !== 1'bz) && CH1_TXPRBSSEL[3]; // rv MustConnect
  assign CH1_TXPRECURSOR2_in[0] = (CH1_TXPRECURSOR2[0] !== 1'bz) && CH1_TXPRECURSOR2[0]; // rv MustConnect
  assign CH1_TXPRECURSOR2_in[1] = (CH1_TXPRECURSOR2[1] !== 1'bz) && CH1_TXPRECURSOR2[1]; // rv MustConnect
  assign CH1_TXPRECURSOR2_in[2] = (CH1_TXPRECURSOR2[2] !== 1'bz) && CH1_TXPRECURSOR2[2]; // rv MustConnect
  assign CH1_TXPRECURSOR2_in[3] = (CH1_TXPRECURSOR2[3] !== 1'bz) && CH1_TXPRECURSOR2[3]; // rv MustConnect
  assign CH1_TXPRECURSOR2_in[4] = (CH1_TXPRECURSOR2[4] !== 1'bz) && CH1_TXPRECURSOR2[4]; // rv MustConnect
  assign CH1_TXPRECURSOR2_in[5] = (CH1_TXPRECURSOR2[5] !== 1'bz) && CH1_TXPRECURSOR2[5]; // rv MustConnect
  assign CH1_TXPRECURSOR3_in[0] = (CH1_TXPRECURSOR3[0] !== 1'bz) && CH1_TXPRECURSOR3[0]; // rv MustConnect
  assign CH1_TXPRECURSOR3_in[1] = (CH1_TXPRECURSOR3[1] !== 1'bz) && CH1_TXPRECURSOR3[1]; // rv MustConnect
  assign CH1_TXPRECURSOR3_in[2] = (CH1_TXPRECURSOR3[2] !== 1'bz) && CH1_TXPRECURSOR3[2]; // rv MustConnect
  assign CH1_TXPRECURSOR3_in[3] = (CH1_TXPRECURSOR3[3] !== 1'bz) && CH1_TXPRECURSOR3[3]; // rv MustConnect
  assign CH1_TXPRECURSOR3_in[4] = (CH1_TXPRECURSOR3[4] !== 1'bz) && CH1_TXPRECURSOR3[4]; // rv MustConnect
  assign CH1_TXPRECURSOR3_in[5] = (CH1_TXPRECURSOR3[5] !== 1'bz) && CH1_TXPRECURSOR3[5]; // rv MustConnect
  assign CH1_TXPRECURSOR_in[0] = (CH1_TXPRECURSOR[0] !== 1'bz) && CH1_TXPRECURSOR[0]; // rv MustConnect
  assign CH1_TXPRECURSOR_in[1] = (CH1_TXPRECURSOR[1] !== 1'bz) && CH1_TXPRECURSOR[1]; // rv MustConnect
  assign CH1_TXPRECURSOR_in[2] = (CH1_TXPRECURSOR[2] !== 1'bz) && CH1_TXPRECURSOR[2]; // rv MustConnect
  assign CH1_TXPRECURSOR_in[3] = (CH1_TXPRECURSOR[3] !== 1'bz) && CH1_TXPRECURSOR[3]; // rv MustConnect
  assign CH1_TXPRECURSOR_in[4] = (CH1_TXPRECURSOR[4] !== 1'bz) && CH1_TXPRECURSOR[4]; // rv MustConnect
  assign CH1_TXPRECURSOR_in[5] = (CH1_TXPRECURSOR[5] !== 1'bz) && CH1_TXPRECURSOR[5]; // rv MustConnect
  assign CH1_TXPROGDIVRESET_in = (CH1_TXPROGDIVRESET === 1'bz) || CH1_TXPROGDIVRESET; // rv 1
  assign CH1_TXQPRBSEN_in = (CH1_TXQPRBSEN === 1'bz) || CH1_TXQPRBSEN; // rv 1
  assign CH1_TXRATE_in[0] = (CH1_TXRATE[0] !== 1'bz) && CH1_TXRATE[0]; // rv MustConnect
  assign CH1_TXRATE_in[1] = (CH1_TXRATE[1] !== 1'bz) && CH1_TXRATE[1]; // rv MustConnect
  assign CH1_TXRATE_in[2] = (CH1_TXRATE[2] !== 1'bz) && CH1_TXRATE[2]; // rv MustConnect
  assign CH1_TXRATE_in[3] = (CH1_TXRATE[3] !== 1'bz) && CH1_TXRATE[3]; // rv MustConnect
  assign CH1_TXRATE_in[4] = (CH1_TXRATE[4] !== 1'bz) && CH1_TXRATE[4]; // rv MustConnect
  assign CH1_TXRATE_in[5] = (CH1_TXRATE[5] !== 1'bz) && CH1_TXRATE[5]; // rv MustConnect
  assign CH1_TXRATE_in[6] = (CH1_TXRATE[6] !== 1'bz) && CH1_TXRATE[6]; // rv MustConnect
  assign CH1_TXRATE_in[7] = (CH1_TXRATE[7] !== 1'bz) && CH1_TXRATE[7]; // rv MustConnect
  assign CH1_TXRESETMODE_in[0] = (CH1_TXRESETMODE[0] !== 1'bz) && CH1_TXRESETMODE[0]; // rv MustConnect
  assign CH1_TXRESETMODE_in[1] = (CH1_TXRESETMODE[1] !== 1'bz) && CH1_TXRESETMODE[1]; // rv MustConnect
  assign CH1_TXRSV0_in[0] = (CH1_TXRSV0[0] !== 1'bz) && CH1_TXRSV0[0]; // rv MustConnect
  assign CH1_TXRSV0_in[1] = (CH1_TXRSV0[1] !== 1'bz) && CH1_TXRSV0[1]; // rv MustConnect
  assign CH1_TXRSV0_in[2] = (CH1_TXRSV0[2] !== 1'bz) && CH1_TXRSV0[2]; // rv MustConnect
  assign CH1_TXRSV0_in[3] = (CH1_TXRSV0[3] !== 1'bz) && CH1_TXRSV0[3]; // rv MustConnect
  assign CH1_TXRSV0_in[4] = (CH1_TXRSV0[4] !== 1'bz) && CH1_TXRSV0[4]; // rv MustConnect
  assign CH1_TXRSV1_in[0] = (CH1_TXRSV1[0] !== 1'bz) && CH1_TXRSV1[0]; // rv MustConnect
  assign CH1_TXRSV1_in[1] = (CH1_TXRSV1[1] !== 1'bz) && CH1_TXRSV1[1]; // rv MustConnect
  assign CH1_TXRSV1_in[2] = (CH1_TXRSV1[2] !== 1'bz) && CH1_TXRSV1[2]; // rv MustConnect
  assign CH1_TXRSV1_in[3] = (CH1_TXRSV1[3] !== 1'bz) && CH1_TXRSV1[3]; // rv MustConnect
  assign CH1_TXUSERRDY_in = (CH1_TXUSERRDY === 1'bz) || CH1_TXUSERRDY; // rv 1
  assign CH2_CDRFREQOS_in = (CH2_CDRFREQOS === 1'bz) || CH2_CDRFREQOS; // rv 1
  assign CH2_CDRINCPCTRL_in = (CH2_CDRINCPCTRL === 1'bz) || CH2_CDRINCPCTRL; // rv 1
  assign CH2_CDRSTEPDIR_in = (CH2_CDRSTEPDIR === 1'bz) || CH2_CDRSTEPDIR; // rv 1
  assign CH2_CDRSTEPSQ_in = (CH2_CDRSTEPSQ === 1'bz) || CH2_CDRSTEPSQ; // rv 1
  assign CH2_CDRSTEPSX_in = (CH2_CDRSTEPSX === 1'bz) || CH2_CDRSTEPSX; // rv 1
  assign CH2_CLKRSVD0_in = (CH2_CLKRSVD0 === 1'bz) || CH2_CLKRSVD0; // rv 1
  assign CH2_CLKRSVD1_in = (CH2_CLKRSVD1 === 1'bz) || CH2_CLKRSVD1; // rv 1
  assign CH2_EYESCANRESET_in = (CH2_EYESCANRESET === 1'bz) || CH2_EYESCANRESET; // rv 1
  assign CH2_GTMRXN_in = CH2_GTMRXN;
  assign CH2_GTMRXP_in = CH2_GTMRXP;
  assign CH2_GTRSVD_in[0] = (CH2_GTRSVD[0] !== 1'bz) && CH2_GTRSVD[0]; // rv MustConnect
  assign CH2_GTRSVD_in[10] = (CH2_GTRSVD[10] !== 1'bz) && CH2_GTRSVD[10]; // rv MustConnect
  assign CH2_GTRSVD_in[11] = (CH2_GTRSVD[11] !== 1'bz) && CH2_GTRSVD[11]; // rv MustConnect
  assign CH2_GTRSVD_in[12] = (CH2_GTRSVD[12] !== 1'bz) && CH2_GTRSVD[12]; // rv MustConnect
  assign CH2_GTRSVD_in[13] = (CH2_GTRSVD[13] !== 1'bz) && CH2_GTRSVD[13]; // rv MustConnect
  assign CH2_GTRSVD_in[14] = (CH2_GTRSVD[14] !== 1'bz) && CH2_GTRSVD[14]; // rv MustConnect
  assign CH2_GTRSVD_in[15] = (CH2_GTRSVD[15] !== 1'bz) && CH2_GTRSVD[15]; // rv MustConnect
  assign CH2_GTRSVD_in[1] = (CH2_GTRSVD[1] !== 1'bz) && CH2_GTRSVD[1]; // rv MustConnect
  assign CH2_GTRSVD_in[2] = (CH2_GTRSVD[2] !== 1'bz) && CH2_GTRSVD[2]; // rv MustConnect
  assign CH2_GTRSVD_in[3] = (CH2_GTRSVD[3] !== 1'bz) && CH2_GTRSVD[3]; // rv MustConnect
  assign CH2_GTRSVD_in[4] = (CH2_GTRSVD[4] !== 1'bz) && CH2_GTRSVD[4]; // rv MustConnect
  assign CH2_GTRSVD_in[5] = (CH2_GTRSVD[5] !== 1'bz) && CH2_GTRSVD[5]; // rv MustConnect
  assign CH2_GTRSVD_in[6] = (CH2_GTRSVD[6] !== 1'bz) && CH2_GTRSVD[6]; // rv MustConnect
  assign CH2_GTRSVD_in[7] = (CH2_GTRSVD[7] !== 1'bz) && CH2_GTRSVD[7]; // rv MustConnect
  assign CH2_GTRSVD_in[8] = (CH2_GTRSVD[8] !== 1'bz) && CH2_GTRSVD[8]; // rv MustConnect
  assign CH2_GTRSVD_in[9] = (CH2_GTRSVD[9] !== 1'bz) && CH2_GTRSVD[9]; // rv MustConnect
  assign CH2_GTRXRESET_in = (CH2_GTRXRESET === 1'bz) || CH2_GTRXRESET; // rv 1
  assign CH2_GTTXRESET_in = (CH2_GTTXRESET === 1'bz) || CH2_GTTXRESET; // rv 1
  assign CH2_ILORESETMASK_in = (CH2_ILORESETMASK === 1'bz) || CH2_ILORESETMASK; // rv 1
  assign CH2_ILORESET_in = (CH2_ILORESET === 1'bz) || CH2_ILORESET; // rv 1
  assign CH2_PCSRSVDIN_in[0] = (CH2_PCSRSVDIN[0] !== 1'bz) && CH2_PCSRSVDIN[0]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[10] = (CH2_PCSRSVDIN[10] !== 1'bz) && CH2_PCSRSVDIN[10]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[11] = (CH2_PCSRSVDIN[11] !== 1'bz) && CH2_PCSRSVDIN[11]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[12] = (CH2_PCSRSVDIN[12] !== 1'bz) && CH2_PCSRSVDIN[12]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[13] = (CH2_PCSRSVDIN[13] !== 1'bz) && CH2_PCSRSVDIN[13]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[14] = (CH2_PCSRSVDIN[14] !== 1'bz) && CH2_PCSRSVDIN[14]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[15] = (CH2_PCSRSVDIN[15] !== 1'bz) && CH2_PCSRSVDIN[15]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[1] = (CH2_PCSRSVDIN[1] !== 1'bz) && CH2_PCSRSVDIN[1]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[2] = (CH2_PCSRSVDIN[2] !== 1'bz) && CH2_PCSRSVDIN[2]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[3] = (CH2_PCSRSVDIN[3] !== 1'bz) && CH2_PCSRSVDIN[3]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[4] = (CH2_PCSRSVDIN[4] !== 1'bz) && CH2_PCSRSVDIN[4]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[5] = (CH2_PCSRSVDIN[5] !== 1'bz) && CH2_PCSRSVDIN[5]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[6] = (CH2_PCSRSVDIN[6] !== 1'bz) && CH2_PCSRSVDIN[6]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[7] = (CH2_PCSRSVDIN[7] !== 1'bz) && CH2_PCSRSVDIN[7]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[8] = (CH2_PCSRSVDIN[8] !== 1'bz) && CH2_PCSRSVDIN[8]; // rv MustConnect
  assign CH2_PCSRSVDIN_in[9] = (CH2_PCSRSVDIN[9] !== 1'bz) && CH2_PCSRSVDIN[9]; // rv MustConnect
  assign CH2_RXCDRHOLD_in = (CH2_RXCDRHOLD === 1'bz) || CH2_RXCDRHOLD; // rv 1
  assign CH2_RXCDROVRDEN_in = (CH2_RXCDROVRDEN === 1'bz) || CH2_RXCDROVRDEN; // rv 1
  assign CH2_RXCDRRESET_in = (CH2_RXCDRRESET === 1'bz) || CH2_RXCDRRESET; // rv 1
  assign CH2_RXPCSRESETMASK_in[0] = (CH2_RXPCSRESETMASK[0] !== 1'bz) && CH2_RXPCSRESETMASK[0]; // rv MustConnect
  assign CH2_RXPCSRESETMASK_in[1] = (CH2_RXPCSRESETMASK[1] !== 1'bz) && CH2_RXPCSRESETMASK[1]; // rv MustConnect
  assign CH2_RXPCSRESETMASK_in[2] = (CH2_RXPCSRESETMASK[2] !== 1'bz) && CH2_RXPCSRESETMASK[2]; // rv MustConnect
  assign CH2_RXPD_in[0] = (CH2_RXPD[0] !== 1'bz) && CH2_RXPD[0]; // rv MustConnect
  assign CH2_RXPD_in[1] = (CH2_RXPD[1] !== 1'bz) && CH2_RXPD[1]; // rv MustConnect
  assign CH2_RXPERST_in = (CH2_RXPERST === 1'bz) || CH2_RXPERST; // rv 1
  assign CH2_RXPMARESETMASK_in[0] = (CH2_RXPMARESETMASK[0] !== 1'bz) && CH2_RXPMARESETMASK[0]; // rv MustConnect
  assign CH2_RXPMARESETMASK_in[1] = (CH2_RXPMARESETMASK[1] !== 1'bz) && CH2_RXPMARESETMASK[1]; // rv MustConnect
  assign CH2_RXPMARESETMASK_in[2] = (CH2_RXPMARESETMASK[2] !== 1'bz) && CH2_RXPMARESETMASK[2]; // rv MustConnect
  assign CH2_RXPMARESETMASK_in[3] = (CH2_RXPMARESETMASK[3] !== 1'bz) && CH2_RXPMARESETMASK[3]; // rv MustConnect
  assign CH2_RXPMARESETMASK_in[4] = (CH2_RXPMARESETMASK[4] !== 1'bz) && CH2_RXPMARESETMASK[4]; // rv MustConnect
  assign CH2_RXPMARESETMASK_in[5] = (CH2_RXPMARESETMASK[5] !== 1'bz) && CH2_RXPMARESETMASK[5]; // rv MustConnect
  assign CH2_RXPMARESETMASK_in[6] = (CH2_RXPMARESETMASK[6] !== 1'bz) && CH2_RXPMARESETMASK[6]; // rv MustConnect
  assign CH2_RXPMARESETMASK_in[7] = (CH2_RXPMARESETMASK[7] !== 1'bz) && CH2_RXPMARESETMASK[7]; // rv MustConnect
  assign CH2_RXPOLARITY_in = (CH2_RXPOLARITY === 1'bz) || CH2_RXPOLARITY; // rv 1
  assign CH2_RXPRBSCNTRESET_in = (CH2_RXPRBSCNTRESET === 1'bz) || CH2_RXPRBSCNTRESET; // rv 1
  assign CH2_RXPRBSCNTSTOP_in = (CH2_RXPRBSCNTSTOP === 1'bz) || CH2_RXPRBSCNTSTOP; // rv 1
  assign CH2_RXPRBSSEL_in[0] = (CH2_RXPRBSSEL[0] !== 1'bz) && CH2_RXPRBSSEL[0]; // rv MustConnect
  assign CH2_RXPRBSSEL_in[1] = (CH2_RXPRBSSEL[1] !== 1'bz) && CH2_RXPRBSSEL[1]; // rv MustConnect
  assign CH2_RXPRBSSEL_in[2] = (CH2_RXPRBSSEL[2] !== 1'bz) && CH2_RXPRBSSEL[2]; // rv MustConnect
  assign CH2_RXPRBSSEL_in[3] = (CH2_RXPRBSSEL[3] !== 1'bz) && CH2_RXPRBSSEL[3]; // rv MustConnect
  assign CH2_RXPROGDIVRESET_in = (CH2_RXPROGDIVRESET === 1'bz) || CH2_RXPROGDIVRESET; // rv 1
  assign CH2_RXQPRBSEN_in = (CH2_RXQPRBSEN === 1'bz) || CH2_RXQPRBSEN; // rv 1
  assign CH2_RXRATE_in[0] = (CH2_RXRATE[0] !== 1'bz) && CH2_RXRATE[0]; // rv MustConnect
  assign CH2_RXRATE_in[1] = (CH2_RXRATE[1] !== 1'bz) && CH2_RXRATE[1]; // rv MustConnect
  assign CH2_RXRATE_in[2] = (CH2_RXRATE[2] !== 1'bz) && CH2_RXRATE[2]; // rv MustConnect
  assign CH2_RXRATE_in[3] = (CH2_RXRATE[3] !== 1'bz) && CH2_RXRATE[3]; // rv MustConnect
  assign CH2_RXRATE_in[4] = (CH2_RXRATE[4] !== 1'bz) && CH2_RXRATE[4]; // rv MustConnect
  assign CH2_RXRATE_in[5] = (CH2_RXRATE[5] !== 1'bz) && CH2_RXRATE[5]; // rv MustConnect
  assign CH2_RXRATE_in[6] = (CH2_RXRATE[6] !== 1'bz) && CH2_RXRATE[6]; // rv MustConnect
  assign CH2_RXRATE_in[7] = (CH2_RXRATE[7] !== 1'bz) && CH2_RXRATE[7]; // rv MustConnect
  assign CH2_RXRESETMODE_in[0] = (CH2_RXRESETMODE[0] !== 1'bz) && CH2_RXRESETMODE[0]; // rv MustConnect
  assign CH2_RXRESETMODE_in[1] = (CH2_RXRESETMODE[1] !== 1'bz) && CH2_RXRESETMODE[1]; // rv MustConnect
  assign CH2_RXRSV0_in = (CH2_RXRSV0 === 1'bz) || CH2_RXRSV0; // rv 1
  assign CH2_RXRSV1_in = (CH2_RXRSV1 === 1'bz) || CH2_RXRSV1; // rv 1
  assign CH2_RXRSV2_in = (CH2_RXRSV2 === 1'bz) || CH2_RXRSV2; // rv 1
  assign CH2_RXUSERRDY_in = (CH2_RXUSERRDY === 1'bz) || CH2_RXUSERRDY; // rv 1
  assign CH2_TSTCLK0_in = CH2_TSTCLK0;
  assign CH2_TSTCLK1_in = CH2_TSTCLK1;
  assign CH2_TXINHIBIT_in = (CH2_TXINHIBIT === 1'bz) || CH2_TXINHIBIT; // rv 1
  assign CH2_TXLATCLK_in = (CH2_TXLATCLK === 1'bz) || CH2_TXLATCLK; // rv 1
  assign CH2_TXMAINCURSOR_in[0] = (CH2_TXMAINCURSOR[0] !== 1'bz) && CH2_TXMAINCURSOR[0]; // rv MustConnect
  assign CH2_TXMAINCURSOR_in[1] = (CH2_TXMAINCURSOR[1] !== 1'bz) && CH2_TXMAINCURSOR[1]; // rv MustConnect
  assign CH2_TXMAINCURSOR_in[2] = (CH2_TXMAINCURSOR[2] !== 1'bz) && CH2_TXMAINCURSOR[2]; // rv MustConnect
  assign CH2_TXMAINCURSOR_in[3] = (CH2_TXMAINCURSOR[3] !== 1'bz) && CH2_TXMAINCURSOR[3]; // rv MustConnect
  assign CH2_TXMAINCURSOR_in[4] = (CH2_TXMAINCURSOR[4] !== 1'bz) && CH2_TXMAINCURSOR[4]; // rv MustConnect
  assign CH2_TXMAINCURSOR_in[5] = (CH2_TXMAINCURSOR[5] !== 1'bz) && CH2_TXMAINCURSOR[5]; // rv MustConnect
  assign CH2_TXMAINCURSOR_in[6] = (CH2_TXMAINCURSOR[6] !== 1'bz) && CH2_TXMAINCURSOR[6]; // rv MustConnect
  assign CH2_TXPCSRESETMASK_in = (CH2_TXPCSRESETMASK === 1'bz) || CH2_TXPCSRESETMASK; // rv 1
  assign CH2_TXPD_in[0] = (CH2_TXPD[0] !== 1'bz) && CH2_TXPD[0]; // rv MustConnect
  assign CH2_TXPD_in[1] = (CH2_TXPD[1] !== 1'bz) && CH2_TXPD[1]; // rv MustConnect
  assign CH2_TXPERST_in = (CH2_TXPERST === 1'bz) || CH2_TXPERST; // rv 1
  assign CH2_TXPISOPD_in = (CH2_TXPISOPD === 1'bz) || CH2_TXPISOPD; // rv 1
  assign CH2_TXPMARESETMASK_in[0] = (CH2_TXPMARESETMASK[0] !== 1'bz) && CH2_TXPMARESETMASK[0]; // rv MustConnect
  assign CH2_TXPMARESETMASK_in[1] = (CH2_TXPMARESETMASK[1] !== 1'bz) && CH2_TXPMARESETMASK[1]; // rv MustConnect
  assign CH2_TXPOLARITY_in = (CH2_TXPOLARITY === 1'bz) || CH2_TXPOLARITY; // rv 1
  assign CH2_TXPOSTCURSOR_in[0] = (CH2_TXPOSTCURSOR[0] !== 1'bz) && CH2_TXPOSTCURSOR[0]; // rv MustConnect
  assign CH2_TXPOSTCURSOR_in[1] = (CH2_TXPOSTCURSOR[1] !== 1'bz) && CH2_TXPOSTCURSOR[1]; // rv MustConnect
  assign CH2_TXPOSTCURSOR_in[2] = (CH2_TXPOSTCURSOR[2] !== 1'bz) && CH2_TXPOSTCURSOR[2]; // rv MustConnect
  assign CH2_TXPOSTCURSOR_in[3] = (CH2_TXPOSTCURSOR[3] !== 1'bz) && CH2_TXPOSTCURSOR[3]; // rv MustConnect
  assign CH2_TXPOSTCURSOR_in[4] = (CH2_TXPOSTCURSOR[4] !== 1'bz) && CH2_TXPOSTCURSOR[4]; // rv MustConnect
  assign CH2_TXPOSTCURSOR_in[5] = (CH2_TXPOSTCURSOR[5] !== 1'bz) && CH2_TXPOSTCURSOR[5]; // rv MustConnect
  assign CH2_TXPRBSFORCEERR_in = (CH2_TXPRBSFORCEERR === 1'bz) || CH2_TXPRBSFORCEERR; // rv 1
  assign CH2_TXPRBSSEL_in[0] = (CH2_TXPRBSSEL[0] !== 1'bz) && CH2_TXPRBSSEL[0]; // rv MustConnect
  assign CH2_TXPRBSSEL_in[1] = (CH2_TXPRBSSEL[1] !== 1'bz) && CH2_TXPRBSSEL[1]; // rv MustConnect
  assign CH2_TXPRBSSEL_in[2] = (CH2_TXPRBSSEL[2] !== 1'bz) && CH2_TXPRBSSEL[2]; // rv MustConnect
  assign CH2_TXPRBSSEL_in[3] = (CH2_TXPRBSSEL[3] !== 1'bz) && CH2_TXPRBSSEL[3]; // rv MustConnect
  assign CH2_TXPRECURSOR2_in[0] = (CH2_TXPRECURSOR2[0] !== 1'bz) && CH2_TXPRECURSOR2[0]; // rv MustConnect
  assign CH2_TXPRECURSOR2_in[1] = (CH2_TXPRECURSOR2[1] !== 1'bz) && CH2_TXPRECURSOR2[1]; // rv MustConnect
  assign CH2_TXPRECURSOR2_in[2] = (CH2_TXPRECURSOR2[2] !== 1'bz) && CH2_TXPRECURSOR2[2]; // rv MustConnect
  assign CH2_TXPRECURSOR2_in[3] = (CH2_TXPRECURSOR2[3] !== 1'bz) && CH2_TXPRECURSOR2[3]; // rv MustConnect
  assign CH2_TXPRECURSOR2_in[4] = (CH2_TXPRECURSOR2[4] !== 1'bz) && CH2_TXPRECURSOR2[4]; // rv MustConnect
  assign CH2_TXPRECURSOR2_in[5] = (CH2_TXPRECURSOR2[5] !== 1'bz) && CH2_TXPRECURSOR2[5]; // rv MustConnect
  assign CH2_TXPRECURSOR3_in[0] = (CH2_TXPRECURSOR3[0] !== 1'bz) && CH2_TXPRECURSOR3[0]; // rv MustConnect
  assign CH2_TXPRECURSOR3_in[1] = (CH2_TXPRECURSOR3[1] !== 1'bz) && CH2_TXPRECURSOR3[1]; // rv MustConnect
  assign CH2_TXPRECURSOR3_in[2] = (CH2_TXPRECURSOR3[2] !== 1'bz) && CH2_TXPRECURSOR3[2]; // rv MustConnect
  assign CH2_TXPRECURSOR3_in[3] = (CH2_TXPRECURSOR3[3] !== 1'bz) && CH2_TXPRECURSOR3[3]; // rv MustConnect
  assign CH2_TXPRECURSOR3_in[4] = (CH2_TXPRECURSOR3[4] !== 1'bz) && CH2_TXPRECURSOR3[4]; // rv MustConnect
  assign CH2_TXPRECURSOR3_in[5] = (CH2_TXPRECURSOR3[5] !== 1'bz) && CH2_TXPRECURSOR3[5]; // rv MustConnect
  assign CH2_TXPRECURSOR_in[0] = (CH2_TXPRECURSOR[0] !== 1'bz) && CH2_TXPRECURSOR[0]; // rv MustConnect
  assign CH2_TXPRECURSOR_in[1] = (CH2_TXPRECURSOR[1] !== 1'bz) && CH2_TXPRECURSOR[1]; // rv MustConnect
  assign CH2_TXPRECURSOR_in[2] = (CH2_TXPRECURSOR[2] !== 1'bz) && CH2_TXPRECURSOR[2]; // rv MustConnect
  assign CH2_TXPRECURSOR_in[3] = (CH2_TXPRECURSOR[3] !== 1'bz) && CH2_TXPRECURSOR[3]; // rv MustConnect
  assign CH2_TXPRECURSOR_in[4] = (CH2_TXPRECURSOR[4] !== 1'bz) && CH2_TXPRECURSOR[4]; // rv MustConnect
  assign CH2_TXPRECURSOR_in[5] = (CH2_TXPRECURSOR[5] !== 1'bz) && CH2_TXPRECURSOR[5]; // rv MustConnect
  assign CH2_TXPROGDIVRESET_in = (CH2_TXPROGDIVRESET === 1'bz) || CH2_TXPROGDIVRESET; // rv 1
  assign CH2_TXQPRBSEN_in = (CH2_TXQPRBSEN === 1'bz) || CH2_TXQPRBSEN; // rv 1
  assign CH2_TXRATE_in[0] = (CH2_TXRATE[0] !== 1'bz) && CH2_TXRATE[0]; // rv MustConnect
  assign CH2_TXRATE_in[1] = (CH2_TXRATE[1] !== 1'bz) && CH2_TXRATE[1]; // rv MustConnect
  assign CH2_TXRATE_in[2] = (CH2_TXRATE[2] !== 1'bz) && CH2_TXRATE[2]; // rv MustConnect
  assign CH2_TXRATE_in[3] = (CH2_TXRATE[3] !== 1'bz) && CH2_TXRATE[3]; // rv MustConnect
  assign CH2_TXRATE_in[4] = (CH2_TXRATE[4] !== 1'bz) && CH2_TXRATE[4]; // rv MustConnect
  assign CH2_TXRATE_in[5] = (CH2_TXRATE[5] !== 1'bz) && CH2_TXRATE[5]; // rv MustConnect
  assign CH2_TXRATE_in[6] = (CH2_TXRATE[6] !== 1'bz) && CH2_TXRATE[6]; // rv MustConnect
  assign CH2_TXRATE_in[7] = (CH2_TXRATE[7] !== 1'bz) && CH2_TXRATE[7]; // rv MustConnect
  assign CH2_TXRESETMODE_in[0] = (CH2_TXRESETMODE[0] !== 1'bz) && CH2_TXRESETMODE[0]; // rv MustConnect
  assign CH2_TXRESETMODE_in[1] = (CH2_TXRESETMODE[1] !== 1'bz) && CH2_TXRESETMODE[1]; // rv MustConnect
  assign CH2_TXRSV0_in[0] = (CH2_TXRSV0[0] !== 1'bz) && CH2_TXRSV0[0]; // rv MustConnect
  assign CH2_TXRSV0_in[1] = (CH2_TXRSV0[1] !== 1'bz) && CH2_TXRSV0[1]; // rv MustConnect
  assign CH2_TXRSV0_in[2] = (CH2_TXRSV0[2] !== 1'bz) && CH2_TXRSV0[2]; // rv MustConnect
  assign CH2_TXRSV0_in[3] = (CH2_TXRSV0[3] !== 1'bz) && CH2_TXRSV0[3]; // rv MustConnect
  assign CH2_TXRSV0_in[4] = (CH2_TXRSV0[4] !== 1'bz) && CH2_TXRSV0[4]; // rv MustConnect
  assign CH2_TXRSV1_in[0] = (CH2_TXRSV1[0] !== 1'bz) && CH2_TXRSV1[0]; // rv MustConnect
  assign CH2_TXRSV1_in[1] = (CH2_TXRSV1[1] !== 1'bz) && CH2_TXRSV1[1]; // rv MustConnect
  assign CH2_TXRSV1_in[2] = (CH2_TXRSV1[2] !== 1'bz) && CH2_TXRSV1[2]; // rv MustConnect
  assign CH2_TXRSV1_in[3] = (CH2_TXRSV1[3] !== 1'bz) && CH2_TXRSV1[3]; // rv MustConnect
  assign CH2_TXUSERRDY_in = (CH2_TXUSERRDY === 1'bz) || CH2_TXUSERRDY; // rv 1
  assign CH3_CDRFREQOS_in = (CH3_CDRFREQOS === 1'bz) || CH3_CDRFREQOS; // rv 1
  assign CH3_CDRINCPCTRL_in = (CH3_CDRINCPCTRL === 1'bz) || CH3_CDRINCPCTRL; // rv 1
  assign CH3_CDRSTEPDIR_in = (CH3_CDRSTEPDIR === 1'bz) || CH3_CDRSTEPDIR; // rv 1
  assign CH3_CDRSTEPSQ_in = (CH3_CDRSTEPSQ === 1'bz) || CH3_CDRSTEPSQ; // rv 1
  assign CH3_CDRSTEPSX_in = (CH3_CDRSTEPSX === 1'bz) || CH3_CDRSTEPSX; // rv 1
  assign CH3_CLKRSVD0_in = (CH3_CLKRSVD0 === 1'bz) || CH3_CLKRSVD0; // rv 1
  assign CH3_CLKRSVD1_in = (CH3_CLKRSVD1 === 1'bz) || CH3_CLKRSVD1; // rv 1
  assign CH3_EYESCANRESET_in = (CH3_EYESCANRESET === 1'bz) || CH3_EYESCANRESET; // rv 1
  assign CH3_GTMRXN_in = CH3_GTMRXN;
  assign CH3_GTMRXP_in = CH3_GTMRXP;
  assign CH3_GTRSVD_in[0] = (CH3_GTRSVD[0] !== 1'bz) && CH3_GTRSVD[0]; // rv MustConnect
  assign CH3_GTRSVD_in[10] = (CH3_GTRSVD[10] !== 1'bz) && CH3_GTRSVD[10]; // rv MustConnect
  assign CH3_GTRSVD_in[11] = (CH3_GTRSVD[11] !== 1'bz) && CH3_GTRSVD[11]; // rv MustConnect
  assign CH3_GTRSVD_in[12] = (CH3_GTRSVD[12] !== 1'bz) && CH3_GTRSVD[12]; // rv MustConnect
  assign CH3_GTRSVD_in[13] = (CH3_GTRSVD[13] !== 1'bz) && CH3_GTRSVD[13]; // rv MustConnect
  assign CH3_GTRSVD_in[14] = (CH3_GTRSVD[14] !== 1'bz) && CH3_GTRSVD[14]; // rv MustConnect
  assign CH3_GTRSVD_in[15] = (CH3_GTRSVD[15] !== 1'bz) && CH3_GTRSVD[15]; // rv MustConnect
  assign CH3_GTRSVD_in[1] = (CH3_GTRSVD[1] !== 1'bz) && CH3_GTRSVD[1]; // rv MustConnect
  assign CH3_GTRSVD_in[2] = (CH3_GTRSVD[2] !== 1'bz) && CH3_GTRSVD[2]; // rv MustConnect
  assign CH3_GTRSVD_in[3] = (CH3_GTRSVD[3] !== 1'bz) && CH3_GTRSVD[3]; // rv MustConnect
  assign CH3_GTRSVD_in[4] = (CH3_GTRSVD[4] !== 1'bz) && CH3_GTRSVD[4]; // rv MustConnect
  assign CH3_GTRSVD_in[5] = (CH3_GTRSVD[5] !== 1'bz) && CH3_GTRSVD[5]; // rv MustConnect
  assign CH3_GTRSVD_in[6] = (CH3_GTRSVD[6] !== 1'bz) && CH3_GTRSVD[6]; // rv MustConnect
  assign CH3_GTRSVD_in[7] = (CH3_GTRSVD[7] !== 1'bz) && CH3_GTRSVD[7]; // rv MustConnect
  assign CH3_GTRSVD_in[8] = (CH3_GTRSVD[8] !== 1'bz) && CH3_GTRSVD[8]; // rv MustConnect
  assign CH3_GTRSVD_in[9] = (CH3_GTRSVD[9] !== 1'bz) && CH3_GTRSVD[9]; // rv MustConnect
  assign CH3_GTRXRESET_in = (CH3_GTRXRESET === 1'bz) || CH3_GTRXRESET; // rv 1
  assign CH3_GTTXRESET_in = (CH3_GTTXRESET === 1'bz) || CH3_GTTXRESET; // rv 1
  assign CH3_ILORESETMASK_in = (CH3_ILORESETMASK === 1'bz) || CH3_ILORESETMASK; // rv 1
  assign CH3_ILORESET_in = (CH3_ILORESET === 1'bz) || CH3_ILORESET; // rv 1
  assign CH3_PCSRSVDIN_in[0] = (CH3_PCSRSVDIN[0] !== 1'bz) && CH3_PCSRSVDIN[0]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[10] = (CH3_PCSRSVDIN[10] !== 1'bz) && CH3_PCSRSVDIN[10]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[11] = (CH3_PCSRSVDIN[11] !== 1'bz) && CH3_PCSRSVDIN[11]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[12] = (CH3_PCSRSVDIN[12] !== 1'bz) && CH3_PCSRSVDIN[12]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[13] = (CH3_PCSRSVDIN[13] !== 1'bz) && CH3_PCSRSVDIN[13]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[14] = (CH3_PCSRSVDIN[14] !== 1'bz) && CH3_PCSRSVDIN[14]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[15] = (CH3_PCSRSVDIN[15] !== 1'bz) && CH3_PCSRSVDIN[15]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[1] = (CH3_PCSRSVDIN[1] !== 1'bz) && CH3_PCSRSVDIN[1]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[2] = (CH3_PCSRSVDIN[2] !== 1'bz) && CH3_PCSRSVDIN[2]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[3] = (CH3_PCSRSVDIN[3] !== 1'bz) && CH3_PCSRSVDIN[3]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[4] = (CH3_PCSRSVDIN[4] !== 1'bz) && CH3_PCSRSVDIN[4]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[5] = (CH3_PCSRSVDIN[5] !== 1'bz) && CH3_PCSRSVDIN[5]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[6] = (CH3_PCSRSVDIN[6] !== 1'bz) && CH3_PCSRSVDIN[6]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[7] = (CH3_PCSRSVDIN[7] !== 1'bz) && CH3_PCSRSVDIN[7]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[8] = (CH3_PCSRSVDIN[8] !== 1'bz) && CH3_PCSRSVDIN[8]; // rv MustConnect
  assign CH3_PCSRSVDIN_in[9] = (CH3_PCSRSVDIN[9] !== 1'bz) && CH3_PCSRSVDIN[9]; // rv MustConnect
  assign CH3_RXCDRHOLD_in = (CH3_RXCDRHOLD === 1'bz) || CH3_RXCDRHOLD; // rv 1
  assign CH3_RXCDROVRDEN_in = (CH3_RXCDROVRDEN === 1'bz) || CH3_RXCDROVRDEN; // rv 1
  assign CH3_RXCDRRESET_in = (CH3_RXCDRRESET === 1'bz) || CH3_RXCDRRESET; // rv 1
  assign CH3_RXPCSRESETMASK_in[0] = (CH3_RXPCSRESETMASK[0] !== 1'bz) && CH3_RXPCSRESETMASK[0]; // rv MustConnect
  assign CH3_RXPCSRESETMASK_in[1] = (CH3_RXPCSRESETMASK[1] !== 1'bz) && CH3_RXPCSRESETMASK[1]; // rv MustConnect
  assign CH3_RXPCSRESETMASK_in[2] = (CH3_RXPCSRESETMASK[2] !== 1'bz) && CH3_RXPCSRESETMASK[2]; // rv MustConnect
  assign CH3_RXPD_in[0] = (CH3_RXPD[0] !== 1'bz) && CH3_RXPD[0]; // rv MustConnect
  assign CH3_RXPD_in[1] = (CH3_RXPD[1] !== 1'bz) && CH3_RXPD[1]; // rv MustConnect
  assign CH3_RXPERST_in = (CH3_RXPERST === 1'bz) || CH3_RXPERST; // rv 1
  assign CH3_RXPMARESETMASK_in[0] = (CH3_RXPMARESETMASK[0] !== 1'bz) && CH3_RXPMARESETMASK[0]; // rv MustConnect
  assign CH3_RXPMARESETMASK_in[1] = (CH3_RXPMARESETMASK[1] !== 1'bz) && CH3_RXPMARESETMASK[1]; // rv MustConnect
  assign CH3_RXPMARESETMASK_in[2] = (CH3_RXPMARESETMASK[2] !== 1'bz) && CH3_RXPMARESETMASK[2]; // rv MustConnect
  assign CH3_RXPMARESETMASK_in[3] = (CH3_RXPMARESETMASK[3] !== 1'bz) && CH3_RXPMARESETMASK[3]; // rv MustConnect
  assign CH3_RXPMARESETMASK_in[4] = (CH3_RXPMARESETMASK[4] !== 1'bz) && CH3_RXPMARESETMASK[4]; // rv MustConnect
  assign CH3_RXPMARESETMASK_in[5] = (CH3_RXPMARESETMASK[5] !== 1'bz) && CH3_RXPMARESETMASK[5]; // rv MustConnect
  assign CH3_RXPMARESETMASK_in[6] = (CH3_RXPMARESETMASK[6] !== 1'bz) && CH3_RXPMARESETMASK[6]; // rv MustConnect
  assign CH3_RXPMARESETMASK_in[7] = (CH3_RXPMARESETMASK[7] !== 1'bz) && CH3_RXPMARESETMASK[7]; // rv MustConnect
  assign CH3_RXPOLARITY_in = (CH3_RXPOLARITY === 1'bz) || CH3_RXPOLARITY; // rv 1
  assign CH3_RXPRBSCNTRESET_in = (CH3_RXPRBSCNTRESET === 1'bz) || CH3_RXPRBSCNTRESET; // rv 1
  assign CH3_RXPRBSCNTSTOP_in = (CH3_RXPRBSCNTSTOP === 1'bz) || CH3_RXPRBSCNTSTOP; // rv 1
  assign CH3_RXPRBSSEL_in[0] = (CH3_RXPRBSSEL[0] !== 1'bz) && CH3_RXPRBSSEL[0]; // rv MustConnect
  assign CH3_RXPRBSSEL_in[1] = (CH3_RXPRBSSEL[1] !== 1'bz) && CH3_RXPRBSSEL[1]; // rv MustConnect
  assign CH3_RXPRBSSEL_in[2] = (CH3_RXPRBSSEL[2] !== 1'bz) && CH3_RXPRBSSEL[2]; // rv MustConnect
  assign CH3_RXPRBSSEL_in[3] = (CH3_RXPRBSSEL[3] !== 1'bz) && CH3_RXPRBSSEL[3]; // rv MustConnect
  assign CH3_RXPROGDIVRESET_in = (CH3_RXPROGDIVRESET === 1'bz) || CH3_RXPROGDIVRESET; // rv 1
  assign CH3_RXQPRBSEN_in = (CH3_RXQPRBSEN === 1'bz) || CH3_RXQPRBSEN; // rv 1
  assign CH3_RXRATE_in[0] = (CH3_RXRATE[0] !== 1'bz) && CH3_RXRATE[0]; // rv MustConnect
  assign CH3_RXRATE_in[1] = (CH3_RXRATE[1] !== 1'bz) && CH3_RXRATE[1]; // rv MustConnect
  assign CH3_RXRATE_in[2] = (CH3_RXRATE[2] !== 1'bz) && CH3_RXRATE[2]; // rv MustConnect
  assign CH3_RXRATE_in[3] = (CH3_RXRATE[3] !== 1'bz) && CH3_RXRATE[3]; // rv MustConnect
  assign CH3_RXRATE_in[4] = (CH3_RXRATE[4] !== 1'bz) && CH3_RXRATE[4]; // rv MustConnect
  assign CH3_RXRATE_in[5] = (CH3_RXRATE[5] !== 1'bz) && CH3_RXRATE[5]; // rv MustConnect
  assign CH3_RXRATE_in[6] = (CH3_RXRATE[6] !== 1'bz) && CH3_RXRATE[6]; // rv MustConnect
  assign CH3_RXRATE_in[7] = (CH3_RXRATE[7] !== 1'bz) && CH3_RXRATE[7]; // rv MustConnect
  assign CH3_RXRESETMODE_in[0] = (CH3_RXRESETMODE[0] !== 1'bz) && CH3_RXRESETMODE[0]; // rv MustConnect
  assign CH3_RXRESETMODE_in[1] = (CH3_RXRESETMODE[1] !== 1'bz) && CH3_RXRESETMODE[1]; // rv MustConnect
  assign CH3_RXRSV0_in = (CH3_RXRSV0 === 1'bz) || CH3_RXRSV0; // rv 1
  assign CH3_RXRSV1_in = (CH3_RXRSV1 === 1'bz) || CH3_RXRSV1; // rv 1
  assign CH3_RXRSV2_in = (CH3_RXRSV2 === 1'bz) || CH3_RXRSV2; // rv 1
  assign CH3_RXUSERRDY_in = (CH3_RXUSERRDY === 1'bz) || CH3_RXUSERRDY; // rv 1
  assign CH3_TSTCLK0_in = CH3_TSTCLK0;
  assign CH3_TSTCLK1_in = CH3_TSTCLK1;
  assign CH3_TXINHIBIT_in = (CH3_TXINHIBIT === 1'bz) || CH3_TXINHIBIT; // rv 1
  assign CH3_TXLATCLK_in = (CH3_TXLATCLK === 1'bz) || CH3_TXLATCLK; // rv 1
  assign CH3_TXMAINCURSOR_in[0] = (CH3_TXMAINCURSOR[0] !== 1'bz) && CH3_TXMAINCURSOR[0]; // rv MustConnect
  assign CH3_TXMAINCURSOR_in[1] = (CH3_TXMAINCURSOR[1] !== 1'bz) && CH3_TXMAINCURSOR[1]; // rv MustConnect
  assign CH3_TXMAINCURSOR_in[2] = (CH3_TXMAINCURSOR[2] !== 1'bz) && CH3_TXMAINCURSOR[2]; // rv MustConnect
  assign CH3_TXMAINCURSOR_in[3] = (CH3_TXMAINCURSOR[3] !== 1'bz) && CH3_TXMAINCURSOR[3]; // rv MustConnect
  assign CH3_TXMAINCURSOR_in[4] = (CH3_TXMAINCURSOR[4] !== 1'bz) && CH3_TXMAINCURSOR[4]; // rv MustConnect
  assign CH3_TXMAINCURSOR_in[5] = (CH3_TXMAINCURSOR[5] !== 1'bz) && CH3_TXMAINCURSOR[5]; // rv MustConnect
  assign CH3_TXMAINCURSOR_in[6] = (CH3_TXMAINCURSOR[6] !== 1'bz) && CH3_TXMAINCURSOR[6]; // rv MustConnect
  assign CH3_TXPCSRESETMASK_in = (CH3_TXPCSRESETMASK === 1'bz) || CH3_TXPCSRESETMASK; // rv 1
  assign CH3_TXPD_in[0] = (CH3_TXPD[0] !== 1'bz) && CH3_TXPD[0]; // rv MustConnect
  assign CH3_TXPD_in[1] = (CH3_TXPD[1] !== 1'bz) && CH3_TXPD[1]; // rv MustConnect
  assign CH3_TXPERST_in = (CH3_TXPERST === 1'bz) || CH3_TXPERST; // rv 1
  assign CH3_TXPISOPD_in = (CH3_TXPISOPD === 1'bz) || CH3_TXPISOPD; // rv 1
  assign CH3_TXPMARESETMASK_in[0] = (CH3_TXPMARESETMASK[0] !== 1'bz) && CH3_TXPMARESETMASK[0]; // rv MustConnect
  assign CH3_TXPMARESETMASK_in[1] = (CH3_TXPMARESETMASK[1] !== 1'bz) && CH3_TXPMARESETMASK[1]; // rv MustConnect
  assign CH3_TXPOLARITY_in = (CH3_TXPOLARITY === 1'bz) || CH3_TXPOLARITY; // rv 1
  assign CH3_TXPOSTCURSOR_in[0] = (CH3_TXPOSTCURSOR[0] !== 1'bz) && CH3_TXPOSTCURSOR[0]; // rv MustConnect
  assign CH3_TXPOSTCURSOR_in[1] = (CH3_TXPOSTCURSOR[1] !== 1'bz) && CH3_TXPOSTCURSOR[1]; // rv MustConnect
  assign CH3_TXPOSTCURSOR_in[2] = (CH3_TXPOSTCURSOR[2] !== 1'bz) && CH3_TXPOSTCURSOR[2]; // rv MustConnect
  assign CH3_TXPOSTCURSOR_in[3] = (CH3_TXPOSTCURSOR[3] !== 1'bz) && CH3_TXPOSTCURSOR[3]; // rv MustConnect
  assign CH3_TXPOSTCURSOR_in[4] = (CH3_TXPOSTCURSOR[4] !== 1'bz) && CH3_TXPOSTCURSOR[4]; // rv MustConnect
  assign CH3_TXPOSTCURSOR_in[5] = (CH3_TXPOSTCURSOR[5] !== 1'bz) && CH3_TXPOSTCURSOR[5]; // rv MustConnect
  assign CH3_TXPRBSFORCEERR_in = (CH3_TXPRBSFORCEERR === 1'bz) || CH3_TXPRBSFORCEERR; // rv 1
  assign CH3_TXPRBSSEL_in[0] = (CH3_TXPRBSSEL[0] !== 1'bz) && CH3_TXPRBSSEL[0]; // rv MustConnect
  assign CH3_TXPRBSSEL_in[1] = (CH3_TXPRBSSEL[1] !== 1'bz) && CH3_TXPRBSSEL[1]; // rv MustConnect
  assign CH3_TXPRBSSEL_in[2] = (CH3_TXPRBSSEL[2] !== 1'bz) && CH3_TXPRBSSEL[2]; // rv MustConnect
  assign CH3_TXPRBSSEL_in[3] = (CH3_TXPRBSSEL[3] !== 1'bz) && CH3_TXPRBSSEL[3]; // rv MustConnect
  assign CH3_TXPRECURSOR2_in[0] = (CH3_TXPRECURSOR2[0] !== 1'bz) && CH3_TXPRECURSOR2[0]; // rv MustConnect
  assign CH3_TXPRECURSOR2_in[1] = (CH3_TXPRECURSOR2[1] !== 1'bz) && CH3_TXPRECURSOR2[1]; // rv MustConnect
  assign CH3_TXPRECURSOR2_in[2] = (CH3_TXPRECURSOR2[2] !== 1'bz) && CH3_TXPRECURSOR2[2]; // rv MustConnect
  assign CH3_TXPRECURSOR2_in[3] = (CH3_TXPRECURSOR2[3] !== 1'bz) && CH3_TXPRECURSOR2[3]; // rv MustConnect
  assign CH3_TXPRECURSOR2_in[4] = (CH3_TXPRECURSOR2[4] !== 1'bz) && CH3_TXPRECURSOR2[4]; // rv MustConnect
  assign CH3_TXPRECURSOR2_in[5] = (CH3_TXPRECURSOR2[5] !== 1'bz) && CH3_TXPRECURSOR2[5]; // rv MustConnect
  assign CH3_TXPRECURSOR3_in[0] = (CH3_TXPRECURSOR3[0] !== 1'bz) && CH3_TXPRECURSOR3[0]; // rv MustConnect
  assign CH3_TXPRECURSOR3_in[1] = (CH3_TXPRECURSOR3[1] !== 1'bz) && CH3_TXPRECURSOR3[1]; // rv MustConnect
  assign CH3_TXPRECURSOR3_in[2] = (CH3_TXPRECURSOR3[2] !== 1'bz) && CH3_TXPRECURSOR3[2]; // rv MustConnect
  assign CH3_TXPRECURSOR3_in[3] = (CH3_TXPRECURSOR3[3] !== 1'bz) && CH3_TXPRECURSOR3[3]; // rv MustConnect
  assign CH3_TXPRECURSOR3_in[4] = (CH3_TXPRECURSOR3[4] !== 1'bz) && CH3_TXPRECURSOR3[4]; // rv MustConnect
  assign CH3_TXPRECURSOR3_in[5] = (CH3_TXPRECURSOR3[5] !== 1'bz) && CH3_TXPRECURSOR3[5]; // rv MustConnect
  assign CH3_TXPRECURSOR_in[0] = (CH3_TXPRECURSOR[0] !== 1'bz) && CH3_TXPRECURSOR[0]; // rv MustConnect
  assign CH3_TXPRECURSOR_in[1] = (CH3_TXPRECURSOR[1] !== 1'bz) && CH3_TXPRECURSOR[1]; // rv MustConnect
  assign CH3_TXPRECURSOR_in[2] = (CH3_TXPRECURSOR[2] !== 1'bz) && CH3_TXPRECURSOR[2]; // rv MustConnect
  assign CH3_TXPRECURSOR_in[3] = (CH3_TXPRECURSOR[3] !== 1'bz) && CH3_TXPRECURSOR[3]; // rv MustConnect
  assign CH3_TXPRECURSOR_in[4] = (CH3_TXPRECURSOR[4] !== 1'bz) && CH3_TXPRECURSOR[4]; // rv MustConnect
  assign CH3_TXPRECURSOR_in[5] = (CH3_TXPRECURSOR[5] !== 1'bz) && CH3_TXPRECURSOR[5]; // rv MustConnect
  assign CH3_TXPROGDIVRESET_in = (CH3_TXPROGDIVRESET === 1'bz) || CH3_TXPROGDIVRESET; // rv 1
  assign CH3_TXQPRBSEN_in = (CH3_TXQPRBSEN === 1'bz) || CH3_TXQPRBSEN; // rv 1
  assign CH3_TXRATE_in[0] = (CH3_TXRATE[0] !== 1'bz) && CH3_TXRATE[0]; // rv MustConnect
  assign CH3_TXRATE_in[1] = (CH3_TXRATE[1] !== 1'bz) && CH3_TXRATE[1]; // rv MustConnect
  assign CH3_TXRATE_in[2] = (CH3_TXRATE[2] !== 1'bz) && CH3_TXRATE[2]; // rv MustConnect
  assign CH3_TXRATE_in[3] = (CH3_TXRATE[3] !== 1'bz) && CH3_TXRATE[3]; // rv MustConnect
  assign CH3_TXRATE_in[4] = (CH3_TXRATE[4] !== 1'bz) && CH3_TXRATE[4]; // rv MustConnect
  assign CH3_TXRATE_in[5] = (CH3_TXRATE[5] !== 1'bz) && CH3_TXRATE[5]; // rv MustConnect
  assign CH3_TXRATE_in[6] = (CH3_TXRATE[6] !== 1'bz) && CH3_TXRATE[6]; // rv MustConnect
  assign CH3_TXRATE_in[7] = (CH3_TXRATE[7] !== 1'bz) && CH3_TXRATE[7]; // rv MustConnect
  assign CH3_TXRESETMODE_in[0] = (CH3_TXRESETMODE[0] !== 1'bz) && CH3_TXRESETMODE[0]; // rv MustConnect
  assign CH3_TXRESETMODE_in[1] = (CH3_TXRESETMODE[1] !== 1'bz) && CH3_TXRESETMODE[1]; // rv MustConnect
  assign CH3_TXRSV0_in[0] = (CH3_TXRSV0[0] !== 1'bz) && CH3_TXRSV0[0]; // rv MustConnect
  assign CH3_TXRSV0_in[1] = (CH3_TXRSV0[1] !== 1'bz) && CH3_TXRSV0[1]; // rv MustConnect
  assign CH3_TXRSV0_in[2] = (CH3_TXRSV0[2] !== 1'bz) && CH3_TXRSV0[2]; // rv MustConnect
  assign CH3_TXRSV0_in[3] = (CH3_TXRSV0[3] !== 1'bz) && CH3_TXRSV0[3]; // rv MustConnect
  assign CH3_TXRSV0_in[4] = (CH3_TXRSV0[4] !== 1'bz) && CH3_TXRSV0[4]; // rv MustConnect
  assign CH3_TXRSV1_in[0] = (CH3_TXRSV1[0] !== 1'bz) && CH3_TXRSV1[0]; // rv MustConnect
  assign CH3_TXRSV1_in[1] = (CH3_TXRSV1[1] !== 1'bz) && CH3_TXRSV1[1]; // rv MustConnect
  assign CH3_TXRSV1_in[2] = (CH3_TXRSV1[2] !== 1'bz) && CH3_TXRSV1[2]; // rv MustConnect
  assign CH3_TXRSV1_in[3] = (CH3_TXRSV1[3] !== 1'bz) && CH3_TXRSV1[3]; // rv MustConnect
  assign CH3_TXUSERRDY_in = (CH3_TXUSERRDY === 1'bz) || CH3_TXUSERRDY; // rv 1
  assign CTRLRSVDIN_in[0] = (CTRLRSVDIN[0] !== 1'bz) && CTRLRSVDIN[0]; // rv MustConnect
  assign CTRLRSVDIN_in[1] = (CTRLRSVDIN[1] !== 1'bz) && CTRLRSVDIN[1]; // rv MustConnect
  assign CTRLRSVDIN_in[2] = (CTRLRSVDIN[2] !== 1'bz) && CTRLRSVDIN[2]; // rv MustConnect
  assign CTRLRSVDIN_in[3] = (CTRLRSVDIN[3] !== 1'bz) && CTRLRSVDIN[3]; // rv MustConnect
  assign CTRLRSVDIN_in[4] = (CTRLRSVDIN[4] !== 1'bz) && CTRLRSVDIN[4]; // rv MustConnect
  assign CTRLRSVDIN_in[5] = (CTRLRSVDIN[5] !== 1'bz) && CTRLRSVDIN[5]; // rv MustConnect
  assign CTRLRSVDIN_in[6] = (CTRLRSVDIN[6] !== 1'bz) && CTRLRSVDIN[6]; // rv MustConnect
  assign CTRLRSVDIN_in[7] = (CTRLRSVDIN[7] !== 1'bz) && CTRLRSVDIN[7]; // rv MustConnect
  assign GPI_in[0] = (GPI[0] !== 1'bz) && GPI[0]; // rv MustConnect
  assign GPI_in[10] = (GPI[10] !== 1'bz) && GPI[10]; // rv MustConnect
  assign GPI_in[11] = (GPI[11] !== 1'bz) && GPI[11]; // rv MustConnect
  assign GPI_in[12] = (GPI[12] !== 1'bz) && GPI[12]; // rv MustConnect
  assign GPI_in[13] = (GPI[13] !== 1'bz) && GPI[13]; // rv MustConnect
  assign GPI_in[14] = (GPI[14] !== 1'bz) && GPI[14]; // rv MustConnect
  assign GPI_in[15] = (GPI[15] !== 1'bz) && GPI[15]; // rv MustConnect
  assign GPI_in[16] = (GPI[16] !== 1'bz) && GPI[16]; // rv MustConnect
  assign GPI_in[17] = (GPI[17] !== 1'bz) && GPI[17]; // rv MustConnect
  assign GPI_in[18] = (GPI[18] !== 1'bz) && GPI[18]; // rv MustConnect
  assign GPI_in[19] = (GPI[19] !== 1'bz) && GPI[19]; // rv MustConnect
  assign GPI_in[1] = (GPI[1] !== 1'bz) && GPI[1]; // rv MustConnect
  assign GPI_in[20] = (GPI[20] !== 1'bz) && GPI[20]; // rv MustConnect
  assign GPI_in[21] = (GPI[21] !== 1'bz) && GPI[21]; // rv MustConnect
  assign GPI_in[22] = (GPI[22] !== 1'bz) && GPI[22]; // rv MustConnect
  assign GPI_in[23] = (GPI[23] !== 1'bz) && GPI[23]; // rv MustConnect
  assign GPI_in[24] = (GPI[24] !== 1'bz) && GPI[24]; // rv MustConnect
  assign GPI_in[25] = (GPI[25] !== 1'bz) && GPI[25]; // rv MustConnect
  assign GPI_in[26] = (GPI[26] !== 1'bz) && GPI[26]; // rv MustConnect
  assign GPI_in[27] = (GPI[27] !== 1'bz) && GPI[27]; // rv MustConnect
  assign GPI_in[28] = (GPI[28] !== 1'bz) && GPI[28]; // rv MustConnect
  assign GPI_in[29] = (GPI[29] !== 1'bz) && GPI[29]; // rv MustConnect
  assign GPI_in[2] = (GPI[2] !== 1'bz) && GPI[2]; // rv MustConnect
  assign GPI_in[30] = (GPI[30] !== 1'bz) && GPI[30]; // rv MustConnect
  assign GPI_in[31] = (GPI[31] !== 1'bz) && GPI[31]; // rv MustConnect
  assign GPI_in[3] = (GPI[3] !== 1'bz) && GPI[3]; // rv MustConnect
  assign GPI_in[4] = (GPI[4] !== 1'bz) && GPI[4]; // rv MustConnect
  assign GPI_in[5] = (GPI[5] !== 1'bz) && GPI[5]; // rv MustConnect
  assign GPI_in[6] = (GPI[6] !== 1'bz) && GPI[6]; // rv MustConnect
  assign GPI_in[7] = (GPI[7] !== 1'bz) && GPI[7]; // rv MustConnect
  assign GPI_in[8] = (GPI[8] !== 1'bz) && GPI[8]; // rv MustConnect
  assign GPI_in[9] = (GPI[9] !== 1'bz) && GPI[9]; // rv MustConnect
  assign HSCLK0_LCPLLFBDIV_in[0] = (HSCLK0_LCPLLFBDIV[0] !== 1'bz) && HSCLK0_LCPLLFBDIV[0]; // rv MustConnect
  assign HSCLK0_LCPLLFBDIV_in[1] = (HSCLK0_LCPLLFBDIV[1] !== 1'bz) && HSCLK0_LCPLLFBDIV[1]; // rv MustConnect
  assign HSCLK0_LCPLLFBDIV_in[2] = (HSCLK0_LCPLLFBDIV[2] !== 1'bz) && HSCLK0_LCPLLFBDIV[2]; // rv MustConnect
  assign HSCLK0_LCPLLFBDIV_in[3] = (HSCLK0_LCPLLFBDIV[3] !== 1'bz) && HSCLK0_LCPLLFBDIV[3]; // rv MustConnect
  assign HSCLK0_LCPLLFBDIV_in[4] = (HSCLK0_LCPLLFBDIV[4] !== 1'bz) && HSCLK0_LCPLLFBDIV[4]; // rv MustConnect
  assign HSCLK0_LCPLLFBDIV_in[5] = (HSCLK0_LCPLLFBDIV[5] !== 1'bz) && HSCLK0_LCPLLFBDIV[5]; // rv MustConnect
  assign HSCLK0_LCPLLFBDIV_in[6] = (HSCLK0_LCPLLFBDIV[6] !== 1'bz) && HSCLK0_LCPLLFBDIV[6]; // rv MustConnect
  assign HSCLK0_LCPLLFBDIV_in[7] = (HSCLK0_LCPLLFBDIV[7] !== 1'bz) && HSCLK0_LCPLLFBDIV[7]; // rv MustConnect
  assign HSCLK0_LCPLLGTGREFCLK_in = HSCLK0_LCPLLGTGREFCLK;
  assign HSCLK0_LCPLLGTREFCLK0_in = HSCLK0_LCPLLGTREFCLK0;
  assign HSCLK0_LCPLLGTREFCLK1_in = HSCLK0_LCPLLGTREFCLK1;
  assign HSCLK0_LCPLLNORTHREFCLK0_in = HSCLK0_LCPLLNORTHREFCLK0;
  assign HSCLK0_LCPLLNORTHREFCLK1_in = HSCLK0_LCPLLNORTHREFCLK1;
  assign HSCLK0_LCPLLPD_in = (HSCLK0_LCPLLPD === 1'bz) || HSCLK0_LCPLLPD; // rv 1
  assign HSCLK0_LCPLLREFCLKSEL_in[0] = (HSCLK0_LCPLLREFCLKSEL[0] !== 1'bz) && HSCLK0_LCPLLREFCLKSEL[0]; // rv MustConnect
  assign HSCLK0_LCPLLREFCLKSEL_in[1] = (HSCLK0_LCPLLREFCLKSEL[1] !== 1'bz) && HSCLK0_LCPLLREFCLKSEL[1]; // rv MustConnect
  assign HSCLK0_LCPLLREFCLKSEL_in[2] = (HSCLK0_LCPLLREFCLKSEL[2] !== 1'bz) && HSCLK0_LCPLLREFCLKSEL[2]; // rv MustConnect
  assign HSCLK0_LCPLLRESETBYPASSMODE_in = (HSCLK0_LCPLLRESETBYPASSMODE === 1'bz) || HSCLK0_LCPLLRESETBYPASSMODE; // rv 1
  assign HSCLK0_LCPLLRESETMASK_in[0] = (HSCLK0_LCPLLRESETMASK[0] !== 1'bz) && HSCLK0_LCPLLRESETMASK[0]; // rv MustConnect
  assign HSCLK0_LCPLLRESETMASK_in[1] = (HSCLK0_LCPLLRESETMASK[1] !== 1'bz) && HSCLK0_LCPLLRESETMASK[1]; // rv MustConnect
  assign HSCLK0_LCPLLRESET_in = (HSCLK0_LCPLLRESET === 1'bz) || HSCLK0_LCPLLRESET; // rv 1
  assign HSCLK0_LCPLLSDMDATA_in[0] = (HSCLK0_LCPLLSDMDATA[0] !== 1'bz) && HSCLK0_LCPLLSDMDATA[0]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[10] = (HSCLK0_LCPLLSDMDATA[10] !== 1'bz) && HSCLK0_LCPLLSDMDATA[10]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[11] = (HSCLK0_LCPLLSDMDATA[11] !== 1'bz) && HSCLK0_LCPLLSDMDATA[11]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[12] = (HSCLK0_LCPLLSDMDATA[12] !== 1'bz) && HSCLK0_LCPLLSDMDATA[12]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[13] = (HSCLK0_LCPLLSDMDATA[13] !== 1'bz) && HSCLK0_LCPLLSDMDATA[13]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[14] = (HSCLK0_LCPLLSDMDATA[14] !== 1'bz) && HSCLK0_LCPLLSDMDATA[14]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[15] = (HSCLK0_LCPLLSDMDATA[15] !== 1'bz) && HSCLK0_LCPLLSDMDATA[15]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[16] = (HSCLK0_LCPLLSDMDATA[16] !== 1'bz) && HSCLK0_LCPLLSDMDATA[16]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[17] = (HSCLK0_LCPLLSDMDATA[17] !== 1'bz) && HSCLK0_LCPLLSDMDATA[17]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[18] = (HSCLK0_LCPLLSDMDATA[18] !== 1'bz) && HSCLK0_LCPLLSDMDATA[18]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[19] = (HSCLK0_LCPLLSDMDATA[19] !== 1'bz) && HSCLK0_LCPLLSDMDATA[19]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[1] = (HSCLK0_LCPLLSDMDATA[1] !== 1'bz) && HSCLK0_LCPLLSDMDATA[1]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[20] = (HSCLK0_LCPLLSDMDATA[20] !== 1'bz) && HSCLK0_LCPLLSDMDATA[20]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[21] = (HSCLK0_LCPLLSDMDATA[21] !== 1'bz) && HSCLK0_LCPLLSDMDATA[21]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[22] = (HSCLK0_LCPLLSDMDATA[22] !== 1'bz) && HSCLK0_LCPLLSDMDATA[22]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[23] = (HSCLK0_LCPLLSDMDATA[23] !== 1'bz) && HSCLK0_LCPLLSDMDATA[23]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[24] = (HSCLK0_LCPLLSDMDATA[24] !== 1'bz) && HSCLK0_LCPLLSDMDATA[24]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[25] = (HSCLK0_LCPLLSDMDATA[25] !== 1'bz) && HSCLK0_LCPLLSDMDATA[25]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[2] = (HSCLK0_LCPLLSDMDATA[2] !== 1'bz) && HSCLK0_LCPLLSDMDATA[2]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[3] = (HSCLK0_LCPLLSDMDATA[3] !== 1'bz) && HSCLK0_LCPLLSDMDATA[3]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[4] = (HSCLK0_LCPLLSDMDATA[4] !== 1'bz) && HSCLK0_LCPLLSDMDATA[4]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[5] = (HSCLK0_LCPLLSDMDATA[5] !== 1'bz) && HSCLK0_LCPLLSDMDATA[5]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[6] = (HSCLK0_LCPLLSDMDATA[6] !== 1'bz) && HSCLK0_LCPLLSDMDATA[6]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[7] = (HSCLK0_LCPLLSDMDATA[7] !== 1'bz) && HSCLK0_LCPLLSDMDATA[7]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[8] = (HSCLK0_LCPLLSDMDATA[8] !== 1'bz) && HSCLK0_LCPLLSDMDATA[8]; // rv MustConnect
  assign HSCLK0_LCPLLSDMDATA_in[9] = (HSCLK0_LCPLLSDMDATA[9] !== 1'bz) && HSCLK0_LCPLLSDMDATA[9]; // rv MustConnect
  assign HSCLK0_LCPLLSDMTOGGLE_in = (HSCLK0_LCPLLSDMTOGGLE === 1'bz) || HSCLK0_LCPLLSDMTOGGLE; // rv 1
  assign HSCLK0_LCPLLSOUTHREFCLK0_in = HSCLK0_LCPLLSOUTHREFCLK0;
  assign HSCLK0_LCPLLSOUTHREFCLK1_in = HSCLK0_LCPLLSOUTHREFCLK1;
  assign HSCLK1_LCPLLFBDIV_in[0] = (HSCLK1_LCPLLFBDIV[0] !== 1'bz) && HSCLK1_LCPLLFBDIV[0]; // rv MustConnect
  assign HSCLK1_LCPLLFBDIV_in[1] = (HSCLK1_LCPLLFBDIV[1] !== 1'bz) && HSCLK1_LCPLLFBDIV[1]; // rv MustConnect
  assign HSCLK1_LCPLLFBDIV_in[2] = (HSCLK1_LCPLLFBDIV[2] !== 1'bz) && HSCLK1_LCPLLFBDIV[2]; // rv MustConnect
  assign HSCLK1_LCPLLFBDIV_in[3] = (HSCLK1_LCPLLFBDIV[3] !== 1'bz) && HSCLK1_LCPLLFBDIV[3]; // rv MustConnect
  assign HSCLK1_LCPLLFBDIV_in[4] = (HSCLK1_LCPLLFBDIV[4] !== 1'bz) && HSCLK1_LCPLLFBDIV[4]; // rv MustConnect
  assign HSCLK1_LCPLLFBDIV_in[5] = (HSCLK1_LCPLLFBDIV[5] !== 1'bz) && HSCLK1_LCPLLFBDIV[5]; // rv MustConnect
  assign HSCLK1_LCPLLFBDIV_in[6] = (HSCLK1_LCPLLFBDIV[6] !== 1'bz) && HSCLK1_LCPLLFBDIV[6]; // rv MustConnect
  assign HSCLK1_LCPLLFBDIV_in[7] = (HSCLK1_LCPLLFBDIV[7] !== 1'bz) && HSCLK1_LCPLLFBDIV[7]; // rv MustConnect
  assign HSCLK1_LCPLLGTGREFCLK_in = HSCLK1_LCPLLGTGREFCLK;
  assign HSCLK1_LCPLLGTREFCLK0_in = HSCLK1_LCPLLGTREFCLK0;
  assign HSCLK1_LCPLLGTREFCLK1_in = HSCLK1_LCPLLGTREFCLK1;
  assign HSCLK1_LCPLLNORTHREFCLK0_in = HSCLK1_LCPLLNORTHREFCLK0;
  assign HSCLK1_LCPLLNORTHREFCLK1_in = HSCLK1_LCPLLNORTHREFCLK1;
  assign HSCLK1_LCPLLPD_in = (HSCLK1_LCPLLPD === 1'bz) || HSCLK1_LCPLLPD; // rv 1
  assign HSCLK1_LCPLLREFCLKSEL_in[0] = (HSCLK1_LCPLLREFCLKSEL[0] !== 1'bz) && HSCLK1_LCPLLREFCLKSEL[0]; // rv MustConnect
  assign HSCLK1_LCPLLREFCLKSEL_in[1] = (HSCLK1_LCPLLREFCLKSEL[1] !== 1'bz) && HSCLK1_LCPLLREFCLKSEL[1]; // rv MustConnect
  assign HSCLK1_LCPLLREFCLKSEL_in[2] = (HSCLK1_LCPLLREFCLKSEL[2] !== 1'bz) && HSCLK1_LCPLLREFCLKSEL[2]; // rv MustConnect
  assign HSCLK1_LCPLLRESETBYPASSMODE_in = (HSCLK1_LCPLLRESETBYPASSMODE === 1'bz) || HSCLK1_LCPLLRESETBYPASSMODE; // rv 1
  assign HSCLK1_LCPLLRESETMASK_in[0] = (HSCLK1_LCPLLRESETMASK[0] !== 1'bz) && HSCLK1_LCPLLRESETMASK[0]; // rv MustConnect
  assign HSCLK1_LCPLLRESETMASK_in[1] = (HSCLK1_LCPLLRESETMASK[1] !== 1'bz) && HSCLK1_LCPLLRESETMASK[1]; // rv MustConnect
  assign HSCLK1_LCPLLRESET_in = (HSCLK1_LCPLLRESET === 1'bz) || HSCLK1_LCPLLRESET; // rv 1
  assign HSCLK1_LCPLLSDMDATA_in[0] = (HSCLK1_LCPLLSDMDATA[0] !== 1'bz) && HSCLK1_LCPLLSDMDATA[0]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[10] = (HSCLK1_LCPLLSDMDATA[10] !== 1'bz) && HSCLK1_LCPLLSDMDATA[10]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[11] = (HSCLK1_LCPLLSDMDATA[11] !== 1'bz) && HSCLK1_LCPLLSDMDATA[11]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[12] = (HSCLK1_LCPLLSDMDATA[12] !== 1'bz) && HSCLK1_LCPLLSDMDATA[12]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[13] = (HSCLK1_LCPLLSDMDATA[13] !== 1'bz) && HSCLK1_LCPLLSDMDATA[13]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[14] = (HSCLK1_LCPLLSDMDATA[14] !== 1'bz) && HSCLK1_LCPLLSDMDATA[14]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[15] = (HSCLK1_LCPLLSDMDATA[15] !== 1'bz) && HSCLK1_LCPLLSDMDATA[15]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[16] = (HSCLK1_LCPLLSDMDATA[16] !== 1'bz) && HSCLK1_LCPLLSDMDATA[16]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[17] = (HSCLK1_LCPLLSDMDATA[17] !== 1'bz) && HSCLK1_LCPLLSDMDATA[17]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[18] = (HSCLK1_LCPLLSDMDATA[18] !== 1'bz) && HSCLK1_LCPLLSDMDATA[18]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[19] = (HSCLK1_LCPLLSDMDATA[19] !== 1'bz) && HSCLK1_LCPLLSDMDATA[19]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[1] = (HSCLK1_LCPLLSDMDATA[1] !== 1'bz) && HSCLK1_LCPLLSDMDATA[1]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[20] = (HSCLK1_LCPLLSDMDATA[20] !== 1'bz) && HSCLK1_LCPLLSDMDATA[20]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[21] = (HSCLK1_LCPLLSDMDATA[21] !== 1'bz) && HSCLK1_LCPLLSDMDATA[21]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[22] = (HSCLK1_LCPLLSDMDATA[22] !== 1'bz) && HSCLK1_LCPLLSDMDATA[22]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[23] = (HSCLK1_LCPLLSDMDATA[23] !== 1'bz) && HSCLK1_LCPLLSDMDATA[23]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[24] = (HSCLK1_LCPLLSDMDATA[24] !== 1'bz) && HSCLK1_LCPLLSDMDATA[24]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[25] = (HSCLK1_LCPLLSDMDATA[25] !== 1'bz) && HSCLK1_LCPLLSDMDATA[25]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[2] = (HSCLK1_LCPLLSDMDATA[2] !== 1'bz) && HSCLK1_LCPLLSDMDATA[2]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[3] = (HSCLK1_LCPLLSDMDATA[3] !== 1'bz) && HSCLK1_LCPLLSDMDATA[3]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[4] = (HSCLK1_LCPLLSDMDATA[4] !== 1'bz) && HSCLK1_LCPLLSDMDATA[4]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[5] = (HSCLK1_LCPLLSDMDATA[5] !== 1'bz) && HSCLK1_LCPLLSDMDATA[5]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[6] = (HSCLK1_LCPLLSDMDATA[6] !== 1'bz) && HSCLK1_LCPLLSDMDATA[6]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[7] = (HSCLK1_LCPLLSDMDATA[7] !== 1'bz) && HSCLK1_LCPLLSDMDATA[7]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[8] = (HSCLK1_LCPLLSDMDATA[8] !== 1'bz) && HSCLK1_LCPLLSDMDATA[8]; // rv MustConnect
  assign HSCLK1_LCPLLSDMDATA_in[9] = (HSCLK1_LCPLLSDMDATA[9] !== 1'bz) && HSCLK1_LCPLLSDMDATA[9]; // rv MustConnect
  assign HSCLK1_LCPLLSDMTOGGLE_in = (HSCLK1_LCPLLSDMTOGGLE === 1'bz) || HSCLK1_LCPLLSDMTOGGLE; // rv 1
  assign HSCLK1_LCPLLSOUTHREFCLK0_in = HSCLK1_LCPLLSOUTHREFCLK0;
  assign HSCLK1_LCPLLSOUTHREFCLK1_in = HSCLK1_LCPLLSOUTHREFCLK1;
  assign MSTRXRESET_in[0] = (MSTRXRESET[0] !== 1'bz) && MSTRXRESET[0]; // rv MustConnect
  assign MSTRXRESET_in[1] = (MSTRXRESET[1] !== 1'bz) && MSTRXRESET[1]; // rv MustConnect
  assign MSTRXRESET_in[2] = (MSTRXRESET[2] !== 1'bz) && MSTRXRESET[2]; // rv MustConnect
  assign MSTRXRESET_in[3] = (MSTRXRESET[3] !== 1'bz) && MSTRXRESET[3]; // rv MustConnect
  assign MSTTXRESET_in[0] = (MSTTXRESET[0] !== 1'bz) && MSTTXRESET[0]; // rv MustConnect
  assign MSTTXRESET_in[1] = (MSTTXRESET[1] !== 1'bz) && MSTTXRESET[1]; // rv MustConnect
  assign MSTTXRESET_in[2] = (MSTTXRESET[2] !== 1'bz) && MSTTXRESET[2]; // rv MustConnect
  assign MSTTXRESET_in[3] = (MSTTXRESET[3] !== 1'bz) && MSTTXRESET[3]; // rv MustConnect
  assign REFCLK0_CLKTESTSIG_in = REFCLK0_CLKTESTSIG;
  assign REFCLK0_GTREFCLKPD_in = REFCLK0_GTREFCLKPD;
  assign REFCLK1_CLKTESTSIG_in = REFCLK1_CLKTESTSIG;
  assign REFCLK1_GTREFCLKPD_in = REFCLK1_GTREFCLKPD;
  assign RESETDONE_NORTHIN_in = RESETDONE_NORTHIN;
  assign RESETDONE_SOUTHIN_in = RESETDONE_SOUTHIN;
  assign TRIGACKOUT0_in = (TRIGACKOUT0 === 1'bz) || TRIGACKOUT0; // rv 1
  assign TRIGIN0_in = (TRIGIN0 === 1'bz) || TRIGIN0; // rv 1
  assign UBENABLE_in = (UBENABLE === 1'bz) || UBENABLE; // rv 1
  assign UBINTR_in[0] = (UBINTR[0] !== 1'bz) && UBINTR[0]; // rv MustConnect
  assign UBINTR_in[10] = (UBINTR[10] !== 1'bz) && UBINTR[10]; // rv MustConnect
  assign UBINTR_in[11] = (UBINTR[11] !== 1'bz) && UBINTR[11]; // rv MustConnect
  assign UBINTR_in[1] = (UBINTR[1] !== 1'bz) && UBINTR[1]; // rv MustConnect
  assign UBINTR_in[2] = (UBINTR[2] !== 1'bz) && UBINTR[2]; // rv MustConnect
  assign UBINTR_in[3] = (UBINTR[3] !== 1'bz) && UBINTR[3]; // rv MustConnect
  assign UBINTR_in[4] = (UBINTR[4] !== 1'bz) && UBINTR[4]; // rv MustConnect
  assign UBINTR_in[5] = (UBINTR[5] !== 1'bz) && UBINTR[5]; // rv MustConnect
  assign UBINTR_in[6] = (UBINTR[6] !== 1'bz) && UBINTR[6]; // rv MustConnect
  assign UBINTR_in[7] = (UBINTR[7] !== 1'bz) && UBINTR[7]; // rv MustConnect
  assign UBINTR_in[8] = (UBINTR[8] !== 1'bz) && UBINTR[8]; // rv MustConnect
  assign UBINTR_in[9] = (UBINTR[9] !== 1'bz) && UBINTR[9]; // rv MustConnect
  assign UBIOLMBRST_in = (UBIOLMBRST === 1'bz) || UBIOLMBRST; // rv 1
  assign UBRXUART_in = (UBRXUART === 1'bz) || UBRXUART; // rv 1

`ifndef XIL_XECLIB
  reg attr_test;
  reg attr_err;
  
  initial begin
  trig_attr = 1'b0;
  `ifdef XIL_ATTR_TEST
    attr_test = 1'b1;
  `else
    attr_test = 1'b0;
  `endif
    attr_err = 1'b0;
    #1;
    trig_attr = ~trig_attr;
  end
`endif

`ifdef XIL_XECLIB
  assign CH0_RXOUTCLK_FREQ_BIN = CH0_RXOUTCLK_FREQ_REG * 1000;
  
  assign CH0_RXOUTCLK_REF_FREQ_BIN = CH0_RXOUTCLK_REF_FREQ_REG * 1000;
  
  assign CH0_TXOUTCLK_FREQ_BIN = CH0_TXOUTCLK_FREQ_REG * 1000;
  
  assign CH0_TXOUTCLK_REF_FREQ_BIN = CH0_TXOUTCLK_REF_FREQ_REG * 1000;
  
  assign CH1_RXOUTCLK_FREQ_BIN = CH1_RXOUTCLK_FREQ_REG * 1000;
  
  assign CH1_RXOUTCLK_REF_FREQ_BIN = CH1_RXOUTCLK_REF_FREQ_REG * 1000;
  
  assign CH1_TXOUTCLK_FREQ_BIN = CH1_TXOUTCLK_FREQ_REG * 1000;
  
  assign CH1_TXOUTCLK_REF_FREQ_BIN = CH1_TXOUTCLK_REF_FREQ_REG * 1000;
  
  assign CH2_RXOUTCLK_FREQ_BIN = CH2_RXOUTCLK_FREQ_REG * 1000;
  
  assign CH2_RXOUTCLK_REF_FREQ_BIN = CH2_RXOUTCLK_REF_FREQ_REG * 1000;
  
  assign CH2_TXOUTCLK_FREQ_BIN = CH2_TXOUTCLK_FREQ_REG * 1000;
  
  assign CH2_TXOUTCLK_REF_FREQ_BIN = CH2_TXOUTCLK_REF_FREQ_REG * 1000;
  
  assign CH3_RXOUTCLK_FREQ_BIN = CH3_RXOUTCLK_FREQ_REG * 1000;
  
  assign CH3_RXOUTCLK_REF_FREQ_BIN = CH3_RXOUTCLK_REF_FREQ_REG * 1000;
  
  assign CH3_TXOUTCLK_FREQ_BIN = CH3_TXOUTCLK_FREQ_REG * 1000;
  
  assign CH3_TXOUTCLK_REF_FREQ_BIN = CH3_TXOUTCLK_REF_FREQ_REG * 1000;
  
`else
  always @ (trig_attr) begin
  #1;
  CH0_RXOUTCLK_FREQ_BIN = CH0_RXOUTCLK_FREQ_REG * 1000;
  
  CH0_RXOUTCLK_REF_FREQ_BIN = CH0_RXOUTCLK_REF_FREQ_REG * 1000;
  
  CH0_TXOUTCLK_FREQ_BIN = CH0_TXOUTCLK_FREQ_REG * 1000;
  
  CH0_TXOUTCLK_REF_FREQ_BIN = CH0_TXOUTCLK_REF_FREQ_REG * 1000;
  
  CH1_RXOUTCLK_FREQ_BIN = CH1_RXOUTCLK_FREQ_REG * 1000;
  
  CH1_RXOUTCLK_REF_FREQ_BIN = CH1_RXOUTCLK_REF_FREQ_REG * 1000;
  
  CH1_TXOUTCLK_FREQ_BIN = CH1_TXOUTCLK_FREQ_REG * 1000;
  
  CH1_TXOUTCLK_REF_FREQ_BIN = CH1_TXOUTCLK_REF_FREQ_REG * 1000;
  
  CH2_RXOUTCLK_FREQ_BIN = CH2_RXOUTCLK_FREQ_REG * 1000;
  
  CH2_RXOUTCLK_REF_FREQ_BIN = CH2_RXOUTCLK_REF_FREQ_REG * 1000;
  
  CH2_TXOUTCLK_FREQ_BIN = CH2_TXOUTCLK_FREQ_REG * 1000;
  
  CH2_TXOUTCLK_REF_FREQ_BIN = CH2_TXOUTCLK_REF_FREQ_REG * 1000;
  
  CH3_RXOUTCLK_FREQ_BIN = CH3_RXOUTCLK_FREQ_REG * 1000;
  
  CH3_RXOUTCLK_REF_FREQ_BIN = CH3_RXOUTCLK_REF_FREQ_REG * 1000;
  
  CH3_TXOUTCLK_FREQ_BIN = CH3_TXOUTCLK_FREQ_REG * 1000;
  
  CH3_TXOUTCLK_REF_FREQ_BIN = CH3_TXOUTCLK_REF_FREQ_REG * 1000;
  
  end
`endif

`ifndef XIL_XECLIB
  always @ (trig_attr) begin
    #1;
    if ((attr_test == 1'b1) ||
        (CH0_RXOUTCLK_FREQ_REG < 0.0000001 || CH0_RXOUTCLK_FREQ_REG > 1000.0000000)) begin
      $display("Error: [Unisim %s-141] CH0_RXOUTCLK_FREQ attribute is set to %f.  Legal values for this attribute are 0.0000001 to 1000.0000000. Instance: %m", MODULE_NAME, CH0_RXOUTCLK_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH0_RXOUTCLK_REF_FREQ_REG < 60.0000000 || CH0_RXOUTCLK_REF_FREQ_REG > 820.0000000)) begin
      $display("Error: [Unisim %s-142] CH0_RXOUTCLK_REF_FREQ attribute is set to %f.  Legal values for this attribute are 60.0000000 to 820.0000000. Instance: %m", MODULE_NAME, CH0_RXOUTCLK_REF_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTGREFCLK") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK0") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK1") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK0") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK1") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK0") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK1") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTGREFCLK") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK0") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK1") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK0") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK1") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK0") &&
         (CH0_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK1"))) begin
      $display("Error: [Unisim %s-143] CH0_RXOUTCLK_REF_SOURCE attribute is set to %s.  Legal values for this attribute are HSCLK0_LCPLLGTGREFCLK, HSCLK0_LCPLLGTREFCLK0, HSCLK0_LCPLLGTREFCLK1, HSCLK0_LCPLLNORTHREFCLK0, HSCLK0_LCPLLNORTHREFCLK1, HSCLK0_LCPLLSOUTHREFCLK0, HSCLK0_LCPLLSOUTHREFCLK1, HSCLK1_LCPLLGTGREFCLK, HSCLK1_LCPLLGTREFCLK0, HSCLK1_LCPLLGTREFCLK1, HSCLK1_LCPLLNORTHREFCLK0, HSCLK1_LCPLLNORTHREFCLK1, HSCLK1_LCPLLSOUTHREFCLK0 or HSCLK1_LCPLLSOUTHREFCLK1. Instance: %m", MODULE_NAME, CH0_RXOUTCLK_REF_SOURCE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH0_SIM_MODE_REG != "FAST") &&
         (CH0_SIM_MODE_REG != "LEGACY"))) begin
      $display("Error: [Unisim %s-227] CH0_SIM_MODE attribute is set to %s.  Legal values for this attribute are FAST or LEGACY. Instance: %m", MODULE_NAME, CH0_SIM_MODE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH0_SIM_RECEIVER_DETECT_PASS_REG != "TRUE") &&
         (CH0_SIM_RECEIVER_DETECT_PASS_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-228] CH0_SIM_RECEIVER_DETECT_PASS attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, CH0_SIM_RECEIVER_DETECT_PASS_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH0_SIM_RESET_SPEEDUP_REG != "TRUE") &&
         (CH0_SIM_RESET_SPEEDUP_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-229] CH0_SIM_RESET_SPEEDUP attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, CH0_SIM_RESET_SPEEDUP_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH0_TXOUTCLK_FREQ_REG < 0.0000001 || CH0_TXOUTCLK_FREQ_REG > 1000.0000000)) begin
      $display("Error: [Unisim %s-230] CH0_TXOUTCLK_FREQ attribute is set to %f.  Legal values for this attribute are 0.0000001 to 1000.0000000. Instance: %m", MODULE_NAME, CH0_TXOUTCLK_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH0_TXOUTCLK_REF_FREQ_REG < 60.0000000 || CH0_TXOUTCLK_REF_FREQ_REG > 820.0000000)) begin
      $display("Error: [Unisim %s-231] CH0_TXOUTCLK_REF_FREQ attribute is set to %f.  Legal values for this attribute are 60.0000000 to 820.0000000. Instance: %m", MODULE_NAME, CH0_TXOUTCLK_REF_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTGREFCLK") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK0") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK1") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK0") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK1") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK0") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK1") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTGREFCLK") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK0") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK1") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK0") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK1") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK0") &&
         (CH0_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK1"))) begin
      $display("Error: [Unisim %s-232] CH0_TXOUTCLK_REF_SOURCE attribute is set to %s.  Legal values for this attribute are HSCLK0_LCPLLGTGREFCLK, HSCLK0_LCPLLGTREFCLK0, HSCLK0_LCPLLGTREFCLK1, HSCLK0_LCPLLNORTHREFCLK0, HSCLK0_LCPLLNORTHREFCLK1, HSCLK0_LCPLLSOUTHREFCLK0, HSCLK0_LCPLLSOUTHREFCLK1, HSCLK1_LCPLLGTGREFCLK, HSCLK1_LCPLLGTREFCLK0, HSCLK1_LCPLLGTREFCLK1, HSCLK1_LCPLLNORTHREFCLK0, HSCLK1_LCPLLNORTHREFCLK1, HSCLK1_LCPLLSOUTHREFCLK0 or HSCLK1_LCPLLSOUTHREFCLK1. Instance: %m", MODULE_NAME, CH0_TXOUTCLK_REF_SOURCE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH1_RXOUTCLK_FREQ_REG < 0.0000001 || CH1_RXOUTCLK_FREQ_REG > 1000.0000000)) begin
      $display("Error: [Unisim %s-285] CH1_RXOUTCLK_FREQ attribute is set to %f.  Legal values for this attribute are 0.0000001 to 1000.0000000. Instance: %m", MODULE_NAME, CH1_RXOUTCLK_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH1_RXOUTCLK_REF_FREQ_REG < 60.0000000 || CH1_RXOUTCLK_REF_FREQ_REG > 820.0000000)) begin
      $display("Error: [Unisim %s-286] CH1_RXOUTCLK_REF_FREQ attribute is set to %f.  Legal values for this attribute are 60.0000000 to 820.0000000. Instance: %m", MODULE_NAME, CH1_RXOUTCLK_REF_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTGREFCLK") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK0") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK1") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK0") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK1") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK0") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK1") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTGREFCLK") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK0") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK1") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK0") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK1") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK0") &&
         (CH1_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK1"))) begin
      $display("Error: [Unisim %s-287] CH1_RXOUTCLK_REF_SOURCE attribute is set to %s.  Legal values for this attribute are HSCLK0_LCPLLGTGREFCLK, HSCLK0_LCPLLGTREFCLK0, HSCLK0_LCPLLGTREFCLK1, HSCLK0_LCPLLNORTHREFCLK0, HSCLK0_LCPLLNORTHREFCLK1, HSCLK0_LCPLLSOUTHREFCLK0, HSCLK0_LCPLLSOUTHREFCLK1, HSCLK1_LCPLLGTGREFCLK, HSCLK1_LCPLLGTREFCLK0, HSCLK1_LCPLLGTREFCLK1, HSCLK1_LCPLLNORTHREFCLK0, HSCLK1_LCPLLNORTHREFCLK1, HSCLK1_LCPLLSOUTHREFCLK0 or HSCLK1_LCPLLSOUTHREFCLK1. Instance: %m", MODULE_NAME, CH1_RXOUTCLK_REF_SOURCE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH1_SIM_MODE_REG != "FAST") &&
         (CH1_SIM_MODE_REG != "LEGACY"))) begin
      $display("Error: [Unisim %s-371] CH1_SIM_MODE attribute is set to %s.  Legal values for this attribute are FAST or LEGACY. Instance: %m", MODULE_NAME, CH1_SIM_MODE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH1_SIM_RECEIVER_DETECT_PASS_REG != "TRUE") &&
         (CH1_SIM_RECEIVER_DETECT_PASS_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-372] CH1_SIM_RECEIVER_DETECT_PASS attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, CH1_SIM_RECEIVER_DETECT_PASS_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH1_SIM_RESET_SPEEDUP_REG != "TRUE") &&
         (CH1_SIM_RESET_SPEEDUP_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-373] CH1_SIM_RESET_SPEEDUP attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, CH1_SIM_RESET_SPEEDUP_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH1_TXOUTCLK_FREQ_REG < 0.0000001 || CH1_TXOUTCLK_FREQ_REG > 1000.0000000)) begin
      $display("Error: [Unisim %s-374] CH1_TXOUTCLK_FREQ attribute is set to %f.  Legal values for this attribute are 0.0000001 to 1000.0000000. Instance: %m", MODULE_NAME, CH1_TXOUTCLK_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH1_TXOUTCLK_REF_FREQ_REG < 60.0000000 || CH1_TXOUTCLK_REF_FREQ_REG > 820.0000000)) begin
      $display("Error: [Unisim %s-375] CH1_TXOUTCLK_REF_FREQ attribute is set to %f.  Legal values for this attribute are 60.0000000 to 820.0000000. Instance: %m", MODULE_NAME, CH1_TXOUTCLK_REF_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTGREFCLK") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK0") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK1") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK0") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK1") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK0") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK1") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTGREFCLK") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK0") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK1") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK0") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK1") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK0") &&
         (CH1_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK1"))) begin
      $display("Error: [Unisim %s-376] CH1_TXOUTCLK_REF_SOURCE attribute is set to %s.  Legal values for this attribute are HSCLK0_LCPLLGTGREFCLK, HSCLK0_LCPLLGTREFCLK0, HSCLK0_LCPLLGTREFCLK1, HSCLK0_LCPLLNORTHREFCLK0, HSCLK0_LCPLLNORTHREFCLK1, HSCLK0_LCPLLSOUTHREFCLK0, HSCLK0_LCPLLSOUTHREFCLK1, HSCLK1_LCPLLGTGREFCLK, HSCLK1_LCPLLGTREFCLK0, HSCLK1_LCPLLGTREFCLK1, HSCLK1_LCPLLNORTHREFCLK0, HSCLK1_LCPLLNORTHREFCLK1, HSCLK1_LCPLLSOUTHREFCLK0 or HSCLK1_LCPLLSOUTHREFCLK1. Instance: %m", MODULE_NAME, CH1_TXOUTCLK_REF_SOURCE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH2_RXOUTCLK_FREQ_REG < 0.0000001 || CH2_RXOUTCLK_FREQ_REG > 1000.0000000)) begin
      $display("Error: [Unisim %s-429] CH2_RXOUTCLK_FREQ attribute is set to %f.  Legal values for this attribute are 0.0000001 to 1000.0000000. Instance: %m", MODULE_NAME, CH2_RXOUTCLK_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH2_RXOUTCLK_REF_FREQ_REG < 60.0000000 || CH2_RXOUTCLK_REF_FREQ_REG > 820.0000000)) begin
      $display("Error: [Unisim %s-430] CH2_RXOUTCLK_REF_FREQ attribute is set to %f.  Legal values for this attribute are 60.0000000 to 820.0000000. Instance: %m", MODULE_NAME, CH2_RXOUTCLK_REF_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTGREFCLK") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK0") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK1") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK0") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK1") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK0") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK1") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTGREFCLK") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK0") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK1") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK0") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK1") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK0") &&
         (CH2_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK1"))) begin
      $display("Error: [Unisim %s-431] CH2_RXOUTCLK_REF_SOURCE attribute is set to %s.  Legal values for this attribute are HSCLK0_LCPLLGTGREFCLK, HSCLK0_LCPLLGTREFCLK0, HSCLK0_LCPLLGTREFCLK1, HSCLK0_LCPLLNORTHREFCLK0, HSCLK0_LCPLLNORTHREFCLK1, HSCLK0_LCPLLSOUTHREFCLK0, HSCLK0_LCPLLSOUTHREFCLK1, HSCLK1_LCPLLGTGREFCLK, HSCLK1_LCPLLGTREFCLK0, HSCLK1_LCPLLGTREFCLK1, HSCLK1_LCPLLNORTHREFCLK0, HSCLK1_LCPLLNORTHREFCLK1, HSCLK1_LCPLLSOUTHREFCLK0 or HSCLK1_LCPLLSOUTHREFCLK1. Instance: %m", MODULE_NAME, CH2_RXOUTCLK_REF_SOURCE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH2_SIM_MODE_REG != "FAST") &&
         (CH2_SIM_MODE_REG != "LEGACY"))) begin
      $display("Error: [Unisim %s-515] CH2_SIM_MODE attribute is set to %s.  Legal values for this attribute are FAST or LEGACY. Instance: %m", MODULE_NAME, CH2_SIM_MODE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH2_SIM_RECEIVER_DETECT_PASS_REG != "TRUE") &&
         (CH2_SIM_RECEIVER_DETECT_PASS_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-516] CH2_SIM_RECEIVER_DETECT_PASS attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, CH2_SIM_RECEIVER_DETECT_PASS_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH2_SIM_RESET_SPEEDUP_REG != "TRUE") &&
         (CH2_SIM_RESET_SPEEDUP_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-517] CH2_SIM_RESET_SPEEDUP attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, CH2_SIM_RESET_SPEEDUP_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH2_TXOUTCLK_FREQ_REG < 0.0000001 || CH2_TXOUTCLK_FREQ_REG > 1000.0000000)) begin
      $display("Error: [Unisim %s-518] CH2_TXOUTCLK_FREQ attribute is set to %f.  Legal values for this attribute are 0.0000001 to 1000.0000000. Instance: %m", MODULE_NAME, CH2_TXOUTCLK_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH2_TXOUTCLK_REF_FREQ_REG < 60.0000000 || CH2_TXOUTCLK_REF_FREQ_REG > 820.0000000)) begin
      $display("Error: [Unisim %s-519] CH2_TXOUTCLK_REF_FREQ attribute is set to %f.  Legal values for this attribute are 60.0000000 to 820.0000000. Instance: %m", MODULE_NAME, CH2_TXOUTCLK_REF_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTGREFCLK") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK0") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK1") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK0") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK1") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK0") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK1") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTGREFCLK") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK0") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK1") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK0") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK1") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK0") &&
         (CH2_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK1"))) begin
      $display("Error: [Unisim %s-520] CH2_TXOUTCLK_REF_SOURCE attribute is set to %s.  Legal values for this attribute are HSCLK0_LCPLLGTGREFCLK, HSCLK0_LCPLLGTREFCLK0, HSCLK0_LCPLLGTREFCLK1, HSCLK0_LCPLLNORTHREFCLK0, HSCLK0_LCPLLNORTHREFCLK1, HSCLK0_LCPLLSOUTHREFCLK0, HSCLK0_LCPLLSOUTHREFCLK1, HSCLK1_LCPLLGTGREFCLK, HSCLK1_LCPLLGTREFCLK0, HSCLK1_LCPLLGTREFCLK1, HSCLK1_LCPLLNORTHREFCLK0, HSCLK1_LCPLLNORTHREFCLK1, HSCLK1_LCPLLSOUTHREFCLK0 or HSCLK1_LCPLLSOUTHREFCLK1. Instance: %m", MODULE_NAME, CH2_TXOUTCLK_REF_SOURCE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH3_RXOUTCLK_FREQ_REG < 0.0000001 || CH3_RXOUTCLK_FREQ_REG > 1000.0000000)) begin
      $display("Error: [Unisim %s-573] CH3_RXOUTCLK_FREQ attribute is set to %f.  Legal values for this attribute are 0.0000001 to 1000.0000000. Instance: %m", MODULE_NAME, CH3_RXOUTCLK_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH3_RXOUTCLK_REF_FREQ_REG < 60.0000000 || CH3_RXOUTCLK_REF_FREQ_REG > 820.0000000)) begin
      $display("Error: [Unisim %s-574] CH3_RXOUTCLK_REF_FREQ attribute is set to %f.  Legal values for this attribute are 60.0000000 to 820.0000000. Instance: %m", MODULE_NAME, CH3_RXOUTCLK_REF_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTGREFCLK") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK0") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK1") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK0") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK1") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK0") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK1") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTGREFCLK") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK0") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK1") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK0") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK1") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK0") &&
         (CH3_RXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK1"))) begin
      $display("Error: [Unisim %s-575] CH3_RXOUTCLK_REF_SOURCE attribute is set to %s.  Legal values for this attribute are HSCLK0_LCPLLGTGREFCLK, HSCLK0_LCPLLGTREFCLK0, HSCLK0_LCPLLGTREFCLK1, HSCLK0_LCPLLNORTHREFCLK0, HSCLK0_LCPLLNORTHREFCLK1, HSCLK0_LCPLLSOUTHREFCLK0, HSCLK0_LCPLLSOUTHREFCLK1, HSCLK1_LCPLLGTGREFCLK, HSCLK1_LCPLLGTREFCLK0, HSCLK1_LCPLLGTREFCLK1, HSCLK1_LCPLLNORTHREFCLK0, HSCLK1_LCPLLNORTHREFCLK1, HSCLK1_LCPLLSOUTHREFCLK0 or HSCLK1_LCPLLSOUTHREFCLK1. Instance: %m", MODULE_NAME, CH3_RXOUTCLK_REF_SOURCE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH3_SIM_MODE_REG != "FAST") &&
         (CH3_SIM_MODE_REG != "LEGACY"))) begin
      $display("Error: [Unisim %s-659] CH3_SIM_MODE attribute is set to %s.  Legal values for this attribute are FAST or LEGACY. Instance: %m", MODULE_NAME, CH3_SIM_MODE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH3_SIM_RECEIVER_DETECT_PASS_REG != "TRUE") &&
         (CH3_SIM_RECEIVER_DETECT_PASS_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-660] CH3_SIM_RECEIVER_DETECT_PASS attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, CH3_SIM_RECEIVER_DETECT_PASS_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH3_SIM_RESET_SPEEDUP_REG != "TRUE") &&
         (CH3_SIM_RESET_SPEEDUP_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-661] CH3_SIM_RESET_SPEEDUP attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, CH3_SIM_RESET_SPEEDUP_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH3_TXOUTCLK_FREQ_REG < 0.0000001 || CH3_TXOUTCLK_FREQ_REG > 1000.0000000)) begin
      $display("Error: [Unisim %s-662] CH3_TXOUTCLK_FREQ attribute is set to %f.  Legal values for this attribute are 0.0000001 to 1000.0000000. Instance: %m", MODULE_NAME, CH3_TXOUTCLK_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (CH3_TXOUTCLK_REF_FREQ_REG < 60.0000000 || CH3_TXOUTCLK_REF_FREQ_REG > 820.0000000)) begin
      $display("Error: [Unisim %s-663] CH3_TXOUTCLK_REF_FREQ attribute is set to %f.  Legal values for this attribute are 60.0000000 to 820.0000000. Instance: %m", MODULE_NAME, CH3_TXOUTCLK_REF_FREQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTGREFCLK") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK0") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLGTREFCLK1") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK0") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLNORTHREFCLK1") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK0") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK0_LCPLLSOUTHREFCLK1") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTGREFCLK") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK0") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLGTREFCLK1") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK0") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLNORTHREFCLK1") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK0") &&
         (CH3_TXOUTCLK_REF_SOURCE_REG != "HSCLK1_LCPLLSOUTHREFCLK1"))) begin
      $display("Error: [Unisim %s-664] CH3_TXOUTCLK_REF_SOURCE attribute is set to %s.  Legal values for this attribute are HSCLK0_LCPLLGTGREFCLK, HSCLK0_LCPLLGTREFCLK0, HSCLK0_LCPLLGTREFCLK1, HSCLK0_LCPLLNORTHREFCLK0, HSCLK0_LCPLLNORTHREFCLK1, HSCLK0_LCPLLSOUTHREFCLK0, HSCLK0_LCPLLSOUTHREFCLK1, HSCLK1_LCPLLGTGREFCLK, HSCLK1_LCPLLGTREFCLK0, HSCLK1_LCPLLGTREFCLK1, HSCLK1_LCPLLNORTHREFCLK0, HSCLK1_LCPLLNORTHREFCLK1, HSCLK1_LCPLLSOUTHREFCLK0 or HSCLK1_LCPLLSOUTHREFCLK1. Instance: %m", MODULE_NAME, CH3_TXOUTCLK_REF_SOURCE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((HS0_LCPLL_IPS_REFCLK_SEL_REG != 0) &&
         (HS0_LCPLL_IPS_REFCLK_SEL_REG != 1) &&
         (HS0_LCPLL_IPS_REFCLK_SEL_REG != 2) &&
         (HS0_LCPLL_IPS_REFCLK_SEL_REG != 3) &&
         (HS0_LCPLL_IPS_REFCLK_SEL_REG != 4) &&
         (HS0_LCPLL_IPS_REFCLK_SEL_REG != 5) &&
         (HS0_LCPLL_IPS_REFCLK_SEL_REG != 6) &&
         (HS0_LCPLL_IPS_REFCLK_SEL_REG != 7))) begin
      $display("Error: [Unisim %s-687] HS0_LCPLL_IPS_REFCLK_SEL attribute is set to %d.  Legal values for this attribute are 0, 1, 2, 3, 4, 5, 6 or 7. Instance: %m", MODULE_NAME, HS0_LCPLL_IPS_REFCLK_SEL_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((HS1_LCPLL_IPS_REFCLK_SEL_REG != 0) &&
         (HS1_LCPLL_IPS_REFCLK_SEL_REG != 1) &&
         (HS1_LCPLL_IPS_REFCLK_SEL_REG != 2) &&
         (HS1_LCPLL_IPS_REFCLK_SEL_REG != 3) &&
         (HS1_LCPLL_IPS_REFCLK_SEL_REG != 4) &&
         (HS1_LCPLL_IPS_REFCLK_SEL_REG != 5) &&
         (HS1_LCPLL_IPS_REFCLK_SEL_REG != 6) &&
         (HS1_LCPLL_IPS_REFCLK_SEL_REG != 7))) begin
      $display("Error: [Unisim %s-697] HS1_LCPLL_IPS_REFCLK_SEL attribute is set to %d.  Legal values for this attribute are 0, 1, 2, 3, 4, 5, 6 or 7. Instance: %m", MODULE_NAME, HS1_LCPLL_IPS_REFCLK_SEL_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((HSCLK0_RXRECCLK_SEL_REG != 0) &&
         (HSCLK0_RXRECCLK_SEL_REG != 1) &&
         (HSCLK0_RXRECCLK_SEL_REG != 2) &&
         (HSCLK0_RXRECCLK_SEL_REG != 3))) begin
      $display("Error: [Unisim %s-714] HSCLK0_RXRECCLK_SEL attribute is set to %d.  Legal values for this attribute are 0, 1, 2 or 3. Instance: %m", MODULE_NAME, HSCLK0_RXRECCLK_SEL_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((HSCLK1_RXRECCLK_SEL_REG != 0) &&
         (HSCLK1_RXRECCLK_SEL_REG != 1) &&
         (HSCLK1_RXRECCLK_SEL_REG != 2) &&
         (HSCLK1_RXRECCLK_SEL_REG != 3))) begin
      $display("Error: [Unisim %s-723] HSCLK1_RXRECCLK_SEL attribute is set to %d.  Legal values for this attribute are 0, 1, 2 or 3. Instance: %m", MODULE_NAME, HSCLK1_RXRECCLK_SEL_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((QUAD_SIM_MODE_REG != "FAST") &&
         (QUAD_SIM_MODE_REG != "LEGACY"))) begin
      $display("Error: [Unisim %s-729] QUAD_SIM_MODE attribute is set to %s.  Legal values for this attribute are FAST or LEGACY. Instance: %m", MODULE_NAME, QUAD_SIM_MODE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((QUAD_SIM_RESET_SPEEDUP_REG != "TRUE") &&
         (QUAD_SIM_RESET_SPEEDUP_REG != "FALSE"))) begin
      $display("Error: [Unisim %s-730] QUAD_SIM_RESET_SPEEDUP attribute is set to %s.  Legal values for this attribute are TRUE or FALSE. Instance: %m", MODULE_NAME, QUAD_SIM_RESET_SPEEDUP_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((SIM_VERSION_REG != 1) &&
         (SIM_VERSION_REG != 2) &&
         (SIM_VERSION_REG != 3) &&
         (SIM_VERSION_REG != 4))) begin
      $display("Error: [Unisim %s-744] SIM_VERSION attribute is set to %d.  Legal values for this attribute are 1, 2, 3 or 4. Instance: %m", MODULE_NAME, SIM_VERSION_REG);
      attr_err = 1'b1;
    end
    
    if (attr_err == 1'b1) #1 $finish;
  end
`endif


assign CH0_SCANCLKB_in = 1'b1; // tie off
assign CH1_SCANCLKB_in = 1'b1; // tie off
assign CH2_SCANCLKB_in = 1'b1; // tie off
assign CH3_SCANCLKB_in = 1'b1; // tie off
assign SCANCLKB_in = 1'b1; // tie off

assign CH0_BSR_SERIAL_in = 1'b1; // tie off
assign CH0_CSSDSTOPCLKB_in = 1'b1; // tie off
assign CH0_EDTUPDATEB_in = 1'b1; // tie off
assign CH0_SCANCNTRLIN_in = 1'b1; // tie off
assign CH0_SCANENB_in = 1'b1; // tie off
assign CH0_SCANIN_in = 4'b1111; // tie off
assign CH0_SCANRSTB_in = 1'b1; // tie off
assign CH1_BSR_SERIAL_in = 1'b1; // tie off
assign CH1_CSSDSTOPCLKB_in = 1'b1; // tie off
assign CH1_EDTUPDATEB_in = 1'b1; // tie off
assign CH1_SCANCNTRLIN_in = 1'b1; // tie off
assign CH1_SCANENB_in = 1'b1; // tie off
assign CH1_SCANIN_in = 4'b1111; // tie off
assign CH1_SCANRSTB_in = 1'b1; // tie off
assign CH2_BSR_SERIAL_in = 1'b1; // tie off
assign CH2_CSSDSTOPCLKB_in = 1'b1; // tie off
assign CH2_EDTUPDATEB_in = 1'b1; // tie off
assign CH2_SCANCNTRLIN_in = 1'b1; // tie off
assign CH2_SCANENB_in = 1'b1; // tie off
assign CH2_SCANIN_in = 4'b1111; // tie off
assign CH2_SCANRSTB_in = 1'b1; // tie off
assign CH3_BSR_SERIAL_in = 1'b1; // tie off
assign CH3_CSSDSTOPCLKB_in = 1'b1; // tie off
assign CH3_EDTUPDATEB_in = 1'b1; // tie off
assign CH3_SCANCNTRLIN_in = 1'b1; // tie off
assign CH3_SCANENB_in = 1'b1; // tie off
assign CH3_SCANIN_in = 4'b1111; // tie off
assign CH3_SCANRSTB_in = 1'b1; // tie off
assign CSSDSTOPCLKB_in = 1'b1; // tie off
assign EDTUPDATEB_in = 1'b1; // tie off
assign SCANCNTRLIN_in = 1'b1; // tie off
assign SCANENB_in = 1'b1; // tie off
assign SCANIN_in = 4'b1111; // tie off
assign SCANRSTB_in = 1'b1; // tie off

initial begin
  if ($test$plusargs ("GEN_BYPASS")) begin
    $display("xilinx_hier_bypass_ports:%m XIL_PORT_SPEC:in:integer:CH0_GTMRXN:CH0_GTMRXN_integer in:integer:CH0_GTMRXP:CH0_GTMRXP_integer in:integer:CH1_GTMRXN:CH1_GTMRXN_integer in:integer:CH1_GTMRXP:CH1_GTMRXP_integer in:integer:CH2_GTMRXP:CH2_GTMRXP_integer in:integer:CH2_GTMRXN:CH2_GTMRXN_integer in:integer:CH3_GTMRXP:CH3_GTMRXP_integer in:integer:CH3_GTMRXN:CH3_GTMRXN_integer out:integer:CH0_GTMTXN:CH0_GTMTXN_integer out:integer:CH0_GTMTXP:CH0_GTMTXP_integer out:integer:CH1_GTMTXN:CH1_GTMTXN_integer out:integer:CH1_GTMTXP:CH1_GTMTXP_integer out:integer:CH2_GTMTXN:CH2_GTMTXN_integer out:integer:CH2_GTMTXP:CH2_GTMTXP_integer out:integer:CH3_GTMTXN:CH3_GTMTXN_integer out:integer:CH3_GTMTXP:CH3_GTMTXP_integer");
    #0 $finish;
  end
end

  SIP_GTME5_QUAD #(
    .MEMORY_INIT_FILE (MEMORY_INIT_FILE),
    .STAT_NPI_REG_LIST (STAT_NPI_REG_LIST)
) SIP_GTME5_QUAD_INST (
    .A_CFG0 (A_CFG0_REG),
    .A_CFG1 (A_CFG1_REG),
    .A_CFG2 (A_CFG2_REG),
    .A_CFG3 (A_CFG3_REG),
    .A_CFG4 (A_CFG4_REG),
    .A_CFG5 (A_CFG5_REG),
    .CH0_CHCLK_CFG0 (CH0_CHCLK_CFG0_REG),
    .CH0_CHCLK_CFG1 (CH0_CHCLK_CFG1_REG),
    .CH0_CHCLK_CFG2 (CH0_CHCLK_CFG2_REG),
    .CH0_CHCLK_CFG3 (CH0_CHCLK_CFG3_REG),
    .CH0_CHCLK_CFG4 (CH0_CHCLK_CFG4_REG),
    .CH0_CHCLK_CFG5 (CH0_CHCLK_CFG5_REG),
    .CH0_EYESCAN_CFG0 (CH0_EYESCAN_CFG0_REG),
    .CH0_EYESCAN_CFG1 (CH0_EYESCAN_CFG1_REG),
    .CH0_EYESCAN_CFG2 (CH0_EYESCAN_CFG2_REG),
    .CH0_EYESCAN_CFG3 (CH0_EYESCAN_CFG3_REG),
    .CH0_EYESCAN_CFG4 (CH0_EYESCAN_CFG4_REG),
    .CH0_EYESCAN_CFG5 (CH0_EYESCAN_CFG5_REG),
    .CH0_EYESCAN_CFG6 (CH0_EYESCAN_CFG6_REG),
    .CH0_EYESCAN_CFG7 (CH0_EYESCAN_CFG7_REG),
    .CH0_EYESCAN_CFG8 (CH0_EYESCAN_CFG8_REG),
    .CH0_FABRIC_INTF_CFG0 (CH0_FABRIC_INTF_CFG0_REG),
    .CH0_FABRIC_INTF_CFG1 (CH0_FABRIC_INTF_CFG1_REG),
    .CH0_FABRIC_INTF_CFG2 (CH0_FABRIC_INTF_CFG2_REG),
    .CH0_FABRIC_INTF_CFG3 (CH0_FABRIC_INTF_CFG3_REG),
    .CH0_FABRIC_INTF_CFG4 (CH0_FABRIC_INTF_CFG4_REG),
    .CH0_FABRIC_INTF_CFG5 (CH0_FABRIC_INTF_CFG5_REG),
    .CH0_INSTANTIATED (CH0_INSTANTIATED_REG),
    .CH0_MONITOR_CFG0 (CH0_MONITOR_CFG0_REG),
    .CH0_PMA_MISC_CFG0 (CH0_PMA_MISC_CFG0_REG),
    .CH0_RESET_BYP_HDSHK_CFG (CH0_RESET_BYP_HDSHK_CFG_REG),
    .CH0_RESET_CFG (CH0_RESET_CFG_REG),
    .CH0_RESET_LOOPER_ID_CFG (CH0_RESET_LOOPER_ID_CFG_REG),
    .CH0_RESET_LOOP_ID_CFG0 (CH0_RESET_LOOP_ID_CFG0_REG),
    .CH0_RESET_LOOP_ID_CFG1 (CH0_RESET_LOOP_ID_CFG1_REG),
    .CH0_RESET_LOOP_ID_CFG2 (CH0_RESET_LOOP_ID_CFG2_REG),
    .CH0_RESET_TIME_CFG0 (CH0_RESET_TIME_CFG0_REG),
    .CH0_RESET_TIME_CFG1 (CH0_RESET_TIME_CFG1_REG),
    .CH0_RESET_TIME_CFG2 (CH0_RESET_TIME_CFG2_REG),
    .CH0_RESET_TIME_CFG3 (CH0_RESET_TIME_CFG3_REG),
    .CH0_RXOUTCLK_FREQ (CH0_RXOUTCLK_FREQ_BIN),
    .CH0_RXOUTCLK_REF_FREQ (CH0_RXOUTCLK_REF_FREQ_BIN),
    .CH0_RXOUTCLK_REF_SOURCE (CH0_RXOUTCLK_REF_SOURCE_REG),
    .CH0_RX_APT_CFG0 (CH0_RX_APT_CFG0_REG),
    .CH0_RX_APT_CFG1 (CH0_RX_APT_CFG1_REG),
    .CH0_RX_APT_CFG10 (CH0_RX_APT_CFG10_REG),
    .CH0_RX_APT_CFG11 (CH0_RX_APT_CFG11_REG),
    .CH0_RX_APT_CFG12 (CH0_RX_APT_CFG12_REG),
    .CH0_RX_APT_CFG13 (CH0_RX_APT_CFG13_REG),
    .CH0_RX_APT_CFG14 (CH0_RX_APT_CFG14_REG),
    .CH0_RX_APT_CFG15 (CH0_RX_APT_CFG15_REG),
    .CH0_RX_APT_CFG16 (CH0_RX_APT_CFG16_REG),
    .CH0_RX_APT_CFG17 (CH0_RX_APT_CFG17_REG),
    .CH0_RX_APT_CFG18 (CH0_RX_APT_CFG18_REG),
    .CH0_RX_APT_CFG19 (CH0_RX_APT_CFG19_REG),
    .CH0_RX_APT_CFG2 (CH0_RX_APT_CFG2_REG),
    .CH0_RX_APT_CFG20 (CH0_RX_APT_CFG20_REG),
    .CH0_RX_APT_CFG21 (CH0_RX_APT_CFG21_REG),
    .CH0_RX_APT_CFG22 (CH0_RX_APT_CFG22_REG),
    .CH0_RX_APT_CFG23 (CH0_RX_APT_CFG23_REG),
    .CH0_RX_APT_CFG24 (CH0_RX_APT_CFG24_REG),
    .CH0_RX_APT_CFG25 (CH0_RX_APT_CFG25_REG),
    .CH0_RX_APT_CFG26 (CH0_RX_APT_CFG26_REG),
    .CH0_RX_APT_CFG27 (CH0_RX_APT_CFG27_REG),
    .CH0_RX_APT_CFG28 (CH0_RX_APT_CFG28_REG),
    .CH0_RX_APT_CFG29 (CH0_RX_APT_CFG29_REG),
    .CH0_RX_APT_CFG3 (CH0_RX_APT_CFG3_REG),
    .CH0_RX_APT_CFG30 (CH0_RX_APT_CFG30_REG),
    .CH0_RX_APT_CFG31 (CH0_RX_APT_CFG31_REG),
    .CH0_RX_APT_CFG32 (CH0_RX_APT_CFG32_REG),
    .CH0_RX_APT_CFG33 (CH0_RX_APT_CFG33_REG),
    .CH0_RX_APT_CFG34 (CH0_RX_APT_CFG34_REG),
    .CH0_RX_APT_CFG35 (CH0_RX_APT_CFG35_REG),
    .CH0_RX_APT_CFG36 (CH0_RX_APT_CFG36_REG),
    .CH0_RX_APT_CFG37 (CH0_RX_APT_CFG37_REG),
    .CH0_RX_APT_CFG38 (CH0_RX_APT_CFG38_REG),
    .CH0_RX_APT_CFG39 (CH0_RX_APT_CFG39_REG),
    .CH0_RX_APT_CFG4 (CH0_RX_APT_CFG4_REG),
    .CH0_RX_APT_CFG40 (CH0_RX_APT_CFG40_REG),
    .CH0_RX_APT_CFG41 (CH0_RX_APT_CFG41_REG),
    .CH0_RX_APT_CFG42 (CH0_RX_APT_CFG42_REG),
    .CH0_RX_APT_CFG43 (CH0_RX_APT_CFG43_REG),
    .CH0_RX_APT_CFG44 (CH0_RX_APT_CFG44_REG),
    .CH0_RX_APT_CFG45 (CH0_RX_APT_CFG45_REG),
    .CH0_RX_APT_CFG46 (CH0_RX_APT_CFG46_REG),
    .CH0_RX_APT_CFG47 (CH0_RX_APT_CFG47_REG),
    .CH0_RX_APT_CFG48 (CH0_RX_APT_CFG48_REG),
    .CH0_RX_APT_CFG49 (CH0_RX_APT_CFG49_REG),
    .CH0_RX_APT_CFG5 (CH0_RX_APT_CFG5_REG),
    .CH0_RX_APT_CFG50 (CH0_RX_APT_CFG50_REG),
    .CH0_RX_APT_CFG51 (CH0_RX_APT_CFG51_REG),
    .CH0_RX_APT_CFG52 (CH0_RX_APT_CFG52_REG),
    .CH0_RX_APT_CFG53 (CH0_RX_APT_CFG53_REG),
    .CH0_RX_APT_CFG54 (CH0_RX_APT_CFG54_REG),
    .CH0_RX_APT_CFG55 (CH0_RX_APT_CFG55_REG),
    .CH0_RX_APT_CFG56 (CH0_RX_APT_CFG56_REG),
    .CH0_RX_APT_CFG57 (CH0_RX_APT_CFG57_REG),
    .CH0_RX_APT_CFG58 (CH0_RX_APT_CFG58_REG),
    .CH0_RX_APT_CFG6 (CH0_RX_APT_CFG6_REG),
    .CH0_RX_APT_CFG7 (CH0_RX_APT_CFG7_REG),
    .CH0_RX_APT_CFG8 (CH0_RX_APT_CFG8_REG),
    .CH0_RX_APT_CFG9 (CH0_RX_APT_CFG9_REG),
    .CH0_RX_CAL_CFG0 (CH0_RX_CAL_CFG0_REG),
    .CH0_RX_CAL_CFG1 (CH0_RX_CAL_CFG1_REG),
    .CH0_RX_CAL_CFG2 (CH0_RX_CAL_CFG2_REG),
    .CH0_RX_CDR_CFG0 (CH0_RX_CDR_CFG0_REG),
    .CH0_RX_CDR_CFG1 (CH0_RX_CDR_CFG1_REG),
    .CH0_RX_CDR_CFG2 (CH0_RX_CDR_CFG2_REG),
    .CH0_RX_CDR_CFG3 (CH0_RX_CDR_CFG3_REG),
    .CH0_RX_CDR_CFG4 (CH0_RX_CDR_CFG4_REG),
    .CH0_RX_CDR_CFG5 (CH0_RX_CDR_CFG5_REG),
    .CH0_RX_CTLE_ADC_CFG0 (CH0_RX_CTLE_ADC_CFG0_REG),
    .CH0_RX_CTLE_ADC_CFG1 (CH0_RX_CTLE_ADC_CFG1_REG),
    .CH0_RX_CTLE_ADC_CFG2 (CH0_RX_CTLE_ADC_CFG2_REG),
    .CH0_RX_CTLE_HF_CFG0 (CH0_RX_CTLE_HF_CFG0_REG),
    .CH0_RX_CTLE_HF_CFG1 (CH0_RX_CTLE_HF_CFG1_REG),
    .CH0_RX_DSP_CFG0 (CH0_RX_DSP_CFG0_REG),
    .CH0_RX_DSP_CFG1 (CH0_RX_DSP_CFG1_REG),
    .CH0_RX_MISC_CFG1 (CH0_RX_MISC_CFG1_REG),
    .CH0_RX_PAD_CFG0 (CH0_RX_PAD_CFG0_REG),
    .CH0_RX_PAD_CFG1 (CH0_RX_PAD_CFG1_REG),
    .CH0_RX_PCS_CFG0 (CH0_RX_PCS_CFG0_REG),
    .CH0_RX_PCS_CFG1 (CH0_RX_PCS_CFG1_REG),
    .CH0_RX_RSV_CFG0 (CH0_RX_RSV_CFG0_REG),
    .CH0_RX_RSV_CFG1 (CH0_RX_RSV_CFG1_REG),
    .CH0_RX_SPARE_CFG0 (CH0_RX_SPARE_CFG0_REG),
    .CH0_SIM_MODE (CH0_SIM_MODE_REG),
    .CH0_SIM_RECEIVER_DETECT_PASS (CH0_SIM_RECEIVER_DETECT_PASS_REG),
    .CH0_SIM_RESET_SPEEDUP (CH0_SIM_RESET_SPEEDUP_REG),
    .CH0_TXOUTCLK_FREQ (CH0_TXOUTCLK_FREQ_BIN),
    .CH0_TXOUTCLK_REF_FREQ (CH0_TXOUTCLK_REF_FREQ_BIN),
    .CH0_TXOUTCLK_REF_SOURCE (CH0_TXOUTCLK_REF_SOURCE_REG),
    .CH0_TX_CAL_CFG0 (CH0_TX_CAL_CFG0_REG),
    .CH0_TX_CAL_CFG1 (CH0_TX_CAL_CFG1_REG),
    .CH0_TX_CAL_CFG2 (CH0_TX_CAL_CFG2_REG),
    .CH0_TX_CTRL_CFG0 (CH0_TX_CTRL_CFG0_REG),
    .CH0_TX_CTRL_CFG1 (CH0_TX_CTRL_CFG1_REG),
    .CH0_TX_CTRL_CFG2 (CH0_TX_CTRL_CFG2_REG),
    .CH0_TX_CTRL_CFG3 (CH0_TX_CTRL_CFG3_REG),
    .CH0_TX_MISC_CFG0 (CH0_TX_MISC_CFG0_REG),
    .CH0_TX_PCS_CFG0 (CH0_TX_PCS_CFG0_REG),
    .CH0_TX_PCS_CFG1 (CH0_TX_PCS_CFG1_REG),
    .CH0_TX_PCS_CFG2 (CH0_TX_PCS_CFG2_REG),
    .CH0_TX_PCS_CFG3 (CH0_TX_PCS_CFG3_REG),
    .CH0_TX_PCS_CFG4 (CH0_TX_PCS_CFG4_REG),
    .CH0_TX_PCS_CFG5 (CH0_TX_PCS_CFG5_REG),
    .CH0_TX_PCS_CFG6 (CH0_TX_PCS_CFG6_REG),
    .CH0_TX_PCS_CFG7 (CH0_TX_PCS_CFG7_REG),
    .CH0_TX_PCS_CFG8 (CH0_TX_PCS_CFG8_REG),
    .CH0_TX_PCS_CFG9 (CH0_TX_PCS_CFG9_REG),
    .CH1_CHCLK_CFG0 (CH1_CHCLK_CFG0_REG),
    .CH1_CHCLK_CFG1 (CH1_CHCLK_CFG1_REG),
    .CH1_CHCLK_CFG2 (CH1_CHCLK_CFG2_REG),
    .CH1_CHCLK_CFG3 (CH1_CHCLK_CFG3_REG),
    .CH1_CHCLK_CFG4 (CH1_CHCLK_CFG4_REG),
    .CH1_CHCLK_CFG5 (CH1_CHCLK_CFG5_REG),
    .CH1_EYESCAN_CFG0 (CH1_EYESCAN_CFG0_REG),
    .CH1_EYESCAN_CFG1 (CH1_EYESCAN_CFG1_REG),
    .CH1_EYESCAN_CFG2 (CH1_EYESCAN_CFG2_REG),
    .CH1_EYESCAN_CFG3 (CH1_EYESCAN_CFG3_REG),
    .CH1_EYESCAN_CFG4 (CH1_EYESCAN_CFG4_REG),
    .CH1_EYESCAN_CFG5 (CH1_EYESCAN_CFG5_REG),
    .CH1_EYESCAN_CFG6 (CH1_EYESCAN_CFG6_REG),
    .CH1_EYESCAN_CFG7 (CH1_EYESCAN_CFG7_REG),
    .CH1_EYESCAN_CFG8 (CH1_EYESCAN_CFG8_REG),
    .CH1_FABRIC_INTF_CFG0 (CH1_FABRIC_INTF_CFG0_REG),
    .CH1_FABRIC_INTF_CFG1 (CH1_FABRIC_INTF_CFG1_REG),
    .CH1_FABRIC_INTF_CFG2 (CH1_FABRIC_INTF_CFG2_REG),
    .CH1_FABRIC_INTF_CFG3 (CH1_FABRIC_INTF_CFG3_REG),
    .CH1_FABRIC_INTF_CFG4 (CH1_FABRIC_INTF_CFG4_REG),
    .CH1_FABRIC_INTF_CFG5 (CH1_FABRIC_INTF_CFG5_REG),
    .CH1_INSTANTIATED (CH1_INSTANTIATED_REG),
    .CH1_MONITOR_CFG0 (CH1_MONITOR_CFG0_REG),
    .CH1_PMA_MISC_CFG0 (CH1_PMA_MISC_CFG0_REG),
    .CH1_RESET_BYP_HDSHK_CFG (CH1_RESET_BYP_HDSHK_CFG_REG),
    .CH1_RESET_CFG (CH1_RESET_CFG_REG),
    .CH1_RESET_LOOPER_ID_CFG (CH1_RESET_LOOPER_ID_CFG_REG),
    .CH1_RESET_LOOP_ID_CFG0 (CH1_RESET_LOOP_ID_CFG0_REG),
    .CH1_RESET_LOOP_ID_CFG1 (CH1_RESET_LOOP_ID_CFG1_REG),
    .CH1_RESET_LOOP_ID_CFG2 (CH1_RESET_LOOP_ID_CFG2_REG),
    .CH1_RESET_TIME_CFG0 (CH1_RESET_TIME_CFG0_REG),
    .CH1_RESET_TIME_CFG1 (CH1_RESET_TIME_CFG1_REG),
    .CH1_RESET_TIME_CFG2 (CH1_RESET_TIME_CFG2_REG),
    .CH1_RESET_TIME_CFG3 (CH1_RESET_TIME_CFG3_REG),
    .CH1_RXOUTCLK_FREQ (CH1_RXOUTCLK_FREQ_BIN),
    .CH1_RXOUTCLK_REF_FREQ (CH1_RXOUTCLK_REF_FREQ_BIN),
    .CH1_RXOUTCLK_REF_SOURCE (CH1_RXOUTCLK_REF_SOURCE_REG),
    .CH1_RX_APT_CFG0 (CH1_RX_APT_CFG0_REG),
    .CH1_RX_APT_CFG1 (CH1_RX_APT_CFG1_REG),
    .CH1_RX_APT_CFG10 (CH1_RX_APT_CFG10_REG),
    .CH1_RX_APT_CFG11 (CH1_RX_APT_CFG11_REG),
    .CH1_RX_APT_CFG12 (CH1_RX_APT_CFG12_REG),
    .CH1_RX_APT_CFG13 (CH1_RX_APT_CFG13_REG),
    .CH1_RX_APT_CFG14 (CH1_RX_APT_CFG14_REG),
    .CH1_RX_APT_CFG15 (CH1_RX_APT_CFG15_REG),
    .CH1_RX_APT_CFG16 (CH1_RX_APT_CFG16_REG),
    .CH1_RX_APT_CFG17 (CH1_RX_APT_CFG17_REG),
    .CH1_RX_APT_CFG18 (CH1_RX_APT_CFG18_REG),
    .CH1_RX_APT_CFG19 (CH1_RX_APT_CFG19_REG),
    .CH1_RX_APT_CFG2 (CH1_RX_APT_CFG2_REG),
    .CH1_RX_APT_CFG20 (CH1_RX_APT_CFG20_REG),
    .CH1_RX_APT_CFG21 (CH1_RX_APT_CFG21_REG),
    .CH1_RX_APT_CFG22 (CH1_RX_APT_CFG22_REG),
    .CH1_RX_APT_CFG23 (CH1_RX_APT_CFG23_REG),
    .CH1_RX_APT_CFG24 (CH1_RX_APT_CFG24_REG),
    .CH1_RX_APT_CFG25 (CH1_RX_APT_CFG25_REG),
    .CH1_RX_APT_CFG26 (CH1_RX_APT_CFG26_REG),
    .CH1_RX_APT_CFG27 (CH1_RX_APT_CFG27_REG),
    .CH1_RX_APT_CFG28 (CH1_RX_APT_CFG28_REG),
    .CH1_RX_APT_CFG29 (CH1_RX_APT_CFG29_REG),
    .CH1_RX_APT_CFG3 (CH1_RX_APT_CFG3_REG),
    .CH1_RX_APT_CFG30 (CH1_RX_APT_CFG30_REG),
    .CH1_RX_APT_CFG31 (CH1_RX_APT_CFG31_REG),
    .CH1_RX_APT_CFG32 (CH1_RX_APT_CFG32_REG),
    .CH1_RX_APT_CFG33 (CH1_RX_APT_CFG33_REG),
    .CH1_RX_APT_CFG34 (CH1_RX_APT_CFG34_REG),
    .CH1_RX_APT_CFG35 (CH1_RX_APT_CFG35_REG),
    .CH1_RX_APT_CFG36 (CH1_RX_APT_CFG36_REG),
    .CH1_RX_APT_CFG37 (CH1_RX_APT_CFG37_REG),
    .CH1_RX_APT_CFG38 (CH1_RX_APT_CFG38_REG),
    .CH1_RX_APT_CFG39 (CH1_RX_APT_CFG39_REG),
    .CH1_RX_APT_CFG4 (CH1_RX_APT_CFG4_REG),
    .CH1_RX_APT_CFG40 (CH1_RX_APT_CFG40_REG),
    .CH1_RX_APT_CFG41 (CH1_RX_APT_CFG41_REG),
    .CH1_RX_APT_CFG42 (CH1_RX_APT_CFG42_REG),
    .CH1_RX_APT_CFG43 (CH1_RX_APT_CFG43_REG),
    .CH1_RX_APT_CFG44 (CH1_RX_APT_CFG44_REG),
    .CH1_RX_APT_CFG45 (CH1_RX_APT_CFG45_REG),
    .CH1_RX_APT_CFG46 (CH1_RX_APT_CFG46_REG),
    .CH1_RX_APT_CFG47 (CH1_RX_APT_CFG47_REG),
    .CH1_RX_APT_CFG48 (CH1_RX_APT_CFG48_REG),
    .CH1_RX_APT_CFG49 (CH1_RX_APT_CFG49_REG),
    .CH1_RX_APT_CFG5 (CH1_RX_APT_CFG5_REG),
    .CH1_RX_APT_CFG50 (CH1_RX_APT_CFG50_REG),
    .CH1_RX_APT_CFG51 (CH1_RX_APT_CFG51_REG),
    .CH1_RX_APT_CFG52 (CH1_RX_APT_CFG52_REG),
    .CH1_RX_APT_CFG53 (CH1_RX_APT_CFG53_REG),
    .CH1_RX_APT_CFG54 (CH1_RX_APT_CFG54_REG),
    .CH1_RX_APT_CFG55 (CH1_RX_APT_CFG55_REG),
    .CH1_RX_APT_CFG56 (CH1_RX_APT_CFG56_REG),
    .CH1_RX_APT_CFG57 (CH1_RX_APT_CFG57_REG),
    .CH1_RX_APT_CFG58 (CH1_RX_APT_CFG58_REG),
    .CH1_RX_APT_CFG6 (CH1_RX_APT_CFG6_REG),
    .CH1_RX_APT_CFG7 (CH1_RX_APT_CFG7_REG),
    .CH1_RX_APT_CFG8 (CH1_RX_APT_CFG8_REG),
    .CH1_RX_APT_CFG9 (CH1_RX_APT_CFG9_REG),
    .CH1_RX_CAL_CFG0 (CH1_RX_CAL_CFG0_REG),
    .CH1_RX_CAL_CFG1 (CH1_RX_CAL_CFG1_REG),
    .CH1_RX_CAL_CFG2 (CH1_RX_CAL_CFG2_REG),
    .CH1_RX_CDR_CFG0 (CH1_RX_CDR_CFG0_REG),
    .CH1_RX_CDR_CFG1 (CH1_RX_CDR_CFG1_REG),
    .CH1_RX_CDR_CFG2 (CH1_RX_CDR_CFG2_REG),
    .CH1_RX_CDR_CFG3 (CH1_RX_CDR_CFG3_REG),
    .CH1_RX_CDR_CFG4 (CH1_RX_CDR_CFG4_REG),
    .CH1_RX_CDR_CFG5 (CH1_RX_CDR_CFG5_REG),
    .CH1_RX_CTLE_ADC_CFG0 (CH1_RX_CTLE_ADC_CFG0_REG),
    .CH1_RX_CTLE_ADC_CFG1 (CH1_RX_CTLE_ADC_CFG1_REG),
    .CH1_RX_CTLE_ADC_CFG2 (CH1_RX_CTLE_ADC_CFG2_REG),
    .CH1_RX_CTLE_HF_CFG0 (CH1_RX_CTLE_HF_CFG0_REG),
    .CH1_RX_CTLE_HF_CFG1 (CH1_RX_CTLE_HF_CFG1_REG),
    .CH1_RX_DSP_CFG0 (CH1_RX_DSP_CFG0_REG),
    .CH1_RX_DSP_CFG1 (CH1_RX_DSP_CFG1_REG),
    .CH1_RX_MISC_CFG1 (CH1_RX_MISC_CFG1_REG),
    .CH1_RX_PAD_CFG0 (CH1_RX_PAD_CFG0_REG),
    .CH1_RX_PAD_CFG1 (CH1_RX_PAD_CFG1_REG),
    .CH1_RX_PCS_CFG0 (CH1_RX_PCS_CFG0_REG),
    .CH1_RX_PCS_CFG1 (CH1_RX_PCS_CFG1_REG),
    .CH1_RX_RSV_CFG0 (CH1_RX_RSV_CFG0_REG),
    .CH1_RX_RSV_CFG1 (CH1_RX_RSV_CFG1_REG),
    .CH1_RX_SPARE_CFG0 (CH1_RX_SPARE_CFG0_REG),
    .CH1_SIM_MODE (CH1_SIM_MODE_REG),
    .CH1_SIM_RECEIVER_DETECT_PASS (CH1_SIM_RECEIVER_DETECT_PASS_REG),
    .CH1_SIM_RESET_SPEEDUP (CH1_SIM_RESET_SPEEDUP_REG),
    .CH1_TXOUTCLK_FREQ (CH1_TXOUTCLK_FREQ_BIN),
    .CH1_TXOUTCLK_REF_FREQ (CH1_TXOUTCLK_REF_FREQ_BIN),
    .CH1_TXOUTCLK_REF_SOURCE (CH1_TXOUTCLK_REF_SOURCE_REG),
    .CH1_TX_CAL_CFG0 (CH1_TX_CAL_CFG0_REG),
    .CH1_TX_CAL_CFG1 (CH1_TX_CAL_CFG1_REG),
    .CH1_TX_CAL_CFG2 (CH1_TX_CAL_CFG2_REG),
    .CH1_TX_CTRL_CFG0 (CH1_TX_CTRL_CFG0_REG),
    .CH1_TX_CTRL_CFG1 (CH1_TX_CTRL_CFG1_REG),
    .CH1_TX_CTRL_CFG2 (CH1_TX_CTRL_CFG2_REG),
    .CH1_TX_CTRL_CFG3 (CH1_TX_CTRL_CFG3_REG),
    .CH1_TX_MISC_CFG0 (CH1_TX_MISC_CFG0_REG),
    .CH1_TX_PCS_CFG0 (CH1_TX_PCS_CFG0_REG),
    .CH1_TX_PCS_CFG1 (CH1_TX_PCS_CFG1_REG),
    .CH1_TX_PCS_CFG2 (CH1_TX_PCS_CFG2_REG),
    .CH1_TX_PCS_CFG3 (CH1_TX_PCS_CFG3_REG),
    .CH1_TX_PCS_CFG4 (CH1_TX_PCS_CFG4_REG),
    .CH1_TX_PCS_CFG5 (CH1_TX_PCS_CFG5_REG),
    .CH1_TX_PCS_CFG6 (CH1_TX_PCS_CFG6_REG),
    .CH1_TX_PCS_CFG7 (CH1_TX_PCS_CFG7_REG),
    .CH1_TX_PCS_CFG8 (CH1_TX_PCS_CFG8_REG),
    .CH1_TX_PCS_CFG9 (CH1_TX_PCS_CFG9_REG),
    .CH2_CHCLK_CFG0 (CH2_CHCLK_CFG0_REG),
    .CH2_CHCLK_CFG1 (CH2_CHCLK_CFG1_REG),
    .CH2_CHCLK_CFG2 (CH2_CHCLK_CFG2_REG),
    .CH2_CHCLK_CFG3 (CH2_CHCLK_CFG3_REG),
    .CH2_CHCLK_CFG4 (CH2_CHCLK_CFG4_REG),
    .CH2_CHCLK_CFG5 (CH2_CHCLK_CFG5_REG),
    .CH2_EYESCAN_CFG0 (CH2_EYESCAN_CFG0_REG),
    .CH2_EYESCAN_CFG1 (CH2_EYESCAN_CFG1_REG),
    .CH2_EYESCAN_CFG2 (CH2_EYESCAN_CFG2_REG),
    .CH2_EYESCAN_CFG3 (CH2_EYESCAN_CFG3_REG),
    .CH2_EYESCAN_CFG4 (CH2_EYESCAN_CFG4_REG),
    .CH2_EYESCAN_CFG5 (CH2_EYESCAN_CFG5_REG),
    .CH2_EYESCAN_CFG6 (CH2_EYESCAN_CFG6_REG),
    .CH2_EYESCAN_CFG7 (CH2_EYESCAN_CFG7_REG),
    .CH2_EYESCAN_CFG8 (CH2_EYESCAN_CFG8_REG),
    .CH2_FABRIC_INTF_CFG0 (CH2_FABRIC_INTF_CFG0_REG),
    .CH2_FABRIC_INTF_CFG1 (CH2_FABRIC_INTF_CFG1_REG),
    .CH2_FABRIC_INTF_CFG2 (CH2_FABRIC_INTF_CFG2_REG),
    .CH2_FABRIC_INTF_CFG3 (CH2_FABRIC_INTF_CFG3_REG),
    .CH2_FABRIC_INTF_CFG4 (CH2_FABRIC_INTF_CFG4_REG),
    .CH2_FABRIC_INTF_CFG5 (CH2_FABRIC_INTF_CFG5_REG),
    .CH2_INSTANTIATED (CH2_INSTANTIATED_REG),
    .CH2_MONITOR_CFG0 (CH2_MONITOR_CFG0_REG),
    .CH2_PMA_MISC_CFG0 (CH2_PMA_MISC_CFG0_REG),
    .CH2_RESET_BYP_HDSHK_CFG (CH2_RESET_BYP_HDSHK_CFG_REG),
    .CH2_RESET_CFG (CH2_RESET_CFG_REG),
    .CH2_RESET_LOOPER_ID_CFG (CH2_RESET_LOOPER_ID_CFG_REG),
    .CH2_RESET_LOOP_ID_CFG0 (CH2_RESET_LOOP_ID_CFG0_REG),
    .CH2_RESET_LOOP_ID_CFG1 (CH2_RESET_LOOP_ID_CFG1_REG),
    .CH2_RESET_LOOP_ID_CFG2 (CH2_RESET_LOOP_ID_CFG2_REG),
    .CH2_RESET_TIME_CFG0 (CH2_RESET_TIME_CFG0_REG),
    .CH2_RESET_TIME_CFG1 (CH2_RESET_TIME_CFG1_REG),
    .CH2_RESET_TIME_CFG2 (CH2_RESET_TIME_CFG2_REG),
    .CH2_RESET_TIME_CFG3 (CH2_RESET_TIME_CFG3_REG),
    .CH2_RXOUTCLK_FREQ (CH2_RXOUTCLK_FREQ_BIN),
    .CH2_RXOUTCLK_REF_FREQ (CH2_RXOUTCLK_REF_FREQ_BIN),
    .CH2_RXOUTCLK_REF_SOURCE (CH2_RXOUTCLK_REF_SOURCE_REG),
    .CH2_RX_APT_CFG0 (CH2_RX_APT_CFG0_REG),
    .CH2_RX_APT_CFG1 (CH2_RX_APT_CFG1_REG),
    .CH2_RX_APT_CFG10 (CH2_RX_APT_CFG10_REG),
    .CH2_RX_APT_CFG11 (CH2_RX_APT_CFG11_REG),
    .CH2_RX_APT_CFG12 (CH2_RX_APT_CFG12_REG),
    .CH2_RX_APT_CFG13 (CH2_RX_APT_CFG13_REG),
    .CH2_RX_APT_CFG14 (CH2_RX_APT_CFG14_REG),
    .CH2_RX_APT_CFG15 (CH2_RX_APT_CFG15_REG),
    .CH2_RX_APT_CFG16 (CH2_RX_APT_CFG16_REG),
    .CH2_RX_APT_CFG17 (CH2_RX_APT_CFG17_REG),
    .CH2_RX_APT_CFG18 (CH2_RX_APT_CFG18_REG),
    .CH2_RX_APT_CFG19 (CH2_RX_APT_CFG19_REG),
    .CH2_RX_APT_CFG2 (CH2_RX_APT_CFG2_REG),
    .CH2_RX_APT_CFG20 (CH2_RX_APT_CFG20_REG),
    .CH2_RX_APT_CFG21 (CH2_RX_APT_CFG21_REG),
    .CH2_RX_APT_CFG22 (CH2_RX_APT_CFG22_REG),
    .CH2_RX_APT_CFG23 (CH2_RX_APT_CFG23_REG),
    .CH2_RX_APT_CFG24 (CH2_RX_APT_CFG24_REG),
    .CH2_RX_APT_CFG25 (CH2_RX_APT_CFG25_REG),
    .CH2_RX_APT_CFG26 (CH2_RX_APT_CFG26_REG),
    .CH2_RX_APT_CFG27 (CH2_RX_APT_CFG27_REG),
    .CH2_RX_APT_CFG28 (CH2_RX_APT_CFG28_REG),
    .CH2_RX_APT_CFG29 (CH2_RX_APT_CFG29_REG),
    .CH2_RX_APT_CFG3 (CH2_RX_APT_CFG3_REG),
    .CH2_RX_APT_CFG30 (CH2_RX_APT_CFG30_REG),
    .CH2_RX_APT_CFG31 (CH2_RX_APT_CFG31_REG),
    .CH2_RX_APT_CFG32 (CH2_RX_APT_CFG32_REG),
    .CH2_RX_APT_CFG33 (CH2_RX_APT_CFG33_REG),
    .CH2_RX_APT_CFG34 (CH2_RX_APT_CFG34_REG),
    .CH2_RX_APT_CFG35 (CH2_RX_APT_CFG35_REG),
    .CH2_RX_APT_CFG36 (CH2_RX_APT_CFG36_REG),
    .CH2_RX_APT_CFG37 (CH2_RX_APT_CFG37_REG),
    .CH2_RX_APT_CFG38 (CH2_RX_APT_CFG38_REG),
    .CH2_RX_APT_CFG39 (CH2_RX_APT_CFG39_REG),
    .CH2_RX_APT_CFG4 (CH2_RX_APT_CFG4_REG),
    .CH2_RX_APT_CFG40 (CH2_RX_APT_CFG40_REG),
    .CH2_RX_APT_CFG41 (CH2_RX_APT_CFG41_REG),
    .CH2_RX_APT_CFG42 (CH2_RX_APT_CFG42_REG),
    .CH2_RX_APT_CFG43 (CH2_RX_APT_CFG43_REG),
    .CH2_RX_APT_CFG44 (CH2_RX_APT_CFG44_REG),
    .CH2_RX_APT_CFG45 (CH2_RX_APT_CFG45_REG),
    .CH2_RX_APT_CFG46 (CH2_RX_APT_CFG46_REG),
    .CH2_RX_APT_CFG47 (CH2_RX_APT_CFG47_REG),
    .CH2_RX_APT_CFG48 (CH2_RX_APT_CFG48_REG),
    .CH2_RX_APT_CFG49 (CH2_RX_APT_CFG49_REG),
    .CH2_RX_APT_CFG5 (CH2_RX_APT_CFG5_REG),
    .CH2_RX_APT_CFG50 (CH2_RX_APT_CFG50_REG),
    .CH2_RX_APT_CFG51 (CH2_RX_APT_CFG51_REG),
    .CH2_RX_APT_CFG52 (CH2_RX_APT_CFG52_REG),
    .CH2_RX_APT_CFG53 (CH2_RX_APT_CFG53_REG),
    .CH2_RX_APT_CFG54 (CH2_RX_APT_CFG54_REG),
    .CH2_RX_APT_CFG55 (CH2_RX_APT_CFG55_REG),
    .CH2_RX_APT_CFG56 (CH2_RX_APT_CFG56_REG),
    .CH2_RX_APT_CFG57 (CH2_RX_APT_CFG57_REG),
    .CH2_RX_APT_CFG58 (CH2_RX_APT_CFG58_REG),
    .CH2_RX_APT_CFG6 (CH2_RX_APT_CFG6_REG),
    .CH2_RX_APT_CFG7 (CH2_RX_APT_CFG7_REG),
    .CH2_RX_APT_CFG8 (CH2_RX_APT_CFG8_REG),
    .CH2_RX_APT_CFG9 (CH2_RX_APT_CFG9_REG),
    .CH2_RX_CAL_CFG0 (CH2_RX_CAL_CFG0_REG),
    .CH2_RX_CAL_CFG1 (CH2_RX_CAL_CFG1_REG),
    .CH2_RX_CAL_CFG2 (CH2_RX_CAL_CFG2_REG),
    .CH2_RX_CDR_CFG0 (CH2_RX_CDR_CFG0_REG),
    .CH2_RX_CDR_CFG1 (CH2_RX_CDR_CFG1_REG),
    .CH2_RX_CDR_CFG2 (CH2_RX_CDR_CFG2_REG),
    .CH2_RX_CDR_CFG3 (CH2_RX_CDR_CFG3_REG),
    .CH2_RX_CDR_CFG4 (CH2_RX_CDR_CFG4_REG),
    .CH2_RX_CDR_CFG5 (CH2_RX_CDR_CFG5_REG),
    .CH2_RX_CTLE_ADC_CFG0 (CH2_RX_CTLE_ADC_CFG0_REG),
    .CH2_RX_CTLE_ADC_CFG1 (CH2_RX_CTLE_ADC_CFG1_REG),
    .CH2_RX_CTLE_ADC_CFG2 (CH2_RX_CTLE_ADC_CFG2_REG),
    .CH2_RX_CTLE_HF_CFG0 (CH2_RX_CTLE_HF_CFG0_REG),
    .CH2_RX_CTLE_HF_CFG1 (CH2_RX_CTLE_HF_CFG1_REG),
    .CH2_RX_DSP_CFG0 (CH2_RX_DSP_CFG0_REG),
    .CH2_RX_DSP_CFG1 (CH2_RX_DSP_CFG1_REG),
    .CH2_RX_MISC_CFG1 (CH2_RX_MISC_CFG1_REG),
    .CH2_RX_PAD_CFG0 (CH2_RX_PAD_CFG0_REG),
    .CH2_RX_PAD_CFG1 (CH2_RX_PAD_CFG1_REG),
    .CH2_RX_PCS_CFG0 (CH2_RX_PCS_CFG0_REG),
    .CH2_RX_PCS_CFG1 (CH2_RX_PCS_CFG1_REG),
    .CH2_RX_RSV_CFG0 (CH2_RX_RSV_CFG0_REG),
    .CH2_RX_RSV_CFG1 (CH2_RX_RSV_CFG1_REG),
    .CH2_RX_SPARE_CFG0 (CH2_RX_SPARE_CFG0_REG),
    .CH2_SIM_MODE (CH2_SIM_MODE_REG),
    .CH2_SIM_RECEIVER_DETECT_PASS (CH2_SIM_RECEIVER_DETECT_PASS_REG),
    .CH2_SIM_RESET_SPEEDUP (CH2_SIM_RESET_SPEEDUP_REG),
    .CH2_TXOUTCLK_FREQ (CH2_TXOUTCLK_FREQ_BIN),
    .CH2_TXOUTCLK_REF_FREQ (CH2_TXOUTCLK_REF_FREQ_BIN),
    .CH2_TXOUTCLK_REF_SOURCE (CH2_TXOUTCLK_REF_SOURCE_REG),
    .CH2_TX_CAL_CFG0 (CH2_TX_CAL_CFG0_REG),
    .CH2_TX_CAL_CFG1 (CH2_TX_CAL_CFG1_REG),
    .CH2_TX_CAL_CFG2 (CH2_TX_CAL_CFG2_REG),
    .CH2_TX_CTRL_CFG0 (CH2_TX_CTRL_CFG0_REG),
    .CH2_TX_CTRL_CFG1 (CH2_TX_CTRL_CFG1_REG),
    .CH2_TX_CTRL_CFG2 (CH2_TX_CTRL_CFG2_REG),
    .CH2_TX_CTRL_CFG3 (CH2_TX_CTRL_CFG3_REG),
    .CH2_TX_MISC_CFG0 (CH2_TX_MISC_CFG0_REG),
    .CH2_TX_PCS_CFG0 (CH2_TX_PCS_CFG0_REG),
    .CH2_TX_PCS_CFG1 (CH2_TX_PCS_CFG1_REG),
    .CH2_TX_PCS_CFG2 (CH2_TX_PCS_CFG2_REG),
    .CH2_TX_PCS_CFG3 (CH2_TX_PCS_CFG3_REG),
    .CH2_TX_PCS_CFG4 (CH2_TX_PCS_CFG4_REG),
    .CH2_TX_PCS_CFG5 (CH2_TX_PCS_CFG5_REG),
    .CH2_TX_PCS_CFG6 (CH2_TX_PCS_CFG6_REG),
    .CH2_TX_PCS_CFG7 (CH2_TX_PCS_CFG7_REG),
    .CH2_TX_PCS_CFG8 (CH2_TX_PCS_CFG8_REG),
    .CH2_TX_PCS_CFG9 (CH2_TX_PCS_CFG9_REG),
    .CH3_CHCLK_CFG0 (CH3_CHCLK_CFG0_REG),
    .CH3_CHCLK_CFG1 (CH3_CHCLK_CFG1_REG),
    .CH3_CHCLK_CFG2 (CH3_CHCLK_CFG2_REG),
    .CH3_CHCLK_CFG3 (CH3_CHCLK_CFG3_REG),
    .CH3_CHCLK_CFG4 (CH3_CHCLK_CFG4_REG),
    .CH3_CHCLK_CFG5 (CH3_CHCLK_CFG5_REG),
    .CH3_EYESCAN_CFG0 (CH3_EYESCAN_CFG0_REG),
    .CH3_EYESCAN_CFG1 (CH3_EYESCAN_CFG1_REG),
    .CH3_EYESCAN_CFG2 (CH3_EYESCAN_CFG2_REG),
    .CH3_EYESCAN_CFG3 (CH3_EYESCAN_CFG3_REG),
    .CH3_EYESCAN_CFG4 (CH3_EYESCAN_CFG4_REG),
    .CH3_EYESCAN_CFG5 (CH3_EYESCAN_CFG5_REG),
    .CH3_EYESCAN_CFG6 (CH3_EYESCAN_CFG6_REG),
    .CH3_EYESCAN_CFG7 (CH3_EYESCAN_CFG7_REG),
    .CH3_EYESCAN_CFG8 (CH3_EYESCAN_CFG8_REG),
    .CH3_FABRIC_INTF_CFG0 (CH3_FABRIC_INTF_CFG0_REG),
    .CH3_FABRIC_INTF_CFG1 (CH3_FABRIC_INTF_CFG1_REG),
    .CH3_FABRIC_INTF_CFG2 (CH3_FABRIC_INTF_CFG2_REG),
    .CH3_FABRIC_INTF_CFG3 (CH3_FABRIC_INTF_CFG3_REG),
    .CH3_FABRIC_INTF_CFG4 (CH3_FABRIC_INTF_CFG4_REG),
    .CH3_FABRIC_INTF_CFG5 (CH3_FABRIC_INTF_CFG5_REG),
    .CH3_INSTANTIATED (CH3_INSTANTIATED_REG),
    .CH3_MONITOR_CFG0 (CH3_MONITOR_CFG0_REG),
    .CH3_PMA_MISC_CFG0 (CH3_PMA_MISC_CFG0_REG),
    .CH3_RESET_BYP_HDSHK_CFG (CH3_RESET_BYP_HDSHK_CFG_REG),
    .CH3_RESET_CFG (CH3_RESET_CFG_REG),
    .CH3_RESET_LOOPER_ID_CFG (CH3_RESET_LOOPER_ID_CFG_REG),
    .CH3_RESET_LOOP_ID_CFG0 (CH3_RESET_LOOP_ID_CFG0_REG),
    .CH3_RESET_LOOP_ID_CFG1 (CH3_RESET_LOOP_ID_CFG1_REG),
    .CH3_RESET_LOOP_ID_CFG2 (CH3_RESET_LOOP_ID_CFG2_REG),
    .CH3_RESET_TIME_CFG0 (CH3_RESET_TIME_CFG0_REG),
    .CH3_RESET_TIME_CFG1 (CH3_RESET_TIME_CFG1_REG),
    .CH3_RESET_TIME_CFG2 (CH3_RESET_TIME_CFG2_REG),
    .CH3_RESET_TIME_CFG3 (CH3_RESET_TIME_CFG3_REG),
    .CH3_RXOUTCLK_FREQ (CH3_RXOUTCLK_FREQ_BIN),
    .CH3_RXOUTCLK_REF_FREQ (CH3_RXOUTCLK_REF_FREQ_BIN),
    .CH3_RXOUTCLK_REF_SOURCE (CH3_RXOUTCLK_REF_SOURCE_REG),
    .CH3_RX_APT_CFG0 (CH3_RX_APT_CFG0_REG),
    .CH3_RX_APT_CFG1 (CH3_RX_APT_CFG1_REG),
    .CH3_RX_APT_CFG10 (CH3_RX_APT_CFG10_REG),
    .CH3_RX_APT_CFG11 (CH3_RX_APT_CFG11_REG),
    .CH3_RX_APT_CFG12 (CH3_RX_APT_CFG12_REG),
    .CH3_RX_APT_CFG13 (CH3_RX_APT_CFG13_REG),
    .CH3_RX_APT_CFG14 (CH3_RX_APT_CFG14_REG),
    .CH3_RX_APT_CFG15 (CH3_RX_APT_CFG15_REG),
    .CH3_RX_APT_CFG16 (CH3_RX_APT_CFG16_REG),
    .CH3_RX_APT_CFG17 (CH3_RX_APT_CFG17_REG),
    .CH3_RX_APT_CFG18 (CH3_RX_APT_CFG18_REG),
    .CH3_RX_APT_CFG19 (CH3_RX_APT_CFG19_REG),
    .CH3_RX_APT_CFG2 (CH3_RX_APT_CFG2_REG),
    .CH3_RX_APT_CFG20 (CH3_RX_APT_CFG20_REG),
    .CH3_RX_APT_CFG21 (CH3_RX_APT_CFG21_REG),
    .CH3_RX_APT_CFG22 (CH3_RX_APT_CFG22_REG),
    .CH3_RX_APT_CFG23 (CH3_RX_APT_CFG23_REG),
    .CH3_RX_APT_CFG24 (CH3_RX_APT_CFG24_REG),
    .CH3_RX_APT_CFG25 (CH3_RX_APT_CFG25_REG),
    .CH3_RX_APT_CFG26 (CH3_RX_APT_CFG26_REG),
    .CH3_RX_APT_CFG27 (CH3_RX_APT_CFG27_REG),
    .CH3_RX_APT_CFG28 (CH3_RX_APT_CFG28_REG),
    .CH3_RX_APT_CFG29 (CH3_RX_APT_CFG29_REG),
    .CH3_RX_APT_CFG3 (CH3_RX_APT_CFG3_REG),
    .CH3_RX_APT_CFG30 (CH3_RX_APT_CFG30_REG),
    .CH3_RX_APT_CFG31 (CH3_RX_APT_CFG31_REG),
    .CH3_RX_APT_CFG32 (CH3_RX_APT_CFG32_REG),
    .CH3_RX_APT_CFG33 (CH3_RX_APT_CFG33_REG),
    .CH3_RX_APT_CFG34 (CH3_RX_APT_CFG34_REG),
    .CH3_RX_APT_CFG35 (CH3_RX_APT_CFG35_REG),
    .CH3_RX_APT_CFG36 (CH3_RX_APT_CFG36_REG),
    .CH3_RX_APT_CFG37 (CH3_RX_APT_CFG37_REG),
    .CH3_RX_APT_CFG38 (CH3_RX_APT_CFG38_REG),
    .CH3_RX_APT_CFG39 (CH3_RX_APT_CFG39_REG),
    .CH3_RX_APT_CFG4 (CH3_RX_APT_CFG4_REG),
    .CH3_RX_APT_CFG40 (CH3_RX_APT_CFG40_REG),
    .CH3_RX_APT_CFG41 (CH3_RX_APT_CFG41_REG),
    .CH3_RX_APT_CFG42 (CH3_RX_APT_CFG42_REG),
    .CH3_RX_APT_CFG43 (CH3_RX_APT_CFG43_REG),
    .CH3_RX_APT_CFG44 (CH3_RX_APT_CFG44_REG),
    .CH3_RX_APT_CFG45 (CH3_RX_APT_CFG45_REG),
    .CH3_RX_APT_CFG46 (CH3_RX_APT_CFG46_REG),
    .CH3_RX_APT_CFG47 (CH3_RX_APT_CFG47_REG),
    .CH3_RX_APT_CFG48 (CH3_RX_APT_CFG48_REG),
    .CH3_RX_APT_CFG49 (CH3_RX_APT_CFG49_REG),
    .CH3_RX_APT_CFG5 (CH3_RX_APT_CFG5_REG),
    .CH3_RX_APT_CFG50 (CH3_RX_APT_CFG50_REG),
    .CH3_RX_APT_CFG51 (CH3_RX_APT_CFG51_REG),
    .CH3_RX_APT_CFG52 (CH3_RX_APT_CFG52_REG),
    .CH3_RX_APT_CFG53 (CH3_RX_APT_CFG53_REG),
    .CH3_RX_APT_CFG54 (CH3_RX_APT_CFG54_REG),
    .CH3_RX_APT_CFG55 (CH3_RX_APT_CFG55_REG),
    .CH3_RX_APT_CFG56 (CH3_RX_APT_CFG56_REG),
    .CH3_RX_APT_CFG57 (CH3_RX_APT_CFG57_REG),
    .CH3_RX_APT_CFG58 (CH3_RX_APT_CFG58_REG),
    .CH3_RX_APT_CFG6 (CH3_RX_APT_CFG6_REG),
    .CH3_RX_APT_CFG7 (CH3_RX_APT_CFG7_REG),
    .CH3_RX_APT_CFG8 (CH3_RX_APT_CFG8_REG),
    .CH3_RX_APT_CFG9 (CH3_RX_APT_CFG9_REG),
    .CH3_RX_CAL_CFG0 (CH3_RX_CAL_CFG0_REG),
    .CH3_RX_CAL_CFG1 (CH3_RX_CAL_CFG1_REG),
    .CH3_RX_CAL_CFG2 (CH3_RX_CAL_CFG2_REG),
    .CH3_RX_CDR_CFG0 (CH3_RX_CDR_CFG0_REG),
    .CH3_RX_CDR_CFG1 (CH3_RX_CDR_CFG1_REG),
    .CH3_RX_CDR_CFG2 (CH3_RX_CDR_CFG2_REG),
    .CH3_RX_CDR_CFG3 (CH3_RX_CDR_CFG3_REG),
    .CH3_RX_CDR_CFG4 (CH3_RX_CDR_CFG4_REG),
    .CH3_RX_CDR_CFG5 (CH3_RX_CDR_CFG5_REG),
    .CH3_RX_CTLE_ADC_CFG0 (CH3_RX_CTLE_ADC_CFG0_REG),
    .CH3_RX_CTLE_ADC_CFG1 (CH3_RX_CTLE_ADC_CFG1_REG),
    .CH3_RX_CTLE_ADC_CFG2 (CH3_RX_CTLE_ADC_CFG2_REG),
    .CH3_RX_CTLE_HF_CFG0 (CH3_RX_CTLE_HF_CFG0_REG),
    .CH3_RX_CTLE_HF_CFG1 (CH3_RX_CTLE_HF_CFG1_REG),
    .CH3_RX_DSP_CFG0 (CH3_RX_DSP_CFG0_REG),
    .CH3_RX_DSP_CFG1 (CH3_RX_DSP_CFG1_REG),
    .CH3_RX_MISC_CFG1 (CH3_RX_MISC_CFG1_REG),
    .CH3_RX_PAD_CFG0 (CH3_RX_PAD_CFG0_REG),
    .CH3_RX_PAD_CFG1 (CH3_RX_PAD_CFG1_REG),
    .CH3_RX_PCS_CFG0 (CH3_RX_PCS_CFG0_REG),
    .CH3_RX_PCS_CFG1 (CH3_RX_PCS_CFG1_REG),
    .CH3_RX_RSV_CFG0 (CH3_RX_RSV_CFG0_REG),
    .CH3_RX_RSV_CFG1 (CH3_RX_RSV_CFG1_REG),
    .CH3_RX_SPARE_CFG0 (CH3_RX_SPARE_CFG0_REG),
    .CH3_SIM_MODE (CH3_SIM_MODE_REG),
    .CH3_SIM_RECEIVER_DETECT_PASS (CH3_SIM_RECEIVER_DETECT_PASS_REG),
    .CH3_SIM_RESET_SPEEDUP (CH3_SIM_RESET_SPEEDUP_REG),
    .CH3_TXOUTCLK_FREQ (CH3_TXOUTCLK_FREQ_BIN),
    .CH3_TXOUTCLK_REF_FREQ (CH3_TXOUTCLK_REF_FREQ_BIN),
    .CH3_TXOUTCLK_REF_SOURCE (CH3_TXOUTCLK_REF_SOURCE_REG),
    .CH3_TX_CAL_CFG0 (CH3_TX_CAL_CFG0_REG),
    .CH3_TX_CAL_CFG1 (CH3_TX_CAL_CFG1_REG),
    .CH3_TX_CAL_CFG2 (CH3_TX_CAL_CFG2_REG),
    .CH3_TX_CTRL_CFG0 (CH3_TX_CTRL_CFG0_REG),
    .CH3_TX_CTRL_CFG1 (CH3_TX_CTRL_CFG1_REG),
    .CH3_TX_CTRL_CFG2 (CH3_TX_CTRL_CFG2_REG),
    .CH3_TX_CTRL_CFG3 (CH3_TX_CTRL_CFG3_REG),
    .CH3_TX_MISC_CFG0 (CH3_TX_MISC_CFG0_REG),
    .CH3_TX_PCS_CFG0 (CH3_TX_PCS_CFG0_REG),
    .CH3_TX_PCS_CFG1 (CH3_TX_PCS_CFG1_REG),
    .CH3_TX_PCS_CFG2 (CH3_TX_PCS_CFG2_REG),
    .CH3_TX_PCS_CFG3 (CH3_TX_PCS_CFG3_REG),
    .CH3_TX_PCS_CFG4 (CH3_TX_PCS_CFG4_REG),
    .CH3_TX_PCS_CFG5 (CH3_TX_PCS_CFG5_REG),
    .CH3_TX_PCS_CFG6 (CH3_TX_PCS_CFG6_REG),
    .CH3_TX_PCS_CFG7 (CH3_TX_PCS_CFG7_REG),
    .CH3_TX_PCS_CFG8 (CH3_TX_PCS_CFG8_REG),
    .CH3_TX_PCS_CFG9 (CH3_TX_PCS_CFG9_REG),
    .CTRL_RSV_CFG0 (CTRL_RSV_CFG0_REG),
    .CTRL_RSV_CFG1 (CTRL_RSV_CFG1_REG),
    .HS0_LCPLL_IPS_PIN_EN (HS0_LCPLL_IPS_PIN_EN_REG),
    .HS0_LCPLL_IPS_REFCLK_SEL (HS0_LCPLL_IPS_REFCLK_SEL_REG),
    .HS0_LCPLL_REFCLK_MAP0 (HS0_LCPLL_REFCLK_MAP0_REG),
    .HS0_LCPLL_REFCLK_MAP1 (HS0_LCPLL_REFCLK_MAP1_REG),
    .HS0_LCPLL_REFCLK_MAP2 (HS0_LCPLL_REFCLK_MAP2_REG),
    .HS0_LCPLL_REFCLK_MAP3 (HS0_LCPLL_REFCLK_MAP3_REG),
    .HS0_LCPLL_REFCLK_MAP4 (HS0_LCPLL_REFCLK_MAP4_REG),
    .HS0_LCPLL_REFCLK_MAP5 (HS0_LCPLL_REFCLK_MAP5_REG),
    .HS0_LCPLL_REFCLK_MAP6 (HS0_LCPLL_REFCLK_MAP6_REG),
    .HS0_LCPLL_REFCLK_MAP7 (HS0_LCPLL_REFCLK_MAP7_REG),
    .HS1_LCPLL_IPS_PIN_EN (HS1_LCPLL_IPS_PIN_EN_REG),
    .HS1_LCPLL_IPS_REFCLK_SEL (HS1_LCPLL_IPS_REFCLK_SEL_REG),
    .HS1_LCPLL_REFCLK_MAP0 (HS1_LCPLL_REFCLK_MAP0_REG),
    .HS1_LCPLL_REFCLK_MAP1 (HS1_LCPLL_REFCLK_MAP1_REG),
    .HS1_LCPLL_REFCLK_MAP2 (HS1_LCPLL_REFCLK_MAP2_REG),
    .HS1_LCPLL_REFCLK_MAP3 (HS1_LCPLL_REFCLK_MAP3_REG),
    .HS1_LCPLL_REFCLK_MAP4 (HS1_LCPLL_REFCLK_MAP4_REG),
    .HS1_LCPLL_REFCLK_MAP5 (HS1_LCPLL_REFCLK_MAP5_REG),
    .HS1_LCPLL_REFCLK_MAP6 (HS1_LCPLL_REFCLK_MAP6_REG),
    .HS1_LCPLL_REFCLK_MAP7 (HS1_LCPLL_REFCLK_MAP7_REG),
    .HSCLK0_HSDIST_CFG (HSCLK0_HSDIST_CFG_REG),
    .HSCLK0_INSTANTIATED (HSCLK0_INSTANTIATED_REG),
    .HSCLK0_LCPLL_CFG0 (HSCLK0_LCPLL_CFG0_REG),
    .HSCLK0_LCPLL_CFG1 (HSCLK0_LCPLL_CFG1_REG),
    .HSCLK0_LCPLL_CFG2 (HSCLK0_LCPLL_CFG2_REG),
    .HSCLK0_LCPLL_LGC_CFG0 (HSCLK0_LCPLL_LGC_CFG0_REG),
    .HSCLK0_LCPLL_LGC_CFG1 (HSCLK0_LCPLL_LGC_CFG1_REG),
    .HSCLK0_LCPLL_LGC_CFG2 (HSCLK0_LCPLL_LGC_CFG2_REG),
    .HSCLK0_RXRECCLK_SEL (HSCLK0_RXRECCLK_SEL_REG),
    .HSCLK1_HSDIST_CFG (HSCLK1_HSDIST_CFG_REG),
    .HSCLK1_INSTANTIATED (HSCLK1_INSTANTIATED_REG),
    .HSCLK1_LCPLL_CFG0 (HSCLK1_LCPLL_CFG0_REG),
    .HSCLK1_LCPLL_CFG1 (HSCLK1_LCPLL_CFG1_REG),
    .HSCLK1_LCPLL_CFG2 (HSCLK1_LCPLL_CFG2_REG),
    .HSCLK1_LCPLL_LGC_CFG0 (HSCLK1_LCPLL_LGC_CFG0_REG),
    .HSCLK1_LCPLL_LGC_CFG1 (HSCLK1_LCPLL_LGC_CFG1_REG),
    .HSCLK1_LCPLL_LGC_CFG2 (HSCLK1_LCPLL_LGC_CFG2_REG),
    .HSCLK1_RXRECCLK_SEL (HSCLK1_RXRECCLK_SEL_REG),
    .MST_RESET_CFG (MST_RESET_CFG_REG),
    .PIN_CFG0 (PIN_CFG0_REG),
    .POR_CFG (POR_CFG_REG),
    .QUAD_INSTANTIATED (QUAD_INSTANTIATED_REG),
    .QUAD_SIM_MODE (QUAD_SIM_MODE_REG),
    .QUAD_SIM_RESET_SPEEDUP (QUAD_SIM_RESET_SPEEDUP_REG),
    .RCALBG0_CFG0 (RCALBG0_CFG0_REG),
    .RCALBG0_CFG1 (RCALBG0_CFG1_REG),
    .RCALBG0_CFG2 (RCALBG0_CFG2_REG),
    .RCALBG0_CFG3 (RCALBG0_CFG3_REG),
    .RCALBG0_CFG4 (RCALBG0_CFG4_REG),
    .RCALBG0_CFG5 (RCALBG0_CFG5_REG),
    .RCALBG1_CFG0 (RCALBG1_CFG0_REG),
    .RCALBG1_CFG1 (RCALBG1_CFG1_REG),
    .RCALBG1_CFG2 (RCALBG1_CFG2_REG),
    .RCALBG1_CFG3 (RCALBG1_CFG3_REG),
    .RCALBG1_CFG4 (RCALBG1_CFG4_REG),
    .RCALBG1_CFG5 (RCALBG1_CFG5_REG),
    .RXRSTDONE_DIST_SEL (RXRSTDONE_DIST_SEL_REG),
    .SIM_VERSION (SIM_VERSION_REG),
    .TERMPROG_CFG (TERMPROG_CFG_REG),
    .TXRSTDONE_DIST_SEL (TXRSTDONE_DIST_SEL_REG),
    .UB_CFG0 (UB_CFG0_REG),
    .APB3PRDATA (APB3PRDATA_out),
    .APB3PREADY (APB3PREADY_out),
    .APB3PSLVERR (APB3PSLVERR_out),
    .CH0_DMONITOROUT (CH0_DMONITOROUT_out),
    .CH0_DMONITOROUTCLK (CH0_DMONITOROUTCLK_out),
    .CH0_EYESCANDATAERROR (CH0_EYESCANDATAERROR_out),
    //.CH0_GTMTXN (CH0_GTMTXN_out),
    //.CH0_GTMTXP (CH0_GTMTXP_out),
    .CH0_GTMTXN (CH0_GTMTXN_integer),
    .CH0_GTMTXP (CH0_GTMTXP_integer),
    .CH0_ILORESETDONE (CH0_ILORESETDONE_out),
    .CH0_PCSRSVDOUT (CH0_PCSRSVDOUT_out),
    .CH0_PINRSVDAS (CH0_PINRSVDAS_out),
    .CH0_REFDEBUGOUT (CH0_REFDEBUGOUT_out),
    .CH0_RESETEXCEPTION (CH0_RESETEXCEPTION_out),
    .CH0_RXBUFSTATUS (CH0_RXBUFSTATUS_out),
    .CH0_RXCDRLOCK (CH0_RXCDRLOCK_out),
    .CH0_RXCDRPHDONE (CH0_RXCDRPHDONE_out),
    .CH0_RXDATA (CH0_RXDATA_out),
    .CH0_RXDEBUGPCSOUT (CH0_RXDEBUGPCSOUT_out),
    .CH0_RXOUTCLK (CH0_RXOUTCLK_out),
    .CH0_RXPMARESETDONE (CH0_RXPMARESETDONE_out),
    .CH0_RXPRBSERR (CH0_RXPRBSERR_out),
    .CH0_RXPRBSLOCKED (CH0_RXPRBSLOCKED_out),
    .CH0_RXPROGDIVRESETDONE (CH0_RXPROGDIVRESETDONE_out),
    .CH0_RXRESETDONE (CH0_RXRESETDONE_out),
    .CH0_SCANCNTRLOUT (CH0_SCANCNTRLOUT_out),
    .CH0_SCANOUT (CH0_SCANOUT_out),
    .CH0_TXBUFSTATUS (CH0_TXBUFSTATUS_out),
    .CH0_TXDCCDONE (CH0_TXDCCDONE_out),
    .CH0_TXDEBUGPCSOUT (CH0_TXDEBUGPCSOUT_out),
    .CH0_TXOUTCLK (CH0_TXOUTCLK_out),
    .CH0_TXPMARESETDONE (CH0_TXPMARESETDONE_out),
    .CH0_TXPROGDIVRESETDONE (CH0_TXPROGDIVRESETDONE_out),
    .CH0_TXRESETDONE (CH0_TXRESETDONE_out),
    .CH1_DMONITOROUT (CH1_DMONITOROUT_out),
    .CH1_DMONITOROUTCLK (CH1_DMONITOROUTCLK_out),
    .CH1_EYESCANDATAERROR (CH1_EYESCANDATAERROR_out),
    //.CH1_GTMTXN (CH1_GTMTXN_out),
    //.CH1_GTMTXP (CH1_GTMTXP_out),
    .CH1_GTMTXN (CH1_GTMTXN_integer),
    .CH1_GTMTXP (CH1_GTMTXP_integer),
    .CH1_ILORESETDONE (CH1_ILORESETDONE_out),
    .CH1_PCSRSVDOUT (CH1_PCSRSVDOUT_out),
    .CH1_PINRSVDAS (CH1_PINRSVDAS_out),
    .CH1_REFDEBUGOUT (CH1_REFDEBUGOUT_out),
    .CH1_RESETEXCEPTION (CH1_RESETEXCEPTION_out),
    .CH1_RXBUFSTATUS (CH1_RXBUFSTATUS_out),
    .CH1_RXCDRLOCK (CH1_RXCDRLOCK_out),
    .CH1_RXCDRPHDONE (CH1_RXCDRPHDONE_out),
    .CH1_RXDATA (CH1_RXDATA_out),
    .CH1_RXDEBUGPCSOUT (CH1_RXDEBUGPCSOUT_out),
    .CH1_RXOUTCLK (CH1_RXOUTCLK_out),
    .CH1_RXPMARESETDONE (CH1_RXPMARESETDONE_out),
    .CH1_RXPRBSERR (CH1_RXPRBSERR_out),
    .CH1_RXPRBSLOCKED (CH1_RXPRBSLOCKED_out),
    .CH1_RXPROGDIVRESETDONE (CH1_RXPROGDIVRESETDONE_out),
    .CH1_RXRESETDONE (CH1_RXRESETDONE_out),
    .CH1_SCANCNTRLOUT (CH1_SCANCNTRLOUT_out),
    .CH1_SCANOUT (CH1_SCANOUT_out),
    .CH1_TXBUFSTATUS (CH1_TXBUFSTATUS_out),
    .CH1_TXDCCDONE (CH1_TXDCCDONE_out),
    .CH1_TXDEBUGPCSOUT (CH1_TXDEBUGPCSOUT_out),
    .CH1_TXOUTCLK (CH1_TXOUTCLK_out),
    .CH1_TXPMARESETDONE (CH1_TXPMARESETDONE_out),
    .CH1_TXPROGDIVRESETDONE (CH1_TXPROGDIVRESETDONE_out),
    .CH1_TXRESETDONE (CH1_TXRESETDONE_out),
    .CH2_DMONITOROUT (CH2_DMONITOROUT_out),
    .CH2_DMONITOROUTCLK (CH2_DMONITOROUTCLK_out),
    .CH2_EYESCANDATAERROR (CH2_EYESCANDATAERROR_out),
    //.CH2_GTMTXN (CH2_GTMTXN_out),
    //.CH2_GTMTXP (CH2_GTMTXP_out),
    .CH2_GTMTXN (CH2_GTMTXN_integer),
    .CH2_GTMTXP (CH2_GTMTXP_integer),
    .CH2_ILORESETDONE (CH2_ILORESETDONE_out),
    .CH2_PCSRSVDOUT (CH2_PCSRSVDOUT_out),
    .CH2_PINRSVDAS (CH2_PINRSVDAS_out),
    .CH2_REFDEBUGOUT (CH2_REFDEBUGOUT_out),
    .CH2_RESETEXCEPTION (CH2_RESETEXCEPTION_out),
    .CH2_RXBUFSTATUS (CH2_RXBUFSTATUS_out),
    .CH2_RXCDRLOCK (CH2_RXCDRLOCK_out),
    .CH2_RXCDRPHDONE (CH2_RXCDRPHDONE_out),
    .CH2_RXDATA (CH2_RXDATA_out),
    .CH2_RXDEBUGPCSOUT (CH2_RXDEBUGPCSOUT_out),
    .CH2_RXOUTCLK (CH2_RXOUTCLK_out),
    .CH2_RXPMARESETDONE (CH2_RXPMARESETDONE_out),
    .CH2_RXPRBSERR (CH2_RXPRBSERR_out),
    .CH2_RXPRBSLOCKED (CH2_RXPRBSLOCKED_out),
    .CH2_RXPROGDIVRESETDONE (CH2_RXPROGDIVRESETDONE_out),
    .CH2_RXRESETDONE (CH2_RXRESETDONE_out),
    .CH2_SCANCNTRLOUT (CH2_SCANCNTRLOUT_out),
    .CH2_SCANOUT (CH2_SCANOUT_out),
    .CH2_TXBUFSTATUS (CH2_TXBUFSTATUS_out),
    .CH2_TXDCCDONE (CH2_TXDCCDONE_out),
    .CH2_TXDEBUGPCSOUT (CH2_TXDEBUGPCSOUT_out),
    .CH2_TXOUTCLK (CH2_TXOUTCLK_out),
    .CH2_TXPMARESETDONE (CH2_TXPMARESETDONE_out),
    .CH2_TXPROGDIVRESETDONE (CH2_TXPROGDIVRESETDONE_out),
    .CH2_TXRESETDONE (CH2_TXRESETDONE_out),
    .CH3_DMONITOROUT (CH3_DMONITOROUT_out),
    .CH3_DMONITOROUTCLK (CH3_DMONITOROUTCLK_out),
    .CH3_EYESCANDATAERROR (CH3_EYESCANDATAERROR_out),
    //.CH3_GTMTXN (CH3_GTMTXN_out),
    //.CH3_GTMTXP (CH3_GTMTXP_out),
    .CH3_GTMTXN (CH3_GTMTXN_integer),
    .CH3_GTMTXP (CH3_GTMTXP_integer),
    .CH3_ILORESETDONE (CH3_ILORESETDONE_out),
    .CH3_PCSRSVDOUT (CH3_PCSRSVDOUT_out),
    .CH3_PINRSVDAS (CH3_PINRSVDAS_out),
    .CH3_REFDEBUGOUT (CH3_REFDEBUGOUT_out),
    .CH3_RESETEXCEPTION (CH3_RESETEXCEPTION_out),
    .CH3_RXBUFSTATUS (CH3_RXBUFSTATUS_out),
    .CH3_RXCDRLOCK (CH3_RXCDRLOCK_out),
    .CH3_RXCDRPHDONE (CH3_RXCDRPHDONE_out),
    .CH3_RXDATA (CH3_RXDATA_out),
    .CH3_RXDEBUGPCSOUT (CH3_RXDEBUGPCSOUT_out),
    .CH3_RXOUTCLK (CH3_RXOUTCLK_out),
    .CH3_RXPMARESETDONE (CH3_RXPMARESETDONE_out),
    .CH3_RXPRBSERR (CH3_RXPRBSERR_out),
    .CH3_RXPRBSLOCKED (CH3_RXPRBSLOCKED_out),
    .CH3_RXPROGDIVRESETDONE (CH3_RXPROGDIVRESETDONE_out),
    .CH3_RXRESETDONE (CH3_RXRESETDONE_out),
    .CH3_SCANCNTRLOUT (CH3_SCANCNTRLOUT_out),
    .CH3_SCANOUT (CH3_SCANOUT_out),
    .CH3_TXBUFSTATUS (CH3_TXBUFSTATUS_out),
    .CH3_TXDCCDONE (CH3_TXDCCDONE_out),
    .CH3_TXDEBUGPCSOUT (CH3_TXDEBUGPCSOUT_out),
    .CH3_TXOUTCLK (CH3_TXOUTCLK_out),
    .CH3_TXPMARESETDONE (CH3_TXPMARESETDONE_out),
    .CH3_TXPROGDIVRESETDONE (CH3_TXPROGDIVRESETDONE_out),
    .CH3_TXRESETDONE (CH3_TXRESETDONE_out),
    .CORRECTERR (CORRECTERR_out),
    .CTRLRSVDOUT (CTRLRSVDOUT_out),
    .DEBUGTRACETDATA (DEBUGTRACETDATA_out),
    .DEBUGTRACETVALID (DEBUGTRACETVALID_out),
    .GPO (GPO_out),
    .GTPOWERGOOD (GTPOWERGOOD_out),
    .HSCLK0_LCPLLFBCLKLOST (HSCLK0_LCPLLFBCLKLOST_out),
    .HSCLK0_LCPLLLOCK (HSCLK0_LCPLLLOCK_out),
    .HSCLK0_LCPLLREFCLKLOST (HSCLK0_LCPLLREFCLKLOST_out),
    .HSCLK0_LCPLLREFCLKMONITOR (HSCLK0_LCPLLREFCLKMONITOR_out),
    .HSCLK0_RXRECCLKOUT0 (HSCLK0_RXRECCLKOUT0_out),
    .HSCLK0_RXRECCLKOUT1 (HSCLK0_RXRECCLKOUT1_out),
    .HSCLK0_RXRECCLKSEL (HSCLK0_RXRECCLKSEL_out),
    .HSCLK1_LCPLLFBCLKLOST (HSCLK1_LCPLLFBCLKLOST_out),
    .HSCLK1_LCPLLLOCK (HSCLK1_LCPLLLOCK_out),
    .HSCLK1_LCPLLREFCLKLOST (HSCLK1_LCPLLREFCLKLOST_out),
    .HSCLK1_LCPLLREFCLKMONITOR (HSCLK1_LCPLLREFCLKMONITOR_out),
    .HSCLK1_RXRECCLKOUT0 (HSCLK1_RXRECCLKOUT0_out),
    .HSCLK1_RXRECCLKOUT1 (HSCLK1_RXRECCLKOUT1_out),
    .HSCLK1_RXRECCLKSEL (HSCLK1_RXRECCLKSEL_out),
    .M0_AXIS_TDATA (M0_AXIS_TDATA_out),
    .M0_AXIS_TLAST (M0_AXIS_TLAST_out),
    .M0_AXIS_TVALID (M0_AXIS_TVALID_out),
    .M1_AXIS_TDATA (M1_AXIS_TDATA_out),
    .M1_AXIS_TLAST (M1_AXIS_TLAST_out),
    .M1_AXIS_TVALID (M1_AXIS_TVALID_out),
    .M2_AXIS_TDATA (M2_AXIS_TDATA_out),
    .M2_AXIS_TLAST (M2_AXIS_TLAST_out),
    .M2_AXIS_TVALID (M2_AXIS_TVALID_out),
    .M3_AXIS_TDATA (M3_AXIS_TDATA_out),
    .M3_AXIS_TLAST (M3_AXIS_TLAST_out),
    .M3_AXIS_TVALID (M3_AXIS_TVALID_out),
    .MSTRXRESETDONE (MSTRXRESETDONE_out),
    .MSTTXRESETDONE (MSTTXRESETDONE_out),
    .RCALCMP (RCALCMP_out),
    .RCALOUT (RCALOUT_out),
    .REFCLK0_CLKTESTSIGINT (REFCLK0_CLKTESTSIGINT_out),
    .REFCLK0_GTREFCLKPDINT (REFCLK0_GTREFCLKPDINT_out),
    .REFCLK1_CLKTESTSIGINT (REFCLK1_CLKTESTSIGINT_out),
    .REFCLK1_GTREFCLKPDINT (REFCLK1_GTREFCLKPDINT_out),
    .RESETDONE_NORTHOUT (RESETDONE_NORTHOUT_out),
    .RESETDONE_SOUTHOUT (RESETDONE_SOUTHOUT_out),
    .S0_AXIS_TREADY (S0_AXIS_TREADY_out),
    .S1_AXIS_TREADY (S1_AXIS_TREADY_out),
    .S2_AXIS_TREADY (S2_AXIS_TREADY_out),
    .S3_AXIS_TREADY (S3_AXIS_TREADY_out),
    .SCANCNTRLOUT (SCANCNTRLOUT_out),
    .SCANOUT (SCANOUT_out),
    .TRIGACKIN0 (TRIGACKIN0_out),
    .TRIGOUT0 (TRIGOUT0_out),
    .UBINTERRUPT (UBINTERRUPT_out),
    .UBTXUART (UBTXUART_out),
    .UNCORRECTERR (UNCORRECTERR_out),
    .APB3CLK (APB3CLK_in),
    .APB3PADDR (APB3PADDR_in),
    .APB3PENABLE (APB3PENABLE_in),
    .APB3PRESETN (APB3PRESETN_in),
    .APB3PSEL (APB3PSEL_in),
    .APB3PWDATA (APB3PWDATA_in),
    .APB3PWRITE (APB3PWRITE_in),
    .AXISCLK (AXISCLK_in),
    .BGBYPASSB (BGBYPASSB_in),
    .BGMONITORENB (BGMONITORENB_in),
    .BGPDB (BGPDB_in),
    .BGRCALOVRD (BGRCALOVRD_in),
    .BGRCALOVRDENB (BGRCALOVRDENB_in),
    .CH0_BSR_SERIAL (CH0_BSR_SERIAL_in),
    .CH0_CDRFREQOS (CH0_CDRFREQOS_in),
    .CH0_CDRINCPCTRL (CH0_CDRINCPCTRL_in),
    .CH0_CDRSTEPDIR (CH0_CDRSTEPDIR_in),
    .CH0_CDRSTEPSQ (CH0_CDRSTEPSQ_in),
    .CH0_CDRSTEPSX (CH0_CDRSTEPSX_in),
    .CH0_CLKRSVD0 (CH0_CLKRSVD0_in),
    .CH0_CLKRSVD1 (CH0_CLKRSVD1_in),
    .CH0_CSSDSTOPCLKB (CH0_CSSDSTOPCLKB_in),
    .CH0_DMONFIFORESET (CH0_DMONFIFORESET_in),
    .CH0_DMONITORCLK (CH0_DMONITORCLK_in),
    .CH0_EDTUPDATEB (CH0_EDTUPDATEB_in),
    .CH0_EYESCANRESET (CH0_EYESCANRESET_in),
    .CH0_EYESCANTRIGGER (CH0_EYESCANTRIGGER_in),
    //.CH0_GTMRXN (CH0_GTMRXN_in),
    //.CH0_GTMRXP (CH0_GTMRXP_in),
    .CH0_GTMRXN (CH0_GTMRXN_integer),
    .CH0_GTMRXP (CH0_GTMRXP_integer),
    .CH0_GTRSVD (CH0_GTRSVD_in),
    .CH0_GTRXRESET (CH0_GTRXRESET_in),
    .CH0_GTTXRESET (CH0_GTTXRESET_in),
    .CH0_ILORESET (CH0_ILORESET_in),
    .CH0_ILORESETMASK (CH0_ILORESETMASK_in),
    .CH0_LOOPBACK (CH0_LOOPBACK_in),
    .CH0_PCSRSVDIN (CH0_PCSRSVDIN_in),
    .CH0_RXCDRHOLD (CH0_RXCDRHOLD_in),
    .CH0_RXCDROVRDEN (CH0_RXCDROVRDEN_in),
    .CH0_RXCDRRESET (CH0_RXCDRRESET_in),
    .CH0_RXLATCLK (CH0_RXLATCLK_in),
    .CH0_RXPCSRESETMASK (CH0_RXPCSRESETMASK_in),
    .CH0_RXPD (CH0_RXPD_in),
    .CH0_RXPERST (CH0_RXPERST_in),
    .CH0_RXPMARESETMASK (CH0_RXPMARESETMASK_in),
    .CH0_RXPOLARITY (CH0_RXPOLARITY_in),
    .CH0_RXPRBSCNTRESET (CH0_RXPRBSCNTRESET_in),
    .CH0_RXPRBSCNTSTOP (CH0_RXPRBSCNTSTOP_in),
    .CH0_RXPRBSSEL (CH0_RXPRBSSEL_in),
    .CH0_RXPROGDIVRESET (CH0_RXPROGDIVRESET_in),
    .CH0_RXQPRBSEN (CH0_RXQPRBSEN_in),
    .CH0_RXRATE (CH0_RXRATE_in),
    .CH0_RXRESETMODE (CH0_RXRESETMODE_in),
    .CH0_RXRSV0 (CH0_RXRSV0_in),
    .CH0_RXRSV1 (CH0_RXRSV1_in),
    .CH0_RXRSV2 (CH0_RXRSV2_in),
    .CH0_RXUSERRDY (CH0_RXUSERRDY_in),
    .CH0_RXUSRCLK (CH0_RXUSRCLK_in),
    .CH0_SCANCLKB (CH0_SCANCLKB_in),
    .CH0_SCANCNTRLIN (CH0_SCANCNTRLIN_in),
    .CH0_SCANENB (CH0_SCANENB_in),
    .CH0_SCANIN (CH0_SCANIN_in),
    .CH0_SCANRSTB (CH0_SCANRSTB_in),
    .CH0_TSTCLK0 (CH0_TSTCLK0_in),
    .CH0_TSTCLK1 (CH0_TSTCLK1_in),
    .CH0_TXDATA (CH0_TXDATA_in),
    .CH0_TXINHIBIT (CH0_TXINHIBIT_in),
    .CH0_TXLATCLK (CH0_TXLATCLK_in),
    .CH0_TXMAINCURSOR (CH0_TXMAINCURSOR_in),
    .CH0_TXPCSRESETMASK (CH0_TXPCSRESETMASK_in),
    .CH0_TXPD (CH0_TXPD_in),
    .CH0_TXPERST (CH0_TXPERST_in),
    .CH0_TXPISOPD (CH0_TXPISOPD_in),
    .CH0_TXPMARESETMASK (CH0_TXPMARESETMASK_in),
    .CH0_TXPOLARITY (CH0_TXPOLARITY_in),
    .CH0_TXPOSTCURSOR (CH0_TXPOSTCURSOR_in),
    .CH0_TXPRBSFORCEERR (CH0_TXPRBSFORCEERR_in),
    .CH0_TXPRBSSEL (CH0_TXPRBSSEL_in),
    .CH0_TXPRECURSOR (CH0_TXPRECURSOR_in),
    .CH0_TXPRECURSOR2 (CH0_TXPRECURSOR2_in),
    .CH0_TXPRECURSOR3 (CH0_TXPRECURSOR3_in),
    .CH0_TXPROGDIVRESET (CH0_TXPROGDIVRESET_in),
    .CH0_TXQPRBSEN (CH0_TXQPRBSEN_in),
    .CH0_TXRATE (CH0_TXRATE_in),
    .CH0_TXRESETMODE (CH0_TXRESETMODE_in),
    .CH0_TXRSV0 (CH0_TXRSV0_in),
    .CH0_TXRSV1 (CH0_TXRSV1_in),
    .CH0_TXUSERRDY (CH0_TXUSERRDY_in),
    .CH0_TXUSRCLK (CH0_TXUSRCLK_in),
    .CH1_BSR_SERIAL (CH1_BSR_SERIAL_in),
    .CH1_CDRFREQOS (CH1_CDRFREQOS_in),
    .CH1_CDRINCPCTRL (CH1_CDRINCPCTRL_in),
    .CH1_CDRSTEPDIR (CH1_CDRSTEPDIR_in),
    .CH1_CDRSTEPSQ (CH1_CDRSTEPSQ_in),
    .CH1_CDRSTEPSX (CH1_CDRSTEPSX_in),
    .CH1_CLKRSVD0 (CH1_CLKRSVD0_in),
    .CH1_CLKRSVD1 (CH1_CLKRSVD1_in),
    .CH1_CSSDSTOPCLKB (CH1_CSSDSTOPCLKB_in),
    .CH1_DMONFIFORESET (CH1_DMONFIFORESET_in),
    .CH1_DMONITORCLK (CH1_DMONITORCLK_in),
    .CH1_EDTUPDATEB (CH1_EDTUPDATEB_in),
    .CH1_EYESCANRESET (CH1_EYESCANRESET_in),
    .CH1_EYESCANTRIGGER (CH1_EYESCANTRIGGER_in),
    //.CH1_GTMRXN (CH1_GTMRXN_in),
    //.CH1_GTMRXP (CH1_GTMRXP_in),
    .CH1_GTMRXN (CH1_GTMRXN_integer),
    .CH1_GTMRXP (CH1_GTMRXP_integer),
    .CH1_GTRSVD (CH1_GTRSVD_in),
    .CH1_GTRXRESET (CH1_GTRXRESET_in),
    .CH1_GTTXRESET (CH1_GTTXRESET_in),
    .CH1_ILORESET (CH1_ILORESET_in),
    .CH1_ILORESETMASK (CH1_ILORESETMASK_in),
    .CH1_LOOPBACK (CH1_LOOPBACK_in),
    .CH1_PCSRSVDIN (CH1_PCSRSVDIN_in),
    .CH1_RXCDRHOLD (CH1_RXCDRHOLD_in),
    .CH1_RXCDROVRDEN (CH1_RXCDROVRDEN_in),
    .CH1_RXCDRRESET (CH1_RXCDRRESET_in),
    .CH1_RXLATCLK (CH1_RXLATCLK_in),
    .CH1_RXPCSRESETMASK (CH1_RXPCSRESETMASK_in),
    .CH1_RXPD (CH1_RXPD_in),
    .CH1_RXPERST (CH1_RXPERST_in),
    .CH1_RXPMARESETMASK (CH1_RXPMARESETMASK_in),
    .CH1_RXPOLARITY (CH1_RXPOLARITY_in),
    .CH1_RXPRBSCNTRESET (CH1_RXPRBSCNTRESET_in),
    .CH1_RXPRBSCNTSTOP (CH1_RXPRBSCNTSTOP_in),
    .CH1_RXPRBSSEL (CH1_RXPRBSSEL_in),
    .CH1_RXPROGDIVRESET (CH1_RXPROGDIVRESET_in),
    .CH1_RXQPRBSEN (CH1_RXQPRBSEN_in),
    .CH1_RXRATE (CH1_RXRATE_in),
    .CH1_RXRESETMODE (CH1_RXRESETMODE_in),
    .CH1_RXRSV0 (CH1_RXRSV0_in),
    .CH1_RXRSV1 (CH1_RXRSV1_in),
    .CH1_RXRSV2 (CH1_RXRSV2_in),
    .CH1_RXUSERRDY (CH1_RXUSERRDY_in),
    .CH1_RXUSRCLK (CH1_RXUSRCLK_in),
    .CH1_SCANCLKB (CH1_SCANCLKB_in),
    .CH1_SCANCNTRLIN (CH1_SCANCNTRLIN_in),
    .CH1_SCANENB (CH1_SCANENB_in),
    .CH1_SCANIN (CH1_SCANIN_in),
    .CH1_SCANRSTB (CH1_SCANRSTB_in),
    .CH1_TSTCLK0 (CH1_TSTCLK0_in),
    .CH1_TSTCLK1 (CH1_TSTCLK1_in),
    .CH1_TXDATA (CH1_TXDATA_in),
    .CH1_TXINHIBIT (CH1_TXINHIBIT_in),
    .CH1_TXLATCLK (CH1_TXLATCLK_in),
    .CH1_TXMAINCURSOR (CH1_TXMAINCURSOR_in),
    .CH1_TXPCSRESETMASK (CH1_TXPCSRESETMASK_in),
    .CH1_TXPD (CH1_TXPD_in),
    .CH1_TXPERST (CH1_TXPERST_in),
    .CH1_TXPISOPD (CH1_TXPISOPD_in),
    .CH1_TXPMARESETMASK (CH1_TXPMARESETMASK_in),
    .CH1_TXPOLARITY (CH1_TXPOLARITY_in),
    .CH1_TXPOSTCURSOR (CH1_TXPOSTCURSOR_in),
    .CH1_TXPRBSFORCEERR (CH1_TXPRBSFORCEERR_in),
    .CH1_TXPRBSSEL (CH1_TXPRBSSEL_in),
    .CH1_TXPRECURSOR (CH1_TXPRECURSOR_in),
    .CH1_TXPRECURSOR2 (CH1_TXPRECURSOR2_in),
    .CH1_TXPRECURSOR3 (CH1_TXPRECURSOR3_in),
    .CH1_TXPROGDIVRESET (CH1_TXPROGDIVRESET_in),
    .CH1_TXQPRBSEN (CH1_TXQPRBSEN_in),
    .CH1_TXRATE (CH1_TXRATE_in),
    .CH1_TXRESETMODE (CH1_TXRESETMODE_in),
    .CH1_TXRSV0 (CH1_TXRSV0_in),
    .CH1_TXRSV1 (CH1_TXRSV1_in),
    .CH1_TXUSERRDY (CH1_TXUSERRDY_in),
    .CH1_TXUSRCLK (CH1_TXUSRCLK_in),
    .CH2_BSR_SERIAL (CH2_BSR_SERIAL_in),
    .CH2_CDRFREQOS (CH2_CDRFREQOS_in),
    .CH2_CDRINCPCTRL (CH2_CDRINCPCTRL_in),
    .CH2_CDRSTEPDIR (CH2_CDRSTEPDIR_in),
    .CH2_CDRSTEPSQ (CH2_CDRSTEPSQ_in),
    .CH2_CDRSTEPSX (CH2_CDRSTEPSX_in),
    .CH2_CLKRSVD0 (CH2_CLKRSVD0_in),
    .CH2_CLKRSVD1 (CH2_CLKRSVD1_in),
    .CH2_CSSDSTOPCLKB (CH2_CSSDSTOPCLKB_in),
    .CH2_DMONFIFORESET (CH2_DMONFIFORESET_in),
    .CH2_DMONITORCLK (CH2_DMONITORCLK_in),
    .CH2_EDTUPDATEB (CH2_EDTUPDATEB_in),
    .CH2_EYESCANRESET (CH2_EYESCANRESET_in),
    .CH2_EYESCANTRIGGER (CH2_EYESCANTRIGGER_in),
    //.CH2_GTMRXN (CH2_GTMRXN_in),
    //.CH2_GTMRXP (CH2_GTMRXP_in),
    .CH2_GTMRXN (CH2_GTMRXN_integer),
    .CH2_GTMRXP (CH2_GTMRXP_integer),
    .CH2_GTRSVD (CH2_GTRSVD_in),
    .CH2_GTRXRESET (CH2_GTRXRESET_in),
    .CH2_GTTXRESET (CH2_GTTXRESET_in),
    .CH2_ILORESET (CH2_ILORESET_in),
    .CH2_ILORESETMASK (CH2_ILORESETMASK_in),
    .CH2_LOOPBACK (CH2_LOOPBACK_in),
    .CH2_PCSRSVDIN (CH2_PCSRSVDIN_in),
    .CH2_RXCDRHOLD (CH2_RXCDRHOLD_in),
    .CH2_RXCDROVRDEN (CH2_RXCDROVRDEN_in),
    .CH2_RXCDRRESET (CH2_RXCDRRESET_in),
    .CH2_RXLATCLK (CH2_RXLATCLK_in),
    .CH2_RXPCSRESETMASK (CH2_RXPCSRESETMASK_in),
    .CH2_RXPD (CH2_RXPD_in),
    .CH2_RXPERST (CH2_RXPERST_in),
    .CH2_RXPMARESETMASK (CH2_RXPMARESETMASK_in),
    .CH2_RXPOLARITY (CH2_RXPOLARITY_in),
    .CH2_RXPRBSCNTRESET (CH2_RXPRBSCNTRESET_in),
    .CH2_RXPRBSCNTSTOP (CH2_RXPRBSCNTSTOP_in),
    .CH2_RXPRBSSEL (CH2_RXPRBSSEL_in),
    .CH2_RXPROGDIVRESET (CH2_RXPROGDIVRESET_in),
    .CH2_RXQPRBSEN (CH2_RXQPRBSEN_in),
    .CH2_RXRATE (CH2_RXRATE_in),
    .CH2_RXRESETMODE (CH2_RXRESETMODE_in),
    .CH2_RXRSV0 (CH2_RXRSV0_in),
    .CH2_RXRSV1 (CH2_RXRSV1_in),
    .CH2_RXRSV2 (CH2_RXRSV2_in),
    .CH2_RXUSERRDY (CH2_RXUSERRDY_in),
    .CH2_RXUSRCLK (CH2_RXUSRCLK_in),
    .CH2_SCANCLKB (CH2_SCANCLKB_in),
    .CH2_SCANCNTRLIN (CH2_SCANCNTRLIN_in),
    .CH2_SCANENB (CH2_SCANENB_in),
    .CH2_SCANIN (CH2_SCANIN_in),
    .CH2_SCANRSTB (CH2_SCANRSTB_in),
    .CH2_TSTCLK0 (CH2_TSTCLK0_in),
    .CH2_TSTCLK1 (CH2_TSTCLK1_in),
    .CH2_TXDATA (CH2_TXDATA_in),
    .CH2_TXINHIBIT (CH2_TXINHIBIT_in),
    .CH2_TXLATCLK (CH2_TXLATCLK_in),
    .CH2_TXMAINCURSOR (CH2_TXMAINCURSOR_in),
    .CH2_TXPCSRESETMASK (CH2_TXPCSRESETMASK_in),
    .CH2_TXPD (CH2_TXPD_in),
    .CH2_TXPERST (CH2_TXPERST_in),
    .CH2_TXPISOPD (CH2_TXPISOPD_in),
    .CH2_TXPMARESETMASK (CH2_TXPMARESETMASK_in),
    .CH2_TXPOLARITY (CH2_TXPOLARITY_in),
    .CH2_TXPOSTCURSOR (CH2_TXPOSTCURSOR_in),
    .CH2_TXPRBSFORCEERR (CH2_TXPRBSFORCEERR_in),
    .CH2_TXPRBSSEL (CH2_TXPRBSSEL_in),
    .CH2_TXPRECURSOR (CH2_TXPRECURSOR_in),
    .CH2_TXPRECURSOR2 (CH2_TXPRECURSOR2_in),
    .CH2_TXPRECURSOR3 (CH2_TXPRECURSOR3_in),
    .CH2_TXPROGDIVRESET (CH2_TXPROGDIVRESET_in),
    .CH2_TXQPRBSEN (CH2_TXQPRBSEN_in),
    .CH2_TXRATE (CH2_TXRATE_in),
    .CH2_TXRESETMODE (CH2_TXRESETMODE_in),
    .CH2_TXRSV0 (CH2_TXRSV0_in),
    .CH2_TXRSV1 (CH2_TXRSV1_in),
    .CH2_TXUSERRDY (CH2_TXUSERRDY_in),
    .CH2_TXUSRCLK (CH2_TXUSRCLK_in),
    .CH3_BSR_SERIAL (CH3_BSR_SERIAL_in),
    .CH3_CDRFREQOS (CH3_CDRFREQOS_in),
    .CH3_CDRINCPCTRL (CH3_CDRINCPCTRL_in),
    .CH3_CDRSTEPDIR (CH3_CDRSTEPDIR_in),
    .CH3_CDRSTEPSQ (CH3_CDRSTEPSQ_in),
    .CH3_CDRSTEPSX (CH3_CDRSTEPSX_in),
    .CH3_CLKRSVD0 (CH3_CLKRSVD0_in),
    .CH3_CLKRSVD1 (CH3_CLKRSVD1_in),
    .CH3_CSSDSTOPCLKB (CH3_CSSDSTOPCLKB_in),
    .CH3_DMONFIFORESET (CH3_DMONFIFORESET_in),
    .CH3_DMONITORCLK (CH3_DMONITORCLK_in),
    .CH3_EDTUPDATEB (CH3_EDTUPDATEB_in),
    .CH3_EYESCANRESET (CH3_EYESCANRESET_in),
    .CH3_EYESCANTRIGGER (CH3_EYESCANTRIGGER_in),
    //.CH3_GTMRXN (CH3_GTMRXN_in),
    //.CH3_GTMRXP (CH3_GTMRXP_in),
    .CH3_GTMRXN (CH3_GTMRXN_integer),
    .CH3_GTMRXP (CH3_GTMRXP_integer),
    .CH3_GTRSVD (CH3_GTRSVD_in),
    .CH3_GTRXRESET (CH3_GTRXRESET_in),
    .CH3_GTTXRESET (CH3_GTTXRESET_in),
    .CH3_ILORESET (CH3_ILORESET_in),
    .CH3_ILORESETMASK (CH3_ILORESETMASK_in),
    .CH3_LOOPBACK (CH3_LOOPBACK_in),
    .CH3_PCSRSVDIN (CH3_PCSRSVDIN_in),
    .CH3_RXCDRHOLD (CH3_RXCDRHOLD_in),
    .CH3_RXCDROVRDEN (CH3_RXCDROVRDEN_in),
    .CH3_RXCDRRESET (CH3_RXCDRRESET_in),
    .CH3_RXLATCLK (CH3_RXLATCLK_in),
    .CH3_RXPCSRESETMASK (CH3_RXPCSRESETMASK_in),
    .CH3_RXPD (CH3_RXPD_in),
    .CH3_RXPERST (CH3_RXPERST_in),
    .CH3_RXPMARESETMASK (CH3_RXPMARESETMASK_in),
    .CH3_RXPOLARITY (CH3_RXPOLARITY_in),
    .CH3_RXPRBSCNTRESET (CH3_RXPRBSCNTRESET_in),
    .CH3_RXPRBSCNTSTOP (CH3_RXPRBSCNTSTOP_in),
    .CH3_RXPRBSSEL (CH3_RXPRBSSEL_in),
    .CH3_RXPROGDIVRESET (CH3_RXPROGDIVRESET_in),
    .CH3_RXQPRBSEN (CH3_RXQPRBSEN_in),
    .CH3_RXRATE (CH3_RXRATE_in),
    .CH3_RXRESETMODE (CH3_RXRESETMODE_in),
    .CH3_RXRSV0 (CH3_RXRSV0_in),
    .CH3_RXRSV1 (CH3_RXRSV1_in),
    .CH3_RXRSV2 (CH3_RXRSV2_in),
    .CH3_RXUSERRDY (CH3_RXUSERRDY_in),
    .CH3_RXUSRCLK (CH3_RXUSRCLK_in),
    .CH3_SCANCLKB (CH3_SCANCLKB_in),
    .CH3_SCANCNTRLIN (CH3_SCANCNTRLIN_in),
    .CH3_SCANENB (CH3_SCANENB_in),
    .CH3_SCANIN (CH3_SCANIN_in),
    .CH3_SCANRSTB (CH3_SCANRSTB_in),
    .CH3_TSTCLK0 (CH3_TSTCLK0_in),
    .CH3_TSTCLK1 (CH3_TSTCLK1_in),
    .CH3_TXDATA (CH3_TXDATA_in),
    .CH3_TXINHIBIT (CH3_TXINHIBIT_in),
    .CH3_TXLATCLK (CH3_TXLATCLK_in),
    .CH3_TXMAINCURSOR (CH3_TXMAINCURSOR_in),
    .CH3_TXPCSRESETMASK (CH3_TXPCSRESETMASK_in),
    .CH3_TXPD (CH3_TXPD_in),
    .CH3_TXPERST (CH3_TXPERST_in),
    .CH3_TXPISOPD (CH3_TXPISOPD_in),
    .CH3_TXPMARESETMASK (CH3_TXPMARESETMASK_in),
    .CH3_TXPOLARITY (CH3_TXPOLARITY_in),
    .CH3_TXPOSTCURSOR (CH3_TXPOSTCURSOR_in),
    .CH3_TXPRBSFORCEERR (CH3_TXPRBSFORCEERR_in),
    .CH3_TXPRBSSEL (CH3_TXPRBSSEL_in),
    .CH3_TXPRECURSOR (CH3_TXPRECURSOR_in),
    .CH3_TXPRECURSOR2 (CH3_TXPRECURSOR2_in),
    .CH3_TXPRECURSOR3 (CH3_TXPRECURSOR3_in),
    .CH3_TXPROGDIVRESET (CH3_TXPROGDIVRESET_in),
    .CH3_TXQPRBSEN (CH3_TXQPRBSEN_in),
    .CH3_TXRATE (CH3_TXRATE_in),
    .CH3_TXRESETMODE (CH3_TXRESETMODE_in),
    .CH3_TXRSV0 (CH3_TXRSV0_in),
    .CH3_TXRSV1 (CH3_TXRSV1_in),
    .CH3_TXUSERRDY (CH3_TXUSERRDY_in),
    .CH3_TXUSRCLK (CH3_TXUSRCLK_in),
    .COESTATUSDEBUG (COESTATUSDEBUG_in),
    .CSSDSTOPCLKB (CSSDSTOPCLKB_in),
    .CTRLRSVDIN (CTRLRSVDIN_in),
    .DEBUGTRACECLK (DEBUGTRACECLK_in),
    .DEBUGTRACEREADY (DEBUGTRACEREADY_in),
    .EDTUPDATEB (EDTUPDATEB_in),
    .GPI (GPI_in),
    .HSCLK0_LCPLLFBDIV (HSCLK0_LCPLLFBDIV_in),
    .HSCLK0_LCPLLGTGREFCLK (HSCLK0_LCPLLGTGREFCLK_in),
    .HSCLK0_LCPLLGTREFCLK0 (HSCLK0_LCPLLGTREFCLK0_in),
    .HSCLK0_LCPLLGTREFCLK1 (HSCLK0_LCPLLGTREFCLK1_in),
    .HSCLK0_LCPLLNORTHREFCLK0 (HSCLK0_LCPLLNORTHREFCLK0_in),
    .HSCLK0_LCPLLNORTHREFCLK1 (HSCLK0_LCPLLNORTHREFCLK1_in),
    .HSCLK0_LCPLLPD (HSCLK0_LCPLLPD_in),
    .HSCLK0_LCPLLREFCLKSEL (HSCLK0_LCPLLREFCLKSEL_in),
    .HSCLK0_LCPLLRESET (HSCLK0_LCPLLRESET_in),
    .HSCLK0_LCPLLRESETBYPASSMODE (HSCLK0_LCPLLRESETBYPASSMODE_in),
    .HSCLK0_LCPLLRESETMASK (HSCLK0_LCPLLRESETMASK_in),
    .HSCLK0_LCPLLSDMDATA (HSCLK0_LCPLLSDMDATA_in),
    .HSCLK0_LCPLLSDMTOGGLE (HSCLK0_LCPLLSDMTOGGLE_in),
    .HSCLK0_LCPLLSOUTHREFCLK0 (HSCLK0_LCPLLSOUTHREFCLK0_in),
    .HSCLK0_LCPLLSOUTHREFCLK1 (HSCLK0_LCPLLSOUTHREFCLK1_in),
    .HSCLK1_LCPLLFBDIV (HSCLK1_LCPLLFBDIV_in),
    .HSCLK1_LCPLLGTGREFCLK (HSCLK1_LCPLLGTGREFCLK_in),
    .HSCLK1_LCPLLGTREFCLK0 (HSCLK1_LCPLLGTREFCLK0_in),
    .HSCLK1_LCPLLGTREFCLK1 (HSCLK1_LCPLLGTREFCLK1_in),
    .HSCLK1_LCPLLNORTHREFCLK0 (HSCLK1_LCPLLNORTHREFCLK0_in),
    .HSCLK1_LCPLLNORTHREFCLK1 (HSCLK1_LCPLLNORTHREFCLK1_in),
    .HSCLK1_LCPLLPD (HSCLK1_LCPLLPD_in),
    .HSCLK1_LCPLLREFCLKSEL (HSCLK1_LCPLLREFCLKSEL_in),
    .HSCLK1_LCPLLRESET (HSCLK1_LCPLLRESET_in),
    .HSCLK1_LCPLLRESETBYPASSMODE (HSCLK1_LCPLLRESETBYPASSMODE_in),
    .HSCLK1_LCPLLRESETMASK (HSCLK1_LCPLLRESETMASK_in),
    .HSCLK1_LCPLLSDMDATA (HSCLK1_LCPLLSDMDATA_in),
    .HSCLK1_LCPLLSDMTOGGLE (HSCLK1_LCPLLSDMTOGGLE_in),
    .HSCLK1_LCPLLSOUTHREFCLK0 (HSCLK1_LCPLLSOUTHREFCLK0_in),
    .HSCLK1_LCPLLSOUTHREFCLK1 (HSCLK1_LCPLLSOUTHREFCLK1_in),
    .M0_AXIS_TREADY (M0_AXIS_TREADY_in),
    .M1_AXIS_TREADY (M1_AXIS_TREADY_in),
    .M2_AXIS_TREADY (M2_AXIS_TREADY_in),
    .M3_AXIS_TREADY (M3_AXIS_TREADY_in),
    .MSTRXRESET (MSTRXRESET_in),
    .MSTTXRESET (MSTTXRESET_in),
    .REFCLK0_CLKTESTSIG (REFCLK0_CLKTESTSIG_in),
    .REFCLK0_GTREFCLKPD (REFCLK0_GTREFCLKPD_in),
    .REFCLK1_CLKTESTSIG (REFCLK1_CLKTESTSIG_in),
    .REFCLK1_GTREFCLKPD (REFCLK1_GTREFCLKPD_in),
    .RESETDONE_NORTHIN (RESETDONE_NORTHIN_in),
    .RESETDONE_SOUTHIN (RESETDONE_SOUTHIN_in),
    .S0_AXIS_TDATA (S0_AXIS_TDATA_in),
    .S0_AXIS_TLAST (S0_AXIS_TLAST_in),
    .S0_AXIS_TVALID (S0_AXIS_TVALID_in),
    .S1_AXIS_TDATA (S1_AXIS_TDATA_in),
    .S1_AXIS_TLAST (S1_AXIS_TLAST_in),
    .S1_AXIS_TVALID (S1_AXIS_TVALID_in),
    .S2_AXIS_TDATA (S2_AXIS_TDATA_in),
    .S2_AXIS_TLAST (S2_AXIS_TLAST_in),
    .S2_AXIS_TVALID (S2_AXIS_TVALID_in),
    .S3_AXIS_TDATA (S3_AXIS_TDATA_in),
    .S3_AXIS_TLAST (S3_AXIS_TLAST_in),
    .S3_AXIS_TVALID (S3_AXIS_TVALID_in),
    .SCANCLKB (SCANCLKB_in),
    .SCANCNTRLIN (SCANCNTRLIN_in),
    .SCANENB (SCANENB_in),
    .SCANIN (SCANIN_in),
    .SCANRSTB (SCANRSTB_in),
    .TRIGACKOUT0 (TRIGACKOUT0_in),
    .TRIGIN0 (TRIGIN0_in),
    .UBENABLE (UBENABLE_in),
    .UBINTR (UBINTR_in),
    .UBIOLMBRST (UBIOLMBRST_in),
    .UBMBRST (UBMBRST_in),
    .UBRXUART (UBRXUART_in)
  );

`ifdef XIL_TIMING
  reg notifier;
`endif

`ifndef XIL_XECLIB
  // begin timing section
  specify
    (APB3CLK => APB3PRDATA[0]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[10]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[11]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[12]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[13]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[14]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[15]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[16]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[17]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[18]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[19]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[1]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[20]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[21]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[22]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[23]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[24]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[25]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[26]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[27]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[28]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[29]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[2]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[30]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[31]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[3]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[4]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[5]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[6]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[7]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[8]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PRDATA[9]) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PREADY) = (100:100:100, 100:100:100);
    (APB3CLK => APB3PSLVERR) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[0]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[10]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[11]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[12]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[13]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[14]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[15]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[16]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[17]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[18]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[19]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[1]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[20]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[21]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[22]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[23]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[24]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[25]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[26]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[27]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[28]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[29]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[2]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[30]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[31]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[3]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[4]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[5]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[6]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[7]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[8]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TDATA[9]) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TLAST) = (100:100:100, 100:100:100);
    (AXISCLK => M0_AXIS_TVALID) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[0]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[10]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[11]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[12]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[13]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[14]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[15]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[16]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[17]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[18]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[19]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[1]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[20]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[21]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[22]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[23]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[24]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[25]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[26]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[27]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[28]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[29]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[2]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[30]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[31]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[3]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[4]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[5]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[6]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[7]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[8]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TDATA[9]) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TLAST) = (100:100:100, 100:100:100);
    (AXISCLK => M1_AXIS_TVALID) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[0]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[10]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[11]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[12]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[13]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[14]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[15]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[16]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[17]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[18]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[19]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[1]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[20]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[21]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[22]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[23]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[24]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[25]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[26]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[27]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[28]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[29]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[2]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[30]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[31]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[3]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[4]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[5]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[6]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[7]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[8]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TDATA[9]) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TLAST) = (100:100:100, 100:100:100);
    (AXISCLK => M2_AXIS_TVALID) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[0]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[10]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[11]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[12]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[13]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[14]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[15]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[16]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[17]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[18]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[19]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[1]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[20]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[21]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[22]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[23]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[24]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[25]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[26]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[27]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[28]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[29]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[2]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[30]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[31]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[3]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[4]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[5]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[6]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[7]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[8]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TDATA[9]) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TLAST) = (100:100:100, 100:100:100);
    (AXISCLK => M3_AXIS_TVALID) = (100:100:100, 100:100:100);
    (AXISCLK => S0_AXIS_TREADY) = (100:100:100, 100:100:100);
    (AXISCLK => S1_AXIS_TREADY) = (100:100:100, 100:100:100);
    (AXISCLK => S2_AXIS_TREADY) = (100:100:100, 100:100:100);
    (AXISCLK => S3_AXIS_TREADY) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUTCLK) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[0]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[10]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[11]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[12]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[13]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[14]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[15]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[16]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[17]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[18]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[19]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[1]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[20]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[21]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[22]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[23]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[24]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[25]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[26]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[27]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[28]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[29]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[2]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[30]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[31]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[3]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[4]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[5]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[6]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[7]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[8]) = (100:100:100, 100:100:100);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH0_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK => CH1_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH0_TSTCLK0 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (CH0_TSTCLK1 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (CH0_TXUSRCLK => CH0_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK => CH0_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK => CH1_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK => CH1_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUTCLK) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[0]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[10]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[11]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[12]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[13]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[14]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[15]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[16]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[17]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[18]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[19]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[1]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[20]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[21]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[22]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[23]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[24]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[25]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[26]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[27]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[28]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[29]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[2]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[30]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[31]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[3]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[4]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[5]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[6]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[7]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[8]) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[9]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH0_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK => CH1_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH1_TSTCLK0 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (CH1_TSTCLK1 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (CH1_TXUSRCLK => CH0_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH1_TXUSRCLK => CH0_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH1_TXUSRCLK => CH1_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH1_TXUSRCLK => CH1_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUTCLK) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[0]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[10]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[11]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[12]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[13]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[14]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[15]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[16]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[17]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[18]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[19]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[1]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[20]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[21]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[22]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[23]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[24]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[25]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[26]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[27]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[28]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[29]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[2]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[30]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[31]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[3]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[4]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[5]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[6]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[7]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[8]) = (100:100:100, 100:100:100);
    (CH2_DMONITORCLK => CH2_DMONITOROUT[9]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH2_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH2_RXUSRCLK => CH3_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH2_TSTCLK0 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (CH2_TSTCLK1 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (CH2_TXUSRCLK => CH2_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH2_TXUSRCLK => CH2_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH2_TXUSRCLK => CH3_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH2_TXUSRCLK => CH3_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUTCLK) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[0]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[10]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[11]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[12]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[13]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[14]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[15]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[16]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[17]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[18]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[19]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[1]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[20]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[21]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[22]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[23]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[24]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[25]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[26]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[27]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[28]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[29]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[2]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[30]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[31]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[3]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[4]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[5]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[6]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[7]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[8]) = (100:100:100, 100:100:100);
    (CH3_DMONITORCLK => CH3_DMONITOROUT[9]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH2_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH3_RXUSRCLK => CH3_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH3_TSTCLK0 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (CH3_TSTCLK1 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (CH3_TXUSRCLK => CH2_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH3_TXUSRCLK => CH2_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH3_TXUSRCLK => CH3_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH3_TXUSRCLK => CH3_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[0]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[10]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[11]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[12]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[13]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[14]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[15]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[1]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[2]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[3]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[4]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[5]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[6]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[7]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[8]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETDATA[9]) = (100:100:100, 100:100:100);
    (DEBUGTRACECLK => DEBUGTRACETVALID) = (100:100:100, 100:100:100);
    (HSCLK0_LCPLLGTGREFCLK => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTGREFCLK => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTGREFCLK => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTGREFCLK => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTGREFCLK => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTGREFCLK => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTGREFCLK => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTGREFCLK => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTREFCLK0 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTREFCLK0 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTREFCLK0 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTREFCLK0 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTREFCLK1 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTREFCLK1 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTREFCLK1 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLGTREFCLK1 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK0 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK0 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK0 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK0 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK0 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK0 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK0 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK0 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK1 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK1 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK1 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK1 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK1 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK1 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK1 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLNORTHREFCLK1 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK0 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK0 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK0 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK0 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK0 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK0 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK0 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK0 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK1 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK1 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK1 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK1 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK1 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK1 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK1 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK0_LCPLLSOUTHREFCLK1 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTGREFCLK => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTGREFCLK => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTGREFCLK => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTGREFCLK => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTGREFCLK => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTGREFCLK => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTGREFCLK => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTGREFCLK => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTREFCLK0 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTREFCLK0 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTREFCLK0 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTREFCLK0 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTREFCLK1 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTREFCLK1 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTREFCLK1 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLGTREFCLK1 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK0 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK0 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK0 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK0 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK0 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK0 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK0 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK0 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK1 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK1 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK1 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK1 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK1 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK1 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK1 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLNORTHREFCLK1 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK0 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK0 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK0 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK0 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK0 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK0 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK0 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK0 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK1 => CH0_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK1 => CH0_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK1 => CH1_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK1 => CH1_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK1 => CH2_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK1 => CH2_TXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK1 => CH3_RXOUTCLK) = (0:0:0, 0:0:0);
    (HSCLK1_LCPLLSOUTHREFCLK1 => CH3_TXOUTCLK) = (0:0:0, 0:0:0);
    (M0_AXIS_TREADY => M0_AXIS_TVALID) = (0:0:0, 0:0:0);
    (M1_AXIS_TREADY => M1_AXIS_TVALID) = (0:0:0, 0:0:0);
    (M2_AXIS_TREADY => M2_AXIS_TVALID) = (0:0:0, 0:0:0);
    (M3_AXIS_TREADY => M3_AXIS_TVALID) = (0:0:0, 0:0:0);
    (REFCLK0_CLKTESTSIG => REFCLK0_CLKTESTSIGINT) = (0:0:0, 0:0:0);
    (REFCLK0_GTREFCLKPD => REFCLK0_GTREFCLKPDINT) = (0:0:0, 0:0:0);
    (REFCLK1_CLKTESTSIG => REFCLK1_CLKTESTSIGINT) = (0:0:0, 0:0:0);
    (REFCLK1_GTREFCLKPD => REFCLK1_GTREFCLKPDINT) = (0:0:0, 0:0:0);
    (posedge RESETDONE_NORTHIN[0] => (MSTTXRESETDONE[0] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[0] => (MSTTXRESETDONE[1] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[0] => (MSTTXRESETDONE[2] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[0] => (MSTTXRESETDONE[3] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[0] => (RESETDONE_NORTHOUT[0] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[0] => (RESETDONE_SOUTHOUT[0] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[1] => (MSTRXRESETDONE[0] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[1] => (MSTRXRESETDONE[1] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[1] => (MSTRXRESETDONE[2] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[1] => (MSTRXRESETDONE[3] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[1] => (RESETDONE_NORTHOUT[1] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_NORTHIN[1] => (RESETDONE_SOUTHOUT[1] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[0] => (MSTTXRESETDONE[0] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[0] => (MSTTXRESETDONE[1] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[0] => (MSTTXRESETDONE[2] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[0] => (MSTTXRESETDONE[3] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[0] => (RESETDONE_NORTHOUT[0] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[0] => (RESETDONE_SOUTHOUT[0] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[1] => (MSTRXRESETDONE[0] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[1] => (MSTRXRESETDONE[1] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[1] => (MSTRXRESETDONE[2] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[1] => (MSTRXRESETDONE[3] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[1] => (RESETDONE_NORTHOUT[1] +: 1)) = (100:100:100, 100:100:100);
    (posedge RESETDONE_SOUTHIN[1] => (RESETDONE_SOUTHOUT[1] +: 1)) = (100:100:100, 100:100:100);
`ifdef XIL_TIMING
    $period (negedge APB3CLK, 0:0:0, notifier);
    $period (negedge AXISCLK, 0:0:0, notifier);
    $period (negedge CH0_DMONITORCLK, 0:0:0, notifier);
    $period (negedge CH0_RXLATCLK, 0:0:0, notifier);
    $period (negedge CH0_RXUSRCLK, 0:0:0, notifier);
    $period (negedge CH0_TXLATCLK, 0:0:0, notifier);
    $period (negedge CH0_TXUSRCLK, 0:0:0, notifier);
    $period (negedge CH1_DMONITORCLK, 0:0:0, notifier);
    $period (negedge CH1_RXLATCLK, 0:0:0, notifier);
    $period (negedge CH1_RXUSRCLK, 0:0:0, notifier);
    $period (negedge CH1_TXLATCLK, 0:0:0, notifier);
    $period (negedge CH1_TXUSRCLK, 0:0:0, notifier);
    $period (negedge CH2_DMONITORCLK, 0:0:0, notifier);
    $period (negedge CH2_RXLATCLK, 0:0:0, notifier);
    $period (negedge CH2_RXUSRCLK, 0:0:0, notifier);
    $period (negedge CH2_TXLATCLK, 0:0:0, notifier);
    $period (negedge CH2_TXUSRCLK, 0:0:0, notifier);
    $period (negedge CH3_DMONITORCLK, 0:0:0, notifier);
    $period (negedge CH3_RXLATCLK, 0:0:0, notifier);
    $period (negedge CH3_RXUSRCLK, 0:0:0, notifier);
    $period (negedge CH3_TXLATCLK, 0:0:0, notifier);
    $period (negedge CH3_TXUSRCLK, 0:0:0, notifier);
    $period (negedge DEBUGTRACECLK, 0:0:0, notifier);
    $period (negedge HSCLK0_LCPLLGTGREFCLK, 0:0:0, notifier);
    $period (negedge HSCLK0_LCPLLGTREFCLK0, 0:0:0, notifier);
    $period (negedge HSCLK0_LCPLLGTREFCLK1, 0:0:0, notifier);
    $period (negedge HSCLK0_LCPLLNORTHREFCLK0, 0:0:0, notifier);
    $period (negedge HSCLK0_LCPLLNORTHREFCLK1, 0:0:0, notifier);
    $period (negedge HSCLK0_LCPLLSOUTHREFCLK0, 0:0:0, notifier);
    $period (negedge HSCLK0_LCPLLSOUTHREFCLK1, 0:0:0, notifier);
    $period (negedge HSCLK1_LCPLLGTGREFCLK, 0:0:0, notifier);
    $period (negedge HSCLK1_LCPLLGTREFCLK0, 0:0:0, notifier);
    $period (negedge HSCLK1_LCPLLGTREFCLK1, 0:0:0, notifier);
    $period (negedge HSCLK1_LCPLLNORTHREFCLK0, 0:0:0, notifier);
    $period (negedge HSCLK1_LCPLLNORTHREFCLK1, 0:0:0, notifier);
    $period (negedge HSCLK1_LCPLLSOUTHREFCLK0, 0:0:0, notifier);
    $period (negedge HSCLK1_LCPLLSOUTHREFCLK1, 0:0:0, notifier);
    $period (negedge REFCLK0_CLKTESTSIG, 0:0:0, notifier);
    $period (negedge REFCLK1_CLKTESTSIG, 0:0:0, notifier);
    $period (posedge APB3CLK, 0:0:0, notifier);
    $period (posedge AXISCLK, 0:0:0, notifier);
    $period (posedge CH0_DMONITORCLK, 0:0:0, notifier);
    $period (posedge CH0_RXLATCLK, 0:0:0, notifier);
    $period (posedge CH0_RXUSRCLK, 0:0:0, notifier);
    $period (posedge CH0_TXLATCLK, 0:0:0, notifier);
    $period (posedge CH0_TXUSRCLK, 0:0:0, notifier);
    $period (posedge CH1_DMONITORCLK, 0:0:0, notifier);
    $period (posedge CH1_RXLATCLK, 0:0:0, notifier);
    $period (posedge CH1_RXUSRCLK, 0:0:0, notifier);
    $period (posedge CH1_TXLATCLK, 0:0:0, notifier);
    $period (posedge CH1_TXUSRCLK, 0:0:0, notifier);
    $period (posedge CH2_DMONITORCLK, 0:0:0, notifier);
    $period (posedge CH2_RXLATCLK, 0:0:0, notifier);
    $period (posedge CH2_RXUSRCLK, 0:0:0, notifier);
    $period (posedge CH2_TXLATCLK, 0:0:0, notifier);
    $period (posedge CH2_TXUSRCLK, 0:0:0, notifier);
    $period (posedge CH3_DMONITORCLK, 0:0:0, notifier);
    $period (posedge CH3_RXLATCLK, 0:0:0, notifier);
    $period (posedge CH3_RXUSRCLK, 0:0:0, notifier);
    $period (posedge CH3_TXLATCLK, 0:0:0, notifier);
    $period (posedge CH3_TXUSRCLK, 0:0:0, notifier);
    $period (posedge DEBUGTRACECLK, 0:0:0, notifier);
    $period (posedge HSCLK0_LCPLLGTGREFCLK, 0:0:0, notifier);
    $period (posedge HSCLK0_LCPLLGTREFCLK0, 0:0:0, notifier);
    $period (posedge HSCLK0_LCPLLGTREFCLK1, 0:0:0, notifier);
    $period (posedge HSCLK0_LCPLLNORTHREFCLK0, 0:0:0, notifier);
    $period (posedge HSCLK0_LCPLLNORTHREFCLK1, 0:0:0, notifier);
    $period (posedge HSCLK0_LCPLLSOUTHREFCLK0, 0:0:0, notifier);
    $period (posedge HSCLK0_LCPLLSOUTHREFCLK1, 0:0:0, notifier);
    $period (posedge HSCLK1_LCPLLGTGREFCLK, 0:0:0, notifier);
    $period (posedge HSCLK1_LCPLLGTREFCLK0, 0:0:0, notifier);
    $period (posedge HSCLK1_LCPLLGTREFCLK1, 0:0:0, notifier);
    $period (posedge HSCLK1_LCPLLNORTHREFCLK0, 0:0:0, notifier);
    $period (posedge HSCLK1_LCPLLNORTHREFCLK1, 0:0:0, notifier);
    $period (posedge HSCLK1_LCPLLSOUTHREFCLK0, 0:0:0, notifier);
    $period (posedge HSCLK1_LCPLLSOUTHREFCLK1, 0:0:0, notifier);
    $period (posedge REFCLK0_CLKTESTSIG, 0:0:0, notifier);
    $period (posedge REFCLK1_CLKTESTSIG, 0:0:0, notifier);
    $recrem (negedge CH0_DMONFIFORESET, posedge CH0_DMONITORCLK, 0:0:0, 0:0:0, notifier, , , CH0_DMONFIFORESET_delay, CH0_DMONITORCLK_delay);
    $recrem (negedge CH0_EYESCANTRIGGER, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , CH0_EYESCANTRIGGER_delay, AXISCLK_delay);
    $recrem (negedge CH0_LOOPBACK[0], posedge CH0_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH0_LOOPBACK_delay[0], CH0_RXLATCLK_delay);
    $recrem (negedge CH0_LOOPBACK[1], posedge CH0_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH0_LOOPBACK_delay[1], CH0_RXLATCLK_delay);
    $recrem (negedge CH0_LOOPBACK[2], posedge CH0_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH0_LOOPBACK_delay[2], CH0_RXLATCLK_delay);
    $recrem (negedge CH1_DMONFIFORESET, posedge CH1_DMONITORCLK, 0:0:0, 0:0:0, notifier, , , CH1_DMONFIFORESET_delay, CH1_DMONITORCLK_delay);
    $recrem (negedge CH1_EYESCANTRIGGER, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , CH1_EYESCANTRIGGER_delay, AXISCLK_delay);
    $recrem (negedge CH1_LOOPBACK[0], posedge CH1_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH1_LOOPBACK_delay[0], CH1_RXLATCLK_delay);
    $recrem (negedge CH1_LOOPBACK[1], posedge CH1_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH1_LOOPBACK_delay[1], CH1_RXLATCLK_delay);
    $recrem (negedge CH1_LOOPBACK[2], posedge CH1_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH1_LOOPBACK_delay[2], CH1_RXLATCLK_delay);
    $recrem (negedge CH2_DMONFIFORESET, posedge CH2_DMONITORCLK, 0:0:0, 0:0:0, notifier, , , CH2_DMONFIFORESET_delay, CH2_DMONITORCLK_delay);
    $recrem (negedge CH2_EYESCANTRIGGER, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , CH2_EYESCANTRIGGER_delay, AXISCLK_delay);
    $recrem (negedge CH2_LOOPBACK[0], posedge CH2_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH2_LOOPBACK_delay[0], CH2_RXLATCLK_delay);
    $recrem (negedge CH2_LOOPBACK[1], posedge CH2_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH2_LOOPBACK_delay[1], CH2_RXLATCLK_delay);
    $recrem (negedge CH2_LOOPBACK[2], posedge CH2_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH2_LOOPBACK_delay[2], CH2_RXLATCLK_delay);
    $recrem (negedge CH3_DMONFIFORESET, posedge CH3_DMONITORCLK, 0:0:0, 0:0:0, notifier, , , CH3_DMONFIFORESET_delay, CH3_DMONITORCLK_delay);
    $recrem (negedge CH3_EYESCANTRIGGER, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , CH3_EYESCANTRIGGER_delay, AXISCLK_delay);
    $recrem (negedge CH3_LOOPBACK[0], posedge CH3_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH3_LOOPBACK_delay[0], CH3_RXLATCLK_delay);
    $recrem (negedge CH3_LOOPBACK[1], posedge CH3_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH3_LOOPBACK_delay[1], CH3_RXLATCLK_delay);
    $recrem (negedge CH3_LOOPBACK[2], posedge CH3_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH3_LOOPBACK_delay[2], CH3_RXLATCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, AXISCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge CH0_RXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH0_RXUSRCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge CH0_TXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH0_TXUSRCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge CH1_RXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH1_RXUSRCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge CH1_TXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH1_TXUSRCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge CH2_RXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH2_RXUSRCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge CH2_TXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH2_TXUSRCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge CH3_RXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH3_RXUSRCLK_delay);
    $recrem (negedge COESTATUSDEBUG, posedge CH3_TXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH3_TXUSRCLK_delay);
    $recrem (negedge UBMBRST, posedge DEBUGTRACECLK, 0:0:0, 0:0:0, notifier, , , UBMBRST_delay, DEBUGTRACECLK_delay);
    $recrem (posedge CH0_DMONFIFORESET, posedge CH0_DMONITORCLK, 0:0:0, 0:0:0, notifier, , , CH0_DMONFIFORESET_delay, CH0_DMONITORCLK_delay);
    $recrem (posedge CH0_EYESCANTRIGGER, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , CH0_EYESCANTRIGGER_delay, AXISCLK_delay);
    $recrem (posedge CH0_LOOPBACK[0], posedge CH0_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH0_LOOPBACK_delay[0], CH0_RXLATCLK_delay);
    $recrem (posedge CH0_LOOPBACK[1], posedge CH0_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH0_LOOPBACK_delay[1], CH0_RXLATCLK_delay);
    $recrem (posedge CH0_LOOPBACK[2], posedge CH0_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH0_LOOPBACK_delay[2], CH0_RXLATCLK_delay);
    $recrem (posedge CH1_DMONFIFORESET, posedge CH1_DMONITORCLK, 0:0:0, 0:0:0, notifier, , , CH1_DMONFIFORESET_delay, CH1_DMONITORCLK_delay);
    $recrem (posedge CH1_EYESCANTRIGGER, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , CH1_EYESCANTRIGGER_delay, AXISCLK_delay);
    $recrem (posedge CH1_LOOPBACK[0], posedge CH1_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH1_LOOPBACK_delay[0], CH1_RXLATCLK_delay);
    $recrem (posedge CH1_LOOPBACK[1], posedge CH1_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH1_LOOPBACK_delay[1], CH1_RXLATCLK_delay);
    $recrem (posedge CH1_LOOPBACK[2], posedge CH1_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH1_LOOPBACK_delay[2], CH1_RXLATCLK_delay);
    $recrem (posedge CH2_DMONFIFORESET, posedge CH2_DMONITORCLK, 0:0:0, 0:0:0, notifier, , , CH2_DMONFIFORESET_delay, CH2_DMONITORCLK_delay);
    $recrem (posedge CH2_EYESCANTRIGGER, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , CH2_EYESCANTRIGGER_delay, AXISCLK_delay);
    $recrem (posedge CH2_LOOPBACK[0], posedge CH2_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH2_LOOPBACK_delay[0], CH2_RXLATCLK_delay);
    $recrem (posedge CH2_LOOPBACK[1], posedge CH2_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH2_LOOPBACK_delay[1], CH2_RXLATCLK_delay);
    $recrem (posedge CH2_LOOPBACK[2], posedge CH2_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH2_LOOPBACK_delay[2], CH2_RXLATCLK_delay);
    $recrem (posedge CH3_DMONFIFORESET, posedge CH3_DMONITORCLK, 0:0:0, 0:0:0, notifier, , , CH3_DMONFIFORESET_delay, CH3_DMONITORCLK_delay);
    $recrem (posedge CH3_EYESCANTRIGGER, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , CH3_EYESCANTRIGGER_delay, AXISCLK_delay);
    $recrem (posedge CH3_LOOPBACK[0], posedge CH3_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH3_LOOPBACK_delay[0], CH3_RXLATCLK_delay);
    $recrem (posedge CH3_LOOPBACK[1], posedge CH3_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH3_LOOPBACK_delay[1], CH3_RXLATCLK_delay);
    $recrem (posedge CH3_LOOPBACK[2], posedge CH3_RXLATCLK, 0:0:0, 0:0:0, notifier, , , CH3_LOOPBACK_delay[2], CH3_RXLATCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge AXISCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, AXISCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge CH0_RXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH0_RXUSRCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge CH0_TXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH0_TXUSRCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge CH1_RXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH1_RXUSRCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge CH1_TXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH1_TXUSRCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge CH2_RXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH2_RXUSRCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge CH2_TXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH2_TXUSRCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge CH3_RXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH3_RXUSRCLK_delay);
    $recrem (posedge COESTATUSDEBUG, posedge CH3_TXUSRCLK, 0:0:0, 0:0:0, notifier, , , COESTATUSDEBUG_delay, CH3_TXUSRCLK_delay);
    $recrem (posedge UBMBRST, posedge DEBUGTRACECLK, 0:0:0, 0:0:0, notifier, , , UBMBRST_delay, DEBUGTRACECLK_delay);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[0], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[0]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[10], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[10]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[11], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[11]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[12], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[12]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[13], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[13]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[14], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[14]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[15], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[15]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[1], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[1]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[2], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[2]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[3], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[3]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[4], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[4]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[5], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[5]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[6], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[6]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[7], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[7]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[8], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[8]);
    $setuphold (posedge APB3CLK, negedge APB3PADDR[9], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[9]);
    $setuphold (posedge APB3CLK, negedge APB3PENABLE, 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PENABLE_delay);
    $setuphold (posedge APB3CLK, negedge APB3PSEL, 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PSEL_delay);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[0], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[0]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[10], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[10]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[11], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[11]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[12], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[12]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[13], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[13]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[14], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[14]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[15], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[15]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[16], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[16]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[17], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[17]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[18], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[18]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[19], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[19]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[1], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[1]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[20], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[20]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[21], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[21]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[22], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[22]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[23], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[23]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[24], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[24]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[25], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[25]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[26], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[26]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[27], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[27]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[28], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[28]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[29], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[29]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[2], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[2]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[30], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[30]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[31], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[31]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[3], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[3]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[4], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[4]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[5], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[5]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[6], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[6]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[7], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[7]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[8], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[8]);
    $setuphold (posedge APB3CLK, negedge APB3PWDATA[9], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[9]);
    $setuphold (posedge APB3CLK, negedge APB3PWRITE, 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWRITE_delay);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[0], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[0]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[10], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[10]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[11], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[11]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[12], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[12]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[13], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[13]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[14], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[14]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[15], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[15]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[1], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[1]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[2], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[2]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[3], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[3]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[4], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[4]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[5], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[5]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[6], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[6]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[7], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[7]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[8], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[8]);
    $setuphold (posedge APB3CLK, posedge APB3PADDR[9], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PADDR_delay[9]);
    $setuphold (posedge APB3CLK, posedge APB3PENABLE, 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PENABLE_delay);
    $setuphold (posedge APB3CLK, posedge APB3PSEL, 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PSEL_delay);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[0], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[0]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[10], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[10]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[11], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[11]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[12], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[12]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[13], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[13]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[14], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[14]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[15], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[15]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[16], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[16]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[17], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[17]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[18], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[18]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[19], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[19]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[1], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[1]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[20], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[20]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[21], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[21]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[22], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[22]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[23], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[23]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[24], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[24]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[25], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[25]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[26], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[26]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[27], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[27]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[28], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[28]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[29], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[29]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[2], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[2]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[30], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[30]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[31], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[31]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[3], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[3]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[4], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[4]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[5], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[5]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[6], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[6]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[7], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[7]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[8], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[8]);
    $setuphold (posedge APB3CLK, posedge APB3PWDATA[9], 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWDATA_delay[9]);
    $setuphold (posedge APB3CLK, posedge APB3PWRITE, 0:0:0, 0:0:0, notifier, , , APB3CLK_delay, APB3PWRITE_delay);
    $setuphold (posedge AXISCLK, negedge CH0_EYESCANTRIGGER, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, CH0_EYESCANTRIGGER_delay);
    $setuphold (posedge AXISCLK, negedge CH1_EYESCANTRIGGER, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, CH1_EYESCANTRIGGER_delay);
    $setuphold (posedge AXISCLK, negedge CH2_EYESCANTRIGGER, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, CH2_EYESCANTRIGGER_delay);
    $setuphold (posedge AXISCLK, negedge CH3_EYESCANTRIGGER, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, CH3_EYESCANTRIGGER_delay);
    $setuphold (posedge AXISCLK, negedge M0_AXIS_TREADY, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, M0_AXIS_TREADY_delay);
    $setuphold (posedge AXISCLK, negedge M1_AXIS_TREADY, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, M1_AXIS_TREADY_delay);
    $setuphold (posedge AXISCLK, negedge M2_AXIS_TREADY, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, M2_AXIS_TREADY_delay);
    $setuphold (posedge AXISCLK, negedge M3_AXIS_TREADY, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, M3_AXIS_TREADY_delay);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[0], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[0]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[10], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[10]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[11], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[11]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[12], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[12]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[13], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[13]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[14], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[14]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[15], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[15]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[16], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[16]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[17], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[17]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[18], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[18]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[19], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[19]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[1], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[1]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[20], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[20]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[21], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[21]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[22], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[22]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[23], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[23]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[24], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[24]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[25], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[25]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[26], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[26]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[27], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[27]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[28], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[28]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[29], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[29]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[2], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[2]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[30], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[30]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[31], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[31]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[3], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[3]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[4], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[4]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[5], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[5]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[6], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[6]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[7], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[7]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[8], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[8]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TDATA[9], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[9]);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TLAST, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TLAST_delay);
    $setuphold (posedge AXISCLK, negedge S0_AXIS_TVALID, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TVALID_delay);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[0], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[0]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[10], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[10]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[11], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[11]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[12], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[12]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[13], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[13]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[14], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[14]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[15], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[15]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[16], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[16]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[17], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[17]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[18], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[18]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[19], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[19]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[1], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[1]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[20], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[20]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[21], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[21]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[22], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[22]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[23], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[23]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[24], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[24]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[25], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[25]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[26], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[26]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[27], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[27]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[28], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[28]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[29], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[29]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[2], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[2]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[30], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[30]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[31], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[31]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[3], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[3]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[4], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[4]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[5], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[5]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[6], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[6]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[7], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[7]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[8], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[8]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TDATA[9], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[9]);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TLAST, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TLAST_delay);
    $setuphold (posedge AXISCLK, negedge S1_AXIS_TVALID, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TVALID_delay);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[0], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[0]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[10], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[10]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[11], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[11]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[12], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[12]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[13], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[13]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[14], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[14]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[15], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[15]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[16], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[16]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[17], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[17]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[18], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[18]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[19], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[19]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[1], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[1]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[20], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[20]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[21], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[21]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[22], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[22]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[23], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[23]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[24], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[24]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[25], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[25]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[26], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[26]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[27], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[27]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[28], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[28]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[29], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[29]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[2], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[2]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[30], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[30]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[31], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[31]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[3], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[3]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[4], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[4]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[5], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[5]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[6], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[6]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[7], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[7]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[8], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[8]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TDATA[9], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[9]);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TLAST, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TLAST_delay);
    $setuphold (posedge AXISCLK, negedge S2_AXIS_TVALID, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TVALID_delay);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[0], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[0]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[10], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[10]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[11], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[11]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[12], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[12]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[13], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[13]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[14], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[14]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[15], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[15]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[16], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[16]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[17], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[17]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[18], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[18]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[19], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[19]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[1], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[1]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[20], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[20]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[21], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[21]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[22], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[22]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[23], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[23]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[24], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[24]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[25], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[25]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[26], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[26]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[27], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[27]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[28], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[28]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[29], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[29]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[2], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[2]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[30], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[30]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[31], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[31]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[3], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[3]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[4], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[4]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[5], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[5]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[6], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[6]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[7], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[7]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[8], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[8]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TDATA[9], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[9]);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TLAST, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TLAST_delay);
    $setuphold (posedge AXISCLK, negedge S3_AXIS_TVALID, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TVALID_delay);
    $setuphold (posedge AXISCLK, posedge CH0_EYESCANTRIGGER, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, CH0_EYESCANTRIGGER_delay);
    $setuphold (posedge AXISCLK, posedge CH1_EYESCANTRIGGER, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, CH1_EYESCANTRIGGER_delay);
    $setuphold (posedge AXISCLK, posedge CH2_EYESCANTRIGGER, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, CH2_EYESCANTRIGGER_delay);
    $setuphold (posedge AXISCLK, posedge CH3_EYESCANTRIGGER, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, CH3_EYESCANTRIGGER_delay);
    $setuphold (posedge AXISCLK, posedge M0_AXIS_TREADY, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, M0_AXIS_TREADY_delay);
    $setuphold (posedge AXISCLK, posedge M1_AXIS_TREADY, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, M1_AXIS_TREADY_delay);
    $setuphold (posedge AXISCLK, posedge M2_AXIS_TREADY, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, M2_AXIS_TREADY_delay);
    $setuphold (posedge AXISCLK, posedge M3_AXIS_TREADY, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, M3_AXIS_TREADY_delay);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[0], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[0]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[10], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[10]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[11], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[11]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[12], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[12]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[13], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[13]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[14], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[14]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[15], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[15]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[16], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[16]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[17], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[17]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[18], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[18]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[19], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[19]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[1], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[1]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[20], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[20]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[21], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[21]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[22], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[22]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[23], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[23]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[24], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[24]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[25], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[25]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[26], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[26]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[27], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[27]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[28], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[28]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[29], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[29]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[2], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[2]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[30], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[30]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[31], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[31]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[3], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[3]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[4], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[4]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[5], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[5]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[6], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[6]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[7], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[7]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[8], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[8]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TDATA[9], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TDATA_delay[9]);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TLAST, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TLAST_delay);
    $setuphold (posedge AXISCLK, posedge S0_AXIS_TVALID, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S0_AXIS_TVALID_delay);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[0], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[0]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[10], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[10]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[11], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[11]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[12], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[12]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[13], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[13]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[14], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[14]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[15], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[15]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[16], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[16]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[17], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[17]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[18], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[18]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[19], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[19]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[1], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[1]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[20], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[20]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[21], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[21]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[22], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[22]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[23], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[23]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[24], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[24]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[25], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[25]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[26], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[26]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[27], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[27]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[28], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[28]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[29], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[29]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[2], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[2]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[30], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[30]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[31], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[31]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[3], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[3]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[4], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[4]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[5], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[5]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[6], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[6]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[7], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[7]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[8], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[8]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TDATA[9], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TDATA_delay[9]);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TLAST, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TLAST_delay);
    $setuphold (posedge AXISCLK, posedge S1_AXIS_TVALID, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S1_AXIS_TVALID_delay);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[0], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[0]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[10], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[10]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[11], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[11]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[12], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[12]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[13], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[13]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[14], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[14]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[15], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[15]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[16], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[16]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[17], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[17]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[18], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[18]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[19], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[19]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[1], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[1]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[20], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[20]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[21], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[21]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[22], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[22]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[23], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[23]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[24], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[24]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[25], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[25]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[26], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[26]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[27], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[27]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[28], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[28]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[29], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[29]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[2], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[2]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[30], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[30]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[31], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[31]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[3], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[3]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[4], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[4]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[5], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[5]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[6], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[6]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[7], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[7]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[8], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[8]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TDATA[9], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TDATA_delay[9]);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TLAST, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TLAST_delay);
    $setuphold (posedge AXISCLK, posedge S2_AXIS_TVALID, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S2_AXIS_TVALID_delay);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[0], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[0]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[10], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[10]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[11], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[11]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[12], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[12]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[13], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[13]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[14], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[14]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[15], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[15]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[16], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[16]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[17], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[17]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[18], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[18]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[19], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[19]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[1], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[1]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[20], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[20]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[21], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[21]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[22], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[22]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[23], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[23]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[24], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[24]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[25], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[25]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[26], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[26]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[27], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[27]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[28], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[28]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[29], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[29]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[2], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[2]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[30], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[30]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[31], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[31]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[3], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[3]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[4], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[4]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[5], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[5]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[6], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[6]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[7], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[7]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[8], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[8]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TDATA[9], 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TDATA_delay[9]);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TLAST, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TLAST_delay);
    $setuphold (posedge AXISCLK, posedge S3_AXIS_TVALID, 0:0:0, 0:0:0, notifier, , , AXISCLK_delay, S3_AXIS_TVALID_delay);
    $setuphold (posedge CH0_RXLATCLK, negedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_RXLATCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_RXLATCLK, negedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_RXLATCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_RXLATCLK, negedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_RXLATCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_RXLATCLK, posedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_RXLATCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_RXLATCLK, posedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_RXLATCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_RXLATCLK, posedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_RXLATCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_RXUSRCLK, negedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_RXUSRCLK, negedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_RXUSRCLK, negedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_RXUSRCLK, negedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_RXUSRCLK, negedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_RXUSRCLK, negedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_RXUSRCLK, posedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_RXUSRCLK, posedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_RXUSRCLK, posedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_RXUSRCLK, posedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_RXUSRCLK, posedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_RXUSRCLK, posedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[100]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[101]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[102]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[103]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[104]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[105]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[106]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[107]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[108]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[109]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[10]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[110]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[111]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[112]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[113]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[114]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[115]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[116]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[117]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[118]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[119]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[11]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[120]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[121]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[122]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[123]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[124]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[125]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[126]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[127]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[128]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[129]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[12]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[130]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[131]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[132]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[133]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[134]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[135]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[136]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[137]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[138]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[139]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[13]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[140]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[141]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[142]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[143]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[144]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[145]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[146]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[147]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[148]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[149]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[14]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[150]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[151]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[152]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[153]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[154]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[155]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[156]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[157]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[158]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[159]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[15]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[160]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[161]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[162]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[163]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[164]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[165]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[166]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[167]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[168]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[169]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[16]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[170]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[171]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[172]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[173]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[174]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[175]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[176]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[177]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[178]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[179]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[17]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[180]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[181]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[182]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[183]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[184]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[185]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[186]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[187]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[188]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[189]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[18]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[190]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[191]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[192]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[193]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[194]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[195]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[196]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[197]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[198]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[199]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[19]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[200]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[201]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[202]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[203]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[204]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[205]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[206]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[207]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[208]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[209]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[20]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[210]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[211]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[212]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[213]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[214]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[215]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[216]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[217]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[218]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[219]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[21]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[220]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[221]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[222]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[223]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[224]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[225]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[226]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[227]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[228]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[229]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[22]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[230]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[231]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[232]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[233]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[234]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[235]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[236]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[237]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[238]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[239]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[23]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[240]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[241]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[242]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[243]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[244]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[245]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[246]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[247]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[248]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[249]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[24]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[250]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[251]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[252]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[253]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[254]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[255]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[25]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[26]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[27]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[28]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[29]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[30]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[31]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[32]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[33]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[34]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[35]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[36]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[37]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[38]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[39]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[40]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[41]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[42]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[43]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[44]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[45]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[46]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[47]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[48]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[49]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[4]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[50]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[51]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[52]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[53]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[54]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[55]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[56]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[57]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[58]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[59]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[5]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[60]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[61]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[62]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[63]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[64]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[65]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[66]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[67]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[68]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[69]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[6]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[70]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[71]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[72]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[73]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[74]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[75]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[76]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[77]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[78]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[79]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[7]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[80]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[81]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[82]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[83]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[84]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[85]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[86]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[87]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[88]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[89]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[8]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[90]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[91]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[92]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[93]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[94]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[95]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[96]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[97]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[98]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[99]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[9]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[100]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[101]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[102]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[103]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[104]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[105]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[106]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[107]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[108]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[109]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[10]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[110]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[111]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[112]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[113]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[114]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[115]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[116]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[117]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[118]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[119]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[11]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[120]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[121]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[122]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[123]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[124]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[125]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[126]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[127]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[128]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[129]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[12]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[130]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[131]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[132]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[133]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[134]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[135]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[136]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[137]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[138]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[139]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[13]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[140]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[141]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[142]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[143]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[144]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[145]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[146]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[147]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[148]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[149]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[14]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[150]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[151]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[152]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[153]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[154]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[155]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[156]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[157]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[158]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[159]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[15]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[160]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[161]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[162]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[163]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[164]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[165]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[166]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[167]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[168]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[169]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[16]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[170]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[171]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[172]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[173]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[174]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[175]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[176]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[177]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[178]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[179]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[17]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[180]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[181]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[182]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[183]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[184]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[185]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[186]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[187]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[188]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[189]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[18]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[190]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[191]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[192]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[193]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[194]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[195]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[196]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[197]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[198]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[199]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[19]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[200]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[201]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[202]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[203]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[204]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[205]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[206]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[207]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[208]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[209]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[20]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[210]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[211]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[212]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[213]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[214]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[215]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[216]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[217]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[218]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[219]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[21]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[220]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[221]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[222]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[223]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[224]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[225]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[226]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[227]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[228]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[229]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[22]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[230]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[231]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[232]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[233]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[234]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[235]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[236]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[237]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[238]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[239]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[23]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[240]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[241]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[242]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[243]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[244]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[245]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[246]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[247]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[248]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[249]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[24]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[250]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[251]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[252]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[253]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[254]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[255]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[25]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[26]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[27]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[28]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[29]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[30]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[31]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[32]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[33]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[34]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[35]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[36]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[37]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[38]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[39]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[40]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[41]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[42]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[43]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[44]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[45]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[46]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[47]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[48]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[49]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[4]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[50]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[51]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[52]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[53]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[54]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[55]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[56]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[57]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[58]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[59]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[5]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[60]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[61]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[62]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[63]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[64]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[65]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[66]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[67]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[68]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[69]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[6]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[70]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[71]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[72]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[73]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[74]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[75]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[76]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[77]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[78]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[79]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[7]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[80]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[81]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[82]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[83]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[84]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[85]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[86]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[87]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[88]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[89]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[8]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[90]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[91]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[92]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[93]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[94]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[95]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[96]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[97]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[98]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[99]);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[9]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[100]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[101]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[102]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[103]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[104]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[105]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[106]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[107]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[108]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[109]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[10]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[110]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[111]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[112]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[113]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[114]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[115]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[116]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[117]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[118]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[119]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[11]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[120]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[121]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[122]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[123]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[124]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[125]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[126]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[127]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[128]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[129]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[12]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[130]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[131]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[132]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[133]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[134]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[135]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[136]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[137]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[138]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[139]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[13]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[140]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[141]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[142]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[143]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[144]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[145]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[146]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[147]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[148]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[149]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[14]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[150]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[151]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[152]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[153]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[154]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[155]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[156]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[157]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[158]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[159]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[15]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[160]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[161]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[162]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[163]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[164]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[165]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[166]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[167]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[168]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[169]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[16]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[170]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[171]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[172]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[173]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[174]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[175]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[176]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[177]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[178]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[179]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[17]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[180]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[181]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[182]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[183]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[184]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[185]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[186]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[187]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[188]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[189]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[18]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[190]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[191]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[192]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[193]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[194]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[195]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[196]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[197]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[198]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[199]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[19]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[200]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[201]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[202]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[203]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[204]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[205]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[206]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[207]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[208]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[209]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[20]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[210]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[211]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[212]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[213]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[214]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[215]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[216]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[217]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[218]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[219]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[21]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[220]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[221]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[222]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[223]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[224]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[225]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[226]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[227]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[228]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[229]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[22]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[230]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[231]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[232]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[233]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[234]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[235]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[236]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[237]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[238]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[239]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[23]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[240]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[241]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[242]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[243]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[244]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[245]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[246]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[247]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[248]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[249]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[24]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[250]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[251]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[252]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[253]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[254]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[255]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[25]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[26]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[27]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[28]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[29]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[30]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[31]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[32]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[33]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[34]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[35]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[36]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[37]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[38]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[39]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[40]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[41]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[42]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[43]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[44]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[45]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[46]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[47]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[48]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[49]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[4]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[50]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[51]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[52]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[53]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[54]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[55]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[56]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[57]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[58]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[59]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[5]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[60]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[61]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[62]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[63]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[64]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[65]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[66]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[67]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[68]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[69]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[6]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[70]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[71]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[72]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[73]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[74]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[75]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[76]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[77]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[78]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[79]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[7]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[80]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[81]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[82]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[83]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[84]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[85]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[86]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[87]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[88]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[89]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[8]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[90]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[91]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[92]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[93]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[94]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[95]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[96]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[97]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[98]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[99]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXDATA_delay[9]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[100]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[101]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[102]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[103]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[104]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[105]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[106]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[107]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[108]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[109]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[10]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[110]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[111]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[112]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[113]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[114]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[115]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[116]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[117]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[118]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[119]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[11]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[120]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[121]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[122]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[123]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[124]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[125]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[126]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[127]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[128]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[129]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[12]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[130]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[131]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[132]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[133]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[134]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[135]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[136]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[137]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[138]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[139]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[13]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[140]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[141]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[142]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[143]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[144]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[145]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[146]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[147]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[148]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[149]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[14]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[150]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[151]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[152]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[153]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[154]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[155]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[156]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[157]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[158]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[159]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[15]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[160]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[161]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[162]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[163]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[164]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[165]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[166]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[167]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[168]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[169]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[16]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[170]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[171]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[172]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[173]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[174]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[175]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[176]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[177]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[178]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[179]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[17]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[180]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[181]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[182]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[183]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[184]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[185]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[186]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[187]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[188]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[189]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[18]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[190]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[191]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[192]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[193]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[194]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[195]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[196]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[197]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[198]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[199]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[19]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[200]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[201]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[202]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[203]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[204]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[205]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[206]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[207]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[208]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[209]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[20]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[210]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[211]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[212]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[213]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[214]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[215]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[216]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[217]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[218]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[219]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[21]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[220]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[221]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[222]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[223]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[224]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[225]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[226]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[227]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[228]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[229]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[22]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[230]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[231]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[232]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[233]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[234]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[235]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[236]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[237]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[238]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[239]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[23]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[240]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[241]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[242]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[243]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[244]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[245]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[246]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[247]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[248]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[249]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[24]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[250]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[251]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[252]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[253]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[254]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[255]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[25]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[26]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[27]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[28]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[29]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[30]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[31]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[32]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[33]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[34]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[35]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[36]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[37]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[38]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[39]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[40]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[41]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[42]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[43]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[44]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[45]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[46]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[47]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[48]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[49]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[4]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[50]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[51]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[52]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[53]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[54]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[55]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[56]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[57]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[58]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[59]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[5]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[60]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[61]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[62]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[63]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[64]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[65]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[66]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[67]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[68]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[69]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[6]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[70]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[71]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[72]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[73]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[74]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[75]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[76]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[77]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[78]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[79]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[7]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[80]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[81]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[82]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[83]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[84]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[85]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[86]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[87]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[88]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[89]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[8]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[90]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[91]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[92]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[93]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[94]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[95]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[96]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[97]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[98]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[99]);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXDATA_delay[9]);
    $setuphold (posedge CH1_RXLATCLK, negedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_RXLATCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_RXLATCLK, negedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_RXLATCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_RXLATCLK, negedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_RXLATCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_RXLATCLK, posedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_RXLATCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_RXLATCLK, posedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_RXLATCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_RXLATCLK, posedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_RXLATCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_RXUSRCLK, negedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_RXUSRCLK, negedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_RXUSRCLK, negedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_RXUSRCLK, negedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_RXUSRCLK, negedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_RXUSRCLK, negedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_RXUSRCLK, posedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_RXUSRCLK, posedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_RXUSRCLK, posedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_RXUSRCLK, posedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_RXUSRCLK, posedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_RXUSRCLK, posedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[100]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[101]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[102]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[103]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[104]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[105]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[106]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[107]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[108]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[109]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[10]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[110]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[111]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[112]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[113]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[114]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[115]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[116]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[117]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[118]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[119]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[11]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[120]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[121]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[122]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[123]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[124]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[125]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[126]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[127]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[128]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[129]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[12]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[130]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[131]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[132]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[133]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[134]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[135]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[136]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[137]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[138]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[139]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[13]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[140]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[141]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[142]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[143]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[144]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[145]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[146]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[147]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[148]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[149]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[14]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[150]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[151]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[152]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[153]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[154]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[155]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[156]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[157]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[158]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[159]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[15]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[160]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[161]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[162]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[163]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[164]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[165]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[166]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[167]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[168]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[169]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[16]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[170]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[171]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[172]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[173]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[174]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[175]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[176]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[177]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[178]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[179]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[17]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[180]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[181]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[182]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[183]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[184]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[185]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[186]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[187]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[188]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[189]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[18]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[190]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[191]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[192]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[193]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[194]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[195]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[196]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[197]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[198]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[199]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[19]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[200]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[201]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[202]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[203]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[204]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[205]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[206]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[207]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[208]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[209]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[20]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[210]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[211]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[212]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[213]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[214]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[215]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[216]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[217]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[218]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[219]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[21]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[220]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[221]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[222]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[223]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[224]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[225]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[226]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[227]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[228]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[229]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[22]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[230]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[231]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[232]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[233]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[234]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[235]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[236]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[237]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[238]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[239]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[23]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[240]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[241]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[242]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[243]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[244]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[245]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[246]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[247]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[248]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[249]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[24]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[250]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[251]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[252]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[253]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[254]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[255]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[25]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[26]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[27]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[28]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[29]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[30]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[31]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[32]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[33]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[34]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[35]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[36]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[37]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[38]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[39]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[3]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[40]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[41]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[42]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[43]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[44]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[45]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[46]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[47]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[48]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[49]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[4]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[50]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[51]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[52]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[53]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[54]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[55]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[56]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[57]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[58]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[59]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[5]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[60]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[61]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[62]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[63]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[64]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[65]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[66]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[67]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[68]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[69]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[6]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[70]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[71]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[72]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[73]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[74]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[75]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[76]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[77]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[78]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[79]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[7]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[80]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[81]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[82]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[83]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[84]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[85]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[86]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[87]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[88]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[89]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[8]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[90]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[91]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[92]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[93]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[94]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[95]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[96]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[97]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[98]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[99]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH0_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[9]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[100]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[101]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[102]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[103]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[104]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[105]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[106]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[107]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[108]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[109]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[10]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[110]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[111]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[112]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[113]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[114]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[115]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[116]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[117]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[118]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[119]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[11]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[120]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[121]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[122]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[123]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[124]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[125]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[126]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[127]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[128]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[129]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[12]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[130]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[131]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[132]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[133]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[134]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[135]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[136]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[137]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[138]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[139]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[13]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[140]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[141]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[142]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[143]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[144]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[145]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[146]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[147]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[148]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[149]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[14]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[150]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[151]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[152]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[153]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[154]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[155]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[156]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[157]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[158]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[159]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[15]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[160]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[161]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[162]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[163]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[164]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[165]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[166]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[167]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[168]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[169]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[16]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[170]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[171]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[172]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[173]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[174]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[175]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[176]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[177]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[178]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[179]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[17]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[180]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[181]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[182]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[183]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[184]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[185]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[186]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[187]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[188]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[189]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[18]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[190]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[191]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[192]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[193]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[194]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[195]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[196]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[197]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[198]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[199]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[19]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[200]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[201]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[202]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[203]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[204]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[205]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[206]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[207]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[208]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[209]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[20]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[210]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[211]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[212]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[213]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[214]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[215]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[216]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[217]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[218]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[219]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[21]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[220]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[221]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[222]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[223]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[224]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[225]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[226]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[227]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[228]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[229]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[22]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[230]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[231]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[232]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[233]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[234]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[235]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[236]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[237]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[238]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[239]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[23]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[240]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[241]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[242]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[243]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[244]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[245]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[246]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[247]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[248]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[249]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[24]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[250]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[251]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[252]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[253]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[254]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[255]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[25]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[26]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[27]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[28]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[29]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[30]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[31]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[32]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[33]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[34]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[35]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[36]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[37]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[38]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[39]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[3]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[40]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[41]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[42]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[43]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[44]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[45]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[46]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[47]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[48]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[49]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[4]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[50]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[51]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[52]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[53]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[54]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[55]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[56]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[57]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[58]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[59]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[5]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[60]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[61]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[62]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[63]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[64]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[65]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[66]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[67]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[68]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[69]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[6]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[70]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[71]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[72]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[73]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[74]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[75]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[76]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[77]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[78]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[79]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[7]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[80]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[81]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[82]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[83]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[84]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[85]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[86]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[87]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[88]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[89]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[8]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[90]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[91]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[92]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[93]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[94]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[95]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[96]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[97]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[98]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[99]);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[9]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[100]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[101]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[102]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[103]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[104]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[105]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[106]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[107]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[108]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[109]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[10]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[110]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[111]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[112]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[113]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[114]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[115]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[116]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[117]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[118]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[119]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[11]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[120]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[121]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[122]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[123]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[124]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[125]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[126]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[127]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[128]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[129]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[12]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[130]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[131]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[132]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[133]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[134]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[135]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[136]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[137]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[138]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[139]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[13]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[140]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[141]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[142]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[143]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[144]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[145]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[146]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[147]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[148]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[149]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[14]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[150]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[151]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[152]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[153]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[154]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[155]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[156]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[157]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[158]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[159]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[15]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[160]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[161]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[162]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[163]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[164]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[165]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[166]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[167]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[168]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[169]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[16]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[170]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[171]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[172]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[173]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[174]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[175]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[176]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[177]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[178]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[179]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[17]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[180]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[181]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[182]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[183]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[184]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[185]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[186]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[187]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[188]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[189]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[18]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[190]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[191]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[192]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[193]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[194]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[195]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[196]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[197]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[198]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[199]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[19]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[200]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[201]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[202]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[203]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[204]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[205]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[206]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[207]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[208]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[209]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[20]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[210]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[211]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[212]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[213]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[214]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[215]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[216]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[217]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[218]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[219]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[21]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[220]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[221]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[222]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[223]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[224]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[225]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[226]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[227]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[228]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[229]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[22]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[230]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[231]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[232]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[233]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[234]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[235]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[236]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[237]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[238]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[239]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[23]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[240]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[241]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[242]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[243]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[244]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[245]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[246]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[247]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[248]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[249]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[24]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[250]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[251]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[252]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[253]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[254]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[255]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[25]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[26]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[27]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[28]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[29]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[30]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[31]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[32]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[33]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[34]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[35]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[36]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[37]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[38]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[39]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[3]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[40]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[41]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[42]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[43]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[44]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[45]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[46]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[47]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[48]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[49]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[4]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[50]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[51]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[52]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[53]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[54]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[55]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[56]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[57]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[58]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[59]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[5]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[60]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[61]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[62]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[63]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[64]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[65]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[66]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[67]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[68]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[69]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[6]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[70]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[71]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[72]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[73]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[74]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[75]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[76]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[77]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[78]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[79]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[7]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[80]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[81]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[82]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[83]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[84]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[85]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[86]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[87]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[88]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[89]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[8]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[90]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[91]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[92]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[93]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[94]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[95]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[96]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[97]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[98]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[99]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH0_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH0_TXDATA_delay[9]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_LOOPBACK_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_LOOPBACK_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_LOOPBACK_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[100]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[101]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[102]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[103]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[104]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[105]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[106]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[107]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[108]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[109]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[10]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[110]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[111]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[112]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[113]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[114]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[115]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[116]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[117]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[118]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[119]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[11]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[120]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[121]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[122]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[123]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[124]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[125]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[126]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[127]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[128]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[129]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[12]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[130]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[131]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[132]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[133]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[134]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[135]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[136]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[137]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[138]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[139]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[13]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[140]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[141]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[142]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[143]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[144]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[145]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[146]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[147]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[148]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[149]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[14]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[150]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[151]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[152]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[153]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[154]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[155]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[156]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[157]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[158]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[159]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[15]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[160]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[161]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[162]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[163]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[164]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[165]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[166]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[167]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[168]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[169]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[16]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[170]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[171]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[172]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[173]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[174]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[175]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[176]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[177]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[178]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[179]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[17]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[180]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[181]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[182]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[183]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[184]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[185]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[186]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[187]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[188]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[189]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[18]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[190]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[191]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[192]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[193]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[194]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[195]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[196]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[197]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[198]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[199]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[19]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[200]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[201]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[202]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[203]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[204]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[205]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[206]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[207]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[208]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[209]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[20]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[210]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[211]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[212]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[213]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[214]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[215]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[216]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[217]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[218]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[219]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[21]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[220]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[221]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[222]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[223]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[224]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[225]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[226]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[227]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[228]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[229]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[22]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[230]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[231]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[232]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[233]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[234]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[235]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[236]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[237]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[238]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[239]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[23]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[240]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[241]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[242]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[243]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[244]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[245]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[246]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[247]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[248]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[249]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[24]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[250]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[251]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[252]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[253]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[254]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[255]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[25]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[26]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[27]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[28]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[29]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[30]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[31]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[32]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[33]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[34]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[35]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[36]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[37]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[38]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[39]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[3]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[40]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[41]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[42]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[43]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[44]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[45]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[46]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[47]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[48]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[49]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[4]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[50]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[51]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[52]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[53]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[54]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[55]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[56]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[57]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[58]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[59]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[5]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[60]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[61]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[62]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[63]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[64]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[65]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[66]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[67]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[68]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[69]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[6]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[70]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[71]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[72]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[73]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[74]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[75]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[76]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[77]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[78]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[79]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[7]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[80]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[81]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[82]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[83]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[84]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[85]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[86]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[87]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[88]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[89]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[8]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[90]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[91]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[92]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[93]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[94]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[95]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[96]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[97]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[98]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[99]);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXDATA_delay[9]);
    $setuphold (posedge CH2_RXLATCLK, negedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_RXLATCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_RXLATCLK, negedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_RXLATCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_RXLATCLK, negedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_RXLATCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_RXLATCLK, posedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_RXLATCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_RXLATCLK, posedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_RXLATCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_RXLATCLK, posedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_RXLATCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_RXUSRCLK, negedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_RXUSRCLK, negedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_RXUSRCLK, negedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_RXUSRCLK, negedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_RXUSRCLK, negedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_RXUSRCLK, negedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_RXUSRCLK, posedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_RXUSRCLK, posedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_RXUSRCLK, posedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_RXUSRCLK, posedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_RXUSRCLK, posedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_RXUSRCLK, posedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_RXUSRCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[0]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[100]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[101]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[102]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[103]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[104]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[105]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[106]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[107]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[108]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[109]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[10]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[110]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[111]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[112]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[113]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[114]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[115]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[116]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[117]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[118]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[119]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[11]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[120]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[121]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[122]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[123]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[124]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[125]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[126]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[127]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[128]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[129]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[12]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[130]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[131]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[132]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[133]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[134]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[135]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[136]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[137]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[138]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[139]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[13]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[140]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[141]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[142]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[143]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[144]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[145]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[146]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[147]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[148]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[149]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[14]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[150]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[151]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[152]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[153]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[154]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[155]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[156]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[157]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[158]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[159]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[15]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[160]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[161]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[162]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[163]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[164]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[165]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[166]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[167]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[168]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[169]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[16]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[170]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[171]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[172]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[173]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[174]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[175]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[176]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[177]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[178]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[179]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[17]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[180]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[181]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[182]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[183]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[184]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[185]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[186]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[187]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[188]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[189]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[18]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[190]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[191]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[192]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[193]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[194]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[195]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[196]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[197]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[198]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[199]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[19]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[1]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[200]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[201]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[202]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[203]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[204]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[205]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[206]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[207]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[208]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[209]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[20]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[210]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[211]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[212]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[213]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[214]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[215]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[216]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[217]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[218]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[219]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[21]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[220]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[221]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[222]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[223]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[224]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[225]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[226]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[227]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[228]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[229]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[22]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[230]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[231]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[232]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[233]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[234]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[235]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[236]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[237]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[238]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[239]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[23]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[240]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[241]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[242]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[243]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[244]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[245]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[246]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[247]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[248]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[249]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[24]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[250]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[251]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[252]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[253]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[254]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[255]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[25]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[26]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[27]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[28]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[29]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[30]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[31]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[32]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[33]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[34]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[35]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[36]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[37]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[38]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[39]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[3]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[40]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[41]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[42]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[43]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[44]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[45]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[46]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[47]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[48]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[49]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[4]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[50]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[51]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[52]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[53]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[54]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[55]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[56]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[57]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[58]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[59]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[5]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[60]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[61]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[62]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[63]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[64]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[65]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[66]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[67]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[68]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[69]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[6]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[70]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[71]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[72]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[73]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[74]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[75]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[76]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[77]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[78]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[79]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[7]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[80]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[81]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[82]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[83]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[84]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[85]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[86]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[87]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[88]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[89]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[8]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[90]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[91]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[92]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[93]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[94]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[95]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[96]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[97]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[98]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[99]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH2_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[9]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[0]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[100]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[101]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[102]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[103]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[104]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[105]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[106]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[107]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[108]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[109]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[10]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[110]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[111]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[112]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[113]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[114]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[115]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[116]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[117]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[118]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[119]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[11]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[120]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[121]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[122]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[123]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[124]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[125]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[126]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[127]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[128]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[129]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[12]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[130]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[131]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[132]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[133]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[134]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[135]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[136]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[137]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[138]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[139]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[13]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[140]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[141]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[142]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[143]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[144]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[145]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[146]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[147]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[148]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[149]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[14]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[150]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[151]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[152]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[153]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[154]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[155]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[156]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[157]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[158]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[159]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[15]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[160]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[161]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[162]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[163]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[164]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[165]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[166]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[167]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[168]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[169]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[16]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[170]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[171]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[172]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[173]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[174]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[175]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[176]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[177]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[178]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[179]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[17]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[180]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[181]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[182]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[183]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[184]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[185]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[186]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[187]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[188]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[189]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[18]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[190]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[191]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[192]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[193]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[194]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[195]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[196]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[197]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[198]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[199]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[19]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[1]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[200]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[201]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[202]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[203]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[204]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[205]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[206]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[207]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[208]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[209]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[20]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[210]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[211]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[212]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[213]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[214]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[215]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[216]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[217]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[218]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[219]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[21]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[220]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[221]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[222]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[223]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[224]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[225]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[226]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[227]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[228]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[229]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[22]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[230]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[231]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[232]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[233]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[234]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[235]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[236]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[237]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[238]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[239]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[23]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[240]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[241]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[242]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[243]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[244]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[245]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[246]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[247]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[248]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[249]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[24]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[250]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[251]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[252]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[253]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[254]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[255]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[25]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[26]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[27]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[28]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[29]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[30]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[31]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[32]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[33]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[34]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[35]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[36]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[37]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[38]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[39]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[3]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[40]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[41]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[42]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[43]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[44]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[45]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[46]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[47]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[48]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[49]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[4]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[50]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[51]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[52]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[53]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[54]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[55]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[56]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[57]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[58]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[59]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[5]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[60]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[61]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[62]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[63]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[64]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[65]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[66]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[67]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[68]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[69]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[6]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[70]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[71]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[72]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[73]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[74]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[75]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[76]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[77]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[78]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[79]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[7]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[80]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[81]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[82]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[83]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[84]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[85]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[86]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[87]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[88]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[89]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[8]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[90]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[91]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[92]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[93]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[94]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[95]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[96]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[97]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[98]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[99]);
    $setuphold (posedge CH2_TXUSRCLK, negedge CH3_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[9]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[0]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[100]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[101]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[102]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[103]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[104]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[105]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[106]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[107]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[108]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[109]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[10]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[110]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[111]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[112]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[113]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[114]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[115]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[116]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[117]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[118]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[119]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[11]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[120]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[121]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[122]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[123]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[124]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[125]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[126]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[127]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[128]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[129]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[12]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[130]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[131]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[132]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[133]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[134]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[135]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[136]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[137]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[138]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[139]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[13]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[140]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[141]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[142]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[143]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[144]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[145]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[146]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[147]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[148]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[149]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[14]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[150]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[151]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[152]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[153]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[154]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[155]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[156]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[157]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[158]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[159]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[15]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[160]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[161]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[162]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[163]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[164]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[165]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[166]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[167]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[168]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[169]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[16]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[170]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[171]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[172]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[173]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[174]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[175]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[176]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[177]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[178]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[179]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[17]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[180]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[181]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[182]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[183]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[184]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[185]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[186]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[187]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[188]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[189]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[18]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[190]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[191]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[192]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[193]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[194]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[195]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[196]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[197]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[198]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[199]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[19]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[1]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[200]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[201]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[202]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[203]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[204]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[205]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[206]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[207]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[208]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[209]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[20]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[210]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[211]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[212]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[213]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[214]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[215]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[216]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[217]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[218]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[219]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[21]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[220]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[221]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[222]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[223]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[224]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[225]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[226]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[227]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[228]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[229]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[22]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[230]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[231]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[232]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[233]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[234]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[235]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[236]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[237]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[238]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[239]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[23]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[240]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[241]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[242]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[243]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[244]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[245]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[246]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[247]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[248]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[249]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[24]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[250]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[251]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[252]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[253]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[254]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[255]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[25]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[26]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[27]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[28]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[29]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[30]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[31]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[32]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[33]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[34]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[35]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[36]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[37]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[38]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[39]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[3]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[40]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[41]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[42]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[43]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[44]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[45]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[46]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[47]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[48]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[49]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[4]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[50]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[51]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[52]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[53]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[54]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[55]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[56]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[57]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[58]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[59]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[5]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[60]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[61]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[62]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[63]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[64]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[65]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[66]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[67]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[68]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[69]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[6]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[70]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[71]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[72]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[73]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[74]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[75]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[76]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[77]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[78]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[79]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[7]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[80]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[81]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[82]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[83]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[84]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[85]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[86]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[87]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[88]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[89]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[8]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[90]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[91]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[92]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[93]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[94]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[95]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[96]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[97]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[98]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[99]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH2_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH2_TXDATA_delay[9]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[0]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[100]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[101]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[102]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[103]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[104]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[105]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[106]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[107]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[108]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[109]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[10]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[110]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[111]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[112]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[113]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[114]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[115]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[116]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[117]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[118]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[119]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[11]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[120]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[121]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[122]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[123]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[124]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[125]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[126]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[127]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[128]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[129]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[12]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[130]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[131]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[132]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[133]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[134]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[135]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[136]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[137]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[138]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[139]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[13]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[140]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[141]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[142]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[143]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[144]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[145]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[146]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[147]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[148]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[149]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[14]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[150]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[151]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[152]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[153]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[154]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[155]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[156]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[157]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[158]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[159]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[15]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[160]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[161]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[162]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[163]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[164]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[165]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[166]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[167]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[168]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[169]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[16]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[170]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[171]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[172]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[173]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[174]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[175]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[176]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[177]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[178]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[179]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[17]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[180]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[181]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[182]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[183]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[184]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[185]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[186]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[187]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[188]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[189]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[18]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[190]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[191]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[192]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[193]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[194]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[195]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[196]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[197]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[198]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[199]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[19]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[1]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[200]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[201]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[202]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[203]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[204]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[205]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[206]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[207]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[208]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[209]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[20]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[210]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[211]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[212]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[213]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[214]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[215]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[216]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[217]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[218]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[219]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[21]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[220]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[221]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[222]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[223]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[224]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[225]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[226]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[227]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[228]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[229]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[22]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[230]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[231]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[232]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[233]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[234]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[235]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[236]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[237]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[238]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[239]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[23]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[240]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[241]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[242]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[243]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[244]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[245]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[246]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[247]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[248]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[249]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[24]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[250]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[251]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[252]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[253]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[254]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[255]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[25]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[26]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[27]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[28]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[29]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[2]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[30]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[31]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[32]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[33]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[34]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[35]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[36]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[37]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[38]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[39]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[3]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[40]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[41]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[42]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[43]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[44]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[45]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[46]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[47]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[48]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[49]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[4]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[50]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[51]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[52]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[53]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[54]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[55]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[56]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[57]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[58]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[59]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[5]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[60]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[61]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[62]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[63]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[64]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[65]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[66]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[67]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[68]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[69]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[6]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[70]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[71]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[72]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[73]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[74]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[75]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[76]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[77]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[78]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[79]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[7]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[80]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[81]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[82]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[83]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[84]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[85]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[86]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[87]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[88]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[89]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[8]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[90]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[91]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[92]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[93]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[94]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[95]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[96]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[97]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[98]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[99]);
    $setuphold (posedge CH2_TXUSRCLK, posedge CH3_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH2_TXUSRCLK_delay, CH3_TXDATA_delay[9]);
    $setuphold (posedge CH3_RXLATCLK, negedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_RXLATCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_RXLATCLK, negedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_RXLATCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_RXLATCLK, negedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_RXLATCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_RXLATCLK, posedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_RXLATCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_RXLATCLK, posedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_RXLATCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_RXLATCLK, posedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_RXLATCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_RXUSRCLK, negedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_RXUSRCLK, negedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_RXUSRCLK, negedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_RXUSRCLK, negedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_RXUSRCLK, negedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_RXUSRCLK, negedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_RXUSRCLK, posedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_RXUSRCLK, posedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_RXUSRCLK, posedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_RXUSRCLK, posedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_RXUSRCLK, posedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_RXUSRCLK, posedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_RXUSRCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[0]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[100]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[101]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[102]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[103]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[104]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[105]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[106]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[107]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[108]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[109]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[10]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[110]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[111]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[112]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[113]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[114]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[115]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[116]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[117]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[118]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[119]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[11]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[120]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[121]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[122]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[123]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[124]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[125]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[126]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[127]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[128]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[129]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[12]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[130]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[131]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[132]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[133]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[134]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[135]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[136]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[137]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[138]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[139]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[13]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[140]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[141]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[142]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[143]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[144]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[145]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[146]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[147]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[148]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[149]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[14]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[150]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[151]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[152]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[153]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[154]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[155]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[156]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[157]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[158]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[159]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[15]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[160]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[161]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[162]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[163]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[164]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[165]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[166]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[167]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[168]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[169]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[16]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[170]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[171]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[172]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[173]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[174]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[175]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[176]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[177]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[178]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[179]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[17]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[180]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[181]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[182]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[183]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[184]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[185]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[186]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[187]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[188]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[189]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[18]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[190]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[191]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[192]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[193]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[194]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[195]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[196]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[197]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[198]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[199]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[19]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[1]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[200]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[201]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[202]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[203]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[204]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[205]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[206]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[207]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[208]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[209]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[20]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[210]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[211]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[212]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[213]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[214]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[215]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[216]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[217]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[218]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[219]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[21]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[220]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[221]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[222]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[223]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[224]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[225]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[226]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[227]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[228]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[229]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[22]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[230]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[231]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[232]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[233]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[234]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[235]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[236]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[237]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[238]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[239]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[23]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[240]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[241]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[242]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[243]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[244]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[245]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[246]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[247]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[248]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[249]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[24]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[250]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[251]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[252]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[253]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[254]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[255]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[25]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[26]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[27]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[28]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[29]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[30]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[31]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[32]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[33]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[34]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[35]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[36]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[37]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[38]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[39]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[3]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[40]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[41]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[42]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[43]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[44]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[45]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[46]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[47]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[48]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[49]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[4]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[50]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[51]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[52]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[53]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[54]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[55]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[56]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[57]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[58]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[59]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[5]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[60]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[61]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[62]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[63]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[64]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[65]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[66]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[67]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[68]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[69]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[6]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[70]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[71]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[72]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[73]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[74]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[75]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[76]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[77]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[78]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[79]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[7]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[80]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[81]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[82]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[83]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[84]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[85]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[86]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[87]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[88]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[89]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[8]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[90]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[91]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[92]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[93]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[94]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[95]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[96]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[97]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[98]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[99]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH2_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[9]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[0]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[100]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[101]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[102]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[103]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[104]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[105]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[106]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[107]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[108]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[109]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[10]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[110]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[111]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[112]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[113]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[114]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[115]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[116]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[117]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[118]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[119]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[11]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[120]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[121]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[122]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[123]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[124]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[125]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[126]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[127]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[128]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[129]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[12]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[130]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[131]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[132]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[133]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[134]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[135]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[136]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[137]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[138]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[139]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[13]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[140]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[141]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[142]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[143]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[144]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[145]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[146]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[147]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[148]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[149]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[14]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[150]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[151]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[152]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[153]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[154]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[155]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[156]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[157]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[158]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[159]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[15]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[160]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[161]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[162]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[163]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[164]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[165]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[166]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[167]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[168]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[169]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[16]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[170]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[171]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[172]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[173]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[174]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[175]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[176]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[177]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[178]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[179]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[17]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[180]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[181]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[182]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[183]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[184]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[185]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[186]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[187]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[188]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[189]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[18]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[190]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[191]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[192]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[193]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[194]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[195]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[196]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[197]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[198]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[199]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[19]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[1]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[200]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[201]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[202]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[203]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[204]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[205]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[206]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[207]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[208]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[209]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[20]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[210]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[211]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[212]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[213]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[214]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[215]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[216]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[217]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[218]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[219]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[21]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[220]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[221]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[222]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[223]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[224]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[225]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[226]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[227]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[228]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[229]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[22]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[230]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[231]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[232]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[233]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[234]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[235]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[236]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[237]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[238]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[239]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[23]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[240]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[241]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[242]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[243]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[244]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[245]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[246]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[247]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[248]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[249]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[24]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[250]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[251]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[252]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[253]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[254]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[255]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[25]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[26]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[27]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[28]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[29]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[30]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[31]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[32]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[33]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[34]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[35]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[36]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[37]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[38]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[39]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[3]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[40]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[41]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[42]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[43]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[44]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[45]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[46]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[47]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[48]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[49]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[4]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[50]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[51]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[52]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[53]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[54]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[55]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[56]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[57]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[58]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[59]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[5]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[60]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[61]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[62]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[63]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[64]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[65]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[66]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[67]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[68]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[69]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[6]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[70]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[71]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[72]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[73]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[74]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[75]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[76]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[77]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[78]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[79]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[7]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[80]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[81]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[82]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[83]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[84]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[85]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[86]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[87]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[88]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[89]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[8]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[90]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[91]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[92]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[93]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[94]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[95]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[96]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[97]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[98]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[99]);
    $setuphold (posedge CH3_TXUSRCLK, negedge CH3_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[9]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[0]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[100]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[101]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[102]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[103]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[104]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[105]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[106]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[107]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[108]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[109]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[10]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[110]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[111]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[112]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[113]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[114]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[115]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[116]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[117]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[118]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[119]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[11]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[120]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[121]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[122]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[123]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[124]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[125]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[126]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[127]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[128]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[129]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[12]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[130]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[131]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[132]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[133]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[134]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[135]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[136]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[137]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[138]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[139]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[13]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[140]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[141]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[142]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[143]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[144]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[145]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[146]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[147]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[148]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[149]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[14]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[150]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[151]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[152]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[153]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[154]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[155]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[156]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[157]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[158]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[159]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[15]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[160]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[161]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[162]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[163]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[164]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[165]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[166]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[167]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[168]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[169]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[16]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[170]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[171]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[172]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[173]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[174]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[175]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[176]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[177]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[178]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[179]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[17]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[180]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[181]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[182]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[183]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[184]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[185]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[186]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[187]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[188]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[189]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[18]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[190]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[191]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[192]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[193]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[194]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[195]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[196]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[197]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[198]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[199]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[19]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[1]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[200]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[201]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[202]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[203]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[204]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[205]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[206]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[207]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[208]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[209]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[20]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[210]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[211]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[212]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[213]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[214]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[215]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[216]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[217]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[218]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[219]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[21]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[220]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[221]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[222]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[223]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[224]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[225]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[226]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[227]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[228]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[229]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[22]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[230]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[231]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[232]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[233]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[234]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[235]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[236]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[237]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[238]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[239]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[23]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[240]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[241]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[242]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[243]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[244]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[245]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[246]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[247]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[248]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[249]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[24]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[250]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[251]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[252]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[253]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[254]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[255]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[25]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[26]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[27]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[28]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[29]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[30]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[31]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[32]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[33]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[34]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[35]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[36]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[37]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[38]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[39]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[3]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[40]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[41]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[42]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[43]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[44]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[45]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[46]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[47]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[48]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[49]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[4]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[50]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[51]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[52]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[53]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[54]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[55]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[56]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[57]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[58]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[59]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[5]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[60]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[61]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[62]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[63]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[64]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[65]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[66]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[67]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[68]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[69]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[6]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[70]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[71]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[72]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[73]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[74]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[75]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[76]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[77]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[78]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[79]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[7]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[80]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[81]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[82]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[83]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[84]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[85]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[86]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[87]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[88]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[89]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[8]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[90]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[91]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[92]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[93]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[94]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[95]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[96]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[97]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[98]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[99]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH2_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH2_TXDATA_delay[9]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_LOOPBACK[0], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_LOOPBACK_delay[0]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_LOOPBACK[1], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_LOOPBACK_delay[1]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_LOOPBACK[2], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_LOOPBACK_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[0]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[100]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[101]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[102]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[103]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[104]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[105]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[106]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[107]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[108]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[109]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[10]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[110]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[111]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[112]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[113]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[114]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[115]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[116]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[117]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[118]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[119]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[11]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[120]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[121]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[122]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[123]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[124]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[125]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[126]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[127]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[128]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[129]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[12]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[130]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[131]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[132]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[133]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[134]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[135]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[136]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[137]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[138]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[139]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[13]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[140]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[141]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[142]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[143]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[144]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[145]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[146]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[147]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[148]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[149]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[14]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[150]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[151]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[152]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[153]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[154]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[155]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[156]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[157]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[158]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[159]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[15]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[160]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[161]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[162]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[163]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[164]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[165]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[166]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[167]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[168]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[169]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[16]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[170]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[171]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[172]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[173]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[174]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[175]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[176]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[177]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[178]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[179]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[17]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[180]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[181]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[182]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[183]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[184]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[185]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[186]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[187]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[188]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[189]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[18]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[190]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[191]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[192]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[193]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[194]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[195]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[196]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[197]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[198]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[199]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[19]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[1]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[200]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[201]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[202]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[203]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[204]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[205]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[206]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[207]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[208]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[209]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[20]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[210]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[211]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[212]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[213]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[214]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[215]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[216]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[217]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[218]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[219]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[21]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[220]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[221]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[222]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[223]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[224]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[225]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[226]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[227]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[228]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[229]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[22]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[230]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[231]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[232]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[233]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[234]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[235]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[236]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[237]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[238]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[239]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[23]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[240]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[241]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[242]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[243]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[244]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[245]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[246]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[247]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[248]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[249]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[24]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[250]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[251]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[252]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[253]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[254]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[255]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[25]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[26]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[27]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[28]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[29]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[2]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[30]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[31]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[32]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[33]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[34]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[35]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[36]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[37]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[38]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[39]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[3]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[40]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[41]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[42]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[43]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[44]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[45]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[46]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[47]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[48]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[49]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[4]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[50]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[51]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[52]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[53]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[54]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[55]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[56]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[57]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[58]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[59]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[5]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[60]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[61]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[62]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[63]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[64]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[65]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[66]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[67]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[68]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[69]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[6]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[70]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[71]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[72]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[73]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[74]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[75]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[76]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[77]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[78]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[79]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[7]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[80]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[81]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[82]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[83]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[84]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[85]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[86]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[87]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[88]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[89]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[8]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[90]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[91]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[92]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[93]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[94]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[95]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[96]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[97]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[98]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[99]);
    $setuphold (posedge CH3_TXUSRCLK, posedge CH3_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH3_TXUSRCLK_delay, CH3_TXDATA_delay[9]);
    $setuphold (posedge DEBUGTRACECLK, negedge DEBUGTRACEREADY, 0:0:0, 0:0:0, notifier, , , DEBUGTRACECLK_delay, DEBUGTRACEREADY_delay);
    $setuphold (posedge DEBUGTRACECLK, posedge DEBUGTRACEREADY, 0:0:0, 0:0:0, notifier, , , DEBUGTRACECLK_delay, DEBUGTRACEREADY_delay);
    $width (negedge APB3CLK, 0:0:0, 0, notifier);
    $width (negedge AXISCLK, 0:0:0, 0, notifier);
    $width (negedge CH0_DMONITORCLK, 0:0:0, 0, notifier);
    $width (negedge CH0_RXLATCLK, 0:0:0, 0, notifier);
    $width (negedge CH0_RXUSRCLK, 0:0:0, 0, notifier);
    $width (negedge CH0_TXLATCLK, 0:0:0, 0, notifier);
    $width (negedge CH0_TXUSRCLK, 0:0:0, 0, notifier);
    $width (negedge CH1_DMONITORCLK, 0:0:0, 0, notifier);
    $width (negedge CH1_RXLATCLK, 0:0:0, 0, notifier);
    $width (negedge CH1_RXUSRCLK, 0:0:0, 0, notifier);
    $width (negedge CH1_TXLATCLK, 0:0:0, 0, notifier);
    $width (negedge CH1_TXUSRCLK, 0:0:0, 0, notifier);
    $width (negedge CH2_DMONITORCLK, 0:0:0, 0, notifier);
    $width (negedge CH2_RXLATCLK, 0:0:0, 0, notifier);
    $width (negedge CH2_RXUSRCLK, 0:0:0, 0, notifier);
    $width (negedge CH2_TXLATCLK, 0:0:0, 0, notifier);
    $width (negedge CH2_TXUSRCLK, 0:0:0, 0, notifier);
    $width (negedge CH3_DMONITORCLK, 0:0:0, 0, notifier);
    $width (negedge CH3_RXLATCLK, 0:0:0, 0, notifier);
    $width (negedge CH3_RXUSRCLK, 0:0:0, 0, notifier);
    $width (negedge CH3_TXLATCLK, 0:0:0, 0, notifier);
    $width (negedge CH3_TXUSRCLK, 0:0:0, 0, notifier);
    $width (negedge DEBUGTRACECLK, 0:0:0, 0, notifier);
    $width (negedge HSCLK0_LCPLLGTGREFCLK, 0:0:0, 0, notifier);
    $width (negedge HSCLK0_LCPLLGTREFCLK0, 0:0:0, 0, notifier);
    $width (negedge HSCLK0_LCPLLGTREFCLK1, 0:0:0, 0, notifier);
    $width (negedge HSCLK0_LCPLLNORTHREFCLK0, 0:0:0, 0, notifier);
    $width (negedge HSCLK0_LCPLLNORTHREFCLK1, 0:0:0, 0, notifier);
    $width (negedge HSCLK0_LCPLLSOUTHREFCLK0, 0:0:0, 0, notifier);
    $width (negedge HSCLK0_LCPLLSOUTHREFCLK1, 0:0:0, 0, notifier);
    $width (negedge HSCLK1_LCPLLGTGREFCLK, 0:0:0, 0, notifier);
    $width (negedge HSCLK1_LCPLLGTREFCLK0, 0:0:0, 0, notifier);
    $width (negedge HSCLK1_LCPLLGTREFCLK1, 0:0:0, 0, notifier);
    $width (negedge HSCLK1_LCPLLNORTHREFCLK0, 0:0:0, 0, notifier);
    $width (negedge HSCLK1_LCPLLNORTHREFCLK1, 0:0:0, 0, notifier);
    $width (negedge HSCLK1_LCPLLSOUTHREFCLK0, 0:0:0, 0, notifier);
    $width (negedge HSCLK1_LCPLLSOUTHREFCLK1, 0:0:0, 0, notifier);
    $width (negedge REFCLK0_CLKTESTSIG, 0:0:0, 0, notifier);
    $width (negedge REFCLK1_CLKTESTSIG, 0:0:0, 0, notifier);
    $width (posedge APB3CLK, 0:0:0, 0, notifier);
    $width (posedge AXISCLK, 0:0:0, 0, notifier);
    $width (posedge CH0_DMONITORCLK, 0:0:0, 0, notifier);
    $width (posedge CH0_RXLATCLK, 0:0:0, 0, notifier);
    $width (posedge CH0_RXUSRCLK, 0:0:0, 0, notifier);
    $width (posedge CH0_TXLATCLK, 0:0:0, 0, notifier);
    $width (posedge CH0_TXUSRCLK, 0:0:0, 0, notifier);
    $width (posedge CH1_DMONITORCLK, 0:0:0, 0, notifier);
    $width (posedge CH1_RXLATCLK, 0:0:0, 0, notifier);
    $width (posedge CH1_RXUSRCLK, 0:0:0, 0, notifier);
    $width (posedge CH1_TXLATCLK, 0:0:0, 0, notifier);
    $width (posedge CH1_TXUSRCLK, 0:0:0, 0, notifier);
    $width (posedge CH2_DMONITORCLK, 0:0:0, 0, notifier);
    $width (posedge CH2_RXLATCLK, 0:0:0, 0, notifier);
    $width (posedge CH2_RXUSRCLK, 0:0:0, 0, notifier);
    $width (posedge CH2_TXLATCLK, 0:0:0, 0, notifier);
    $width (posedge CH2_TXUSRCLK, 0:0:0, 0, notifier);
    $width (posedge CH3_DMONITORCLK, 0:0:0, 0, notifier);
    $width (posedge CH3_RXLATCLK, 0:0:0, 0, notifier);
    $width (posedge CH3_RXUSRCLK, 0:0:0, 0, notifier);
    $width (posedge CH3_TXLATCLK, 0:0:0, 0, notifier);
    $width (posedge CH3_TXUSRCLK, 0:0:0, 0, notifier);
    $width (posedge DEBUGTRACECLK, 0:0:0, 0, notifier);
    $width (posedge HSCLK0_LCPLLGTGREFCLK, 0:0:0, 0, notifier);
    $width (posedge HSCLK0_LCPLLGTREFCLK0, 0:0:0, 0, notifier);
    $width (posedge HSCLK0_LCPLLGTREFCLK1, 0:0:0, 0, notifier);
    $width (posedge HSCLK0_LCPLLNORTHREFCLK0, 0:0:0, 0, notifier);
    $width (posedge HSCLK0_LCPLLNORTHREFCLK1, 0:0:0, 0, notifier);
    $width (posedge HSCLK0_LCPLLSOUTHREFCLK0, 0:0:0, 0, notifier);
    $width (posedge HSCLK0_LCPLLSOUTHREFCLK1, 0:0:0, 0, notifier);
    $width (posedge HSCLK1_LCPLLGTGREFCLK, 0:0:0, 0, notifier);
    $width (posedge HSCLK1_LCPLLGTREFCLK0, 0:0:0, 0, notifier);
    $width (posedge HSCLK1_LCPLLGTREFCLK1, 0:0:0, 0, notifier);
    $width (posedge HSCLK1_LCPLLNORTHREFCLK0, 0:0:0, 0, notifier);
    $width (posedge HSCLK1_LCPLLNORTHREFCLK1, 0:0:0, 0, notifier);
    $width (posedge HSCLK1_LCPLLSOUTHREFCLK0, 0:0:0, 0, notifier);
    $width (posedge HSCLK1_LCPLLSOUTHREFCLK1, 0:0:0, 0, notifier);
    $width (posedge REFCLK0_CLKTESTSIG, 0:0:0, 0, notifier);
    $width (posedge REFCLK1_CLKTESTSIG, 0:0:0, 0, notifier);
`endif
    specparam PATHPULSE$ = 0;
  endspecify
   // end timing section 
`endif
endmodule

`endcelldefine
