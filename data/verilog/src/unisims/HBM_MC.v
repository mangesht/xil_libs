///////////////////////////////////////////////////////////////////////////////
//  Copyright (c) 1995/2021 Xilinx, Inc.
//  All Right Reserved.
///////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /     Vendor      : Xilinx
// \   \   \/      Version     : 2022.1
//  \   \          Description : Xilinx Unified Simulation Library Component
//  /   /                        HBM_MC
// /___/   /\      Filename    : HBM_MC.v
// \   \  /  \
//  \___\/\___\
//
///////////////////////////////////////////////////////////////////////////////
//  Revision:
//
//  End Revision:
///////////////////////////////////////////////////////////////////////////////

`timescale 1 ps / 1 ps

`celldefine

module HBM_MC #(
`ifdef XIL_TIMING
  parameter LOC = "UNPLACED",
`endif
  parameter [1:0] HBMMC_AP_HINT_MODE = 2'h0,
  parameter [0:0] HBMMC_CATTRIP = 1'h0,
  parameter [0:0] HBMMC_CMD_PAR = 1'h0,
  parameter [13:0] HBMMC_CONFIG = 14'h2001,
  parameter [0:0] HBMMC_DA28_LOCKOUT = 1'h0,
  parameter [2:0] HBMMC_DATA_ERROR_MODE = 3'h0,
  parameter [0:0] HBMMC_DQ_RD_PAR = 1'h0,
  parameter [0:0] HBMMC_DQ_WR_PAR = 1'h0,
  parameter [0:0] HBMMC_DW_LOOPBACK = 1'h0,
  parameter [2:0] HBMMC_DW_MISR = 3'h0,
  parameter [1:0] HBMMC_DW_RD_MUX = 2'h0,
  parameter [1:0] HBMMC_ECC = 2'h0,
  parameter [2:0] HBMMC_ENTER_SELFREFRESH = 3'h0,
  parameter [26:0] HBMMC_IDLE_TIMEOUT = 27'h0001000,
  parameter [3:0] HBMMC_IDLE_TIMEOUT_EN = 4'h0,
  parameter [19:0] HBMMC_INIT_START = 20'h00000,
  parameter [2:0] HBMMC_INT_VREF = 3'h0,
  parameter [18:0] HBMMC_MAX_PG_IDLE = 19'h00080,
  parameter [9:0] HBMMC_MAX_SKIP_CNT = 10'h0FF,
  parameter [2:0] HBMMC_MC_DBG_HALT = 3'h0,
  parameter [31:0] HBMMC_MC_PM_CAPTURE_TIME = 32'h00000000,
  parameter [15:0] HBMMC_MC_PM_EN = 16'h0000,
  parameter [31:0] HBMMC_NA0_BANKADDR_MAP_0 = 32'h0034530B,
  parameter [31:0] HBMMC_NA0_COLADDR_MAP_0 = 32'h89207180,
  parameter [31:0] HBMMC_NA0_COLADDR_MAP_1 = 32'h00000002,
  parameter [31:0] HBMMC_NA0_COLADDR_MAP_2 = 32'h00000000,
  parameter [8:0] HBMMC_NA0_EXMON_CLR_EXE_CFG_DYN_MCP3 = 9'h100,
  parameter [12:0] HBMMC_NA0_JEDEC_DEVICE_CODE = 13'h000A,
  parameter [27:0] HBMMC_NA0_NA_DEST_ID = 28'h0000000,
  parameter [31:0] HBMMC_NA0_NA_ERR_INJ = 32'h00000000,
  parameter [31:0] HBMMC_NA0_NA_NSU_FORCE_ECC_FLIT_ERR = 32'h00000000,
  parameter [5:0] HBMMC_NA0_NA_PM_FILTR_EN_P0 = 6'h00,
  parameter [5:0] HBMMC_NA0_NA_PM_FILTR_EN_P1 = 6'h00,
  parameter [25:0] HBMMC_NA0_NA_PM_FILTR_P0 = 26'h0000000,
  parameter [25:0] HBMMC_NA0_NA_PM_FILTR_P1 = 26'h0000000,
  parameter [11:0] HBMMC_NA0_NA_PM_SMID_FILTR_P0 = 12'h000,
  parameter [11:0] HBMMC_NA0_NA_PM_SMID_FILTR_P1 = 12'h000,
  parameter [7:0] HBMMC_NA0_NA_VC_MAP = 8'h00,
  parameter [25:0] HBMMC_NA0_PORT_CONTROL = 26'h0808421,
  parameter [0:0] HBMMC_NA0_RD_CMD_MODE_CFG_MCP = 1'h0,
  parameter [31:0] HBMMC_NA0_ROWADDR_MAP_0 = 32'hD24503CE,
  parameter [31:0] HBMMC_NA0_ROWADDR_MAP_1 = 32'h85D65544,
  parameter [31:0] HBMMC_NA0_ROWADDR_MAP_2 = 32'h75C6DA65,
  parameter [11:0] HBMMC_NA0_ROWADDR_MAP_3 = 12'h000,
  parameter [31:0] HBMMC_NA0_SCRUB_END_ADDRESS = 32'h0000000E,
  parameter [31:0] HBMMC_NA0_SCRUB_FREQUENCY = 32'h0000000A,
  parameter [1:0] HBMMC_NA0_SCRUB_INIT_EN = 2'h0,
  parameter [31:0] HBMMC_NA0_SCRUB_START_ADDRESS = 32'h00000000,
  parameter [14:0] HBMMC_NA0_TGC_CONFIG = 15'h0000,
  parameter [0:0] HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP = 1'h0,
  parameter [31:0] HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP = 32'h00000000,
  parameter [4:0] HBMMC_NA0_XMPU_CONFIG0_CFG_DYN_MCP3 = 5'h08,
  parameter [4:0] HBMMC_NA0_XMPU_CONFIG1_CFG_DYN_MCP3 = 5'h08,
  parameter [3:0] HBMMC_NA0_XMPU_CTRL_CFG_DYN_MCP3 = 4'hB,
  parameter [15:0] HBMMC_NA0_XMPU_END_HI0_CFG_DYN_MCP3 = 16'h0000,
  parameter [15:0] HBMMC_NA0_XMPU_END_HI1_CFG_DYN_MCP3 = 16'h0000,
  parameter [31:0] HBMMC_NA0_XMPU_END_LO0_CFG_DYN_MCP3 = 32'h00000000,
  parameter [31:0] HBMMC_NA0_XMPU_END_LO1_CFG_DYN_MCP3 = 32'h00000000,
  parameter [25:0] HBMMC_NA0_XMPU_MASTER0_CFG_DYN_MCP3 = 26'h0000000,
  parameter [25:0] HBMMC_NA0_XMPU_MASTER1_CFG_DYN_MCP3 = 26'h0000000,
  parameter [15:0] HBMMC_NA0_XMPU_START_HI0_CFG_DYN_MCP3 = 16'h0000,
  parameter [15:0] HBMMC_NA0_XMPU_START_HI1_CFG_DYN_MCP3 = 16'h0000,
  parameter [31:0] HBMMC_NA0_XMPU_START_LO0_CFG_DYN_MCP3 = 32'h00000000,
  parameter [31:0] HBMMC_NA0_XMPU_START_LO1_CFG_DYN_MCP3 = 32'h00000000,
  parameter [31:0] HBMMC_NA1_BANKADDR_MAP_0 = 32'h0034530B,
  parameter [31:0] HBMMC_NA1_COLADDR_MAP_0 = 32'h89207180,
  parameter [31:0] HBMMC_NA1_COLADDR_MAP_1 = 32'h00000002,
  parameter [31:0] HBMMC_NA1_COLADDR_MAP_2 = 32'h00000000,
  parameter [8:0] HBMMC_NA1_EXMON_CLR_EXE_CFG_DYN_MCP3 = 9'h100,
  parameter [12:0] HBMMC_NA1_JEDEC_DEVICE_CODE = 13'h000A,
  parameter [27:0] HBMMC_NA1_NA_DEST_ID = 28'h0000000,
  parameter [31:0] HBMMC_NA1_NA_ERR_INJ = 32'h00000000,
  parameter [31:0] HBMMC_NA1_NA_NSU_FORCE_ECC_FLIT_ERR = 32'h00000000,
  parameter [5:0] HBMMC_NA1_NA_PM_FILTR_EN_P0 = 6'h00,
  parameter [5:0] HBMMC_NA1_NA_PM_FILTR_EN_P1 = 6'h00,
  parameter [25:0] HBMMC_NA1_NA_PM_FILTR_P0 = 26'h0000000,
  parameter [25:0] HBMMC_NA1_NA_PM_FILTR_P1 = 26'h0000000,
  parameter [11:0] HBMMC_NA1_NA_PM_SMID_FILTR_P0 = 12'h000,
  parameter [11:0] HBMMC_NA1_NA_PM_SMID_FILTR_P1 = 12'h000,
  parameter [7:0] HBMMC_NA1_NA_VC_MAP = 8'h00,
  parameter [25:0] HBMMC_NA1_PORT_CONTROL = 26'h0808421,
  parameter [0:0] HBMMC_NA1_RD_CMD_MODE_CFG_MCP = 1'h0,
  parameter [31:0] HBMMC_NA1_ROWADDR_MAP_0 = 32'hD24503CE,
  parameter [31:0] HBMMC_NA1_ROWADDR_MAP_1 = 32'h85D65544,
  parameter [31:0] HBMMC_NA1_ROWADDR_MAP_2 = 32'h75C6DA65,
  parameter [11:0] HBMMC_NA1_ROWADDR_MAP_3 = 12'h000,
  parameter [31:0] HBMMC_NA1_SCRUB_END_ADDRESS = 32'h0000000E,
  parameter [31:0] HBMMC_NA1_SCRUB_FREQUENCY = 32'h0000000A,
  parameter [1:0] HBMMC_NA1_SCRUB_INIT_EN = 2'h0,
  parameter [31:0] HBMMC_NA1_SCRUB_START_ADDRESS = 32'h00000000,
  parameter [14:0] HBMMC_NA1_TGC_CONFIG = 15'h0000,
  parameter [0:0] HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP = 1'h0,
  parameter [31:0] HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP = 32'h00000000,
  parameter [4:0] HBMMC_NA1_XMPU_CONFIG0_CFG_DYN_MCP3 = 5'h08,
  parameter [4:0] HBMMC_NA1_XMPU_CONFIG1_CFG_DYN_MCP3 = 5'h08,
  parameter [3:0] HBMMC_NA1_XMPU_CTRL_CFG_DYN_MCP3 = 4'hB,
  parameter [15:0] HBMMC_NA1_XMPU_END_HI0_CFG_DYN_MCP3 = 16'h0000,
  parameter [15:0] HBMMC_NA1_XMPU_END_HI1_CFG_DYN_MCP3 = 16'h0000,
  parameter [31:0] HBMMC_NA1_XMPU_END_LO0_CFG_DYN_MCP3 = 32'h00000000,
  parameter [31:0] HBMMC_NA1_XMPU_END_LO1_CFG_DYN_MCP3 = 32'h00000000,
  parameter [25:0] HBMMC_NA1_XMPU_MASTER0_CFG_DYN_MCP3 = 26'h0000000,
  parameter [25:0] HBMMC_NA1_XMPU_MASTER1_CFG_DYN_MCP3 = 26'h0000000,
  parameter [15:0] HBMMC_NA1_XMPU_START_HI0_CFG_DYN_MCP3 = 16'h0000,
  parameter [15:0] HBMMC_NA1_XMPU_START_HI1_CFG_DYN_MCP3 = 16'h0000,
  parameter [31:0] HBMMC_NA1_XMPU_START_LO0_CFG_DYN_MCP3 = 32'h00000000,
  parameter [31:0] HBMMC_NA1_XMPU_START_LO1_CFG_DYN_MCP3 = 32'h00000000,
  parameter [2:0] HBMMC_NDS = 3'h0,
  parameter [1:0] HBMMC_PL = 2'h3,
  parameter [5:0] HBMMC_RCD_RD = 6'h0E,
  parameter [5:0] HBMMC_RCD_WR = 6'h10,
  parameter [0:0] HBMMC_RD_DBI = 1'h0,
  parameter [2:0] HBMMC_REFRESH_MODE = 3'h0,
  parameter [0:0] HBMMC_SCAN_VIA_BLI = 1'h0,
  parameter [5:0] HBMMC_TCCDR = 6'h04,
  parameter [5:0] HBMMC_TCCD_L = 6'h04,
  parameter [5:0] HBMMC_TCCD_S = 6'h02,
  parameter [9:0] HBMMC_TCKESR = 10'h006,
  parameter [0:0] HBMMC_TCSR = 1'h0,
  parameter [0:0] HBMMC_TEST_MODE = 1'h0,
  parameter [5:0] HBMMC_TFAW_L = 6'h0C,
  parameter [5:0] HBMMC_TFAW_S = 6'h0C,
  parameter [9:0] HBMMC_TINIT5 = 10'h0C8,
  parameter [9:0] HBMMC_TMOD = 10'h00F,
  parameter [9:0] HBMMC_TMRD = 10'h008,
  parameter [5:0] HBMMC_TRAS = 6'h21,
  parameter [6:0] HBMMC_TRC = 7'h2D,
  parameter [15:0] HBMMC_TREFI = 16'h0F3C,
  parameter [11:0] HBMMC_TRFC = 12'h15E,
  parameter [11:0] HBMMC_TRFCSB = 12'h0A0,
  parameter [5:0] HBMMC_TRL = 6'h1C,
  parameter [5:0] HBMMC_TRP = 6'h15,
  parameter [5:0] HBMMC_TRR = 6'h00,
  parameter [5:0] HBMMC_TRRD_L = 6'h04,
  parameter [5:0] HBMMC_TRRD_S = 6'h04,
  parameter [5:0] HBMMC_TRREFD = 6'h08,
  parameter [5:0] HBMMC_TRTP = 6'h05,
  parameter [5:0] HBMMC_TRTW = 6'h1C,
  parameter [4:0] HBMMC_TWL = 5'h07,
  parameter [5:0] HBMMC_TWTR_L = 6'h08,
  parameter [5:0] HBMMC_TWTR_S = 6'h04,
  parameter [26:0] HBMMC_TXP_XS = 27'h1220008,
  parameter [4:0] HBMMC_WR = 5'h07,
  parameter [0:0] HBMMC_WR_DBI = 1'h0,
  parameter [5:0] HBMMC_WTP = 6'h10,
  parameter SIM_MODEL_TYPE = "RTL",
  parameter integer STACK0_CH1_0_PAGE_HIT = 100,
  parameter STACK0_CH1_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH1_0_READ_RATE = 25,
  parameter integer STACK0_CH1_0_WRITE_RATE = 25,
  parameter integer STACK0_CH1_1_PAGE_HIT = 100,
  parameter STACK0_CH1_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH1_1_READ_RATE = 25,
  parameter integer STACK0_CH1_1_WRITE_RATE = 25,
  parameter integer STACK0_CH1_DATA_RATE = 0,
  parameter integer STACK0_CH2_0_PAGE_HIT = 100,
  parameter STACK0_CH2_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH2_0_READ_RATE = 25,
  parameter integer STACK0_CH2_0_WRITE_RATE = 25,
  parameter integer STACK0_CH2_1_PAGE_HIT = 100,
  parameter STACK0_CH2_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH2_1_READ_RATE = 25,
  parameter integer STACK0_CH2_1_WRITE_RATE = 25,
  parameter integer STACK0_CH2_DATA_RATE = 0,
  parameter integer STACK0_CH3_0_PAGE_HIT = 100,
  parameter STACK0_CH3_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH3_0_READ_RATE = 25,
  parameter integer STACK0_CH3_0_WRITE_RATE = 25,
  parameter integer STACK0_CH3_1_PAGE_HIT = 100,
  parameter STACK0_CH3_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH3_1_READ_RATE = 25,
  parameter integer STACK0_CH3_1_WRITE_RATE = 25,
  parameter integer STACK0_CH3_DATA_RATE = 0,
  parameter integer STACK0_CH4_0_PAGE_HIT = 100,
  parameter STACK0_CH4_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH4_0_READ_RATE = 25,
  parameter integer STACK0_CH4_0_WRITE_RATE = 25,
  parameter integer STACK0_CH4_1_PAGE_HIT = 100,
  parameter STACK0_CH4_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH4_1_READ_RATE = 25,
  parameter integer STACK0_CH4_1_WRITE_RATE = 25,
  parameter integer STACK0_CH4_DATA_RATE = 0,
  parameter integer STACK0_CH5_0_PAGE_HIT = 100,
  parameter STACK0_CH5_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH5_0_READ_RATE = 25,
  parameter integer STACK0_CH5_0_WRITE_RATE = 25,
  parameter integer STACK0_CH5_1_PAGE_HIT = 100,
  parameter STACK0_CH5_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH5_1_READ_RATE = 25,
  parameter integer STACK0_CH5_1_WRITE_RATE = 25,
  parameter integer STACK0_CH5_DATA_RATE = 0,
  parameter integer STACK0_CH6_0_PAGE_HIT = 100,
  parameter STACK0_CH6_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH6_0_READ_RATE = 25,
  parameter integer STACK0_CH6_0_WRITE_RATE = 25,
  parameter integer STACK0_CH6_1_PAGE_HIT = 100,
  parameter STACK0_CH6_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH6_1_READ_RATE = 25,
  parameter integer STACK0_CH6_1_WRITE_RATE = 25,
  parameter integer STACK0_CH6_DATA_RATE = 0,
  parameter integer STACK0_CH7_0_PAGE_HIT = 100,
  parameter STACK0_CH7_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH7_0_READ_RATE = 25,
  parameter integer STACK0_CH7_0_WRITE_RATE = 25,
  parameter integer STACK0_CH7_1_PAGE_HIT = 100,
  parameter STACK0_CH7_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH7_1_READ_RATE = 25,
  parameter integer STACK0_CH7_1_WRITE_RATE = 25,
  parameter integer STACK0_CH7_DATA_RATE = 0,
  parameter integer STACK0_CH8_0_PAGE_HIT = 100,
  parameter STACK0_CH8_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH8_0_READ_RATE = 25,
  parameter integer STACK0_CH8_0_WRITE_RATE = 25,
  parameter integer STACK0_CH8_1_PAGE_HIT = 100,
  parameter STACK0_CH8_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK0_CH8_1_READ_RATE = 25,
  parameter integer STACK0_CH8_1_WRITE_RATE = 25,
  parameter integer STACK0_CH8_DATA_RATE = 0,
  parameter integer STACK1_CH1_0_PAGE_HIT = 100,
  parameter STACK1_CH1_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH1_0_READ_RATE = 25,
  parameter integer STACK1_CH1_0_WRITE_RATE = 25,
  parameter integer STACK1_CH1_1_PAGE_HIT = 100,
  parameter STACK1_CH1_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH1_1_READ_RATE = 25,
  parameter integer STACK1_CH1_1_WRITE_RATE = 25,
  parameter integer STACK1_CH1_DATA_RATE = 0,
  parameter integer STACK1_CH2_0_PAGE_HIT = 100,
  parameter STACK1_CH2_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH2_0_READ_RATE = 25,
  parameter integer STACK1_CH2_0_WRITE_RATE = 25,
  parameter integer STACK1_CH2_1_PAGE_HIT = 100,
  parameter STACK1_CH2_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH2_1_READ_RATE = 25,
  parameter integer STACK1_CH2_1_WRITE_RATE = 25,
  parameter integer STACK1_CH2_DATA_RATE = 0,
  parameter integer STACK1_CH3_0_PAGE_HIT = 100,
  parameter STACK1_CH3_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH3_0_READ_RATE = 25,
  parameter integer STACK1_CH3_0_WRITE_RATE = 25,
  parameter integer STACK1_CH3_1_PAGE_HIT = 100,
  parameter STACK1_CH3_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH3_1_READ_RATE = 25,
  parameter integer STACK1_CH3_1_WRITE_RATE = 25,
  parameter integer STACK1_CH3_DATA_RATE = 0,
  parameter integer STACK1_CH4_0_PAGE_HIT = 100,
  parameter STACK1_CH4_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH4_0_READ_RATE = 25,
  parameter integer STACK1_CH4_0_WRITE_RATE = 25,
  parameter integer STACK1_CH4_1_PAGE_HIT = 100,
  parameter STACK1_CH4_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH4_1_READ_RATE = 25,
  parameter integer STACK1_CH4_1_WRITE_RATE = 25,
  parameter integer STACK1_CH4_DATA_RATE = 0,
  parameter integer STACK1_CH5_0_PAGE_HIT = 100,
  parameter STACK1_CH5_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH5_0_READ_RATE = 25,
  parameter integer STACK1_CH5_0_WRITE_RATE = 25,
  parameter integer STACK1_CH5_1_PAGE_HIT = 100,
  parameter STACK1_CH5_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH5_1_READ_RATE = 25,
  parameter integer STACK1_CH5_1_WRITE_RATE = 25,
  parameter integer STACK1_CH5_DATA_RATE = 0,
  parameter integer STACK1_CH6_0_PAGE_HIT = 100,
  parameter STACK1_CH6_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH6_0_READ_RATE = 25,
  parameter integer STACK1_CH6_0_WRITE_RATE = 25,
  parameter integer STACK1_CH6_1_PAGE_HIT = 100,
  parameter STACK1_CH6_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH6_1_READ_RATE = 25,
  parameter integer STACK1_CH6_1_WRITE_RATE = 25,
  parameter integer STACK1_CH6_DATA_RATE = 0,
  parameter integer STACK1_CH7_0_PAGE_HIT = 100,
  parameter STACK1_CH7_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH7_0_READ_RATE = 25,
  parameter integer STACK1_CH7_0_WRITE_RATE = 25,
  parameter integer STACK1_CH7_1_PAGE_HIT = 100,
  parameter STACK1_CH7_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH7_1_READ_RATE = 25,
  parameter integer STACK1_CH7_1_WRITE_RATE = 25,
  parameter integer STACK1_CH7_DATA_RATE = 0,
  parameter integer STACK1_CH8_0_PAGE_HIT = 100,
  parameter STACK1_CH8_0_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH8_0_READ_RATE = 25,
  parameter integer STACK1_CH8_0_WRITE_RATE = 25,
  parameter integer STACK1_CH8_1_PAGE_HIT = 100,
  parameter STACK1_CH8_1_PHY_ACTIVE = "ENABLED",
  parameter integer STACK1_CH8_1_READ_RATE = 25,
  parameter integer STACK1_CH8_1_WRITE_RATE = 25,
  parameter integer STACK1_CH8_DATA_RATE = 0
)(
  output [1:0] CH0_HBMMC_AW_CKE_MC_DFI_CMD,
  output [1:0] CH0_HBMMC_AW_CK_MC_DFI_CMD,
  output [17:0] CH0_HBMMC_AW_COL_MC_DFI_CMD,
  output [13:0] CH0_HBMMC_AW_ROW_MC_DFI_CMD,
  output [7:0] CH0_HBMMC_DW_DATA_DQS_MC_DFI_WR,
  output [7:0] CH0_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR,
  output [255:0] CH0_HBMMC_DW_DATA_MC_DFI_WR,
  output [31:0] CH0_HBMMC_DW_DBI_MC_DFI_WR,
  output [31:0] CH0_HBMMC_DW_MASK_MC_DFI_WR,
  output [7:0] CH0_HBMMC_DW_PAR_EN_MC_DFI_WR,
  output [7:0] CH0_HBMMC_DW_PAR_MC_DFI_WR,
  output CH0_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT,
  output CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN,
  output [7:0] CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN,
  output CH0_HBMMC_NOC_FLIT_EN_MC_NOCOUT,
  output [181:0] CH0_HBMMC_NOC_FLIT_MC_NOCOUT,
  output [1:0] CH0_HBMMC_NOC_PDEST_ID_MC_NOCOUT,
  output CH0_HBMMC_NOC_VALID_EN_MC_NOCOUT,
  output [7:0] CH0_HBMMC_NOC_VALID_MC_NOCOUT,
  output [1:0] CH1_HBMMC_AW_CKE_MC_DFI_CMD,
  output [1:0] CH1_HBMMC_AW_CK_MC_DFI_CMD,
  output [17:0] CH1_HBMMC_AW_COL_MC_DFI_CMD,
  output [13:0] CH1_HBMMC_AW_ROW_MC_DFI_CMD,
  output [7:0] CH1_HBMMC_DW_DATA_DQS_MC_DFI_WR,
  output [7:0] CH1_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR,
  output [255:0] CH1_HBMMC_DW_DATA_MC_DFI_WR,
  output [31:0] CH1_HBMMC_DW_DBI_MC_DFI_WR,
  output [31:0] CH1_HBMMC_DW_MASK_MC_DFI_WR,
  output [7:0] CH1_HBMMC_DW_PAR_EN_MC_DFI_WR,
  output [7:0] CH1_HBMMC_DW_PAR_MC_DFI_WR,
  output CH1_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT,
  output CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN,
  output [7:0] CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN,
  output CH1_HBMMC_NOC_FLIT_EN_MC_NOCOUT,
  output [181:0] CH1_HBMMC_NOC_FLIT_MC_NOCOUT,
  output [1:0] CH1_HBMMC_NOC_PDEST_ID_MC_NOCOUT,
  output CH1_HBMMC_NOC_VALID_EN_MC_NOCOUT,
  output [7:0] CH1_HBMMC_NOC_VALID_MC_NOCOUT,
  output CH2_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT,
  output CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN,
  output [7:0] CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN,
  output CH2_HBMMC_NOC_FLIT_EN_MC_NOCOUT,
  output [181:0] CH2_HBMMC_NOC_FLIT_MC_NOCOUT,
  output [1:0] CH2_HBMMC_NOC_PDEST_ID_MC_NOCOUT,
  output CH2_HBMMC_NOC_VALID_EN_MC_NOCOUT,
  output [7:0] CH2_HBMMC_NOC_VALID_MC_NOCOUT,
  output CH3_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT,
  output CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN,
  output [7:0] CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN,
  output CH3_HBMMC_NOC_FLIT_EN_MC_NOCOUT,
  output [181:0] CH3_HBMMC_NOC_FLIT_MC_NOCOUT,
  output [1:0] CH3_HBMMC_NOC_PDEST_ID_MC_NOCOUT,
  output CH3_HBMMC_NOC_VALID_EN_MC_NOCOUT,
  output [7:0] CH3_HBMMC_NOC_VALID_MC_NOCOUT,
  output HBMMC_AW_CK_DIS,
  output HBMMC_AW_TX_INDX_LD,
  output HBMMC_CTRLUPD_REQ,
  output HBMMC_DFI_CLK_OUT,
  output HBMMC_DW_RX_INDX_LD,
  output HBMMC_DW_TX_INDX_LD,
  output HBMMC_INIT_START_DFI_MISC,
  output HBMMC_LP_PWR_E_REQ,
  output HBMMC_LP_PWR_X_REQ,
  output HBMMC_LP_SR_E_REQ,
  output HBMMC_PHYUPD_ACK,
  output TO_NOC_0,
  output TO_NOC_1,
  output TO_NOC_2,
  output TO_NOC_3,

  input [255:0] CH0_HBMMC_DW_DATA_MC_DFI_RD,
  input [31:0] CH0_HBMMC_DW_DBI_MC_DFI_RD,
  input [31:0] CH0_HBMMC_DW_MASK_MC_DFI_RD,
  input [7:0] CH0_HBMMC_DW_PAR_MC_DFI_RD,
  input [7:0] CH0_HBMMC_DW_RDDATA_VALID_MC_DFI_RD,
  input [7:0] CH0_HBMMC_DW_WDATA_DERR_MC_DFI_WR,
  input CH0_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN,
  input CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT,
  input [7:0] CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT,
  input CH0_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN,
  input [181:0] CH0_HBMMC_NOC_FLIT_MC_NOC2MC_IN,
  input [1:0] CH0_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN,
  input CH0_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN,
  input [7:0] CH0_HBMMC_NOC_VALID_MC_NOC2MC_IN,
  input [255:0] CH1_HBMMC_DW_DATA_MC_DFI_RD,
  input [31:0] CH1_HBMMC_DW_DBI_MC_DFI_RD,
  input [31:0] CH1_HBMMC_DW_MASK_MC_DFI_RD,
  input [7:0] CH1_HBMMC_DW_PAR_MC_DFI_RD,
  input [7:0] CH1_HBMMC_DW_RDDATA_VALID_MC_DFI_RD,
  input [7:0] CH1_HBMMC_DW_WDATA_DERR_MC_DFI_WR,
  input CH1_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN,
  input CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT,
  input [7:0] CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT,
  input CH1_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN,
  input [181:0] CH1_HBMMC_NOC_FLIT_MC_NOC2MC_IN,
  input [1:0] CH1_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN,
  input CH1_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN,
  input [7:0] CH1_HBMMC_NOC_VALID_MC_NOC2MC_IN,
  input CH2_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN,
  input CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT,
  input [7:0] CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT,
  input CH2_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN,
  input [181:0] CH2_HBMMC_NOC_FLIT_MC_NOC2MC_IN,
  input [1:0] CH2_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN,
  input CH2_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN,
  input [7:0] CH2_HBMMC_NOC_VALID_MC_NOC2MC_IN,
  input CH3_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN,
  input CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT,
  input [7:0] CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT,
  input CH3_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN,
  input [181:0] CH3_HBMMC_NOC_FLIT_MC_NOC2MC_IN,
  input [1:0] CH3_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN,
  input CH3_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN,
  input [7:0] CH3_HBMMC_NOC_VALID_MC_NOC2MC_IN,
  input FROM_NOC_0,
  input FROM_NOC_1,
  input FROM_NOC_2,
  input FROM_NOC_3,
  input [1:0] HBMMC_AW_AERR_N,
  input HBMMC_CATTRIP_DFI_MISC,
  input HBMMC_CTRLUPD_ACK,
  input HBMMC_DFI_CLK,
  input HBMMC_DFI_RESET_N,
  input [15:0] HBMMC_DW_DBI_BYTE_DISABLE,
  input HBMMC_GBL_REF_RESET_N,
  input HBMMC_INIT_COMPLETE,
  input HBMMC_NOC_RST_N_MC_GL,
  input HBMMC_NPI_CLK_MC_GL,
  input HBMMC_PHYUPD_REQ,
  input HBMMC_PHY_LP_STATE,
  input [2:0] HBMMC_SPARE_MC_GL,
  input HBMMC_SYS_RST1_N_MC_GL,
  input HBMMC_SYS_RST2_N_MC_GL,
  input HBMMC_SYS_RST3_N_MC_GL,
  input [2:0] HBMMC_TEMP,
  input HBMMC_TRAINING_COMPLETE
);

// define constants
  localparam MODULE_NAME = "HBM_MC";
  
  reg trig_attr;
// include dynamic registers - XILINX test only
`ifdef XIL_DR
  `include "HBM_MC_dr.v"
`else
  reg [1:0] HBMMC_AP_HINT_MODE_REG = HBMMC_AP_HINT_MODE;
  reg [0:0] HBMMC_CATTRIP_REG = HBMMC_CATTRIP;
  reg [0:0] HBMMC_CMD_PAR_REG = HBMMC_CMD_PAR;
  reg [13:0] HBMMC_CONFIG_REG = HBMMC_CONFIG;
  reg [0:0] HBMMC_DA28_LOCKOUT_REG = HBMMC_DA28_LOCKOUT;
  reg [2:0] HBMMC_DATA_ERROR_MODE_REG = HBMMC_DATA_ERROR_MODE;
  reg [0:0] HBMMC_DQ_RD_PAR_REG = HBMMC_DQ_RD_PAR;
  reg [0:0] HBMMC_DQ_WR_PAR_REG = HBMMC_DQ_WR_PAR;
  reg [0:0] HBMMC_DW_LOOPBACK_REG = HBMMC_DW_LOOPBACK;
  reg [2:0] HBMMC_DW_MISR_REG = HBMMC_DW_MISR;
  reg [1:0] HBMMC_DW_RD_MUX_REG = HBMMC_DW_RD_MUX;
  reg [1:0] HBMMC_ECC_REG = HBMMC_ECC;
  reg [2:0] HBMMC_ENTER_SELFREFRESH_REG = HBMMC_ENTER_SELFREFRESH;
  reg [26:0] HBMMC_IDLE_TIMEOUT_REG = HBMMC_IDLE_TIMEOUT;
  reg [3:0] HBMMC_IDLE_TIMEOUT_EN_REG = HBMMC_IDLE_TIMEOUT_EN;
  reg [19:0] HBMMC_INIT_START_REG = HBMMC_INIT_START;
  reg [2:0] HBMMC_INT_VREF_REG = HBMMC_INT_VREF;
  reg [18:0] HBMMC_MAX_PG_IDLE_REG = HBMMC_MAX_PG_IDLE;
  reg [9:0] HBMMC_MAX_SKIP_CNT_REG = HBMMC_MAX_SKIP_CNT;
  reg [2:0] HBMMC_MC_DBG_HALT_REG = HBMMC_MC_DBG_HALT;
  reg [31:0] HBMMC_MC_PM_CAPTURE_TIME_REG = HBMMC_MC_PM_CAPTURE_TIME;
  reg [15:0] HBMMC_MC_PM_EN_REG = HBMMC_MC_PM_EN;
  reg [31:0] HBMMC_NA0_BANKADDR_MAP_0_REG = HBMMC_NA0_BANKADDR_MAP_0;
  reg [31:0] HBMMC_NA0_COLADDR_MAP_0_REG = HBMMC_NA0_COLADDR_MAP_0;
  reg [31:0] HBMMC_NA0_COLADDR_MAP_1_REG = HBMMC_NA0_COLADDR_MAP_1;
  reg [31:0] HBMMC_NA0_COLADDR_MAP_2_REG = HBMMC_NA0_COLADDR_MAP_2;
  reg [8:0] HBMMC_NA0_EXMON_CLR_EXE_CFG_DYN_MCP3_REG = HBMMC_NA0_EXMON_CLR_EXE_CFG_DYN_MCP3;
  reg [12:0] HBMMC_NA0_JEDEC_DEVICE_CODE_REG = HBMMC_NA0_JEDEC_DEVICE_CODE;
  reg [27:0] HBMMC_NA0_NA_DEST_ID_REG = HBMMC_NA0_NA_DEST_ID;
  reg [31:0] HBMMC_NA0_NA_ERR_INJ_REG = HBMMC_NA0_NA_ERR_INJ;
  reg [31:0] HBMMC_NA0_NA_NSU_FORCE_ECC_FLIT_ERR_REG = HBMMC_NA0_NA_NSU_FORCE_ECC_FLIT_ERR;
  reg [5:0] HBMMC_NA0_NA_PM_FILTR_EN_P0_REG = HBMMC_NA0_NA_PM_FILTR_EN_P0;
  reg [5:0] HBMMC_NA0_NA_PM_FILTR_EN_P1_REG = HBMMC_NA0_NA_PM_FILTR_EN_P1;
  reg [25:0] HBMMC_NA0_NA_PM_FILTR_P0_REG = HBMMC_NA0_NA_PM_FILTR_P0;
  reg [25:0] HBMMC_NA0_NA_PM_FILTR_P1_REG = HBMMC_NA0_NA_PM_FILTR_P1;
  reg [11:0] HBMMC_NA0_NA_PM_SMID_FILTR_P0_REG = HBMMC_NA0_NA_PM_SMID_FILTR_P0;
  reg [11:0] HBMMC_NA0_NA_PM_SMID_FILTR_P1_REG = HBMMC_NA0_NA_PM_SMID_FILTR_P1;
  reg [7:0] HBMMC_NA0_NA_VC_MAP_REG = HBMMC_NA0_NA_VC_MAP;
  reg [25:0] HBMMC_NA0_PORT_CONTROL_REG = HBMMC_NA0_PORT_CONTROL;
  reg [0:0] HBMMC_NA0_RD_CMD_MODE_CFG_MCP_REG = HBMMC_NA0_RD_CMD_MODE_CFG_MCP;
  reg [31:0] HBMMC_NA0_ROWADDR_MAP_0_REG = HBMMC_NA0_ROWADDR_MAP_0;
  reg [31:0] HBMMC_NA0_ROWADDR_MAP_1_REG = HBMMC_NA0_ROWADDR_MAP_1;
  reg [31:0] HBMMC_NA0_ROWADDR_MAP_2_REG = HBMMC_NA0_ROWADDR_MAP_2;
  reg [11:0] HBMMC_NA0_ROWADDR_MAP_3_REG = HBMMC_NA0_ROWADDR_MAP_3;
  reg [31:0] HBMMC_NA0_SCRUB_END_ADDRESS_REG = HBMMC_NA0_SCRUB_END_ADDRESS;
  reg [31:0] HBMMC_NA0_SCRUB_FREQUENCY_REG = HBMMC_NA0_SCRUB_FREQUENCY;
  reg [1:0] HBMMC_NA0_SCRUB_INIT_EN_REG = HBMMC_NA0_SCRUB_INIT_EN;
  reg [31:0] HBMMC_NA0_SCRUB_START_ADDRESS_REG = HBMMC_NA0_SCRUB_START_ADDRESS;
  reg [14:0] HBMMC_NA0_TGC_CONFIG_REG = HBMMC_NA0_TGC_CONFIG;
  reg [0:0] HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP_REG = HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP;
  reg [31:0] HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP_REG = HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP;
  reg [4:0] HBMMC_NA0_XMPU_CONFIG0_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_CONFIG0_CFG_DYN_MCP3;
  reg [4:0] HBMMC_NA0_XMPU_CONFIG1_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_CONFIG1_CFG_DYN_MCP3;
  reg [3:0] HBMMC_NA0_XMPU_CTRL_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_CTRL_CFG_DYN_MCP3;
  reg [15:0] HBMMC_NA0_XMPU_END_HI0_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_END_HI0_CFG_DYN_MCP3;
  reg [15:0] HBMMC_NA0_XMPU_END_HI1_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_END_HI1_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA0_XMPU_END_LO0_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_END_LO0_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA0_XMPU_END_LO1_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_END_LO1_CFG_DYN_MCP3;
  reg [25:0] HBMMC_NA0_XMPU_MASTER0_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_MASTER0_CFG_DYN_MCP3;
  reg [25:0] HBMMC_NA0_XMPU_MASTER1_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_MASTER1_CFG_DYN_MCP3;
  reg [15:0] HBMMC_NA0_XMPU_START_HI0_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_START_HI0_CFG_DYN_MCP3;
  reg [15:0] HBMMC_NA0_XMPU_START_HI1_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_START_HI1_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA0_XMPU_START_LO0_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_START_LO0_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA0_XMPU_START_LO1_CFG_DYN_MCP3_REG = HBMMC_NA0_XMPU_START_LO1_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA1_BANKADDR_MAP_0_REG = HBMMC_NA1_BANKADDR_MAP_0;
  reg [31:0] HBMMC_NA1_COLADDR_MAP_0_REG = HBMMC_NA1_COLADDR_MAP_0;
  reg [31:0] HBMMC_NA1_COLADDR_MAP_1_REG = HBMMC_NA1_COLADDR_MAP_1;
  reg [31:0] HBMMC_NA1_COLADDR_MAP_2_REG = HBMMC_NA1_COLADDR_MAP_2;
  reg [8:0] HBMMC_NA1_EXMON_CLR_EXE_CFG_DYN_MCP3_REG = HBMMC_NA1_EXMON_CLR_EXE_CFG_DYN_MCP3;
  reg [12:0] HBMMC_NA1_JEDEC_DEVICE_CODE_REG = HBMMC_NA1_JEDEC_DEVICE_CODE;
  reg [27:0] HBMMC_NA1_NA_DEST_ID_REG = HBMMC_NA1_NA_DEST_ID;
  reg [31:0] HBMMC_NA1_NA_ERR_INJ_REG = HBMMC_NA1_NA_ERR_INJ;
  reg [31:0] HBMMC_NA1_NA_NSU_FORCE_ECC_FLIT_ERR_REG = HBMMC_NA1_NA_NSU_FORCE_ECC_FLIT_ERR;
  reg [5:0] HBMMC_NA1_NA_PM_FILTR_EN_P0_REG = HBMMC_NA1_NA_PM_FILTR_EN_P0;
  reg [5:0] HBMMC_NA1_NA_PM_FILTR_EN_P1_REG = HBMMC_NA1_NA_PM_FILTR_EN_P1;
  reg [25:0] HBMMC_NA1_NA_PM_FILTR_P0_REG = HBMMC_NA1_NA_PM_FILTR_P0;
  reg [25:0] HBMMC_NA1_NA_PM_FILTR_P1_REG = HBMMC_NA1_NA_PM_FILTR_P1;
  reg [11:0] HBMMC_NA1_NA_PM_SMID_FILTR_P0_REG = HBMMC_NA1_NA_PM_SMID_FILTR_P0;
  reg [11:0] HBMMC_NA1_NA_PM_SMID_FILTR_P1_REG = HBMMC_NA1_NA_PM_SMID_FILTR_P1;
  reg [7:0] HBMMC_NA1_NA_VC_MAP_REG = HBMMC_NA1_NA_VC_MAP;
  reg [25:0] HBMMC_NA1_PORT_CONTROL_REG = HBMMC_NA1_PORT_CONTROL;
  reg [0:0] HBMMC_NA1_RD_CMD_MODE_CFG_MCP_REG = HBMMC_NA1_RD_CMD_MODE_CFG_MCP;
  reg [31:0] HBMMC_NA1_ROWADDR_MAP_0_REG = HBMMC_NA1_ROWADDR_MAP_0;
  reg [31:0] HBMMC_NA1_ROWADDR_MAP_1_REG = HBMMC_NA1_ROWADDR_MAP_1;
  reg [31:0] HBMMC_NA1_ROWADDR_MAP_2_REG = HBMMC_NA1_ROWADDR_MAP_2;
  reg [11:0] HBMMC_NA1_ROWADDR_MAP_3_REG = HBMMC_NA1_ROWADDR_MAP_3;
  reg [31:0] HBMMC_NA1_SCRUB_END_ADDRESS_REG = HBMMC_NA1_SCRUB_END_ADDRESS;
  reg [31:0] HBMMC_NA1_SCRUB_FREQUENCY_REG = HBMMC_NA1_SCRUB_FREQUENCY;
  reg [1:0] HBMMC_NA1_SCRUB_INIT_EN_REG = HBMMC_NA1_SCRUB_INIT_EN;
  reg [31:0] HBMMC_NA1_SCRUB_START_ADDRESS_REG = HBMMC_NA1_SCRUB_START_ADDRESS;
  reg [14:0] HBMMC_NA1_TGC_CONFIG_REG = HBMMC_NA1_TGC_CONFIG;
  reg [0:0] HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP_REG = HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP;
  reg [31:0] HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP_REG = HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP;
  reg [4:0] HBMMC_NA1_XMPU_CONFIG0_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_CONFIG0_CFG_DYN_MCP3;
  reg [4:0] HBMMC_NA1_XMPU_CONFIG1_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_CONFIG1_CFG_DYN_MCP3;
  reg [3:0] HBMMC_NA1_XMPU_CTRL_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_CTRL_CFG_DYN_MCP3;
  reg [15:0] HBMMC_NA1_XMPU_END_HI0_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_END_HI0_CFG_DYN_MCP3;
  reg [15:0] HBMMC_NA1_XMPU_END_HI1_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_END_HI1_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA1_XMPU_END_LO0_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_END_LO0_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA1_XMPU_END_LO1_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_END_LO1_CFG_DYN_MCP3;
  reg [25:0] HBMMC_NA1_XMPU_MASTER0_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_MASTER0_CFG_DYN_MCP3;
  reg [25:0] HBMMC_NA1_XMPU_MASTER1_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_MASTER1_CFG_DYN_MCP3;
  reg [15:0] HBMMC_NA1_XMPU_START_HI0_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_START_HI0_CFG_DYN_MCP3;
  reg [15:0] HBMMC_NA1_XMPU_START_HI1_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_START_HI1_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA1_XMPU_START_LO0_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_START_LO0_CFG_DYN_MCP3;
  reg [31:0] HBMMC_NA1_XMPU_START_LO1_CFG_DYN_MCP3_REG = HBMMC_NA1_XMPU_START_LO1_CFG_DYN_MCP3;
  reg [2:0] HBMMC_NDS_REG = HBMMC_NDS;
  reg [1:0] HBMMC_PL_REG = HBMMC_PL;
  reg [5:0] HBMMC_RCD_RD_REG = HBMMC_RCD_RD;
  reg [5:0] HBMMC_RCD_WR_REG = HBMMC_RCD_WR;
  reg [0:0] HBMMC_RD_DBI_REG = HBMMC_RD_DBI;
  reg [2:0] HBMMC_REFRESH_MODE_REG = HBMMC_REFRESH_MODE;
  reg [0:0] HBMMC_SCAN_VIA_BLI_REG = HBMMC_SCAN_VIA_BLI;
  reg [5:0] HBMMC_TCCDR_REG = HBMMC_TCCDR;
  reg [5:0] HBMMC_TCCD_L_REG = HBMMC_TCCD_L;
  reg [5:0] HBMMC_TCCD_S_REG = HBMMC_TCCD_S;
  reg [9:0] HBMMC_TCKESR_REG = HBMMC_TCKESR;
  reg [0:0] HBMMC_TCSR_REG = HBMMC_TCSR;
  reg [0:0] HBMMC_TEST_MODE_REG = HBMMC_TEST_MODE;
  reg [5:0] HBMMC_TFAW_L_REG = HBMMC_TFAW_L;
  reg [5:0] HBMMC_TFAW_S_REG = HBMMC_TFAW_S;
  reg [9:0] HBMMC_TINIT5_REG = HBMMC_TINIT5;
  reg [9:0] HBMMC_TMOD_REG = HBMMC_TMOD;
  reg [9:0] HBMMC_TMRD_REG = HBMMC_TMRD;
  reg [5:0] HBMMC_TRAS_REG = HBMMC_TRAS;
  reg [6:0] HBMMC_TRC_REG = HBMMC_TRC;
  reg [15:0] HBMMC_TREFI_REG = HBMMC_TREFI;
  reg [11:0] HBMMC_TRFC_REG = HBMMC_TRFC;
  reg [11:0] HBMMC_TRFCSB_REG = HBMMC_TRFCSB;
  reg [5:0] HBMMC_TRL_REG = HBMMC_TRL;
  reg [5:0] HBMMC_TRP_REG = HBMMC_TRP;
  reg [5:0] HBMMC_TRR_REG = HBMMC_TRR;
  reg [5:0] HBMMC_TRRD_L_REG = HBMMC_TRRD_L;
  reg [5:0] HBMMC_TRRD_S_REG = HBMMC_TRRD_S;
  reg [5:0] HBMMC_TRREFD_REG = HBMMC_TRREFD;
  reg [5:0] HBMMC_TRTP_REG = HBMMC_TRTP;
  reg [5:0] HBMMC_TRTW_REG = HBMMC_TRTW;
  reg [4:0] HBMMC_TWL_REG = HBMMC_TWL;
  reg [5:0] HBMMC_TWTR_L_REG = HBMMC_TWTR_L;
  reg [5:0] HBMMC_TWTR_S_REG = HBMMC_TWTR_S;
  reg [26:0] HBMMC_TXP_XS_REG = HBMMC_TXP_XS;
  reg [4:0] HBMMC_WR_REG = HBMMC_WR;
  reg [0:0] HBMMC_WR_DBI_REG = HBMMC_WR_DBI;
  reg [5:0] HBMMC_WTP_REG = HBMMC_WTP;
  reg [24:1] SIM_MODEL_TYPE_REG = SIM_MODEL_TYPE;
  reg [6:0] STACK0_CH1_0_PAGE_HIT_REG = STACK0_CH1_0_PAGE_HIT;
  reg [64:1] STACK0_CH1_0_PHY_ACTIVE_REG = STACK0_CH1_0_PHY_ACTIVE;
  reg [6:0] STACK0_CH1_0_READ_RATE_REG = STACK0_CH1_0_READ_RATE;
  reg [6:0] STACK0_CH1_0_WRITE_RATE_REG = STACK0_CH1_0_WRITE_RATE;
  reg [6:0] STACK0_CH1_1_PAGE_HIT_REG = STACK0_CH1_1_PAGE_HIT;
  reg [64:1] STACK0_CH1_1_PHY_ACTIVE_REG = STACK0_CH1_1_PHY_ACTIVE;
  reg [6:0] STACK0_CH1_1_READ_RATE_REG = STACK0_CH1_1_READ_RATE;
  reg [6:0] STACK0_CH1_1_WRITE_RATE_REG = STACK0_CH1_1_WRITE_RATE;
  reg [11:0] STACK0_CH1_DATA_RATE_REG = STACK0_CH1_DATA_RATE;
  reg [6:0] STACK0_CH2_0_PAGE_HIT_REG = STACK0_CH2_0_PAGE_HIT;
  reg [64:1] STACK0_CH2_0_PHY_ACTIVE_REG = STACK0_CH2_0_PHY_ACTIVE;
  reg [6:0] STACK0_CH2_0_READ_RATE_REG = STACK0_CH2_0_READ_RATE;
  reg [6:0] STACK0_CH2_0_WRITE_RATE_REG = STACK0_CH2_0_WRITE_RATE;
  reg [6:0] STACK0_CH2_1_PAGE_HIT_REG = STACK0_CH2_1_PAGE_HIT;
  reg [64:1] STACK0_CH2_1_PHY_ACTIVE_REG = STACK0_CH2_1_PHY_ACTIVE;
  reg [6:0] STACK0_CH2_1_READ_RATE_REG = STACK0_CH2_1_READ_RATE;
  reg [6:0] STACK0_CH2_1_WRITE_RATE_REG = STACK0_CH2_1_WRITE_RATE;
  reg [11:0] STACK0_CH2_DATA_RATE_REG = STACK0_CH2_DATA_RATE;
  reg [6:0] STACK0_CH3_0_PAGE_HIT_REG = STACK0_CH3_0_PAGE_HIT;
  reg [64:1] STACK0_CH3_0_PHY_ACTIVE_REG = STACK0_CH3_0_PHY_ACTIVE;
  reg [6:0] STACK0_CH3_0_READ_RATE_REG = STACK0_CH3_0_READ_RATE;
  reg [6:0] STACK0_CH3_0_WRITE_RATE_REG = STACK0_CH3_0_WRITE_RATE;
  reg [6:0] STACK0_CH3_1_PAGE_HIT_REG = STACK0_CH3_1_PAGE_HIT;
  reg [64:1] STACK0_CH3_1_PHY_ACTIVE_REG = STACK0_CH3_1_PHY_ACTIVE;
  reg [6:0] STACK0_CH3_1_READ_RATE_REG = STACK0_CH3_1_READ_RATE;
  reg [6:0] STACK0_CH3_1_WRITE_RATE_REG = STACK0_CH3_1_WRITE_RATE;
  reg [11:0] STACK0_CH3_DATA_RATE_REG = STACK0_CH3_DATA_RATE;
  reg [6:0] STACK0_CH4_0_PAGE_HIT_REG = STACK0_CH4_0_PAGE_HIT;
  reg [64:1] STACK0_CH4_0_PHY_ACTIVE_REG = STACK0_CH4_0_PHY_ACTIVE;
  reg [6:0] STACK0_CH4_0_READ_RATE_REG = STACK0_CH4_0_READ_RATE;
  reg [6:0] STACK0_CH4_0_WRITE_RATE_REG = STACK0_CH4_0_WRITE_RATE;
  reg [6:0] STACK0_CH4_1_PAGE_HIT_REG = STACK0_CH4_1_PAGE_HIT;
  reg [64:1] STACK0_CH4_1_PHY_ACTIVE_REG = STACK0_CH4_1_PHY_ACTIVE;
  reg [6:0] STACK0_CH4_1_READ_RATE_REG = STACK0_CH4_1_READ_RATE;
  reg [6:0] STACK0_CH4_1_WRITE_RATE_REG = STACK0_CH4_1_WRITE_RATE;
  reg [11:0] STACK0_CH4_DATA_RATE_REG = STACK0_CH4_DATA_RATE;
  reg [6:0] STACK0_CH5_0_PAGE_HIT_REG = STACK0_CH5_0_PAGE_HIT;
  reg [64:1] STACK0_CH5_0_PHY_ACTIVE_REG = STACK0_CH5_0_PHY_ACTIVE;
  reg [6:0] STACK0_CH5_0_READ_RATE_REG = STACK0_CH5_0_READ_RATE;
  reg [6:0] STACK0_CH5_0_WRITE_RATE_REG = STACK0_CH5_0_WRITE_RATE;
  reg [6:0] STACK0_CH5_1_PAGE_HIT_REG = STACK0_CH5_1_PAGE_HIT;
  reg [64:1] STACK0_CH5_1_PHY_ACTIVE_REG = STACK0_CH5_1_PHY_ACTIVE;
  reg [6:0] STACK0_CH5_1_READ_RATE_REG = STACK0_CH5_1_READ_RATE;
  reg [6:0] STACK0_CH5_1_WRITE_RATE_REG = STACK0_CH5_1_WRITE_RATE;
  reg [11:0] STACK0_CH5_DATA_RATE_REG = STACK0_CH5_DATA_RATE;
  reg [6:0] STACK0_CH6_0_PAGE_HIT_REG = STACK0_CH6_0_PAGE_HIT;
  reg [64:1] STACK0_CH6_0_PHY_ACTIVE_REG = STACK0_CH6_0_PHY_ACTIVE;
  reg [6:0] STACK0_CH6_0_READ_RATE_REG = STACK0_CH6_0_READ_RATE;
  reg [6:0] STACK0_CH6_0_WRITE_RATE_REG = STACK0_CH6_0_WRITE_RATE;
  reg [6:0] STACK0_CH6_1_PAGE_HIT_REG = STACK0_CH6_1_PAGE_HIT;
  reg [64:1] STACK0_CH6_1_PHY_ACTIVE_REG = STACK0_CH6_1_PHY_ACTIVE;
  reg [6:0] STACK0_CH6_1_READ_RATE_REG = STACK0_CH6_1_READ_RATE;
  reg [6:0] STACK0_CH6_1_WRITE_RATE_REG = STACK0_CH6_1_WRITE_RATE;
  reg [11:0] STACK0_CH6_DATA_RATE_REG = STACK0_CH6_DATA_RATE;
  reg [6:0] STACK0_CH7_0_PAGE_HIT_REG = STACK0_CH7_0_PAGE_HIT;
  reg [64:1] STACK0_CH7_0_PHY_ACTIVE_REG = STACK0_CH7_0_PHY_ACTIVE;
  reg [6:0] STACK0_CH7_0_READ_RATE_REG = STACK0_CH7_0_READ_RATE;
  reg [6:0] STACK0_CH7_0_WRITE_RATE_REG = STACK0_CH7_0_WRITE_RATE;
  reg [6:0] STACK0_CH7_1_PAGE_HIT_REG = STACK0_CH7_1_PAGE_HIT;
  reg [64:1] STACK0_CH7_1_PHY_ACTIVE_REG = STACK0_CH7_1_PHY_ACTIVE;
  reg [6:0] STACK0_CH7_1_READ_RATE_REG = STACK0_CH7_1_READ_RATE;
  reg [6:0] STACK0_CH7_1_WRITE_RATE_REG = STACK0_CH7_1_WRITE_RATE;
  reg [11:0] STACK0_CH7_DATA_RATE_REG = STACK0_CH7_DATA_RATE;
  reg [6:0] STACK0_CH8_0_PAGE_HIT_REG = STACK0_CH8_0_PAGE_HIT;
  reg [64:1] STACK0_CH8_0_PHY_ACTIVE_REG = STACK0_CH8_0_PHY_ACTIVE;
  reg [6:0] STACK0_CH8_0_READ_RATE_REG = STACK0_CH8_0_READ_RATE;
  reg [6:0] STACK0_CH8_0_WRITE_RATE_REG = STACK0_CH8_0_WRITE_RATE;
  reg [6:0] STACK0_CH8_1_PAGE_HIT_REG = STACK0_CH8_1_PAGE_HIT;
  reg [64:1] STACK0_CH8_1_PHY_ACTIVE_REG = STACK0_CH8_1_PHY_ACTIVE;
  reg [6:0] STACK0_CH8_1_READ_RATE_REG = STACK0_CH8_1_READ_RATE;
  reg [6:0] STACK0_CH8_1_WRITE_RATE_REG = STACK0_CH8_1_WRITE_RATE;
  reg [11:0] STACK0_CH8_DATA_RATE_REG = STACK0_CH8_DATA_RATE;
  reg [6:0] STACK1_CH1_0_PAGE_HIT_REG = STACK1_CH1_0_PAGE_HIT;
  reg [64:1] STACK1_CH1_0_PHY_ACTIVE_REG = STACK1_CH1_0_PHY_ACTIVE;
  reg [6:0] STACK1_CH1_0_READ_RATE_REG = STACK1_CH1_0_READ_RATE;
  reg [6:0] STACK1_CH1_0_WRITE_RATE_REG = STACK1_CH1_0_WRITE_RATE;
  reg [6:0] STACK1_CH1_1_PAGE_HIT_REG = STACK1_CH1_1_PAGE_HIT;
  reg [64:1] STACK1_CH1_1_PHY_ACTIVE_REG = STACK1_CH1_1_PHY_ACTIVE;
  reg [6:0] STACK1_CH1_1_READ_RATE_REG = STACK1_CH1_1_READ_RATE;
  reg [6:0] STACK1_CH1_1_WRITE_RATE_REG = STACK1_CH1_1_WRITE_RATE;
  reg [11:0] STACK1_CH1_DATA_RATE_REG = STACK1_CH1_DATA_RATE;
  reg [6:0] STACK1_CH2_0_PAGE_HIT_REG = STACK1_CH2_0_PAGE_HIT;
  reg [64:1] STACK1_CH2_0_PHY_ACTIVE_REG = STACK1_CH2_0_PHY_ACTIVE;
  reg [6:0] STACK1_CH2_0_READ_RATE_REG = STACK1_CH2_0_READ_RATE;
  reg [6:0] STACK1_CH2_0_WRITE_RATE_REG = STACK1_CH2_0_WRITE_RATE;
  reg [6:0] STACK1_CH2_1_PAGE_HIT_REG = STACK1_CH2_1_PAGE_HIT;
  reg [64:1] STACK1_CH2_1_PHY_ACTIVE_REG = STACK1_CH2_1_PHY_ACTIVE;
  reg [6:0] STACK1_CH2_1_READ_RATE_REG = STACK1_CH2_1_READ_RATE;
  reg [6:0] STACK1_CH2_1_WRITE_RATE_REG = STACK1_CH2_1_WRITE_RATE;
  reg [11:0] STACK1_CH2_DATA_RATE_REG = STACK1_CH2_DATA_RATE;
  reg [6:0] STACK1_CH3_0_PAGE_HIT_REG = STACK1_CH3_0_PAGE_HIT;
  reg [64:1] STACK1_CH3_0_PHY_ACTIVE_REG = STACK1_CH3_0_PHY_ACTIVE;
  reg [6:0] STACK1_CH3_0_READ_RATE_REG = STACK1_CH3_0_READ_RATE;
  reg [6:0] STACK1_CH3_0_WRITE_RATE_REG = STACK1_CH3_0_WRITE_RATE;
  reg [6:0] STACK1_CH3_1_PAGE_HIT_REG = STACK1_CH3_1_PAGE_HIT;
  reg [64:1] STACK1_CH3_1_PHY_ACTIVE_REG = STACK1_CH3_1_PHY_ACTIVE;
  reg [6:0] STACK1_CH3_1_READ_RATE_REG = STACK1_CH3_1_READ_RATE;
  reg [6:0] STACK1_CH3_1_WRITE_RATE_REG = STACK1_CH3_1_WRITE_RATE;
  reg [11:0] STACK1_CH3_DATA_RATE_REG = STACK1_CH3_DATA_RATE;
  reg [6:0] STACK1_CH4_0_PAGE_HIT_REG = STACK1_CH4_0_PAGE_HIT;
  reg [64:1] STACK1_CH4_0_PHY_ACTIVE_REG = STACK1_CH4_0_PHY_ACTIVE;
  reg [6:0] STACK1_CH4_0_READ_RATE_REG = STACK1_CH4_0_READ_RATE;
  reg [6:0] STACK1_CH4_0_WRITE_RATE_REG = STACK1_CH4_0_WRITE_RATE;
  reg [6:0] STACK1_CH4_1_PAGE_HIT_REG = STACK1_CH4_1_PAGE_HIT;
  reg [64:1] STACK1_CH4_1_PHY_ACTIVE_REG = STACK1_CH4_1_PHY_ACTIVE;
  reg [6:0] STACK1_CH4_1_READ_RATE_REG = STACK1_CH4_1_READ_RATE;
  reg [6:0] STACK1_CH4_1_WRITE_RATE_REG = STACK1_CH4_1_WRITE_RATE;
  reg [11:0] STACK1_CH4_DATA_RATE_REG = STACK1_CH4_DATA_RATE;
  reg [6:0] STACK1_CH5_0_PAGE_HIT_REG = STACK1_CH5_0_PAGE_HIT;
  reg [64:1] STACK1_CH5_0_PHY_ACTIVE_REG = STACK1_CH5_0_PHY_ACTIVE;
  reg [6:0] STACK1_CH5_0_READ_RATE_REG = STACK1_CH5_0_READ_RATE;
  reg [6:0] STACK1_CH5_0_WRITE_RATE_REG = STACK1_CH5_0_WRITE_RATE;
  reg [6:0] STACK1_CH5_1_PAGE_HIT_REG = STACK1_CH5_1_PAGE_HIT;
  reg [64:1] STACK1_CH5_1_PHY_ACTIVE_REG = STACK1_CH5_1_PHY_ACTIVE;
  reg [6:0] STACK1_CH5_1_READ_RATE_REG = STACK1_CH5_1_READ_RATE;
  reg [6:0] STACK1_CH5_1_WRITE_RATE_REG = STACK1_CH5_1_WRITE_RATE;
  reg [11:0] STACK1_CH5_DATA_RATE_REG = STACK1_CH5_DATA_RATE;
  reg [6:0] STACK1_CH6_0_PAGE_HIT_REG = STACK1_CH6_0_PAGE_HIT;
  reg [64:1] STACK1_CH6_0_PHY_ACTIVE_REG = STACK1_CH6_0_PHY_ACTIVE;
  reg [6:0] STACK1_CH6_0_READ_RATE_REG = STACK1_CH6_0_READ_RATE;
  reg [6:0] STACK1_CH6_0_WRITE_RATE_REG = STACK1_CH6_0_WRITE_RATE;
  reg [6:0] STACK1_CH6_1_PAGE_HIT_REG = STACK1_CH6_1_PAGE_HIT;
  reg [64:1] STACK1_CH6_1_PHY_ACTIVE_REG = STACK1_CH6_1_PHY_ACTIVE;
  reg [6:0] STACK1_CH6_1_READ_RATE_REG = STACK1_CH6_1_READ_RATE;
  reg [6:0] STACK1_CH6_1_WRITE_RATE_REG = STACK1_CH6_1_WRITE_RATE;
  reg [11:0] STACK1_CH6_DATA_RATE_REG = STACK1_CH6_DATA_RATE;
  reg [6:0] STACK1_CH7_0_PAGE_HIT_REG = STACK1_CH7_0_PAGE_HIT;
  reg [64:1] STACK1_CH7_0_PHY_ACTIVE_REG = STACK1_CH7_0_PHY_ACTIVE;
  reg [6:0] STACK1_CH7_0_READ_RATE_REG = STACK1_CH7_0_READ_RATE;
  reg [6:0] STACK1_CH7_0_WRITE_RATE_REG = STACK1_CH7_0_WRITE_RATE;
  reg [6:0] STACK1_CH7_1_PAGE_HIT_REG = STACK1_CH7_1_PAGE_HIT;
  reg [64:1] STACK1_CH7_1_PHY_ACTIVE_REG = STACK1_CH7_1_PHY_ACTIVE;
  reg [6:0] STACK1_CH7_1_READ_RATE_REG = STACK1_CH7_1_READ_RATE;
  reg [6:0] STACK1_CH7_1_WRITE_RATE_REG = STACK1_CH7_1_WRITE_RATE;
  reg [11:0] STACK1_CH7_DATA_RATE_REG = STACK1_CH7_DATA_RATE;
  reg [6:0] STACK1_CH8_0_PAGE_HIT_REG = STACK1_CH8_0_PAGE_HIT;
  reg [64:1] STACK1_CH8_0_PHY_ACTIVE_REG = STACK1_CH8_0_PHY_ACTIVE;
  reg [6:0] STACK1_CH8_0_READ_RATE_REG = STACK1_CH8_0_READ_RATE;
  reg [6:0] STACK1_CH8_0_WRITE_RATE_REG = STACK1_CH8_0_WRITE_RATE;
  reg [6:0] STACK1_CH8_1_PAGE_HIT_REG = STACK1_CH8_1_PAGE_HIT;
  reg [64:1] STACK1_CH8_1_PHY_ACTIVE_REG = STACK1_CH8_1_PHY_ACTIVE;
  reg [6:0] STACK1_CH8_1_READ_RATE_REG = STACK1_CH8_1_READ_RATE;
  reg [6:0] STACK1_CH8_1_WRITE_RATE_REG = STACK1_CH8_1_WRITE_RATE;
  reg [11:0] STACK1_CH8_DATA_RATE_REG = STACK1_CH8_DATA_RATE;
`endif

`ifdef XIL_XECLIB
reg glblGSR = 1'b0;
`else
tri0 glblGSR = glbl.GSR;
`endif

  wire CH0_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT_out;
  wire CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN_out;
  wire CH0_HBMMC_NOC_FLIT_EN_MC_NOCOUT_out;
  wire CH0_HBMMC_NOC_VALID_EN_MC_NOCOUT_out;
  wire CH1_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT_out;
  wire CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN_out;
  wire CH1_HBMMC_NOC_FLIT_EN_MC_NOCOUT_out;
  wire CH1_HBMMC_NOC_VALID_EN_MC_NOCOUT_out;
  wire CH2_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT_out;
  wire CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN_out;
  wire CH2_HBMMC_NOC_FLIT_EN_MC_NOCOUT_out;
  wire CH2_HBMMC_NOC_VALID_EN_MC_NOCOUT_out;
  wire CH3_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT_out;
  wire CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN_out;
  wire CH3_HBMMC_NOC_FLIT_EN_MC_NOCOUT_out;
  wire CH3_HBMMC_NOC_VALID_EN_MC_NOCOUT_out;
  wire HBMMC_AW_CK_DIS_out;
  wire HBMMC_AW_TX_INDX_LD_out;
  wire HBMMC_CTRLUPD_REQ_out;
  wire HBMMC_DFI_CLK_OUT_out;
  wire HBMMC_DW_RX_INDX_LD_out;
  wire HBMMC_DW_TX_INDX_LD_out;
  wire HBMMC_INIT_START_DFI_MISC_out;
  wire HBMMC_LP_PWR_E_REQ_out;
  wire HBMMC_LP_PWR_X_REQ_out;
  wire HBMMC_LP_SR_E_REQ_out;
  wire HBMMC_PHYUPD_ACK_out;
  wire TO_NOC_0_out;
  wire TO_NOC_1_out;
  wire TO_NOC_2_out;
  wire TO_NOC_3_out;
  wire [13:0] CH0_HBMMC_AW_ROW_MC_DFI_CMD_out;
  wire [13:0] CH1_HBMMC_AW_ROW_MC_DFI_CMD_out;
  wire [17:0] CH0_HBMMC_AW_COL_MC_DFI_CMD_out;
  wire [17:0] CH1_HBMMC_AW_COL_MC_DFI_CMD_out;
  wire [181:0] CH0_HBMMC_NOC_FLIT_MC_NOCOUT_out;
  wire [181:0] CH1_HBMMC_NOC_FLIT_MC_NOCOUT_out;
  wire [181:0] CH2_HBMMC_NOC_FLIT_MC_NOCOUT_out;
  wire [181:0] CH3_HBMMC_NOC_FLIT_MC_NOCOUT_out;
  wire [1:0] CH0_HBMMC_AW_CKE_MC_DFI_CMD_out;
  wire [1:0] CH0_HBMMC_AW_CK_MC_DFI_CMD_out;
  wire [1:0] CH0_HBMMC_NOC_PDEST_ID_MC_NOCOUT_out;
  wire [1:0] CH1_HBMMC_AW_CKE_MC_DFI_CMD_out;
  wire [1:0] CH1_HBMMC_AW_CK_MC_DFI_CMD_out;
  wire [1:0] CH1_HBMMC_NOC_PDEST_ID_MC_NOCOUT_out;
  wire [1:0] CH2_HBMMC_NOC_PDEST_ID_MC_NOCOUT_out;
  wire [1:0] CH3_HBMMC_NOC_PDEST_ID_MC_NOCOUT_out;
  wire [255:0] CH0_HBMMC_DW_DATA_MC_DFI_WR_out;
  wire [255:0] CH1_HBMMC_DW_DATA_MC_DFI_WR_out;
  wire [31:0] CH0_HBMMC_DW_DBI_MC_DFI_WR_out;
  wire [31:0] CH0_HBMMC_DW_MASK_MC_DFI_WR_out;
  wire [31:0] CH1_HBMMC_DW_DBI_MC_DFI_WR_out;
  wire [31:0] CH1_HBMMC_DW_MASK_MC_DFI_WR_out;
  wire [7:0] CH0_HBMMC_DW_DATA_DQS_MC_DFI_WR_out;
  wire [7:0] CH0_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR_out;
  wire [7:0] CH0_HBMMC_DW_PAR_EN_MC_DFI_WR_out;
  wire [7:0] CH0_HBMMC_DW_PAR_MC_DFI_WR_out;
  wire [7:0] CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN_out;
  wire [7:0] CH0_HBMMC_NOC_VALID_MC_NOCOUT_out;
  wire [7:0] CH1_HBMMC_DW_DATA_DQS_MC_DFI_WR_out;
  wire [7:0] CH1_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR_out;
  wire [7:0] CH1_HBMMC_DW_PAR_EN_MC_DFI_WR_out;
  wire [7:0] CH1_HBMMC_DW_PAR_MC_DFI_WR_out;
  wire [7:0] CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN_out;
  wire [7:0] CH1_HBMMC_NOC_VALID_MC_NOCOUT_out;
  wire [7:0] CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN_out;
  wire [7:0] CH2_HBMMC_NOC_VALID_MC_NOCOUT_out;
  wire [7:0] CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN_out;
  wire [7:0] CH3_HBMMC_NOC_VALID_MC_NOCOUT_out;

  wire CH0_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in;
  wire CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in;
  wire CH0_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in;
  wire CH0_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in;
  wire CH1_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in;
  wire CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in;
  wire CH1_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in;
  wire CH1_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in;
  wire CH2_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in;
  wire CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in;
  wire CH2_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in;
  wire CH2_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in;
  wire CH3_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in;
  wire CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in;
  wire CH3_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in;
  wire CH3_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in;
  wire FROM_NOC_0_in;
  wire FROM_NOC_1_in;
  wire FROM_NOC_2_in;
  wire FROM_NOC_3_in;
  wire HBMMC_CATTRIP_DFI_MISC_in;
  wire HBMMC_CTRLUPD_ACK_in;
  wire HBMMC_DFI_CLK_in;
  wire HBMMC_DFI_RESET_N_in;
  wire HBMMC_GBL_REF_RESET_N_in;
  wire HBMMC_INIT_COMPLETE_in;
  wire HBMMC_NOC_RST_N_MC_GL_in;
  wire HBMMC_NPI_CLK_MC_GL_in;
  wire HBMMC_PHYUPD_REQ_in;
  wire HBMMC_PHY_LP_STATE_in;
  wire HBMMC_SYS_RST1_N_MC_GL_in;
  wire HBMMC_SYS_RST2_N_MC_GL_in;
  wire HBMMC_SYS_RST3_N_MC_GL_in;
  wire HBMMC_TRAINING_COMPLETE_in;
  wire [15:0] HBMMC_DW_DBI_BYTE_DISABLE_in;
  wire [181:0] CH0_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in;
  wire [181:0] CH1_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in;
  wire [181:0] CH2_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in;
  wire [181:0] CH3_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in;
  wire [1:0] CH0_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in;
  wire [1:0] CH1_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in;
  wire [1:0] CH2_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in;
  wire [1:0] CH3_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in;
  wire [1:0] HBMMC_AW_AERR_N_in;
  wire [255:0] CH0_HBMMC_DW_DATA_MC_DFI_RD_in;
  wire [255:0] CH1_HBMMC_DW_DATA_MC_DFI_RD_in;
  wire [2:0] HBMMC_SPARE_MC_GL_in;
  wire [2:0] HBMMC_TEMP_in;
  wire [31:0] CH0_HBMMC_DW_DBI_MC_DFI_RD_in;
  wire [31:0] CH0_HBMMC_DW_MASK_MC_DFI_RD_in;
  wire [31:0] CH1_HBMMC_DW_DBI_MC_DFI_RD_in;
  wire [31:0] CH1_HBMMC_DW_MASK_MC_DFI_RD_in;
  wire [7:0] CH0_HBMMC_DW_PAR_MC_DFI_RD_in;
  wire [7:0] CH0_HBMMC_DW_RDDATA_VALID_MC_DFI_RD_in;
  wire [7:0] CH0_HBMMC_DW_WDATA_DERR_MC_DFI_WR_in;
  wire [7:0] CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in;
  wire [7:0] CH0_HBMMC_NOC_VALID_MC_NOC2MC_IN_in;
  wire [7:0] CH1_HBMMC_DW_PAR_MC_DFI_RD_in;
  wire [7:0] CH1_HBMMC_DW_RDDATA_VALID_MC_DFI_RD_in;
  wire [7:0] CH1_HBMMC_DW_WDATA_DERR_MC_DFI_WR_in;
  wire [7:0] CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in;
  wire [7:0] CH1_HBMMC_NOC_VALID_MC_NOC2MC_IN_in;
  wire [7:0] CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in;
  wire [7:0] CH2_HBMMC_NOC_VALID_MC_NOC2MC_IN_in;
  wire [7:0] CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in;
  wire [7:0] CH3_HBMMC_NOC_VALID_MC_NOC2MC_IN_in;

  assign CH0_HBMMC_AW_CKE_MC_DFI_CMD = CH0_HBMMC_AW_CKE_MC_DFI_CMD_out;
  assign CH0_HBMMC_AW_CK_MC_DFI_CMD = CH0_HBMMC_AW_CK_MC_DFI_CMD_out;
  assign CH0_HBMMC_AW_COL_MC_DFI_CMD = CH0_HBMMC_AW_COL_MC_DFI_CMD_out;
  assign CH0_HBMMC_AW_ROW_MC_DFI_CMD = CH0_HBMMC_AW_ROW_MC_DFI_CMD_out;
  assign CH0_HBMMC_DW_DATA_DQS_MC_DFI_WR = CH0_HBMMC_DW_DATA_DQS_MC_DFI_WR_out;
  assign CH0_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR = CH0_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR_out;
  assign CH0_HBMMC_DW_DATA_MC_DFI_WR = CH0_HBMMC_DW_DATA_MC_DFI_WR_out;
  assign CH0_HBMMC_DW_DBI_MC_DFI_WR = CH0_HBMMC_DW_DBI_MC_DFI_WR_out;
  assign CH0_HBMMC_DW_MASK_MC_DFI_WR = CH0_HBMMC_DW_MASK_MC_DFI_WR_out;
  assign CH0_HBMMC_DW_PAR_EN_MC_DFI_WR = CH0_HBMMC_DW_PAR_EN_MC_DFI_WR_out;
  assign CH0_HBMMC_DW_PAR_MC_DFI_WR = CH0_HBMMC_DW_PAR_MC_DFI_WR_out;
  assign CH1_HBMMC_AW_CKE_MC_DFI_CMD = CH1_HBMMC_AW_CKE_MC_DFI_CMD_out;
  assign CH1_HBMMC_AW_CK_MC_DFI_CMD = CH1_HBMMC_AW_CK_MC_DFI_CMD_out;
  assign CH1_HBMMC_AW_COL_MC_DFI_CMD = CH1_HBMMC_AW_COL_MC_DFI_CMD_out;
  assign CH1_HBMMC_AW_ROW_MC_DFI_CMD = CH1_HBMMC_AW_ROW_MC_DFI_CMD_out;
  assign CH1_HBMMC_DW_DATA_DQS_MC_DFI_WR = CH1_HBMMC_DW_DATA_DQS_MC_DFI_WR_out;
  assign CH1_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR = CH1_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR_out;
  assign CH1_HBMMC_DW_DATA_MC_DFI_WR = CH1_HBMMC_DW_DATA_MC_DFI_WR_out;
  assign CH1_HBMMC_DW_DBI_MC_DFI_WR = CH1_HBMMC_DW_DBI_MC_DFI_WR_out;
  assign CH1_HBMMC_DW_MASK_MC_DFI_WR = CH1_HBMMC_DW_MASK_MC_DFI_WR_out;
  assign CH1_HBMMC_DW_PAR_EN_MC_DFI_WR = CH1_HBMMC_DW_PAR_EN_MC_DFI_WR_out;
  assign CH1_HBMMC_DW_PAR_MC_DFI_WR = CH1_HBMMC_DW_PAR_MC_DFI_WR_out;
  assign HBMMC_AW_CK_DIS = HBMMC_AW_CK_DIS_out;
  assign HBMMC_AW_TX_INDX_LD = HBMMC_AW_TX_INDX_LD_out;
  assign HBMMC_CTRLUPD_REQ = HBMMC_CTRLUPD_REQ_out;
  assign HBMMC_DFI_CLK_OUT = HBMMC_DFI_CLK_OUT_out;
  assign HBMMC_DW_RX_INDX_LD = HBMMC_DW_RX_INDX_LD_out;
  assign HBMMC_DW_TX_INDX_LD = HBMMC_DW_TX_INDX_LD_out;
  assign HBMMC_INIT_START_DFI_MISC = HBMMC_INIT_START_DFI_MISC_out;
  assign HBMMC_LP_PWR_E_REQ = HBMMC_LP_PWR_E_REQ_out;
  assign HBMMC_LP_PWR_X_REQ = HBMMC_LP_PWR_X_REQ_out;
  assign HBMMC_LP_SR_E_REQ = HBMMC_LP_SR_E_REQ_out;
  assign HBMMC_PHYUPD_ACK = HBMMC_PHYUPD_ACK_out;
  assign TO_NOC_0 = TO_NOC_0_out;
  assign TO_NOC_1 = TO_NOC_1_out;
  assign TO_NOC_2 = TO_NOC_2_out;
  assign TO_NOC_3 = TO_NOC_3_out;

  assign CH0_HBMMC_DW_DATA_MC_DFI_RD_in = CH0_HBMMC_DW_DATA_MC_DFI_RD;
  assign CH0_HBMMC_DW_DBI_MC_DFI_RD_in = CH0_HBMMC_DW_DBI_MC_DFI_RD;
  assign CH0_HBMMC_DW_MASK_MC_DFI_RD_in = CH0_HBMMC_DW_MASK_MC_DFI_RD;
  assign CH0_HBMMC_DW_PAR_MC_DFI_RD_in = CH0_HBMMC_DW_PAR_MC_DFI_RD;
  assign CH0_HBMMC_DW_RDDATA_VALID_MC_DFI_RD_in = CH0_HBMMC_DW_RDDATA_VALID_MC_DFI_RD;
  assign CH0_HBMMC_DW_WDATA_DERR_MC_DFI_WR_in = CH0_HBMMC_DW_WDATA_DERR_MC_DFI_WR;
  assign CH0_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in = CH0_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN;
  assign CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in = CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT;
  assign CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in = CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT;
  assign CH0_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in = CH0_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN;
  assign CH0_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in = CH0_HBMMC_NOC_FLIT_MC_NOC2MC_IN;
  assign CH0_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in = CH0_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN;
  assign CH0_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in = CH0_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN;
  assign CH0_HBMMC_NOC_VALID_MC_NOC2MC_IN_in = CH0_HBMMC_NOC_VALID_MC_NOC2MC_IN;
  assign CH1_HBMMC_DW_DATA_MC_DFI_RD_in = CH1_HBMMC_DW_DATA_MC_DFI_RD;
  assign CH1_HBMMC_DW_DBI_MC_DFI_RD_in = CH1_HBMMC_DW_DBI_MC_DFI_RD;
  assign CH1_HBMMC_DW_MASK_MC_DFI_RD_in = CH1_HBMMC_DW_MASK_MC_DFI_RD;
  assign CH1_HBMMC_DW_PAR_MC_DFI_RD_in = CH1_HBMMC_DW_PAR_MC_DFI_RD;
  assign CH1_HBMMC_DW_RDDATA_VALID_MC_DFI_RD_in = CH1_HBMMC_DW_RDDATA_VALID_MC_DFI_RD;
  assign CH1_HBMMC_DW_WDATA_DERR_MC_DFI_WR_in = CH1_HBMMC_DW_WDATA_DERR_MC_DFI_WR;
  assign CH1_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in = CH1_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN;
  assign CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in = CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT;
  assign CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in = CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT;
  assign CH1_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in = CH1_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN;
  assign CH1_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in = CH1_HBMMC_NOC_FLIT_MC_NOC2MC_IN;
  assign CH1_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in = CH1_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN;
  assign CH1_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in = CH1_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN;
  assign CH1_HBMMC_NOC_VALID_MC_NOC2MC_IN_in = CH1_HBMMC_NOC_VALID_MC_NOC2MC_IN;
  assign CH2_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in = CH2_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN;
  assign CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in = CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT;
  assign CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in = CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT;
  assign CH2_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in = CH2_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN;
  assign CH2_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in = CH2_HBMMC_NOC_FLIT_MC_NOC2MC_IN;
  assign CH2_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in = CH2_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN;
  assign CH2_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in = CH2_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN;
  assign CH2_HBMMC_NOC_VALID_MC_NOC2MC_IN_in = CH2_HBMMC_NOC_VALID_MC_NOC2MC_IN;
  assign CH3_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in = CH3_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN;
  assign CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in = CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT;
  assign CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in = CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT;
  assign CH3_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in = CH3_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN;
  assign CH3_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in = CH3_HBMMC_NOC_FLIT_MC_NOC2MC_IN;
  assign CH3_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in = CH3_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN;
  assign CH3_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in = CH3_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN;
  assign CH3_HBMMC_NOC_VALID_MC_NOC2MC_IN_in = CH3_HBMMC_NOC_VALID_MC_NOC2MC_IN;
  assign FROM_NOC_0_in = FROM_NOC_0;
  assign FROM_NOC_1_in = FROM_NOC_1;
  assign FROM_NOC_2_in = FROM_NOC_2;
  assign FROM_NOC_3_in = FROM_NOC_3;
  assign HBMMC_AW_AERR_N_in = HBMMC_AW_AERR_N;
  assign HBMMC_CATTRIP_DFI_MISC_in = HBMMC_CATTRIP_DFI_MISC;
  assign HBMMC_CTRLUPD_ACK_in = HBMMC_CTRLUPD_ACK;
  assign HBMMC_DFI_CLK_in = HBMMC_DFI_CLK;
  assign HBMMC_DFI_RESET_N_in = HBMMC_DFI_RESET_N;
  assign HBMMC_DW_DBI_BYTE_DISABLE_in = HBMMC_DW_DBI_BYTE_DISABLE;
  assign HBMMC_GBL_REF_RESET_N_in = HBMMC_GBL_REF_RESET_N;
  assign HBMMC_INIT_COMPLETE_in = HBMMC_INIT_COMPLETE;
  assign HBMMC_NOC_RST_N_MC_GL_in = HBMMC_NOC_RST_N_MC_GL;
  assign HBMMC_NPI_CLK_MC_GL_in = HBMMC_NPI_CLK_MC_GL;
  assign HBMMC_PHYUPD_REQ_in = HBMMC_PHYUPD_REQ;
  assign HBMMC_PHY_LP_STATE_in = HBMMC_PHY_LP_STATE;
  assign HBMMC_SPARE_MC_GL_in = HBMMC_SPARE_MC_GL;
  assign HBMMC_SYS_RST1_N_MC_GL_in = HBMMC_SYS_RST1_N_MC_GL;
  assign HBMMC_SYS_RST2_N_MC_GL_in = HBMMC_SYS_RST2_N_MC_GL;
  assign HBMMC_SYS_RST3_N_MC_GL_in = HBMMC_SYS_RST3_N_MC_GL;
  assign HBMMC_TEMP_in = HBMMC_TEMP;
  assign HBMMC_TRAINING_COMPLETE_in = HBMMC_TRAINING_COMPLETE;

`ifndef XIL_XECLIB
  reg attr_test;
  reg attr_err;
  
  initial begin
  trig_attr = 1'b0;
  `ifdef XIL_ATTR_TEST
    attr_test = 1'b1;
  `else
    attr_test = 1'b0;
  `endif
    attr_err = 1'b0;
    #1;
    trig_attr = ~trig_attr;
  end
`endif

`ifndef XIL_XECLIB
  always @ (trig_attr) begin
    #1;
    if ((attr_test == 1'b1) ||
        ((SIM_MODEL_TYPE_REG != "RTL") &&
         (SIM_MODEL_TYPE_REG != "BFM"))) begin
      $display("Error: [Unisim %s-245] SIM_MODEL_TYPE attribute is set to %s.  Legal values for this attribute are RTL or BFM. Instance: %m", MODULE_NAME, SIM_MODEL_TYPE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_0_PAGE_HIT_REG < 0) || (STACK0_CH1_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-246] STACK0_CH1_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH1_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH1_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-247] STACK0_CH1_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH1_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_0_READ_RATE_REG < 0) || (STACK0_CH1_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-248] STACK0_CH1_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH1_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_0_WRITE_RATE_REG < 0) || (STACK0_CH1_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-249] STACK0_CH1_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH1_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_1_PAGE_HIT_REG < 0) || (STACK0_CH1_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-250] STACK0_CH1_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH1_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH1_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-251] STACK0_CH1_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH1_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_1_READ_RATE_REG < 0) || (STACK0_CH1_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-252] STACK0_CH1_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH1_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_1_WRITE_RATE_REG < 0) || (STACK0_CH1_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-253] STACK0_CH1_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH1_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH1_DATA_RATE_REG < 0) || (STACK0_CH1_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-254] STACK0_CH1_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK0_CH1_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_0_PAGE_HIT_REG < 0) || (STACK0_CH2_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-255] STACK0_CH2_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH2_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH2_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-256] STACK0_CH2_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH2_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_0_READ_RATE_REG < 0) || (STACK0_CH2_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-257] STACK0_CH2_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH2_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_0_WRITE_RATE_REG < 0) || (STACK0_CH2_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-258] STACK0_CH2_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH2_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_1_PAGE_HIT_REG < 0) || (STACK0_CH2_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-259] STACK0_CH2_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH2_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH2_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-260] STACK0_CH2_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH2_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_1_READ_RATE_REG < 0) || (STACK0_CH2_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-261] STACK0_CH2_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH2_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_1_WRITE_RATE_REG < 0) || (STACK0_CH2_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-262] STACK0_CH2_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH2_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH2_DATA_RATE_REG < 0) || (STACK0_CH2_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-263] STACK0_CH2_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK0_CH2_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_0_PAGE_HIT_REG < 0) || (STACK0_CH3_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-264] STACK0_CH3_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH3_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH3_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-265] STACK0_CH3_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH3_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_0_READ_RATE_REG < 0) || (STACK0_CH3_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-266] STACK0_CH3_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH3_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_0_WRITE_RATE_REG < 0) || (STACK0_CH3_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-267] STACK0_CH3_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH3_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_1_PAGE_HIT_REG < 0) || (STACK0_CH3_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-268] STACK0_CH3_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH3_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH3_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-269] STACK0_CH3_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH3_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_1_READ_RATE_REG < 0) || (STACK0_CH3_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-270] STACK0_CH3_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH3_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_1_WRITE_RATE_REG < 0) || (STACK0_CH3_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-271] STACK0_CH3_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH3_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH3_DATA_RATE_REG < 0) || (STACK0_CH3_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-272] STACK0_CH3_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK0_CH3_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_0_PAGE_HIT_REG < 0) || (STACK0_CH4_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-273] STACK0_CH4_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH4_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH4_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-274] STACK0_CH4_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH4_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_0_READ_RATE_REG < 0) || (STACK0_CH4_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-275] STACK0_CH4_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH4_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_0_WRITE_RATE_REG < 0) || (STACK0_CH4_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-276] STACK0_CH4_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH4_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_1_PAGE_HIT_REG < 0) || (STACK0_CH4_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-277] STACK0_CH4_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH4_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH4_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-278] STACK0_CH4_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH4_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_1_READ_RATE_REG < 0) || (STACK0_CH4_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-279] STACK0_CH4_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH4_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_1_WRITE_RATE_REG < 0) || (STACK0_CH4_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-280] STACK0_CH4_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH4_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH4_DATA_RATE_REG < 0) || (STACK0_CH4_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-281] STACK0_CH4_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK0_CH4_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_0_PAGE_HIT_REG < 0) || (STACK0_CH5_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-282] STACK0_CH5_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH5_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH5_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-283] STACK0_CH5_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH5_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_0_READ_RATE_REG < 0) || (STACK0_CH5_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-284] STACK0_CH5_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH5_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_0_WRITE_RATE_REG < 0) || (STACK0_CH5_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-285] STACK0_CH5_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH5_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_1_PAGE_HIT_REG < 0) || (STACK0_CH5_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-286] STACK0_CH5_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH5_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH5_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-287] STACK0_CH5_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH5_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_1_READ_RATE_REG < 0) || (STACK0_CH5_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-288] STACK0_CH5_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH5_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_1_WRITE_RATE_REG < 0) || (STACK0_CH5_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-289] STACK0_CH5_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH5_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH5_DATA_RATE_REG < 0) || (STACK0_CH5_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-290] STACK0_CH5_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK0_CH5_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_0_PAGE_HIT_REG < 0) || (STACK0_CH6_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-291] STACK0_CH6_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH6_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH6_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-292] STACK0_CH6_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH6_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_0_READ_RATE_REG < 0) || (STACK0_CH6_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-293] STACK0_CH6_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH6_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_0_WRITE_RATE_REG < 0) || (STACK0_CH6_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-294] STACK0_CH6_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH6_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_1_PAGE_HIT_REG < 0) || (STACK0_CH6_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-295] STACK0_CH6_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH6_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH6_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-296] STACK0_CH6_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH6_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_1_READ_RATE_REG < 0) || (STACK0_CH6_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-297] STACK0_CH6_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH6_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_1_WRITE_RATE_REG < 0) || (STACK0_CH6_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-298] STACK0_CH6_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH6_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH6_DATA_RATE_REG < 0) || (STACK0_CH6_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-299] STACK0_CH6_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK0_CH6_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_0_PAGE_HIT_REG < 0) || (STACK0_CH7_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-300] STACK0_CH7_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH7_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH7_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-301] STACK0_CH7_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH7_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_0_READ_RATE_REG < 0) || (STACK0_CH7_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-302] STACK0_CH7_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH7_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_0_WRITE_RATE_REG < 0) || (STACK0_CH7_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-303] STACK0_CH7_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH7_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_1_PAGE_HIT_REG < 0) || (STACK0_CH7_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-304] STACK0_CH7_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH7_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH7_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-305] STACK0_CH7_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH7_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_1_READ_RATE_REG < 0) || (STACK0_CH7_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-306] STACK0_CH7_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH7_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_1_WRITE_RATE_REG < 0) || (STACK0_CH7_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-307] STACK0_CH7_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH7_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH7_DATA_RATE_REG < 0) || (STACK0_CH7_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-308] STACK0_CH7_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK0_CH7_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_0_PAGE_HIT_REG < 0) || (STACK0_CH8_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-309] STACK0_CH8_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH8_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH8_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-310] STACK0_CH8_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH8_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_0_READ_RATE_REG < 0) || (STACK0_CH8_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-311] STACK0_CH8_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH8_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_0_WRITE_RATE_REG < 0) || (STACK0_CH8_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-312] STACK0_CH8_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH8_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_1_PAGE_HIT_REG < 0) || (STACK0_CH8_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-313] STACK0_CH8_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH8_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK0_CH8_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-314] STACK0_CH8_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK0_CH8_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_1_READ_RATE_REG < 0) || (STACK0_CH8_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-315] STACK0_CH8_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH8_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_1_WRITE_RATE_REG < 0) || (STACK0_CH8_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-316] STACK0_CH8_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK0_CH8_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK0_CH8_DATA_RATE_REG < 0) || (STACK0_CH8_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-317] STACK0_CH8_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK0_CH8_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_0_PAGE_HIT_REG < 0) || (STACK1_CH1_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-318] STACK1_CH1_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH1_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH1_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-319] STACK1_CH1_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH1_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_0_READ_RATE_REG < 0) || (STACK1_CH1_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-320] STACK1_CH1_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH1_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_0_WRITE_RATE_REG < 0) || (STACK1_CH1_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-321] STACK1_CH1_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH1_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_1_PAGE_HIT_REG < 0) || (STACK1_CH1_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-322] STACK1_CH1_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH1_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH1_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-323] STACK1_CH1_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH1_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_1_READ_RATE_REG < 0) || (STACK1_CH1_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-324] STACK1_CH1_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH1_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_1_WRITE_RATE_REG < 0) || (STACK1_CH1_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-325] STACK1_CH1_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH1_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH1_DATA_RATE_REG < 0) || (STACK1_CH1_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-326] STACK1_CH1_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK1_CH1_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_0_PAGE_HIT_REG < 0) || (STACK1_CH2_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-327] STACK1_CH2_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH2_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH2_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-328] STACK1_CH2_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH2_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_0_READ_RATE_REG < 0) || (STACK1_CH2_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-329] STACK1_CH2_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH2_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_0_WRITE_RATE_REG < 0) || (STACK1_CH2_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-330] STACK1_CH2_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH2_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_1_PAGE_HIT_REG < 0) || (STACK1_CH2_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-331] STACK1_CH2_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH2_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH2_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-332] STACK1_CH2_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH2_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_1_READ_RATE_REG < 0) || (STACK1_CH2_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-333] STACK1_CH2_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH2_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_1_WRITE_RATE_REG < 0) || (STACK1_CH2_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-334] STACK1_CH2_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH2_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH2_DATA_RATE_REG < 0) || (STACK1_CH2_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-335] STACK1_CH2_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK1_CH2_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_0_PAGE_HIT_REG < 0) || (STACK1_CH3_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-336] STACK1_CH3_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH3_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH3_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-337] STACK1_CH3_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH3_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_0_READ_RATE_REG < 0) || (STACK1_CH3_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-338] STACK1_CH3_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH3_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_0_WRITE_RATE_REG < 0) || (STACK1_CH3_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-339] STACK1_CH3_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH3_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_1_PAGE_HIT_REG < 0) || (STACK1_CH3_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-340] STACK1_CH3_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH3_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH3_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-341] STACK1_CH3_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH3_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_1_READ_RATE_REG < 0) || (STACK1_CH3_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-342] STACK1_CH3_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH3_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_1_WRITE_RATE_REG < 0) || (STACK1_CH3_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-343] STACK1_CH3_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH3_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH3_DATA_RATE_REG < 0) || (STACK1_CH3_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-344] STACK1_CH3_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK1_CH3_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_0_PAGE_HIT_REG < 0) || (STACK1_CH4_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-345] STACK1_CH4_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH4_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH4_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-346] STACK1_CH4_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH4_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_0_READ_RATE_REG < 0) || (STACK1_CH4_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-347] STACK1_CH4_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH4_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_0_WRITE_RATE_REG < 0) || (STACK1_CH4_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-348] STACK1_CH4_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH4_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_1_PAGE_HIT_REG < 0) || (STACK1_CH4_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-349] STACK1_CH4_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH4_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH4_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-350] STACK1_CH4_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH4_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_1_READ_RATE_REG < 0) || (STACK1_CH4_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-351] STACK1_CH4_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH4_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_1_WRITE_RATE_REG < 0) || (STACK1_CH4_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-352] STACK1_CH4_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH4_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH4_DATA_RATE_REG < 0) || (STACK1_CH4_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-353] STACK1_CH4_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK1_CH4_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_0_PAGE_HIT_REG < 0) || (STACK1_CH5_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-354] STACK1_CH5_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH5_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH5_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-355] STACK1_CH5_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH5_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_0_READ_RATE_REG < 0) || (STACK1_CH5_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-356] STACK1_CH5_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH5_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_0_WRITE_RATE_REG < 0) || (STACK1_CH5_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-357] STACK1_CH5_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH5_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_1_PAGE_HIT_REG < 0) || (STACK1_CH5_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-358] STACK1_CH5_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH5_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH5_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-359] STACK1_CH5_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH5_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_1_READ_RATE_REG < 0) || (STACK1_CH5_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-360] STACK1_CH5_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH5_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_1_WRITE_RATE_REG < 0) || (STACK1_CH5_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-361] STACK1_CH5_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH5_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH5_DATA_RATE_REG < 0) || (STACK1_CH5_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-362] STACK1_CH5_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK1_CH5_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_0_PAGE_HIT_REG < 0) || (STACK1_CH6_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-363] STACK1_CH6_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH6_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH6_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-364] STACK1_CH6_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH6_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_0_READ_RATE_REG < 0) || (STACK1_CH6_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-365] STACK1_CH6_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH6_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_0_WRITE_RATE_REG < 0) || (STACK1_CH6_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-366] STACK1_CH6_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH6_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_1_PAGE_HIT_REG < 0) || (STACK1_CH6_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-367] STACK1_CH6_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH6_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH6_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-368] STACK1_CH6_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH6_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_1_READ_RATE_REG < 0) || (STACK1_CH6_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-369] STACK1_CH6_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH6_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_1_WRITE_RATE_REG < 0) || (STACK1_CH6_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-370] STACK1_CH6_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH6_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH6_DATA_RATE_REG < 0) || (STACK1_CH6_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-371] STACK1_CH6_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK1_CH6_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_0_PAGE_HIT_REG < 0) || (STACK1_CH7_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-372] STACK1_CH7_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH7_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH7_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-373] STACK1_CH7_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH7_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_0_READ_RATE_REG < 0) || (STACK1_CH7_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-374] STACK1_CH7_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH7_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_0_WRITE_RATE_REG < 0) || (STACK1_CH7_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-375] STACK1_CH7_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH7_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_1_PAGE_HIT_REG < 0) || (STACK1_CH7_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-376] STACK1_CH7_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH7_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH7_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-377] STACK1_CH7_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH7_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_1_READ_RATE_REG < 0) || (STACK1_CH7_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-378] STACK1_CH7_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH7_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_1_WRITE_RATE_REG < 0) || (STACK1_CH7_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-379] STACK1_CH7_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH7_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH7_DATA_RATE_REG < 0) || (STACK1_CH7_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-380] STACK1_CH7_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK1_CH7_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_0_PAGE_HIT_REG < 0) || (STACK1_CH8_0_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-381] STACK1_CH8_0_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH8_0_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_0_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH8_0_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-382] STACK1_CH8_0_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH8_0_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_0_READ_RATE_REG < 0) || (STACK1_CH8_0_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-383] STACK1_CH8_0_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH8_0_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_0_WRITE_RATE_REG < 0) || (STACK1_CH8_0_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-384] STACK1_CH8_0_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH8_0_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_1_PAGE_HIT_REG < 0) || (STACK1_CH8_1_PAGE_HIT_REG > 100))) begin
      $display("Error: [Unisim %s-385] STACK1_CH8_1_PAGE_HIT attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH8_1_PAGE_HIT_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_1_PHY_ACTIVE_REG != "ENABLED") &&
         (STACK1_CH8_1_PHY_ACTIVE_REG != "DISABLED"))) begin
      $display("Error: [Unisim %s-386] STACK1_CH8_1_PHY_ACTIVE attribute is set to %s.  Legal values for this attribute are ENABLED or DISABLED. Instance: %m", MODULE_NAME, STACK1_CH8_1_PHY_ACTIVE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_1_READ_RATE_REG < 0) || (STACK1_CH8_1_READ_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-387] STACK1_CH8_1_READ_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH8_1_READ_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_1_WRITE_RATE_REG < 0) || (STACK1_CH8_1_WRITE_RATE_REG > 100))) begin
      $display("Error: [Unisim %s-388] STACK1_CH8_1_WRITE_RATE attribute is set to %d.  Legal values for this attribute are 0 to 100. Instance: %m", MODULE_NAME, STACK1_CH8_1_WRITE_RATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((STACK1_CH8_DATA_RATE_REG < 0) || (STACK1_CH8_DATA_RATE_REG > 3200))) begin
      $display("Error: [Unisim %s-389] STACK1_CH8_DATA_RATE attribute is set to %d.  Legal values for this attribute are 0 to 3200. Instance: %m", MODULE_NAME, STACK1_CH8_DATA_RATE_REG);
      attr_err = 1'b1;
    end
    
    if (attr_err == 1'b1) #1 $finish;
  end
`endif



generate
if (SIM_MODEL_TYPE == "RTL") begin : generate_block1
  SIP_HBM_MC SIP_HBM_MC_INST (
    .HBMMC_AP_HINT_MODE (HBMMC_AP_HINT_MODE_REG),
    .HBMMC_CATTRIP (HBMMC_CATTRIP_REG),
    .HBMMC_CMD_PAR (HBMMC_CMD_PAR_REG),
    .HBMMC_CONFIG (HBMMC_CONFIG_REG),
    .HBMMC_DA28_LOCKOUT (HBMMC_DA28_LOCKOUT_REG),
    .HBMMC_DATA_ERROR_MODE (HBMMC_DATA_ERROR_MODE_REG),
    .HBMMC_DQ_RD_PAR (HBMMC_DQ_RD_PAR_REG),
    .HBMMC_DQ_WR_PAR (HBMMC_DQ_WR_PAR_REG),
    .HBMMC_DW_LOOPBACK (HBMMC_DW_LOOPBACK_REG),
    .HBMMC_DW_MISR (HBMMC_DW_MISR_REG),
    .HBMMC_DW_RD_MUX (HBMMC_DW_RD_MUX_REG),
    .HBMMC_ECC (HBMMC_ECC_REG),
    .HBMMC_ENTER_SELFREFRESH (HBMMC_ENTER_SELFREFRESH_REG),
    .HBMMC_IDLE_TIMEOUT (HBMMC_IDLE_TIMEOUT_REG),
    .HBMMC_IDLE_TIMEOUT_EN (HBMMC_IDLE_TIMEOUT_EN_REG),
    .HBMMC_INIT_START (HBMMC_INIT_START_REG),
    .HBMMC_INT_VREF (HBMMC_INT_VREF_REG),
    .HBMMC_MAX_PG_IDLE (HBMMC_MAX_PG_IDLE_REG),
    .HBMMC_MAX_SKIP_CNT (HBMMC_MAX_SKIP_CNT_REG),
    .HBMMC_MC_DBG_HALT (HBMMC_MC_DBG_HALT_REG),
    .HBMMC_MC_PM_CAPTURE_TIME (HBMMC_MC_PM_CAPTURE_TIME_REG),
    .HBMMC_MC_PM_EN (HBMMC_MC_PM_EN_REG),
    .HBMMC_NA0_BANKADDR_MAP_0 (HBMMC_NA0_BANKADDR_MAP_0_REG),
    .HBMMC_NA0_COLADDR_MAP_0 (HBMMC_NA0_COLADDR_MAP_0_REG),
    .HBMMC_NA0_COLADDR_MAP_1 (HBMMC_NA0_COLADDR_MAP_1_REG),
    .HBMMC_NA0_COLADDR_MAP_2 (HBMMC_NA0_COLADDR_MAP_2_REG),
    .HBMMC_NA0_EXMON_CLR_EXE_CFG_DYN_MCP3 (HBMMC_NA0_EXMON_CLR_EXE_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_JEDEC_DEVICE_CODE (HBMMC_NA0_JEDEC_DEVICE_CODE_REG),
    .HBMMC_NA0_NA_DEST_ID (HBMMC_NA0_NA_DEST_ID_REG),
    .HBMMC_NA0_NA_ERR_INJ (HBMMC_NA0_NA_ERR_INJ_REG),
    .HBMMC_NA0_NA_NSU_FORCE_ECC_FLIT_ERR (HBMMC_NA0_NA_NSU_FORCE_ECC_FLIT_ERR_REG),
    .HBMMC_NA0_NA_PM_FILTR_EN_P0 (HBMMC_NA0_NA_PM_FILTR_EN_P0_REG),
    .HBMMC_NA0_NA_PM_FILTR_EN_P1 (HBMMC_NA0_NA_PM_FILTR_EN_P1_REG),
    .HBMMC_NA0_NA_PM_FILTR_P0 (HBMMC_NA0_NA_PM_FILTR_P0_REG),
    .HBMMC_NA0_NA_PM_FILTR_P1 (HBMMC_NA0_NA_PM_FILTR_P1_REG),
    .HBMMC_NA0_NA_PM_SMID_FILTR_P0 (HBMMC_NA0_NA_PM_SMID_FILTR_P0_REG),
    .HBMMC_NA0_NA_PM_SMID_FILTR_P1 (HBMMC_NA0_NA_PM_SMID_FILTR_P1_REG),
    .HBMMC_NA0_NA_VC_MAP (HBMMC_NA0_NA_VC_MAP_REG),
    .HBMMC_NA0_PORT_CONTROL (HBMMC_NA0_PORT_CONTROL_REG),
    .HBMMC_NA0_RD_CMD_MODE_CFG_MCP (HBMMC_NA0_RD_CMD_MODE_CFG_MCP_REG),
    .HBMMC_NA0_ROWADDR_MAP_0 (HBMMC_NA0_ROWADDR_MAP_0_REG),
    .HBMMC_NA0_ROWADDR_MAP_1 (HBMMC_NA0_ROWADDR_MAP_1_REG),
    .HBMMC_NA0_ROWADDR_MAP_2 (HBMMC_NA0_ROWADDR_MAP_2_REG),
    .HBMMC_NA0_ROWADDR_MAP_3 (HBMMC_NA0_ROWADDR_MAP_3_REG),
    .HBMMC_NA0_SCRUB_END_ADDRESS (HBMMC_NA0_SCRUB_END_ADDRESS_REG),
    .HBMMC_NA0_SCRUB_FREQUENCY (HBMMC_NA0_SCRUB_FREQUENCY_REG),
    .HBMMC_NA0_SCRUB_INIT_EN (HBMMC_NA0_SCRUB_INIT_EN_REG),
    .HBMMC_NA0_SCRUB_START_ADDRESS (HBMMC_NA0_SCRUB_START_ADDRESS_REG),
    .HBMMC_NA0_TGC_CONFIG (HBMMC_NA0_TGC_CONFIG_REG),
    .HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP (HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP_REG),
    .HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP (HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP_REG),
    .HBMMC_NA0_XMPU_CONFIG0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_CONFIG0_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_CONFIG1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_CONFIG1_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_CTRL_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_CTRL_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_END_HI0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_END_HI0_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_END_HI1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_END_HI1_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_END_LO0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_END_LO0_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_END_LO1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_END_LO1_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_MASTER0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_MASTER0_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_MASTER1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_MASTER1_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_START_HI0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_START_HI0_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_START_HI1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_START_HI1_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_START_LO0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_START_LO0_CFG_DYN_MCP3_REG),
    .HBMMC_NA0_XMPU_START_LO1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_START_LO1_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_BANKADDR_MAP_0 (HBMMC_NA1_BANKADDR_MAP_0_REG),
    .HBMMC_NA1_COLADDR_MAP_0 (HBMMC_NA1_COLADDR_MAP_0_REG),
    .HBMMC_NA1_COLADDR_MAP_1 (HBMMC_NA1_COLADDR_MAP_1_REG),
    .HBMMC_NA1_COLADDR_MAP_2 (HBMMC_NA1_COLADDR_MAP_2_REG),
    .HBMMC_NA1_EXMON_CLR_EXE_CFG_DYN_MCP3 (HBMMC_NA1_EXMON_CLR_EXE_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_JEDEC_DEVICE_CODE (HBMMC_NA1_JEDEC_DEVICE_CODE_REG),
    .HBMMC_NA1_NA_DEST_ID (HBMMC_NA1_NA_DEST_ID_REG),
    .HBMMC_NA1_NA_ERR_INJ (HBMMC_NA1_NA_ERR_INJ_REG),
    .HBMMC_NA1_NA_NSU_FORCE_ECC_FLIT_ERR (HBMMC_NA1_NA_NSU_FORCE_ECC_FLIT_ERR_REG),
    .HBMMC_NA1_NA_PM_FILTR_EN_P0 (HBMMC_NA1_NA_PM_FILTR_EN_P0_REG),
    .HBMMC_NA1_NA_PM_FILTR_EN_P1 (HBMMC_NA1_NA_PM_FILTR_EN_P1_REG),
    .HBMMC_NA1_NA_PM_FILTR_P0 (HBMMC_NA1_NA_PM_FILTR_P0_REG),
    .HBMMC_NA1_NA_PM_FILTR_P1 (HBMMC_NA1_NA_PM_FILTR_P1_REG),
    .HBMMC_NA1_NA_PM_SMID_FILTR_P0 (HBMMC_NA1_NA_PM_SMID_FILTR_P0_REG),
    .HBMMC_NA1_NA_PM_SMID_FILTR_P1 (HBMMC_NA1_NA_PM_SMID_FILTR_P1_REG),
    .HBMMC_NA1_NA_VC_MAP (HBMMC_NA1_NA_VC_MAP_REG),
    .HBMMC_NA1_PORT_CONTROL (HBMMC_NA1_PORT_CONTROL_REG),
    .HBMMC_NA1_RD_CMD_MODE_CFG_MCP (HBMMC_NA1_RD_CMD_MODE_CFG_MCP_REG),
    .HBMMC_NA1_ROWADDR_MAP_0 (HBMMC_NA1_ROWADDR_MAP_0_REG),
    .HBMMC_NA1_ROWADDR_MAP_1 (HBMMC_NA1_ROWADDR_MAP_1_REG),
    .HBMMC_NA1_ROWADDR_MAP_2 (HBMMC_NA1_ROWADDR_MAP_2_REG),
    .HBMMC_NA1_ROWADDR_MAP_3 (HBMMC_NA1_ROWADDR_MAP_3_REG),
    .HBMMC_NA1_SCRUB_END_ADDRESS (HBMMC_NA1_SCRUB_END_ADDRESS_REG),
    .HBMMC_NA1_SCRUB_FREQUENCY (HBMMC_NA1_SCRUB_FREQUENCY_REG),
    .HBMMC_NA1_SCRUB_INIT_EN (HBMMC_NA1_SCRUB_INIT_EN_REG),
    .HBMMC_NA1_SCRUB_START_ADDRESS (HBMMC_NA1_SCRUB_START_ADDRESS_REG),
    .HBMMC_NA1_TGC_CONFIG (HBMMC_NA1_TGC_CONFIG_REG),
    .HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP (HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP_REG),
    .HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP (HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP_REG),
    .HBMMC_NA1_XMPU_CONFIG0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_CONFIG0_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_CONFIG1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_CONFIG1_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_CTRL_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_CTRL_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_END_HI0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_END_HI0_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_END_HI1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_END_HI1_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_END_LO0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_END_LO0_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_END_LO1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_END_LO1_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_MASTER0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_MASTER0_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_MASTER1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_MASTER1_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_START_HI0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_START_HI0_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_START_HI1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_START_HI1_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_START_LO0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_START_LO0_CFG_DYN_MCP3_REG),
    .HBMMC_NA1_XMPU_START_LO1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_START_LO1_CFG_DYN_MCP3_REG),
    .HBMMC_NDS (HBMMC_NDS_REG),
    .HBMMC_PL (HBMMC_PL_REG),
    .HBMMC_RCD_RD (HBMMC_RCD_RD_REG),
    .HBMMC_RCD_WR (HBMMC_RCD_WR_REG),
    .HBMMC_RD_DBI (HBMMC_RD_DBI_REG),
    .HBMMC_REFRESH_MODE (HBMMC_REFRESH_MODE_REG),
    .HBMMC_SCAN_VIA_BLI (HBMMC_SCAN_VIA_BLI_REG),
    .HBMMC_TCCDR (HBMMC_TCCDR_REG),
    .HBMMC_TCCD_L (HBMMC_TCCD_L_REG),
    .HBMMC_TCCD_S (HBMMC_TCCD_S_REG),
    .HBMMC_TCKESR (HBMMC_TCKESR_REG),
    .HBMMC_TCSR (HBMMC_TCSR_REG),
    .HBMMC_TEST_MODE (HBMMC_TEST_MODE_REG),
    .HBMMC_TFAW_L (HBMMC_TFAW_L_REG),
    .HBMMC_TFAW_S (HBMMC_TFAW_S_REG),
    .HBMMC_TINIT5 (HBMMC_TINIT5_REG),
    .HBMMC_TMOD (HBMMC_TMOD_REG),
    .HBMMC_TMRD (HBMMC_TMRD_REG),
    .HBMMC_TRAS (HBMMC_TRAS_REG),
    .HBMMC_TRC (HBMMC_TRC_REG),
    .HBMMC_TREFI (HBMMC_TREFI_REG),
    .HBMMC_TRFC (HBMMC_TRFC_REG),
    .HBMMC_TRFCSB (HBMMC_TRFCSB_REG),
    .HBMMC_TRL (HBMMC_TRL_REG),
    .HBMMC_TRP (HBMMC_TRP_REG),
    .HBMMC_TRR (HBMMC_TRR_REG),
    .HBMMC_TRRD_L (HBMMC_TRRD_L_REG),
    .HBMMC_TRRD_S (HBMMC_TRRD_S_REG),
    .HBMMC_TRREFD (HBMMC_TRREFD_REG),
    .HBMMC_TRTP (HBMMC_TRTP_REG),
    .HBMMC_TRTW (HBMMC_TRTW_REG),
    .HBMMC_TWL (HBMMC_TWL_REG),
    .HBMMC_TWTR_L (HBMMC_TWTR_L_REG),
    .HBMMC_TWTR_S (HBMMC_TWTR_S_REG),
    .HBMMC_TXP_XS (HBMMC_TXP_XS_REG),
    .HBMMC_WR (HBMMC_WR_REG),
    .HBMMC_WR_DBI (HBMMC_WR_DBI_REG),
    .HBMMC_WTP (HBMMC_WTP_REG),
  // .SIM_MODEL_TYPE (SIM_MODEL_TYPE_REG),
    .CH0_HBMMC_AW_CKE_MC_DFI_CMD (CH0_HBMMC_AW_CKE_MC_DFI_CMD_out),
    .CH0_HBMMC_AW_CK_MC_DFI_CMD (CH0_HBMMC_AW_CK_MC_DFI_CMD_out),
    .CH0_HBMMC_AW_COL_MC_DFI_CMD (CH0_HBMMC_AW_COL_MC_DFI_CMD_out),
    .CH0_HBMMC_AW_ROW_MC_DFI_CMD (CH0_HBMMC_AW_ROW_MC_DFI_CMD_out),
    .CH0_HBMMC_DW_DATA_DQS_MC_DFI_WR (CH0_HBMMC_DW_DATA_DQS_MC_DFI_WR_out),
    .CH0_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR (CH0_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR_out),
    .CH0_HBMMC_DW_DATA_MC_DFI_WR (CH0_HBMMC_DW_DATA_MC_DFI_WR_out),
    .CH0_HBMMC_DW_DBI_MC_DFI_WR (CH0_HBMMC_DW_DBI_MC_DFI_WR_out),
    .CH0_HBMMC_DW_MASK_MC_DFI_WR (CH0_HBMMC_DW_MASK_MC_DFI_WR_out),
    .CH0_HBMMC_DW_PAR_EN_MC_DFI_WR (CH0_HBMMC_DW_PAR_EN_MC_DFI_WR_out),
    .CH0_HBMMC_DW_PAR_MC_DFI_WR (CH0_HBMMC_DW_PAR_MC_DFI_WR_out),
  // .CH0_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT (CH0_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT_out),
  // .CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN (CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN_out),
  // .CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN (CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN_out),
  // .CH0_HBMMC_NOC_FLIT_EN_MC_NOCOUT (CH0_HBMMC_NOC_FLIT_EN_MC_NOCOUT_out),
  // .CH0_HBMMC_NOC_FLIT_MC_NOCOUT (CH0_HBMMC_NOC_FLIT_MC_NOCOUT_out),
  // .CH0_HBMMC_NOC_PDEST_ID_MC_NOCOUT (CH0_HBMMC_NOC_PDEST_ID_MC_NOCOUT_out),
  // .CH0_HBMMC_NOC_VALID_EN_MC_NOCOUT (CH0_HBMMC_NOC_VALID_EN_MC_NOCOUT_out),
  // .CH0_HBMMC_NOC_VALID_MC_NOCOUT (CH0_HBMMC_NOC_VALID_MC_NOCOUT_out),
    .CH1_HBMMC_AW_CKE_MC_DFI_CMD (CH1_HBMMC_AW_CKE_MC_DFI_CMD_out),
    .CH1_HBMMC_AW_CK_MC_DFI_CMD (CH1_HBMMC_AW_CK_MC_DFI_CMD_out),
    .CH1_HBMMC_AW_COL_MC_DFI_CMD (CH1_HBMMC_AW_COL_MC_DFI_CMD_out),
    .CH1_HBMMC_AW_ROW_MC_DFI_CMD (CH1_HBMMC_AW_ROW_MC_DFI_CMD_out),
    .CH1_HBMMC_DW_DATA_DQS_MC_DFI_WR (CH1_HBMMC_DW_DATA_DQS_MC_DFI_WR_out),
    .CH1_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR (CH1_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR_out),
    .CH1_HBMMC_DW_DATA_MC_DFI_WR (CH1_HBMMC_DW_DATA_MC_DFI_WR_out),
    .CH1_HBMMC_DW_DBI_MC_DFI_WR (CH1_HBMMC_DW_DBI_MC_DFI_WR_out),
    .CH1_HBMMC_DW_MASK_MC_DFI_WR (CH1_HBMMC_DW_MASK_MC_DFI_WR_out),
    .CH1_HBMMC_DW_PAR_EN_MC_DFI_WR (CH1_HBMMC_DW_PAR_EN_MC_DFI_WR_out),
    .CH1_HBMMC_DW_PAR_MC_DFI_WR (CH1_HBMMC_DW_PAR_MC_DFI_WR_out),
   //.CH1_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT (CH1_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT_out),
   //.CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN (CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN_out),
   //.CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN (CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN_out),
   //.CH1_HBMMC_NOC_FLIT_EN_MC_NOCOUT (CH1_HBMMC_NOC_FLIT_EN_MC_NOCOUT_out),
   //.CH1_HBMMC_NOC_FLIT_MC_NOCOUT (CH1_HBMMC_NOC_FLIT_MC_NOCOUT_out),
   //.CH1_HBMMC_NOC_PDEST_ID_MC_NOCOUT (CH1_HBMMC_NOC_PDEST_ID_MC_NOCOUT_out),
   //.CH1_HBMMC_NOC_VALID_EN_MC_NOCOUT (CH1_HBMMC_NOC_VALID_EN_MC_NOCOUT_out),
   //.CH1_HBMMC_NOC_VALID_MC_NOCOUT (CH1_HBMMC_NOC_VALID_MC_NOCOUT_out),
   //.CH2_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT (CH2_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT_out),
   //.CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN (CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN_out),
   //.CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN (CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN_out),
   //.CH2_HBMMC_NOC_FLIT_EN_MC_NOCOUT (CH2_HBMMC_NOC_FLIT_EN_MC_NOCOUT_out),
   //.CH2_HBMMC_NOC_FLIT_MC_NOCOUT (CH2_HBMMC_NOC_FLIT_MC_NOCOUT_out),
   //.CH2_HBMMC_NOC_PDEST_ID_MC_NOCOUT (CH2_HBMMC_NOC_PDEST_ID_MC_NOCOUT_out),
   //.CH2_HBMMC_NOC_VALID_EN_MC_NOCOUT (CH2_HBMMC_NOC_VALID_EN_MC_NOCOUT_out),
   //.CH2_HBMMC_NOC_VALID_MC_NOCOUT (CH2_HBMMC_NOC_VALID_MC_NOCOUT_out),
   //.CH3_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT (CH3_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT_out),
   //.CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN (CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN_out),
   //.CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN (CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN_out),
   //.CH3_HBMMC_NOC_FLIT_EN_MC_NOCOUT (CH3_HBMMC_NOC_FLIT_EN_MC_NOCOUT_out),
   //.CH3_HBMMC_NOC_FLIT_MC_NOCOUT (CH3_HBMMC_NOC_FLIT_MC_NOCOUT_out),
   //.CH3_HBMMC_NOC_PDEST_ID_MC_NOCOUT (CH3_HBMMC_NOC_PDEST_ID_MC_NOCOUT_out),
   //.CH3_HBMMC_NOC_VALID_EN_MC_NOCOUT (CH3_HBMMC_NOC_VALID_EN_MC_NOCOUT_out),
   //.CH3_HBMMC_NOC_VALID_MC_NOCOUT (CH3_HBMMC_NOC_VALID_MC_NOCOUT_out),
    .HBMMC_AW_CK_DIS (HBMMC_AW_CK_DIS_out),
    .HBMMC_AW_TX_INDX_LD (HBMMC_AW_TX_INDX_LD_out),
    .HBMMC_CTRLUPD_REQ (HBMMC_CTRLUPD_REQ_out),
    .HBMMC_DFI_CLK_OUT (HBMMC_DFI_CLK_OUT_out),
    .HBMMC_DW_RX_INDX_LD (HBMMC_DW_RX_INDX_LD_out),
    .HBMMC_DW_TX_INDX_LD (HBMMC_DW_TX_INDX_LD_out),
    .HBMMC_INIT_START_DFI_MISC (HBMMC_INIT_START_DFI_MISC_out),
    .HBMMC_LP_PWR_E_REQ (HBMMC_LP_PWR_E_REQ_out),
    .HBMMC_LP_PWR_X_REQ (HBMMC_LP_PWR_X_REQ_out),
    .HBMMC_LP_SR_E_REQ (HBMMC_LP_SR_E_REQ_out),
    .HBMMC_PHYUPD_ACK (HBMMC_PHYUPD_ACK_out),
    .TO_NOC_0 (TO_NOC_0_out),
    .TO_NOC_1 (TO_NOC_1_out),
    .TO_NOC_2 (TO_NOC_2_out),
    .TO_NOC_3 (TO_NOC_3_out),
    .CH0_HBMMC_DW_DATA_MC_DFI_RD (CH0_HBMMC_DW_DATA_MC_DFI_RD_in),
    .CH0_HBMMC_DW_DBI_MC_DFI_RD (CH0_HBMMC_DW_DBI_MC_DFI_RD_in),
    .CH0_HBMMC_DW_MASK_MC_DFI_RD (CH0_HBMMC_DW_MASK_MC_DFI_RD_in),
    .CH0_HBMMC_DW_PAR_MC_DFI_RD (CH0_HBMMC_DW_PAR_MC_DFI_RD_in),
    .CH0_HBMMC_DW_RDDATA_VALID_MC_DFI_RD (CH0_HBMMC_DW_RDDATA_VALID_MC_DFI_RD_in),
    .CH0_HBMMC_DW_WDATA_DERR_MC_DFI_WR (CH0_HBMMC_DW_WDATA_DERR_MC_DFI_WR_in),
//   .CH0_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN (CH0_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in),
//   .CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT (CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in),
//   .CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT (CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in),
//   .CH0_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN (CH0_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in),
//   .CH0_HBMMC_NOC_FLIT_MC_NOC2MC_IN (CH0_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in),
//   .CH0_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN (CH0_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in),
//   .CH0_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN (CH0_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in),
//   .CH0_HBMMC_NOC_VALID_MC_NOC2MC_IN (CH0_HBMMC_NOC_VALID_MC_NOC2MC_IN_in),
    .CH1_HBMMC_DW_DATA_MC_DFI_RD (CH1_HBMMC_DW_DATA_MC_DFI_RD_in),
    .CH1_HBMMC_DW_DBI_MC_DFI_RD (CH1_HBMMC_DW_DBI_MC_DFI_RD_in),
    .CH1_HBMMC_DW_MASK_MC_DFI_RD (CH1_HBMMC_DW_MASK_MC_DFI_RD_in),
    .CH1_HBMMC_DW_PAR_MC_DFI_RD (CH1_HBMMC_DW_PAR_MC_DFI_RD_in),
    .CH1_HBMMC_DW_RDDATA_VALID_MC_DFI_RD (CH1_HBMMC_DW_RDDATA_VALID_MC_DFI_RD_in),
    .CH1_HBMMC_DW_WDATA_DERR_MC_DFI_WR (CH1_HBMMC_DW_WDATA_DERR_MC_DFI_WR_in),
 //  .CH1_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN (CH1_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in),
 //  .CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT (CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in),
 //  .CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT (CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in),
 //  .CH1_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN (CH1_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in),
 //  .CH1_HBMMC_NOC_FLIT_MC_NOC2MC_IN (CH1_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in),
 //  .CH1_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN (CH1_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in),
 //  .CH1_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN (CH1_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in),
 //  .CH1_HBMMC_NOC_VALID_MC_NOC2MC_IN (CH1_HBMMC_NOC_VALID_MC_NOC2MC_IN_in),
 //  .CH2_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN (CH2_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in),
 //  .CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT (CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in),
 //  .CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT (CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in),
 //  .CH2_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN (CH2_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in),
 //  .CH2_HBMMC_NOC_FLIT_MC_NOC2MC_IN (CH2_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in),
 //  .CH2_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN (CH2_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in),
 //  .CH2_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN (CH2_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in),
 //  .CH2_HBMMC_NOC_VALID_MC_NOC2MC_IN (CH2_HBMMC_NOC_VALID_MC_NOC2MC_IN_in),
 //  .CH3_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN (CH3_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN_in),
 //  .CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT (CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT_in),
 //  .CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT (CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT_in),
 //  .CH3_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN (CH3_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN_in),
 //  .CH3_HBMMC_NOC_FLIT_MC_NOC2MC_IN (CH3_HBMMC_NOC_FLIT_MC_NOC2MC_IN_in),
 //  .CH3_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN (CH3_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN_in),
 //  .CH3_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN (CH3_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN_in),
 //  .CH3_HBMMC_NOC_VALID_MC_NOC2MC_IN (CH3_HBMMC_NOC_VALID_MC_NOC2MC_IN_in),
    .FROM_NOC_0 (FROM_NOC_0_in),
    .FROM_NOC_1 (FROM_NOC_1_in),
    .FROM_NOC_2 (FROM_NOC_2_in),
    .FROM_NOC_3 (FROM_NOC_3_in),
    .HBMMC_AW_AERR_N (HBMMC_AW_AERR_N_in),
    .HBMMC_CATTRIP_DFI_MISC (HBMMC_CATTRIP_DFI_MISC_in),
    .HBMMC_CTRLUPD_ACK (HBMMC_CTRLUPD_ACK_in),
    .HBMMC_DFI_CLK (HBMMC_DFI_CLK_in),
    .HBMMC_DFI_RESET_N (HBMMC_DFI_RESET_N_in),
    .HBMMC_DW_DBI_BYTE_DISABLE (HBMMC_DW_DBI_BYTE_DISABLE_in),
//    .HBMMC_GBL_REF_RESET_N (HBMMC_GBL_REF_RESET_N_in),
    .HBMMC_INIT_COMPLETE (HBMMC_INIT_COMPLETE_in),
    .HBMMC_NOC_RST_N_MC_GL (HBMMC_NOC_RST_N_MC_GL_in),
    .HBMMC_NPI_CLK_MC_GL (HBMMC_NPI_CLK_MC_GL_in),
    .HBMMC_PHYUPD_REQ (HBMMC_PHYUPD_REQ_in),
    .HBMMC_PHY_LP_STATE (HBMMC_PHY_LP_STATE_in),
    .HBMMC_SPARE_MC_GL (HBMMC_SPARE_MC_GL_in),
    .HBMMC_SYS_RST1_N_MC_GL (HBMMC_SYS_RST1_N_MC_GL_in),
    .HBMMC_SYS_RST2_N_MC_GL (HBMMC_SYS_RST2_N_MC_GL_in),
    .HBMMC_SYS_RST3_N_MC_GL (HBMMC_SYS_RST3_N_MC_GL_in),
    .HBMMC_TEMP (HBMMC_TEMP_in),
    .HBMMC_TRAINING_COMPLETE (HBMMC_TRAINING_COMPLETE_in),
    .GSR (glblGSR)
  );

end else if(SIM_MODEL_TYPE == "BFM") begin: generate_block1
  BM_HBM_MC #(
      .HBMMC_AP_HINT_MODE (HBMMC_AP_HINT_MODE),
      .HBMMC_CATTRIP (HBMMC_CATTRIP),
      .HBMMC_CMD_PAR (HBMMC_CMD_PAR),
      .HBMMC_CONFIG (HBMMC_CONFIG),
      .HBMMC_DA28_LOCKOUT (HBMMC_DA28_LOCKOUT),
      .HBMMC_DATA_ERROR_MODE (HBMMC_DATA_ERROR_MODE),
      .HBMMC_DQ_RD_PAR (HBMMC_DQ_RD_PAR),
      .HBMMC_DQ_WR_PAR (HBMMC_DQ_WR_PAR),
      .HBMMC_DW_LOOPBACK (HBMMC_DW_LOOPBACK),
      .HBMMC_DW_MISR (HBMMC_DW_MISR),
      .HBMMC_DW_RD_MUX (HBMMC_DW_RD_MUX),
      .HBMMC_ECC (HBMMC_ECC),
      .HBMMC_ENTER_SELFREFRESH (HBMMC_ENTER_SELFREFRESH),
      .HBMMC_IDLE_TIMEOUT (HBMMC_IDLE_TIMEOUT),
      .HBMMC_IDLE_TIMEOUT_EN (HBMMC_IDLE_TIMEOUT_EN),
      .HBMMC_INIT_START (HBMMC_INIT_START),
      .HBMMC_INT_VREF (HBMMC_INT_VREF),
      .HBMMC_MAX_PG_IDLE (HBMMC_MAX_PG_IDLE),
      .HBMMC_MAX_SKIP_CNT (HBMMC_MAX_SKIP_CNT),
      .HBMMC_MC_DBG_HALT (HBMMC_MC_DBG_HALT),
      .HBMMC_MC_PM_CAPTURE_TIME (HBMMC_MC_PM_CAPTURE_TIME),
      .HBMMC_MC_PM_EN (HBMMC_MC_PM_EN),
      .HBMMC_NA0_BANKADDR_MAP_0 (HBMMC_NA0_BANKADDR_MAP_0),
      .HBMMC_NA0_COLADDR_MAP_0 (HBMMC_NA0_COLADDR_MAP_0),
      .HBMMC_NA0_COLADDR_MAP_1 (HBMMC_NA0_COLADDR_MAP_1),
      .HBMMC_NA0_COLADDR_MAP_2 (HBMMC_NA0_COLADDR_MAP_2),
      .HBMMC_NA0_EXMON_CLR_EXE_CFG_DYN_MCP3 (HBMMC_NA0_EXMON_CLR_EXE_CFG_DYN_MCP3),
      .HBMMC_NA0_JEDEC_DEVICE_CODE (HBMMC_NA0_JEDEC_DEVICE_CODE),
      .HBMMC_NA0_NA_DEST_ID (HBMMC_NA0_NA_DEST_ID),
      .HBMMC_NA0_NA_ERR_INJ (HBMMC_NA0_NA_ERR_INJ),
      .HBMMC_NA0_NA_NSU_FORCE_ECC_FLIT_ERR (HBMMC_NA0_NA_NSU_FORCE_ECC_FLIT_ERR),
      .HBMMC_NA0_NA_PM_FILTR_EN_P0 (HBMMC_NA0_NA_PM_FILTR_EN_P0),
      .HBMMC_NA0_NA_PM_FILTR_EN_P1 (HBMMC_NA0_NA_PM_FILTR_EN_P1),
      .HBMMC_NA0_NA_PM_FILTR_P0 (HBMMC_NA0_NA_PM_FILTR_P0),
      .HBMMC_NA0_NA_PM_FILTR_P1 (HBMMC_NA0_NA_PM_FILTR_P1),
      .HBMMC_NA0_NA_PM_SMID_FILTR_P0 (HBMMC_NA0_NA_PM_SMID_FILTR_P0),
      .HBMMC_NA0_NA_PM_SMID_FILTR_P1 (HBMMC_NA0_NA_PM_SMID_FILTR_P1),
      .HBMMC_NA0_NA_VC_MAP (HBMMC_NA0_NA_VC_MAP),
      .HBMMC_NA0_PORT_CONTROL (HBMMC_NA0_PORT_CONTROL),
      .HBMMC_NA0_RD_CMD_MODE_CFG_MCP (HBMMC_NA0_RD_CMD_MODE_CFG_MCP),
      .HBMMC_NA0_ROWADDR_MAP_0 (HBMMC_NA0_ROWADDR_MAP_0),
      .HBMMC_NA0_ROWADDR_MAP_1 (HBMMC_NA0_ROWADDR_MAP_1),
      .HBMMC_NA0_ROWADDR_MAP_2 (HBMMC_NA0_ROWADDR_MAP_2),
      .HBMMC_NA0_ROWADDR_MAP_3 (HBMMC_NA0_ROWADDR_MAP_3),
      .HBMMC_NA0_SCRUB_END_ADDRESS (HBMMC_NA0_SCRUB_END_ADDRESS),
      .HBMMC_NA0_SCRUB_FREQUENCY (HBMMC_NA0_SCRUB_FREQUENCY),
      .HBMMC_NA0_SCRUB_INIT_EN (HBMMC_NA0_SCRUB_INIT_EN),
      .HBMMC_NA0_SCRUB_START_ADDRESS (HBMMC_NA0_SCRUB_START_ADDRESS),
      .HBMMC_NA0_TGC_CONFIG (HBMMC_NA0_TGC_CONFIG),
      .HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP (HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP),
      .HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP (HBMMC_NA0_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP),
      .HBMMC_NA0_XMPU_CONFIG0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_CONFIG0_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_CONFIG1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_CONFIG1_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_CTRL_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_CTRL_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_END_HI0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_END_HI0_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_END_HI1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_END_HI1_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_END_LO0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_END_LO0_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_END_LO1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_END_LO1_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_MASTER0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_MASTER0_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_MASTER1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_MASTER1_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_START_HI0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_START_HI0_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_START_HI1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_START_HI1_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_START_LO0_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_START_LO0_CFG_DYN_MCP3),
      .HBMMC_NA0_XMPU_START_LO1_CFG_DYN_MCP3 (HBMMC_NA0_XMPU_START_LO1_CFG_DYN_MCP3),
      .HBMMC_NA1_BANKADDR_MAP_0 (HBMMC_NA1_BANKADDR_MAP_0),
      .HBMMC_NA1_COLADDR_MAP_0 (HBMMC_NA1_COLADDR_MAP_0),
      .HBMMC_NA1_COLADDR_MAP_1 (HBMMC_NA1_COLADDR_MAP_1),
      .HBMMC_NA1_COLADDR_MAP_2 (HBMMC_NA1_COLADDR_MAP_2),
      .HBMMC_NA1_EXMON_CLR_EXE_CFG_DYN_MCP3 (HBMMC_NA1_EXMON_CLR_EXE_CFG_DYN_MCP3),
      .HBMMC_NA1_JEDEC_DEVICE_CODE (HBMMC_NA1_JEDEC_DEVICE_CODE),
      .HBMMC_NA1_NA_DEST_ID (HBMMC_NA1_NA_DEST_ID),
      .HBMMC_NA1_NA_ERR_INJ (HBMMC_NA1_NA_ERR_INJ),
      .HBMMC_NA1_NA_NSU_FORCE_ECC_FLIT_ERR (HBMMC_NA1_NA_NSU_FORCE_ECC_FLIT_ERR),
      .HBMMC_NA1_NA_PM_FILTR_EN_P0 (HBMMC_NA1_NA_PM_FILTR_EN_P0),
      .HBMMC_NA1_NA_PM_FILTR_EN_P1 (HBMMC_NA1_NA_PM_FILTR_EN_P1),
      .HBMMC_NA1_NA_PM_FILTR_P0 (HBMMC_NA1_NA_PM_FILTR_P0),
      .HBMMC_NA1_NA_PM_FILTR_P1 (HBMMC_NA1_NA_PM_FILTR_P1),
      .HBMMC_NA1_NA_PM_SMID_FILTR_P0 (HBMMC_NA1_NA_PM_SMID_FILTR_P0),
      .HBMMC_NA1_NA_PM_SMID_FILTR_P1 (HBMMC_NA1_NA_PM_SMID_FILTR_P1),
      .HBMMC_NA1_NA_VC_MAP (HBMMC_NA1_NA_VC_MAP),
      .HBMMC_NA1_PORT_CONTROL (HBMMC_NA1_PORT_CONTROL),
      .HBMMC_NA1_RD_CMD_MODE_CFG_MCP (HBMMC_NA1_RD_CMD_MODE_CFG_MCP),
      .HBMMC_NA1_ROWADDR_MAP_0 (HBMMC_NA1_ROWADDR_MAP_0),
      .HBMMC_NA1_ROWADDR_MAP_1 (HBMMC_NA1_ROWADDR_MAP_1),
      .HBMMC_NA1_ROWADDR_MAP_2 (HBMMC_NA1_ROWADDR_MAP_2),
      .HBMMC_NA1_ROWADDR_MAP_3 (HBMMC_NA1_ROWADDR_MAP_3),
      .HBMMC_NA1_SCRUB_END_ADDRESS (HBMMC_NA1_SCRUB_END_ADDRESS),
      .HBMMC_NA1_SCRUB_FREQUENCY (HBMMC_NA1_SCRUB_FREQUENCY),
      .HBMMC_NA1_SCRUB_INIT_EN (HBMMC_NA1_SCRUB_INIT_EN),
      .HBMMC_NA1_SCRUB_START_ADDRESS (HBMMC_NA1_SCRUB_START_ADDRESS),
      .HBMMC_NA1_TGC_CONFIG (HBMMC_NA1_TGC_CONFIG),
      .HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP (HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_ENABLE_CFG_MCP),
      .HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP (HBMMC_NA1_WRCMD_PIPELINE_TIMEOUT_VALUE_CFG_MCP),
      .HBMMC_NA1_XMPU_CONFIG0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_CONFIG0_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_CONFIG1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_CONFIG1_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_CTRL_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_CTRL_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_END_HI0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_END_HI0_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_END_HI1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_END_HI1_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_END_LO0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_END_LO0_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_END_LO1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_END_LO1_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_MASTER0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_MASTER0_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_MASTER1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_MASTER1_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_START_HI0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_START_HI0_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_START_HI1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_START_HI1_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_START_LO0_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_START_LO0_CFG_DYN_MCP3),
      .HBMMC_NA1_XMPU_START_LO1_CFG_DYN_MCP3 (HBMMC_NA1_XMPU_START_LO1_CFG_DYN_MCP3),
      .HBMMC_NDS (HBMMC_NDS),
      .HBMMC_PL (HBMMC_PL),
      .HBMMC_RCD_RD (HBMMC_RCD_RD),
      .HBMMC_RCD_WR (HBMMC_RCD_WR),
      .HBMMC_RD_DBI (HBMMC_RD_DBI),
      .HBMMC_REFRESH_MODE (HBMMC_REFRESH_MODE),
      .HBMMC_SCAN_VIA_BLI (HBMMC_SCAN_VIA_BLI),
      .HBMMC_TCCDR (HBMMC_TCCDR),
      .HBMMC_TCCD_L (HBMMC_TCCD_L),
      .HBMMC_TCCD_S (HBMMC_TCCD_S),
      .HBMMC_TCKESR (HBMMC_TCKESR),
      .HBMMC_TCSR (HBMMC_TCSR),
      .HBMMC_TEST_MODE (HBMMC_TEST_MODE),
      .HBMMC_TFAW_L (HBMMC_TFAW_L),
      .HBMMC_TFAW_S (HBMMC_TFAW_S),
      .HBMMC_TINIT5 (HBMMC_TINIT5),
      .HBMMC_TMOD (HBMMC_TMOD),
      .HBMMC_TMRD (HBMMC_TMRD),
      .HBMMC_TRAS (HBMMC_TRAS),
      .HBMMC_TRC (HBMMC_TRC),
      .HBMMC_TREFI (HBMMC_TREFI),
      .HBMMC_TRFC (HBMMC_TRFC),
      .HBMMC_TRFCSB (HBMMC_TRFCSB),
      .HBMMC_TRL (HBMMC_TRL),
      .HBMMC_TRP (HBMMC_TRP),
      .HBMMC_TRR (HBMMC_TRR),
      .HBMMC_TRRD_L (HBMMC_TRRD_L),
      .HBMMC_TRRD_S (HBMMC_TRRD_S),
      .HBMMC_TRREFD (HBMMC_TRREFD),
      .HBMMC_TRTP (HBMMC_TRTP),
      .HBMMC_TRTW (HBMMC_TRTW),
      .HBMMC_TWL (HBMMC_TWL),
      .HBMMC_TWTR_L (HBMMC_TWTR_L),
      .HBMMC_TWTR_S (HBMMC_TWTR_S),
      .HBMMC_TXP_XS (HBMMC_TXP_XS),
      .HBMMC_WR (HBMMC_WR),
      .HBMMC_WR_DBI (HBMMC_WR_DBI),
      .HBMMC_WTP (HBMMC_WTP)
) BM_HBM_MC_INST (
      .CH0_HBMMC_AW_CKE_MC_DFI_CMD (CH0_HBMMC_AW_CKE_MC_DFI_CMD),
      .CH0_HBMMC_AW_CK_MC_DFI_CMD (CH0_HBMMC_AW_CK_MC_DFI_CMD),
      .CH0_HBMMC_AW_COL_MC_DFI_CMD (CH0_HBMMC_AW_COL_MC_DFI_CMD),
      .CH0_HBMMC_AW_ROW_MC_DFI_CMD (CH0_HBMMC_AW_ROW_MC_DFI_CMD),
      .CH0_HBMMC_DW_DATA_DQS_MC_DFI_WR (CH0_HBMMC_DW_DATA_DQS_MC_DFI_WR),
      .CH0_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR (CH0_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR),
      .CH0_HBMMC_DW_DATA_MC_DFI_WR (CH0_HBMMC_DW_DATA_MC_DFI_WR),
      .CH0_HBMMC_DW_DBI_MC_DFI_WR (CH0_HBMMC_DW_DBI_MC_DFI_WR),
      .CH0_HBMMC_DW_MASK_MC_DFI_WR (CH0_HBMMC_DW_MASK_MC_DFI_WR),
      .CH0_HBMMC_DW_PAR_EN_MC_DFI_WR (CH0_HBMMC_DW_PAR_EN_MC_DFI_WR),
      .CH0_HBMMC_DW_PAR_MC_DFI_WR (CH0_HBMMC_DW_PAR_MC_DFI_WR),
      .CH0_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT (CH0_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT),
      .CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN (CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN),
      .CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN (CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN),
      .CH0_HBMMC_NOC_FLIT_EN_MC_NOCOUT (CH0_HBMMC_NOC_FLIT_EN_MC_NOCOUT),
      .CH0_HBMMC_NOC_FLIT_MC_NOCOUT (CH0_HBMMC_NOC_FLIT_MC_NOCOUT),
      .CH0_HBMMC_NOC_PDEST_ID_MC_NOCOUT (CH0_HBMMC_NOC_PDEST_ID_MC_NOCOUT),
      .CH0_HBMMC_NOC_VALID_EN_MC_NOCOUT (CH0_HBMMC_NOC_VALID_EN_MC_NOCOUT),
      .CH0_HBMMC_NOC_VALID_MC_NOCOUT (CH0_HBMMC_NOC_VALID_MC_NOCOUT),
      .CH1_HBMMC_AW_CKE_MC_DFI_CMD (CH1_HBMMC_AW_CKE_MC_DFI_CMD),
      .CH1_HBMMC_AW_CK_MC_DFI_CMD (CH1_HBMMC_AW_CK_MC_DFI_CMD),
      .CH1_HBMMC_AW_COL_MC_DFI_CMD (CH1_HBMMC_AW_COL_MC_DFI_CMD),
      .CH1_HBMMC_AW_ROW_MC_DFI_CMD (CH1_HBMMC_AW_ROW_MC_DFI_CMD),
      .CH1_HBMMC_DW_DATA_DQS_MC_DFI_WR (CH1_HBMMC_DW_DATA_DQS_MC_DFI_WR),
      .CH1_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR (CH1_HBMMC_DW_DATA_DQ_EN_MC_DFI_WR),
      .CH1_HBMMC_DW_DATA_MC_DFI_WR (CH1_HBMMC_DW_DATA_MC_DFI_WR),
      .CH1_HBMMC_DW_DBI_MC_DFI_WR (CH1_HBMMC_DW_DBI_MC_DFI_WR),
      .CH1_HBMMC_DW_MASK_MC_DFI_WR (CH1_HBMMC_DW_MASK_MC_DFI_WR),
      .CH1_HBMMC_DW_PAR_EN_MC_DFI_WR (CH1_HBMMC_DW_PAR_EN_MC_DFI_WR),
      .CH1_HBMMC_DW_PAR_MC_DFI_WR (CH1_HBMMC_DW_PAR_MC_DFI_WR),
      .CH1_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT (CH1_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT),
      .CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN (CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN),
      .CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN (CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN),
      .CH1_HBMMC_NOC_FLIT_EN_MC_NOCOUT (CH1_HBMMC_NOC_FLIT_EN_MC_NOCOUT),
      .CH1_HBMMC_NOC_FLIT_MC_NOCOUT (CH1_HBMMC_NOC_FLIT_MC_NOCOUT),
      .CH1_HBMMC_NOC_PDEST_ID_MC_NOCOUT (CH1_HBMMC_NOC_PDEST_ID_MC_NOCOUT),
      .CH1_HBMMC_NOC_VALID_EN_MC_NOCOUT (CH1_HBMMC_NOC_VALID_EN_MC_NOCOUT),
      .CH1_HBMMC_NOC_VALID_MC_NOCOUT (CH1_HBMMC_NOC_VALID_MC_NOCOUT),
      .CH2_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT (CH2_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT),
      .CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN (CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN),
      .CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN (CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN),
      .CH2_HBMMC_NOC_FLIT_EN_MC_NOCOUT (CH2_HBMMC_NOC_FLIT_EN_MC_NOCOUT),
      .CH2_HBMMC_NOC_FLIT_MC_NOCOUT (CH2_HBMMC_NOC_FLIT_MC_NOCOUT),
      .CH2_HBMMC_NOC_PDEST_ID_MC_NOCOUT (CH2_HBMMC_NOC_PDEST_ID_MC_NOCOUT),
      .CH2_HBMMC_NOC_VALID_EN_MC_NOCOUT (CH2_HBMMC_NOC_VALID_EN_MC_NOCOUT),
      .CH2_HBMMC_NOC_VALID_MC_NOCOUT (CH2_HBMMC_NOC_VALID_MC_NOCOUT),
      .CH3_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT (CH3_HBMMC_NOC_CREDIT_RDY_MC_NOCOUT),
      .CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN (CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOC2MC_IN),
      .CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN (CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOC2MC_IN),
      .CH3_HBMMC_NOC_FLIT_EN_MC_NOCOUT (CH3_HBMMC_NOC_FLIT_EN_MC_NOCOUT),
      .CH3_HBMMC_NOC_FLIT_MC_NOCOUT (CH3_HBMMC_NOC_FLIT_MC_NOCOUT),
      .CH3_HBMMC_NOC_PDEST_ID_MC_NOCOUT (CH3_HBMMC_NOC_PDEST_ID_MC_NOCOUT),
      .CH3_HBMMC_NOC_VALID_EN_MC_NOCOUT (CH3_HBMMC_NOC_VALID_EN_MC_NOCOUT),
      .CH3_HBMMC_NOC_VALID_MC_NOCOUT (CH3_HBMMC_NOC_VALID_MC_NOCOUT),
      .HBMMC_AW_CK_DIS (HBMMC_AW_CK_DIS),
      .HBMMC_AW_TX_INDX_LD (HBMMC_AW_TX_INDX_LD),
      .HBMMC_CTRLUPD_REQ (HBMMC_CTRLUPD_REQ),
      .HBMMC_DFI_CLK_OUT (HBMMC_DFI_CLK_OUT),
      .HBMMC_DW_RX_INDX_LD (HBMMC_DW_RX_INDX_LD),
      .HBMMC_DW_TX_INDX_LD (HBMMC_DW_TX_INDX_LD),
      .HBMMC_INIT_START_DFI_MISC (HBMMC_INIT_START_DFI_MISC),
      .HBMMC_LP_PWR_E_REQ (HBMMC_LP_PWR_E_REQ),
      .HBMMC_LP_PWR_X_REQ (HBMMC_LP_PWR_X_REQ),
      .HBMMC_LP_SR_E_REQ (HBMMC_LP_SR_E_REQ),
      .HBMMC_PHYUPD_ACK (HBMMC_PHYUPD_ACK),
      .TO_NOC_0 (TO_NOC_0),
      .TO_NOC_1 (TO_NOC_1),
      .TO_NOC_2 (TO_NOC_2),
      .TO_NOC_3 (TO_NOC_3),
      .CH0_HBMMC_DW_DATA_MC_DFI_RD (CH0_HBMMC_DW_DATA_MC_DFI_RD),
      .CH0_HBMMC_DW_DBI_MC_DFI_RD (CH0_HBMMC_DW_DBI_MC_DFI_RD),
      .CH0_HBMMC_DW_MASK_MC_DFI_RD (CH0_HBMMC_DW_MASK_MC_DFI_RD),
      .CH0_HBMMC_DW_PAR_MC_DFI_RD (CH0_HBMMC_DW_PAR_MC_DFI_RD),
      .CH0_HBMMC_DW_RDDATA_VALID_MC_DFI_RD (CH0_HBMMC_DW_RDDATA_VALID_MC_DFI_RD),
      .CH0_HBMMC_DW_WDATA_DERR_MC_DFI_WR (CH0_HBMMC_DW_WDATA_DERR_MC_DFI_WR),
      .CH0_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN (CH0_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN),
      .CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT (CH0_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT),
      .CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT (CH0_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT),
      .CH0_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN (CH0_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN),
      .CH0_HBMMC_NOC_FLIT_MC_NOC2MC_IN (CH0_HBMMC_NOC_FLIT_MC_NOC2MC_IN),
      .CH0_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN (CH0_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN),
      .CH0_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN (CH0_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN),
      .CH0_HBMMC_NOC_VALID_MC_NOC2MC_IN (CH0_HBMMC_NOC_VALID_MC_NOC2MC_IN),
      .CH1_HBMMC_DW_DATA_MC_DFI_RD (CH1_HBMMC_DW_DATA_MC_DFI_RD),
      .CH1_HBMMC_DW_DBI_MC_DFI_RD (CH1_HBMMC_DW_DBI_MC_DFI_RD),
      .CH1_HBMMC_DW_MASK_MC_DFI_RD (CH1_HBMMC_DW_MASK_MC_DFI_RD),
      .CH1_HBMMC_DW_PAR_MC_DFI_RD (CH1_HBMMC_DW_PAR_MC_DFI_RD),
      .CH1_HBMMC_DW_RDDATA_VALID_MC_DFI_RD (CH1_HBMMC_DW_RDDATA_VALID_MC_DFI_RD),
      .CH1_HBMMC_DW_WDATA_DERR_MC_DFI_WR (CH1_HBMMC_DW_WDATA_DERR_MC_DFI_WR),
      .CH1_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN (CH1_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN),
      .CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT (CH1_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT),
      .CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT (CH1_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT),
      .CH1_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN (CH1_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN),
      .CH1_HBMMC_NOC_FLIT_MC_NOC2MC_IN (CH1_HBMMC_NOC_FLIT_MC_NOC2MC_IN),
      .CH1_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN (CH1_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN),
      .CH1_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN (CH1_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN),
      .CH1_HBMMC_NOC_VALID_MC_NOC2MC_IN (CH1_HBMMC_NOC_VALID_MC_NOC2MC_IN),
      .CH2_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN (CH2_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN),
      .CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT (CH2_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT),
      .CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT (CH2_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT),
      .CH2_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN (CH2_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN),
      .CH2_HBMMC_NOC_FLIT_MC_NOC2MC_IN (CH2_HBMMC_NOC_FLIT_MC_NOC2MC_IN),
      .CH2_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN (CH2_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN),
      .CH2_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN (CH2_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN),
      .CH2_HBMMC_NOC_VALID_MC_NOC2MC_IN (CH2_HBMMC_NOC_VALID_MC_NOC2MC_IN),
      .CH3_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN (CH3_HBMMC_NOC_CREDIT_RDY_MC_NOC2MC_IN),
      .CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT (CH3_HBMMC_NOC_CREDIT_RETURN_EN_MC_NOCOUT),
      .CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT (CH3_HBMMC_NOC_CREDIT_RETURN_MC_NOCOUT),
      .CH3_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN (CH3_HBMMC_NOC_FLIT_EN_MC_NOC2MC_IN),
      .CH3_HBMMC_NOC_FLIT_MC_NOC2MC_IN (CH3_HBMMC_NOC_FLIT_MC_NOC2MC_IN),
      .CH3_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN (CH3_HBMMC_NOC_PDEST_ID_MC_NOC2MC_IN),
      .CH3_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN (CH3_HBMMC_NOC_VALID_EN_MC_NOC2MC_IN),
      .CH3_HBMMC_NOC_VALID_MC_NOC2MC_IN (CH3_HBMMC_NOC_VALID_MC_NOC2MC_IN),
      .FROM_NOC_0 (FROM_NOC_0),
      .FROM_NOC_1 (FROM_NOC_1),
      .FROM_NOC_2 (FROM_NOC_2),
      .FROM_NOC_3 (FROM_NOC_3),
      .HBMMC_AW_AERR_N (HBMMC_AW_AERR_N),
      .HBMMC_CATTRIP_DFI_MISC (HBMMC_CATTRIP_DFI_MISC),
      .HBMMC_CTRLUPD_ACK (HBMMC_CTRLUPD_ACK),
      .HBMMC_DFI_CLK (HBMMC_DFI_CLK),
      .HBMMC_DFI_RESET_N (HBMMC_DFI_RESET_N),
      .HBMMC_DW_DBI_BYTE_DISABLE (HBMMC_DW_DBI_BYTE_DISABLE),
      .HBMMC_GBL_REF_RESET_N (HBMMC_GBL_REF_RESET_N),
      .HBMMC_INIT_COMPLETE (HBMMC_INIT_COMPLETE),
      .HBMMC_NOC_RST_N_MC_GL (HBMMC_NOC_RST_N_MC_GL),
      .HBMMC_NPI_CLK_MC_GL (HBMMC_NPI_CLK_MC_GL),
      .HBMMC_PHYUPD_REQ (HBMMC_PHYUPD_REQ),
      .HBMMC_PHY_LP_STATE (HBMMC_PHY_LP_STATE),
      .HBMMC_SPARE_MC_GL (HBMMC_SPARE_MC_GL),
      .HBMMC_SYS_RST1_N_MC_GL (HBMMC_SYS_RST1_N_MC_GL),
      .HBMMC_SYS_RST2_N_MC_GL (HBMMC_SYS_RST2_N_MC_GL),
      .HBMMC_SYS_RST3_N_MC_GL (HBMMC_SYS_RST3_N_MC_GL),
      .HBMMC_TEMP (HBMMC_TEMP),
      .HBMMC_TRAINING_COMPLETE (HBMMC_TRAINING_COMPLETE)
    );
// begin behavioral model

// end behavioral model

end
endgenerate
endmodule

`endcelldefine
